(function() {
// Input 0
var goog = goog || {};
goog.global = this;
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split("."), cur = opt_objectToExportTo || goog.global;
  parts[0] in cur || !cur.execScript || cur.execScript("var " + parts[0]);
  for(var part;parts.length && (part = parts.shift());) {
    parts.length || void 0 === opt_object ? cur = cur[part] ? cur[part] : cur[part] = {} : cur[part] = opt_object
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  goog.exportPath_(name, value)
};
goog.DEBUG = !0;
goog.LOCALE = "en";
goog.TRUSTED_SITE = !0;
goog.provide = function(name) {
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(!goog.DEBUG) {
    throw opt_message = opt_message || "", Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
goog.getObjectByName = function(name, opt_obj) {
  for(var parts = name.split("."), cur = opt_obj || goog.global, part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global, x;
  for(x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(goog.DEPENDENCIES_ENABLED) {
    for(var provide, require, path = relPath.replace(/\\/g, "/"), deps = goog.dependencies_, i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path, path in deps.pathToNames || (deps.pathToNames[path] = {}), deps.pathToNames[path][provide] = !0
    }
    for(var j = 0;require = requires[j];j++) {
      path in deps.requires || (deps.requires[path] = {}), deps.requires[path][require] = !0
    }
  }
};
goog.useStrictRequires = !1;
goog.ENABLE_DEBUG_LOADER = !0;
goog.require = function() {
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor);
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !1;
goog.DEPENDENCIES_ENABLED && (goog.included_ = {}, goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}}, goog.inHtmlDocument_ = function() {
  var doc = goog.global.document;
  return"undefined" != typeof doc && "write" in doc
}, goog.findBasePath_ = function() {
  if(goog.global.CLOSURE_BASE_PATH) {
    goog.basePath = goog.global.CLOSURE_BASE_PATH
  }else {
    if(goog.inHtmlDocument_()) {
      for(var doc = goog.global.document, scripts = doc.getElementsByTagName("script"), i = scripts.length - 1;0 <= i;--i) {
        var src = scripts[i].src, qmark = src.lastIndexOf("?"), l = -1 == qmark ? src.length : qmark;
        if("base.js" == src.substr(l - 7, 7)) {
          goog.basePath = src.substr(0, l - 7);
          break
        }
      }
    }
  }
}, goog.importScript_ = function(src) {
  var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
  !goog.dependencies_.written[src] && importScript(src) && (goog.dependencies_.written[src] = !0)
}, goog.writeScriptTag_ = function(src) {
  if(goog.inHtmlDocument_()) {
    var doc = goog.global.document;
    if("complete" == doc.readyState) {
      var isDeps = /\bdeps.js$/.test(src);
      if(isDeps) {
        return!1
      }
      throw Error('Cannot write "' + src + '" after document load');
    }
    doc.write('<script type="text/javascript" src="' + src + '">\x3c/script>');
    return!0
  }
  return!1
}, goog.writeScripts_ = function() {
  function visitNode(path) {
    if(!(path in deps.written)) {
      if(!(path in deps.visited) && (deps.visited[path] = !0, path in deps.requires)) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      path in seenScript || (seenScript[path] = !0, scripts.push(path))
    }
  }
  var scripts = [], seenScript = {}, deps = goog.dependencies_, path$$0;
  for(path$$0 in goog.included_) {
    deps.written[path$$0] || visitNode(path$$0)
  }
  for(var i = 0;i < scripts.length;i++) {
    if(scripts[i]) {
      goog.importScript_(goog.basePath + scripts[i])
    }else {
      throw Error("Undefined script input");
    }
  }
}, goog.getPathFromDeps_ = function(rule) {
  return rule in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[rule] : null
}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + "deps.js"));
goog.typeOf = function(value) {
  var s = typeof value;
  if("object" == s) {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }
      if(value instanceof Object) {
        return s
      }
      var className = Object.prototype.toString.call(value);
      if("[object Window]" == className) {
        return"object"
      }
      if("[object Array]" == className || "number" == typeof value.length && "undefined" != typeof value.splice && "undefined" != typeof value.propertyIsEnumerable && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if("[object Function]" == className || "undefined" != typeof value.call && "undefined" != typeof value.propertyIsEnumerable && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if("function" == s && "undefined" == typeof value.call) {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return void 0 !== val
};
goog.isNull = function(val) {
  return null === val
};
goog.isDefAndNotNull = function(val) {
  return null != val
};
goog.isArray = function(val) {
  return"array" == goog.typeOf(val)
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return"array" == type || "object" == type && "number" == typeof val.length
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && "function" == typeof val.getFullYear
};
goog.isString = function(val) {
  return"string" == typeof val
};
goog.isBoolean = function(val) {
  return"boolean" == typeof val
};
goog.isNumber = function(val) {
  return"number" == typeof val
};
goog.isFunction = function(val) {
  return"function" == goog.typeOf(val)
};
goog.isObject = function(val) {
  var type = typeof val;
  return"object" == type && null != val || "function" == type
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_]
};
goog.removeUid = function(obj) {
  "removeAttribute" in obj && obj.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1E9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if("object" == type || "array" == type) {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = "array" == type ? [] : {}, key;
    for(key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw Error();
  }
  if(2 < arguments.length) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }
  return function() {
    return fn.apply(selfObj, arguments)
  }
};
goog.bind = function(fn, selfObj, var_args) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(null == goog.evalWorksForGlobals_ && (goog.global.eval("var _et_ = 1;"), "undefined" != typeof goog.global._et_ ? (delete goog.global._et_, goog.evalWorksForGlobals_ = !0) : goog.evalWorksForGlobals_ = !1), goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document, scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = !1;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  }, renameByParts = function(cssName) {
    for(var parts = cssName.split("-"), mapped = [], i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  }, rename;
  rename = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? getMapping : renameByParts : function(a) {
    return a
  };
  return opt_modifier ? className + "-" + rename(opt_modifier) : rename(className)
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {}, key;
  for(key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() expects not to be running in strict mode. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  for(var args = Array.prototype.slice.call(arguments, 2), foundCaller = !1, ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = !0
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }
  throw Error("goog.base called from a method of one name to a method of a different name");
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.MODIFY_FUNCTION_PROTOTYPES = !1;
goog.MODIFY_FUNCTION_PROTOTYPES && (Function.prototype.bind = Function.prototype.bind || function(selfObj, var_args) {
  if(1 < arguments.length) {
    var args = Array.prototype.slice.call(arguments, 1);
    args.unshift(this, selfObj);
    return goog.bind.apply(null, args)
  }
  return goog.bind(this, selfObj)
}, Function.prototype.partial = function(var_args) {
  var args = Array.prototype.slice.call(arguments);
  args.unshift(this, null);
  return goog.bind.apply(null, args)
}, Function.prototype.inherits = function(parentCtor) {
  goog.inherits(this, parentCtor)
}, Function.prototype.mixin = function(source) {
  goog.mixin(this.prototype, source)
});
// Input 1
var google = google || window.google || {};
google.visualization = google.visualization || window.google.visualization || {};
// Input 2
// Input 3
goog.debug = {};
goog.debug.Error = function(opt_msg) {
  Error.captureStackTrace ? Error.captureStackTrace(this, goog.debug.Error) : this.stack = Error().stack || "";
  opt_msg && (this.message = String(opt_msg))
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
// Input 4
goog.string = {};
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return 0 == str.lastIndexOf(prefix, 0)
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return 0 <= l && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return 0 == goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length))
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return 0 == goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length))
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase()
};
goog.string.subs = function(str, var_args) {
  for(var splitParts = str.split("%s"), returnString = "", subsArguments = Array.prototype.slice.call(arguments, 1);subsArguments.length && 1 < splitParts.length;) {
    returnString += splitParts.shift() + subsArguments.shift()
  }
  return returnString + splitParts.join("%s")
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return" " == ch
};
goog.string.isUnicodeChar = function(ch) {
  return 1 == ch.length && " " <= ch && "~" >= ch || "\u0080" <= ch && "\ufffd" >= ch
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase(), test2 = String(str2).toLowerCase();
  return test1 < test2 ? -1 : test1 == test2 ? 0 : 1
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  for(var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_), tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_), count = Math.min(tokens1.length, tokens2.length), i = 0;i < count;i++) {
    var a = tokens1[i], b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  return tokens1.length != tokens2.length ? tokens1.length - tokens2.length : str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }
  if(!goog.string.allRe_.test(str)) {
    return str
  }
  -1 != str.indexOf("&") && (str = str.replace(goog.string.amperRe_, "&amp;"));
  -1 != str.indexOf("<") && (str = str.replace(goog.string.ltRe_, "&lt;"));
  -1 != str.indexOf(">") && (str = str.replace(goog.string.gtRe_, "&gt;"));
  -1 != str.indexOf('"') && (str = str.replace(goog.string.quotRe_, "&quot;"));
  return str
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  return goog.string.contains(str, "&") ? "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(str) : goog.string.unescapePureXmlEntities_(str) : str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'}, div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if("#" == entity.charAt(0)) {
      var n = Number("0" + entity.substr(1));
      isNaN(n) || (value = String.fromCharCode(n))
    }
    value || (div.innerHTML = s + " ", value = div.firstChild.nodeValue.slice(0, -1));
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if("#" == entity.charAt(0)) {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  for(var length = quoteChars.length, i = 0;i < length;i++) {
    var quoteChar = 1 == length ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  opt_protectEscapedCharacters && (str = goog.string.unescapeEntities(str));
  str.length > chars && (str = str.substring(0, chars - 3) + "...");
  opt_protectEscapedCharacters && (str = goog.string.htmlEscape(str));
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  opt_protectEscapedCharacters && (str = goog.string.unescapeEntities(str));
  if(opt_trailingChars && str.length > chars) {
    opt_trailingChars > chars && (opt_trailingChars = chars);
    var endPoint = str.length - opt_trailingChars, startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2), endPos = str.length - half, half = half + chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  opt_protectEscapedCharacters && (str = goog.string.htmlEscape(str));
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }
  for(var sb = ['"'], i = 0;i < s.length;i++) {
    var ch = s.charAt(i), cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (31 < cc && 127 > cc ? ch : goog.string.escapeChar(ch))
  }
  sb.push('"');
  return sb.join("")
};
goog.string.escapeString = function(str) {
  for(var sb = [], i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c, cc = c.charCodeAt(0);
  if(31 < cc && 127 > cc) {
    rv = c
  }else {
    if(256 > cc) {
      if(rv = "\\x", 16 > cc || 256 < cc) {
        rv += "0"
      }
    }else {
      rv = "\\u", 4096 > cc && (rv += "0")
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  for(var rv = {}, i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = !0
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return-1 != s.indexOf(ss)
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  0 <= index && index < s.length && 0 < stringLength && (resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength));
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return Array(length + 1).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num), index = s.indexOf(".");
  -1 == index && (index = s.length);
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return null == obj ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  for(var order = 0, v1Subs = goog.string.trim(String(version1)).split("."), v2Subs = goog.string.trim(String(version2)).split("."), subCount = Math.max(v1Subs.length, v2Subs.length), subIdx = 0;0 == order && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "", v2Sub = v2Subs[subIdx] || "", v1CompParser = RegExp("(\\d*)(\\D*)", "g"), v2CompParser = RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""], v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(0 == v1Comp[0].length && 0 == v2Comp[0].length) {
        break
      }
      var v1CompNum = 0 == v1Comp[1].length ? 0 : parseInt(v1Comp[1], 10), v2CompNum = 0 == v2Comp[1].length ? 0 : parseInt(v2Comp[1], 10), order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(0 == v1Comp[2].length, 0 == v2Comp[2].length) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(0 == order)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  return left < right ? -1 : left > right ? 1 : 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  for(var result = 0, i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i), result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  return 0 == num && goog.string.isEmpty(str) ? NaN : num
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str)
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str)
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s", delimiters = delimiters ? "|[" + delimiters + "]+" : "", regexp = RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  isFinite(value) && (value = String(value));
  return goog.isString(value) ? /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10) : NaN
};
goog.string.splitLimit = function(str, separator, limit) {
  for(var parts = str.split(separator), returnVal = [];0 < limit && parts.length;) {
    returnVal.push(parts.shift()), limit--
  }
  parts.length && returnVal.push(parts.join(separator));
  return returnVal
};
// Input 5
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift()
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    var message = message + (": " + givenMessage), args = givenArgs
  }else {
    defaultMessage && (message += ": " + defaultMessage, args = defaultArgs)
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !condition && goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isString(value) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(value) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isArray(value) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || value instanceof type || goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  return value
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for(var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.")
  }
};
// Input 6
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(null != arr.length);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = null == opt_fromIndex ? 0 : 0 > opt_fromIndex ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    return goog.isString(obj) && 1 == obj.length ? arr.indexOf(obj, fromIndex) : -1
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(null != arr.length);
  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;
  0 > fromIndex && (fromIndex = Math.max(0, arr.length + fromIndex));
  if(goog.isString(arr)) {
    return goog.isString(obj) && 1 == obj.length ? arr.lastIndexOf(obj, fromIndex) : -1
  }
  for(var i = fromIndex;0 <= i;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  for(var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    i in arr2 && f.call(opt_obj, arr2[i], i, arr)
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  for(var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = l - 1;0 <= i;--i) {
    i in arr2 && f.call(opt_obj, arr2[i], i, arr)
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  for(var l = arr.length, res = [], resLength = 0, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      f.call(opt_obj, val, i, arr) && (res[resLength++] = val)
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  for(var l = arr.length, res = Array(l), arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    i in arr2 && (res[i] = f.call(opt_obj, arr2[i], i, arr))
  }
  return res
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.reduce ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(null != arr.length);
  opt_obj && (f = goog.bind(f, opt_obj));
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val)
} : function(arr, f, val$$0, opt_obj) {
  var rval = val$$0;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.reduceRight ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(null != arr.length);
  opt_obj && (f = goog.bind(f, opt_obj));
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val)
} : function(arr, f, val$$0, opt_obj) {
  var rval = val$$0;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  for(var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return!0
    }
  }
  return!1
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  for(var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return!1
    }
  }
  return!0
};
goog.array.count = function(arr$$0, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr$$0, function(element, index, arr) {
    f.call(opt_obj, element, index, arr) && ++count
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return 0 > i ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  for(var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return 0 > i ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  for(var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = l - 1;0 <= i;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return 0 <= goog.array.indexOf(arr, obj)
};
goog.array.isEmpty = function(arr) {
  return 0 == arr.length
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;0 <= i;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  goog.array.contains(arr, obj) || arr.push(obj)
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  2 == arguments.length || 0 > (i = goog.array.indexOf(arr, opt_obj2)) ? arr.push(obj) : goog.array.insertAt(arr, obj, i)
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj), rv;
  (rv = 0 <= i) && goog.array.removeAt(arr, i);
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(null != arr.length);
  return 1 == goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return 0 <= i ? (goog.array.removeAt(arr, i), !0) : !1
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(0 < length) {
    for(var rv = Array(length), i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i], isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        for(var len1 = arr1.length, len2 = arr2.length, j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(null != arr.length);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(null != arr.length);
  return 2 >= arguments.length ? goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start) : goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  for(var returnArray = opt_rv || arr, seen = {}, cursorInsert = 0, cursorRead = 0;cursorRead < arr.length;) {
    var current = arr[cursorRead++], key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    Object.prototype.hasOwnProperty.call(seen, key) || (seen[key] = !0, returnArray[cursorInsert++] = current)
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, !1, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, !0, void 0, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  for(var left = 0, right = arr.length, found;left < right;) {
    var middle = left + right >> 1, compareResult;
    compareResult = isEvaluator ? compareFn.call(opt_selfObj, arr[middle], middle, arr) : compareFn(opt_target, arr[middle]);
    0 < compareResult ? left = middle + 1 : (right = middle, found = !compareResult)
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(null != arr.length);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, stableCompareFn);
  for(i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  for(var compare = opt_compareFn || goog.array.defaultCompare, i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(0 < compareResult || 0 == compareResult && opt_strict) {
      return!1
    }
  }
  return!0
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return!1
  }
  for(var l = arr1.length, equalsFn = opt_equalsFn || goog.array.defaultCompareEquality, i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return!1
    }
  }
  return!0
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  for(var compare = opt_compareFn || goog.array.defaultCompare, l = Math.min(arr1.length, arr2.length), i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(0 != result) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return 0 > index ? (goog.array.insertAt(array, value, -(index + 1)), !0) : !1
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return 0 <= index ? goog.array.removeAt(array, index) : !1
};
goog.array.bucket = function(array, sorter, opt_obj) {
  for(var buckets = {}, i = 0;i < array.length;i++) {
    var value = array[i], key = sorter.call(opt_obj, value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [], start = 0, end = startOrEnd, step = opt_step || 1;
  void 0 !== opt_end && (start = startOrEnd, end = opt_end);
  if(0 > step * (end - start)) {
    return[]
  }
  if(0 < step) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  for(var array = [], i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  for(var result = [], i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    goog.isArray(element) ? result.push.apply(result, goog.array.flatten.apply(null, element)) : result.push(element)
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(null != array.length);
  array.length && (n %= array.length, 0 < n ? goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n)) : 0 > n && goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n)));
  return array
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(0 <= fromIndex && fromIndex < arr.length);
  goog.asserts.assert(0 <= toIndex && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0])
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  for(var result = [], i = 0;;i++) {
    for(var value = [], j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  for(var randFn = opt_randFn || Math.random, i = arr.length - 1;0 < i;i--) {
    var j = Math.floor(randFn() * (i + 1)), tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
// Input 7
goog.debug.RelativeTimeProvider = function() {
  this.relativeTimeStart_ = goog.now()
};
goog.debug.RelativeTimeProvider.defaultInstance_ = new goog.debug.RelativeTimeProvider;
goog.debug.RelativeTimeProvider.prototype.set = function(timeStamp) {
  this.relativeTimeStart_ = timeStamp
};
goog.debug.RelativeTimeProvider.prototype.reset = function() {
  this.set(goog.now())
};
goog.debug.RelativeTimeProvider.prototype.get = function() {
  return this.relativeTimeStart_
};
goog.debug.RelativeTimeProvider.getDefaultInstance = function() {
  return goog.debug.RelativeTimeProvider.defaultInstance_
};
// Input 8
goog.debug.Formatter = function(opt_prefix) {
  this.prefix_ = opt_prefix || "";
  this.startTimeProvider_ = goog.debug.RelativeTimeProvider.getDefaultInstance()
};
goog.debug.Formatter.prototype.appendNewline = !0;
goog.debug.Formatter.prototype.showAbsoluteTime = !0;
goog.debug.Formatter.prototype.showRelativeTime = !0;
goog.debug.Formatter.prototype.showLoggerName = !0;
goog.debug.Formatter.prototype.showExceptionText = !1;
goog.debug.Formatter.prototype.showSeverityLevel = !1;
goog.debug.Formatter.getDateTimeStamp_ = function(logRecord) {
  var time = new Date(logRecord.getMillis());
  return goog.debug.Formatter.getTwoDigitString_(time.getFullYear() - 2E3) + goog.debug.Formatter.getTwoDigitString_(time.getMonth() + 1) + goog.debug.Formatter.getTwoDigitString_(time.getDate()) + " " + goog.debug.Formatter.getTwoDigitString_(time.getHours()) + ":" + goog.debug.Formatter.getTwoDigitString_(time.getMinutes()) + ":" + goog.debug.Formatter.getTwoDigitString_(time.getSeconds()) + "." + goog.debug.Formatter.getTwoDigitString_(Math.floor(time.getMilliseconds() / 10))
};
goog.debug.Formatter.getTwoDigitString_ = function(n) {
  return 10 > n ? "0" + n : String(n)
};
goog.debug.Formatter.getRelativeTime_ = function(logRecord, relativeTimeStart) {
  var ms = logRecord.getMillis() - relativeTimeStart, sec = ms / 1E3, str = sec.toFixed(3), spacesToPrepend = 0;
  if(1 > sec) {
    spacesToPrepend = 2
  }else {
    for(;100 > sec;) {
      spacesToPrepend++, sec *= 10
    }
  }
  for(;0 < spacesToPrepend--;) {
    str = " " + str
  }
  return str
};
goog.debug.HtmlFormatter = function(opt_prefix) {
  goog.debug.Formatter.call(this, opt_prefix)
};
goog.inherits(goog.debug.HtmlFormatter, goog.debug.Formatter);
goog.debug.HtmlFormatter.prototype.showExceptionText = !0;
goog.debug.HtmlFormatter.prototype.formatRecord = function(logRecord) {
  var className;
  switch(logRecord.getLevel().value) {
    case goog.debug.Logger.Level.SHOUT.value:
      className = "dbg-sh";
      break;
    case goog.debug.Logger.Level.SEVERE.value:
      className = "dbg-sev";
      break;
    case goog.debug.Logger.Level.WARNING.value:
      className = "dbg-w";
      break;
    case goog.debug.Logger.Level.INFO.value:
      className = "dbg-i";
      break;
    default:
      className = "dbg-f"
  }
  var sb = [];
  sb.push(this.prefix_, " ");
  this.showAbsoluteTime && sb.push("[", goog.debug.Formatter.getDateTimeStamp_(logRecord), "] ");
  this.showRelativeTime && sb.push("[", goog.string.whitespaceEscape(goog.debug.Formatter.getRelativeTime_(logRecord, this.startTimeProvider_.get())), "s] ");
  this.showLoggerName && sb.push("[", goog.string.htmlEscape(logRecord.getLoggerName()), "] ");
  this.showSeverityLevel && sb.push("[", goog.string.htmlEscape(logRecord.getLevel().name), "] ");
  sb.push('<span class="', className, '">', goog.string.newLineToBr(goog.string.whitespaceEscape(goog.string.htmlEscape(logRecord.getMessage()))));
  this.showExceptionText && logRecord.getException() && sb.push("<br>", goog.string.newLineToBr(goog.string.whitespaceEscape(logRecord.getExceptionText() || "")));
  sb.push("</span>");
  this.appendNewline && sb.push("<br>");
  return sb.join("")
};
goog.debug.TextFormatter = function(opt_prefix) {
  goog.debug.Formatter.call(this, opt_prefix)
};
goog.inherits(goog.debug.TextFormatter, goog.debug.Formatter);
goog.debug.TextFormatter.prototype.formatRecord = function(logRecord) {
  var sb = [];
  sb.push(this.prefix_, " ");
  this.showAbsoluteTime && sb.push("[", goog.debug.Formatter.getDateTimeStamp_(logRecord), "] ");
  this.showRelativeTime && sb.push("[", goog.debug.Formatter.getRelativeTime_(logRecord, this.startTimeProvider_.get()), "s] ");
  this.showLoggerName && sb.push("[", logRecord.getLoggerName(), "] ");
  this.showSeverityLevel && sb.push("[", logRecord.getLevel().name, "] ");
  sb.push(logRecord.getMessage());
  this.showExceptionText && logRecord.getException() && sb.push("\n", logRecord.getExceptionText());
  this.appendNewline && sb.push("\n");
  return sb.join("")
};
// Input 9
goog.structs = {};
goog.structs.Collection = function() {
};
// Input 10
goog.iter = {};
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global.StopIteration : Error("StopIteration");
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function() {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if("function" == typeof iterable.__iterator__) {
    return iterable.__iterator__(!1)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0, newIter = new goog.iter.Iterator;
    newIter.next = function() {
      for(;;) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(i in iterable) {
          return iterable[i++]
        }
        i++
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      for(;;) {
        f.call(opt_obj, iterable.next(), void 0, iterable)
      }
    }catch(ex$$0) {
      if(ex$$0 !== goog.iter.StopIteration) {
        throw ex$$0;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable), newIter = new goog.iter.Iterator;
  newIter.next = function() {
    for(;;) {
      var val = iterator.next();
      if(f.call(opt_obj, val, void 0, iterator)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0, stop = startOrStop, step = opt_step || 1;
  1 < arguments.length && (start = startOrStop, stop = opt_stop);
  if(0 == step) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(0 < step && start >= stop || 0 > step && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable), newIter = new goog.iter.Iterator;
  newIter.next = function() {
    for(;;) {
      var val = iterator.next();
      return f.call(opt_obj, val, void 0, iterator)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val$$0, opt_obj) {
  var rval = val$$0;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    for(;;) {
      if(f.call(opt_obj, iterable.next(), void 0, iterable)) {
        return!0
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return!1
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    for(;;) {
      if(!f.call(opt_obj, iterable.next(), void 0, iterable)) {
        return!1
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return!0
};
goog.iter.chain = function(var_args) {
  var args = arguments, length = args.length, i = 0, newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }
      i++;
      return this.next()
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable), newIter = new goog.iter.Iterator, dropping = !0;
  newIter.next = function() {
    for(;;) {
      var val = iterator.next();
      if(!dropping || !f.call(opt_obj, val, void 0, iterator)) {
        return dropping = !1, val
      }
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable), newIter = new goog.iter.Iterator, taking = !0;
  newIter.next = function() {
    for(;;) {
      if(taking) {
        var val = iterator.next();
        if(f.call(opt_obj, val, void 0, iterator)) {
          return val
        }
        taking = !1
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    for(;;) {
      b1 = b2 = !1;
      var val1 = iterable1.next();
      b1 = !0;
      var val2 = iterable2.next();
      b2 = !0;
      if(val1 != val2) {
        break
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
    if(b1 && !b2) {
      return!1
    }
    if(!b2) {
      try {
        iterable2.next()
      }catch(ex1) {
        if(ex1 !== goog.iter.StopIteration) {
          throw ex1;
        }
        return!0
      }
    }
  }
  return!1
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator, arrays = arguments, indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      for(var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      }), i = indicies.length - 1;0 <= i;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(0 == i) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable), cache = [], cacheIndex = 0, iter = new goog.iter.Iterator, useCache = !1;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        return returnElement = baseIterator.next(), cache.push(returnElement), returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = !0
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
// Input 11
goog.object = {};
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {}, key;
  for(key in obj) {
    f.call(opt_obj, obj[key], key, obj) && (res[key] = obj[key])
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {}, key;
  for(key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return!0
    }
  }
  return!1
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return!1
    }
  }
  return!0
};
goog.object.getCount = function(obj) {
  var rv = 0, key;
  for(key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [], i = 0, key;
  for(key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [], i = 0, key;
  for(key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  for(var isArrayLike = goog.isArrayLike(var_args), keys = isArrayLike ? var_args : arguments, i = isArrayLike ? 0 : 1;i < keys.length && (obj = obj[keys[i]], goog.isDef(obj));i++) {
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return!0
    }
  }
  return!1
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return!1
  }
  return!0
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  (rv = key in obj) && delete obj[key];
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  return key in obj ? obj[key] : opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {}, key;
  for(key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if("object" == type || "array" == type) {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = "array" == type ? [] : {}, key;
    for(key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {}, key;
  for(key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend = function(target, var_args) {
  for(var key, source, i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j], Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key])
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(1 == argLength && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  for(var rv = {}, i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(1 == argLength && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  for(var rv = {}, i = 0;i < argLength;i++) {
    rv[arguments[i]] = !0
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  Object.isFrozen && !Object.isFrozen(obj) && (result = Object.create(obj), Object.freeze(result));
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
// Input 12
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.version_ = this.count_ = 0;
  var argLength = arguments.length;
  if(1 < argLength) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    opt_map && this.addAll(opt_map)
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  for(var rv = [], i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return!0
    }
  }
  return!1
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return!0
  }
  if(this.count_ != otherMap.getCount()) {
    return!1
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return!1
    }
  }
  return!0
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return 0 == this.count_
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.version_ = this.count_ = this.keys_.length = 0
};
goog.structs.Map.prototype.remove = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key) ? (delete this.map_[key], this.count_--, this.version_++, this.keys_.length > 2 * this.count_ && this.cleanupKeysArray_(), !0) : !1
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    for(var srcIndex = 0, destIndex = 0;srcIndex < this.keys_.length;) {
      var key = this.keys_[srcIndex];
      goog.structs.Map.hasKey_(this.map_, key) && (this.keys_[destIndex++] = key);
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    for(var seen = {}, destIndex = srcIndex = 0;srcIndex < this.keys_.length;) {
      key = this.keys_[srcIndex], goog.structs.Map.hasKey_(seen, key) || (this.keys_[destIndex++] = key, seen[key] = 1), srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  return goog.structs.Map.hasKey_(this.map_, key) ? this.map_[key] : opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  goog.structs.Map.hasKey_(this.map_, key) || (this.count_++, this.keys_.push(key), this.version_++);
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  map instanceof goog.structs.Map ? (keys = map.getKeys(), values = map.getValues()) : (keys = goog.object.getKeys(map), values = goog.object.getValues(map));
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  for(var transposed = new goog.structs.Map, i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i], value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  for(var obj = {}, i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0, keys = this.keys_, map = this.map_, version = this.version_, selfObj = this, newIter = new goog.iter.Iterator;
  newIter.next = function() {
    for(;;) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
// Input 13
goog.structs.getCount = function(col) {
  return"function" == typeof col.getCount ? col.getCount() : goog.isArrayLike(col) || goog.isString(col) ? col.length : goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if("function" == typeof col.getValues) {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    for(var rv = [], l = col.length, i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if("function" == typeof col.getKeys) {
    return col.getKeys()
  }
  if("function" != typeof col.getValues) {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      for(var rv = [], l = col.length, i = 0;i < l;i++) {
        rv.push(i)
      }
      return rv
    }
    return goog.object.getKeys(col)
  }
};
goog.structs.contains = function(col, val) {
  return"function" == typeof col.contains ? col.contains(val) : "function" == typeof col.containsValue ? col.containsValue(val) : goog.isArrayLike(col) || goog.isString(col) ? goog.array.contains(col, val) : goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  return"function" == typeof col.isEmpty ? col.isEmpty() : goog.isArrayLike(col) || goog.isString(col) ? goog.array.isEmpty(col) : goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  "function" == typeof col.clear ? col.clear() : goog.isArrayLike(col) ? goog.array.clear(col) : goog.object.clear(col)
};
goog.structs.forEach = function(col, f, opt_obj) {
  if("function" == typeof col.forEach) {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      for(var keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length, i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if("function" == typeof col.filter) {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv, keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      f.call(opt_obj, values[i], keys[i], col) && (rv[keys[i]] = values[i])
    }
  }else {
    for(rv = [], i = 0;i < l;i++) {
      f.call(opt_obj, values[i], void 0, col) && rv.push(values[i])
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if("function" == typeof col.map) {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv, keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    for(rv = [], i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], void 0, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if("function" == typeof col.some) {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  for(var keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length, i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return!0
    }
  }
  return!1
};
goog.structs.every = function(col, f, opt_obj) {
  if("function" == typeof col.every) {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  for(var keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length, i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return!1
    }
  }
  return!0
};
// Input 14
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  opt_values && this.addAll(opt_values)
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  return"object" == type && val || "function" == type ? "o" + goog.getUid(val) : type.substr(0, 1) + val
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  for(var values = goog.structs.getValues(col), l = values.length, i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  for(var values = goog.structs.getValues(col), l = values.length, i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.intersection = function(col) {
  for(var result = new goog.structs.Set, values = goog.structs.getValues(col), i = 0;i < values.length;i++) {
    var value = values[i];
    this.contains(value) && result.add(value)
  }
  return result
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return!1
  }
  !(col instanceof goog.structs.Set) && 5 < colCount && (col = new goog.structs.Set(col));
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function() {
  return this.map_.__iterator__(!1)
};
// Input 15
goog.userAgent = {};
goog.userAgent.ASSUME_IE = !1;
goog.userAgent.ASSUME_GECKO = !1;
goog.userAgent.ASSUME_WEBKIT = !1;
goog.userAgent.ASSUME_MOBILE_WEBKIT = !1;
goog.userAgent.ASSUME_OPERA = !1;
goog.userAgent.ASSUME_ANY_VERSION = !1;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global.navigator ? goog.global.navigator.userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global.navigator
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = !1;
  goog.userAgent.detectedIe_ = !1;
  goog.userAgent.detectedWebkit_ = !1;
  goog.userAgent.detectedMobile_ = !1;
  goog.userAgent.detectedGecko_ = !1;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = goog.string.startsWith(ua, "Opera");
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && (goog.string.contains(ua, "MSIE") || goog.string.contains(ua, "Trident"));
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && goog.string.contains(ua, "WebKit");
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && goog.string.contains(ua, "Mobile");
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && !goog.userAgent.detectedIe_ && "Gecko" == navigator.product
  }
};
goog.userAgent.BROWSER_KNOWN_ || goog.userAgent.init_();
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = !1;
goog.userAgent.ASSUME_WINDOWS = !1;
goog.userAgent.ASSUME_LINUX = !1;
goog.userAgent.ASSUME_X11 = !1;
goog.userAgent.ASSUME_ANDROID = !1;
goog.userAgent.ASSUME_IPHONE = !1;
goog.userAgent.ASSUME_IPAD = !1;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator().appVersion || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad")
};
goog.userAgent.PLATFORM_KNOWN_ || goog.userAgent.initPlatform_();
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global.opera) {
    var operaVersion = goog.global.opera.version, version = "function" == typeof operaVersion ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO ? re = /rv\:([^\);]+)(\)|;)/ : goog.userAgent.IE ? re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/ : goog.userAgent.WEBKIT && (re = /WebKit\/(\S+)/), re) {
      var arr = re.exec(goog.userAgent.getUserAgentString()), version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global.document;
  return doc ? doc.documentMode : void 0
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = 0 <= goog.string.compareVersions(goog.userAgent.VERSION, version))
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global.document;
  if(doc && goog.userAgent.IE) {
    var mode = goog.userAgent.getDocumentMode_();
    return mode || ("CSS1Compat" == doc.compatMode ? parseInt(goog.userAgent.VERSION, 10) : 5)
  }
}();
// Input 16
goog.debug.LOGGING_ENABLED = goog.DEBUG;
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global, oldErrorHandler = target.onerror, retVal = !!opt_cancel;
  goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3") && (retVal = !retVal);
  target.onerror = function(message, url, line) {
    oldErrorHandler && oldErrorHandler(message, url, line);
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if("undefined" == typeof obj) {
    return"undefined"
  }
  if(null == obj) {
    return"NULL"
  }
  var str = [], x;
  for(x in obj) {
    if(opt_showFn || !goog.isFunction(obj[x])) {
      var s = x + " = ";
      try {
        s += obj[x]
      }catch(e) {
        s += "*** " + e + " ***"
      }
      str.push(s)
    }
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj$$0, opt_showFn) {
  var previous = new goog.structs.Set, str$$0 = [], helper = function(obj, space) {
    var nestspace = space + "  ", indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(goog.isDef(obj)) {
        if(goog.isNull(obj)) {
          str$$0.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str$$0.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str$$0.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str$$0.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str$$0.push("{");
                  for(var x in obj) {
                    if(opt_showFn || !goog.isFunction(obj[x])) {
                      str$$0.push("\n"), str$$0.push(nestspace), str$$0.push(x + " = "), helper(obj[x], nestspace)
                    }
                  }
                  str$$0.push("\n" + space + "}")
                }
              }else {
                str$$0.push(obj)
              }
            }
          }
        }
      }else {
        str$$0.push("undefined")
      }
    }catch(e) {
      str$$0.push("*** " + e + " ***")
    }
  };
  helper(obj$$0, "");
  return str$$0.join("")
};
goog.debug.exposeArray = function(arr) {
  for(var str = [], i = 0;i < arr.length;i++) {
    goog.isArray(arr[i]) ? str.push(goog.debug.exposeArray(arr[i])) : str.push(arr[i])
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err), error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{message:err, name:"Unknown error", lineNumber:"Not available", fileName:href, stack:"Not available"}
  }
  var lineNumber, fileName, threwError = !1;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available", threwError = !0
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global.$googDebugFname || href
  }catch(e$$0) {
    fileName = "Not available", threwError = !0
  }
  return!threwError && err.lineNumber && err.fileName && err.stack && err.message && err.name ? err : {message:err.message || "Not available", name:err.name || "UnknownError", lineNumber:lineNumber, fileName:fileName, stack:err.stack || "Not available"}
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = "string" == typeof err ? Error(err) : err;
  error.stack || (error.stack = goog.debug.getStacktrace(arguments.callee.caller));
  if(opt_message) {
    for(var x = 0;error["message" + x];) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  for(var sb = [], fn = arguments.callee.caller, depth = 0;fn && (!opt_depth || depth < opt_depth);) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  opt_depth && depth >= opt_depth ? sb.push("[...reached max depth limit...]") : sb.push("[end]");
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      for(var args = fn.arguments, i = 0;i < args.length;i++) {
        0 < i && sb.push(", ");
        var argDesc, arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = (argDesc = goog.debug.getFunctionName(arg)) ? argDesc : "[fn]";
            break;
          default:
            argDesc = typeof arg
        }
        40 < argDesc.length && (argDesc = argDesc.substr(0, 40) + "...");
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      fn ? sb.push("[...long stack...]") : sb.push("[end]")
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      return goog.debug.fnNameCache_[fn] = name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
// Input 17
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = !0;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS && ("number" == typeof opt_sequenceNumber || goog.debug.LogRecord.nextSequenceNumber_++);
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
// Input 18
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  goog.debug.LogBuffer.instance_ || (goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer);
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return 0 < goog.debug.LogBuffer.CAPACITY
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = !1
};
// Input 19
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = !0;
goog.debug.Logger.ENABLE_HIERARCHY || (goog.debug.Logger.rootHandlers_ = []);
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level, goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  goog.debug.Logger.Level.predefinedLevelsCache_ || goog.debug.Logger.Level.createPredefinedLevelsCache_();
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  goog.debug.Logger.Level.predefinedLevelsCache_ || goog.debug.Logger.Level.createPredefinedLevelsCache_();
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  goog.global.console && (goog.global.console.timeStamp ? goog.global.console.timeStamp(msg) : goog.global.console.markTimeline && goog.global.console.markTimeline(msg));
  goog.global.msWriteProfilerMark && goog.global.msWriteProfilerMark(msg)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  goog.debug.LOGGING_ENABLED && (goog.debug.Logger.ENABLE_HIERARCHY ? (this.handlers_ || (this.handlers_ = []), this.handlers_.push(handler)) : (goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when goog.debug.Logger.ENABLE_HIERARCHY is false."), goog.debug.Logger.rootHandlers_.push(handler)))
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if(goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler)
  }
  return!1
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  this.children_ || (this.children_ = {});
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  goog.debug.LOGGING_ENABLED && (goog.debug.Logger.ENABLE_HIERARCHY ? this.level_ = level : (goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when goog.debug.Logger.ENABLE_HIERARCHY is false."), goog.debug.Logger.rootLevel_ = level))
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF
  }
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.isLoggable(level) && this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  var logRecord = goog.debug.LogBuffer.isBufferingEnabled() ? goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_) : new goog.debug.LogRecord(level, String(msg), this.name_);
  opt_exception && (logRecord.setException(opt_exception), logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller)));
  return logRecord
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    for(var target = this;target;) {
      target.callPublish_(logRecord), target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  goog.debug.LogManager.rootLogger_ || (goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(""), goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_, goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG))
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf("."), parentName = name.substr(0, lastDotIndex), leafName = name.substr(lastDotIndex + 1), parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  return goog.debug.LogManager.loggers_[name] = logger
};
// Input 20
goog.debug.Console = function() {
  this.publishHandler_ = goog.bind(this.addLogRecord, this);
  this.formatter_ = new goog.debug.TextFormatter;
  this.formatter_.showAbsoluteTime = !1;
  this.isCapturing_ = this.formatter_.showExceptionText = !1;
  this.logBuffer_ = "";
  this.filteredLoggers_ = {}
};
goog.debug.Console.prototype.getFormatter = function() {
  return this.formatter_
};
goog.debug.Console.prototype.setCapturing = function(capturing) {
  if(capturing != this.isCapturing_) {
    var rootLogger = goog.debug.LogManager.getRoot();
    capturing ? rootLogger.addHandler(this.publishHandler_) : rootLogger.removeHandler(this.publishHandler_);
    this.isCapturing_ = capturing
  }
};
goog.debug.Console.prototype.addLogRecord = function(logRecord) {
  if(!this.filteredLoggers_[logRecord.getLoggerName()]) {
    var record = this.formatter_.formatRecord(logRecord), console = goog.debug.Console.console_;
    if(console) {
      switch(logRecord.getLevel()) {
        case goog.debug.Logger.Level.SHOUT:
          goog.debug.Console.logToConsole_(console, "info", record);
          break;
        case goog.debug.Logger.Level.SEVERE:
          goog.debug.Console.logToConsole_(console, "error", record);
          break;
        case goog.debug.Logger.Level.WARNING:
          goog.debug.Console.logToConsole_(console, "warn", record);
          break;
        default:
          goog.debug.Console.logToConsole_(console, "debug", record)
      }
    }else {
      window.opera ? window.opera.postError(record) : this.logBuffer_ += record
    }
  }
};
goog.debug.Console.instance = null;
goog.debug.Console.console_ = window.console;
goog.debug.Console.setConsole = function(console) {
  goog.debug.Console.console_ = console
};
goog.debug.Console.autoInstall = function() {
  goog.debug.Console.instance || (goog.debug.Console.instance = new goog.debug.Console);
  -1 != window.location.href.indexOf("Debug=true") && goog.debug.Console.instance.setCapturing(!0)
};
goog.debug.Console.show = function() {
  alert(goog.debug.Console.instance.logBuffer_)
};
goog.debug.Console.logToConsole_ = function(console, fnName, record) {
  if(console[fnName]) {
    console[fnName](record)
  }else {
    console.log(record)
  }
};
// Input 21
goog.functions = {};
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(!1);
goog.functions.TRUE = goog.functions.constant(!0);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  }
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs))
  }
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n]
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments, length = functions.length;
  return function() {
    var result;
    length && (result = functions[length - 1].apply(this, arguments));
    for(var i = length - 2;0 <= i;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments, length = functions.length;
  return function() {
    for(var result, i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments, length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return!1
      }
    }
    return!0
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments, length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return!0
      }
    }
    return!1
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
goog.functions.CACHE_RETURN_VALUE = !0;
goog.functions.cacheReturnValue = function(fn) {
  var called = !1, value;
  return function() {
    if(!goog.functions.CACHE_RETURN_VALUE) {
      return fn()
    }
    called || (value = fn(), called = !0);
    return value
  }
};
// Input 22
goog.math = {};
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return 0 > r * b ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return 180 * angleRadians / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  180 < d ? d -= 360 : -180 >= d && (d = 360 + d);
  return d
};
goog.math.sign = function(x) {
  return 0 == x ? 0 : 0 > x ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  for(var compare = opt_compareFn || function(a, b) {
    return a == b
  }, collect = opt_collectorFn || function(i1) {
    return array1[i1]
  }, length1 = array1.length, length2 = array2.length, arr = [], i = 0;i < length1 + 1;i++) {
    arr[i] = [], arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length2;j++) {
      compare(array1[i - 1], array2[j - 1]) ? arr[i][j] = arr[i - 1][j - 1] + 1 : arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
    }
  }
  for(var result = [], i = length1, j = length2;0 < i && 0 < j;) {
    compare(array1[i - 1], array2[j - 1]) ? (result.unshift(collect(i - 1, j - 1)), i--, j--) : arr[i - 1][j] > arr[i][j - 1] ? i-- : j--
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(2 > sampleSize) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments), variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && 0 == num % 1
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || 0 < opt_epsilon);
  return Math.floor(num + (opt_epsilon || 2E-15))
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || 0 < opt_epsilon);
  return Math.ceil(num - (opt_epsilon || 2E-15))
};
// Input 23
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
goog.DEBUG && (goog.math.Coordinate.prototype.toString = function() {
  return"(" + this.x + ", " + this.y + ")"
});
goog.math.Coordinate.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.x == b.x && a.y == b.y : !1
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x, dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y)
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x, dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  tx instanceof goog.math.Coordinate ? (this.x += tx.x, this.y += tx.y) : (this.x += tx, goog.isNumber(opt_ty) && (this.y += opt_ty));
  return this
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this
};
// Input 24
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.width == b.width && a.height == b.height : !1
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.DEBUG && (goog.math.Size.prototype.toString = function() {
  return"(" + this.width + " x " + this.height + ")"
});
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this
};
// Input 25
goog.dom = {};
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
// Input 26
goog.dom.classes = {};
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element), args = goog.array.slice(arguments, 1), expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element), args = goog.array.slice(arguments, 1), newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length
};
goog.dom.classes.add_ = function(classes, args) {
  for(var i = 0;i < args.length;i++) {
    goog.array.contains(classes, args[i]) || classes.push(args[i])
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item)
  })
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  for(var classes = goog.dom.classes.get(element), removed = !1, i = 0;i < classes.length;i++) {
    classes[i] == fromClass && (goog.array.splice(classes, i--, 1), removed = !0)
  }
  removed && (classes.push(toClass), goog.dom.classes.set(element, classes.join(" ")));
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  goog.isString(classesToRemove) ? goog.array.remove(classes, classesToRemove) : goog.isArray(classesToRemove) && (classes = goog.dom.classes.getDifference_(classes, classesToRemove));
  goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd) ? classes.push(classesToAdd) : goog.isArray(classesToAdd) && goog.dom.classes.add_(classes, classesToAdd);
  goog.dom.classes.set(element, classes.join(" "))
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  enabled ? goog.dom.classes.add(element, className) : goog.dom.classes.remove(element, className)
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
// Input 27
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
// Input 28
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
// Input 29
goog.dom.ASSUME_QUIRKS_MODE = !1;
goog.dom.ASSUME_STANDARDS_MODE = !1;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element)
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id)
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElement(id);
  goog.asserts.assert(element, "No element found with id: " + id);
  return element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  return goog.dom.canUseQuerySelector_(parent) ? parent.querySelectorAll("." + className) : parent.getElementsByClassName ? parent.getElementsByClassName(className) : goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document, retVal = null;
  return(retVal = goog.dom.canUseQuerySelector_(parent) ? parent.querySelector("." + className) : goog.dom.getElementsByClass(className, opt_el)[0]) || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!(!parent.querySelectorAll || !parent.querySelector)
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc, tagName = opt_tag && "*" != opt_tag ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      for(var arrayLike = {}, len = 0, i = 0, el;el = els[i];i++) {
        tagName == el.nodeName && (arrayLike[len++] = el)
      }
      arrayLike.length = len;
      return arrayLike
    }
    return els
  }
  els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    arrayLike = {};
    for(i = len = 0;el = els[i];i++) {
      var className = el.className;
      "function" == typeof className.split && goog.array.contains(className.split(/\s+/), opt_class) && (arrayLike[len++] = el)
    }
    arrayLike.length = len;
    return arrayLike
  }
  return els
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    "style" == key ? element.style.cssText = val : "class" == key ? element.className = val : "for" == key ? element.htmlFor = val : key in goog.dom.DIRECT_ATTRIBUTE_MAP_ ? element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val) : goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-") ? element.setAttribute(key, val) : element[key] = val
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {cellpadding:"cellPadding", cellspacing:"cellSpacing", colspan:"colSpan", frameborder:"frameBorder", height:"height", maxlength:"maxLength", role:"role", rowspan:"rowSpan", type:"type", usemap:"useMap", valign:"vAlign", width:"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document, el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document, height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height, body = doc.body, docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight, oh = docEl.offsetHeight;
      docEl.clientHeight != oh && (sh = body.scrollHeight, oh = body.offsetHeight);
      height = sh > vh ? sh > oh ? sh : oh : sh < oh ? sh : oh
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc), win = goog.dom.getWindow_(doc);
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop ? new goog.math.Coordinate(el.scrollLeft, el.scrollTop) : new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0], attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    attributes.name && tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"');
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone.type;
      attributes = clone
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  attributes && (goog.isString(attributes) ? element.className = attributes : goog.isArray(attributes) ? goog.dom.classes.add.apply(null, [element].concat(attributes)) : goog.dom.setProperties(element, attributes));
  2 < args.length && goog.dom.append_(doc, element, args, 2);
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    child && parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg) ? goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler) : childHandler(arg)
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content))
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  for(var rowHtml = ["<tr>"], i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  for(var rowHtml = rowHtml.join(""), totalHtml = ["<table>"], i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT ? (tempDiv.innerHTML = "<br>" + htmlString, tempDiv.removeChild(tempDiv.firstChild)) : tempDiv.innerHTML = htmlString;
  if(1 == tempDiv.childNodes.length) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }
  for(var fragment = doc.createDocumentFragment();tempDiv.firstChild;) {
    fragment.appendChild(tempDiv.firstChild)
  }
  return fragment
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  return goog.dom.COMPAT_MODE_KNOWN_ ? goog.dom.ASSUME_STANDARDS_MODE : "CSS1Compat" == doc.compatMode
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return!1
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return!1
  }
  return!0
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  for(var child;child = node.firstChild;) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  refNode.parentNode && refNode.parentNode.insertBefore(newNode, refNode)
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  refNode.parentNode && refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  parent && parent.replaceChild(newNode, oldNode)
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(!1)
    }
    for(;child = element.firstChild;) {
      parent.insertBefore(child, element)
    }
    return goog.dom.removeNode(element)
  }
};
goog.dom.getChildren = function(element) {
  return goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && void 0 != element.children ? element.children : goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  return void 0 != node.firstElementChild ? node.firstElementChild : goog.dom.getNextElementNode_(node.firstChild, !0)
};
goog.dom.getLastElementChild = function(node) {
  return void 0 != node.lastElementChild ? node.lastElementChild : goog.dom.getNextElementNode_(node.lastChild, !1)
};
goog.dom.getNextElementSibling = function(node) {
  return void 0 != node.nextElementSibling ? node.nextElementSibling : goog.dom.getNextElementNode_(node.nextSibling, !0)
};
goog.dom.getPreviousElementSibling = function(node) {
  return void 0 != node.previousElementSibling ? node.previousElementSibling : goog.dom.getNextElementNode_(node.previousSibling, !1)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  for(;node && node.nodeType != goog.dom.NodeType.ELEMENT;) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  for(;node && !node.nextSibling;) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  for(node = node.previousSibling;node && node.lastChild;) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && 0 < obj.nodeType
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj.window == obj
};
goog.dom.getParentElement = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if(!(isIe9 && goog.global.SVGElement && element instanceof goog.global.SVGElement)) {
      return element.parentElement
    }
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if("undefined" != typeof parent.compareDocumentPosition) {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  for(;descendant && parent != descendant;) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if(node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1
    }
    if(node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1
    }
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT, isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }
    var parent1 = node1.parentNode, parent2 = node2.parentNode;
    return parent1 == parent2 ? goog.dom.compareSiblingOrder_(node1, node2) : !isElement1 && goog.dom.contains(parent1, node2) ? -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2) : !isElement2 && goog.dom.contains(parent2, node1) ? goog.dom.compareParentsDescendantNodeIe_(node2, node1) : (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
  }
  var doc = goog.dom.getOwnerDocument(node1), range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(!0);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(!0);
  return range1.compareBoundaryPoints(goog.global.Range.START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  for(var sibling = node;sibling.parentNode != parent;) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  for(var s = node2;s = s.previousSibling;) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }
  if(1 == count) {
    return arguments[0]
  }
  var paths = [], minLength = Infinity;
  for(i = 0;i < count;i++) {
    for(var ancestors = [], node = arguments[i];node;) {
      ancestors.unshift(node), node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    for(var first = paths[0][i], j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      for(;element.lastChild != element.firstChild;) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }
  var doc = goog.dom.getOwnerDocument(element), div = doc.createElement("div");
  div.appendChild(element.cloneNode(!0));
  return div.innerHTML
};
goog.dom.findNode = function(root, p) {
  var rv = [], found = goog.dom.findNodes_(root, p, rv, !0);
  return found ? rv[0] : void 0
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, !1);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(null != root) {
    for(var child = root.firstChild;child;) {
      if(p(child) && (rv.push(child), findOne) || goog.dom.findNodes_(child, p, rv, findOne)) {
        return!0
      }
      child = child.nextSibling
    }
  }
  return!1
};
goog.dom.TAGS_TO_IGNORE_ = {SCRIPT:1, STYLE:1, HEAD:1, IFRAME:1, OBJECT:1};
goog.dom.PREDEFINED_TAG_VALUES_ = {IMG:" ", BR:"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element)
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  enable ? element.tabIndex = 0 : (element.tabIndex = -1, element.removeAttribute("tabIndex"))
};
goog.dom.isFocusable = function(element) {
  var focusable;
  return(focusable = goog.dom.isFormElement_(element) ? !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element)) : goog.dom.isFocusableTabIndex(element)) && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && 0 <= index && 32768 > index
};
goog.dom.isFormElement_ = function(element) {
  return element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element.getBoundingClientRect) ? element.getBoundingClientRect() : {height:element.offsetHeight, width:element.offsetWidth};
  return goog.isDefAndNotNull(rect) && 0 < rect.height && 0 < rect.width
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, !0);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  goog.dom.BrowserFeature.CAN_USE_INNER_TEXT || (textContent = textContent.replace(/ +/g, " "));
  " " != textContent && (textContent = textContent.replace(/^\s*/, ""));
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, !1);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(!(node.nodeName in goog.dom.TAGS_TO_IGNORE_)) {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      normalizeWhitespace ? buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, "")) : buf.push(node.nodeValue)
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        for(var child = node.firstChild;child;) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace), child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  for(var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body, buf = [];node && node != root;) {
    for(var cur = node;cur = cur.previousSibling;) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  for(var stack = [parent], pos = 0, cur = null;0 < stack.length && pos < offset;) {
    if(cur = stack.pop(), !(cur.nodeName in goog.dom.TAGS_TO_IGNORE_)) {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " "), pos = pos + text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;0 <= i;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  goog.isObject(opt_result) && (opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0, opt_result.node = cur);
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && "number" == typeof val.length) {
    if(goog.isObject(val)) {
      return"function" == typeof val.item || "string" == typeof val.item
    }
    if(goog.isFunction(val)) {
      return"function" == typeof val.item
    }
  }
  return!1
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if(!opt_tag && !opt_class) {
    return null
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, !0)
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  opt_includeNode || (element = element.parentNode);
  for(var ignoreSearchSteps = null == opt_maxSearchSteps, steps = 0;element && (ignoreSearchSteps || steps <= opt_maxSearchSteps);) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow(), isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  return goog.isDef(win.devicePixelRatio) && !isFirefoxMobile ? win.devicePixelRatio : win.matchMedia ? goog.dom.matchesPixelRatio_(0.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1 : 1
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow(), query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + "),(min--moz-device-pixel-ratio: " + pixelRatio + "),(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element)
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id)
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content))
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
// Input 30
goog.dom.vendor = {};
goog.dom.vendor.getVendorJsPrefix = function() {
  return goog.userAgent.WEBKIT ? "Webkit" : goog.userAgent.GECKO ? "Moz" : goog.userAgent.IE ? "ms" : goog.userAgent.OPERA ? "O" : null
};
goog.dom.vendor.getVendorPrefix = function() {
  return goog.userAgent.WEBKIT ? "-webkit" : goog.userAgent.GECKO ? "-moz" : goog.userAgent.IE ? "-ms" : goog.userAgent.OPERA ? "-o" : null
};
// Input 31
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  for(var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x), i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
goog.DEBUG && (goog.math.Box.prototype.toString = function() {
  return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
});
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  goog.isObject(top) ? (this.top -= top.top, this.right += top.right, this.bottom += top.bottom, this.left -= top.left) : (this.top -= top, this.right += opt_right, this.bottom += opt_bottom, this.left -= opt_left);
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left : !1
};
goog.math.Box.contains = function(box, other) {
  return box && other ? other instanceof goog.math.Box ? other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom : other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom : !1
};
goog.math.Box.relativePositionX = function(box, coord) {
  return coord.x < box.left ? coord.x - box.left : coord.x > box.right ? coord.x - box.right : 0
};
goog.math.Box.relativePositionY = function(box, coord) {
  return coord.y < box.top ? coord.y - box.top : coord.y > box.bottom ? coord.y - box.bottom : 0
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord), y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y)
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  tx instanceof goog.math.Coordinate ? (this.left += tx.x, this.right += tx.x, this.top += tx.y, this.bottom += tx.y) : (this.left += tx, this.right += tx, goog.isNumber(opt_ty) && (this.top += opt_ty, this.bottom += opt_ty));
  return this
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this
};
// Input 32
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width, bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
goog.DEBUG && (goog.math.Rect.prototype.toString = function() {
  return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
});
goog.math.Rect.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height : !1
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left), x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top), y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      return this.left = x0, this.top = y0, this.width = x1 - x0, this.height = y1 - y0, !0
    }
  }
  return!1
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left), x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top), y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [], top = a.top, height = a.height, ar = a.left + a.width, ab = a.top + a.height, br = b.left + b.width, bb = b.top + b.height;
  b.top > a.top && (result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top)), top = b.top, height -= b.top - a.top);
  bb < ab && (result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb)), height = bb - top);
  b.left > a.left && result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  br < ar && result.push(new goog.math.Rect(br, top, ar - br, height));
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width), bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  return another instanceof goog.math.Rect ? this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height : another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0), dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point))
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2)
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  tx instanceof goog.math.Coordinate ? (this.left += tx.x, this.top += tx.y) : (this.left += tx, goog.isNumber(opt_ty) && (this.top += opt_ty));
  return this
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this
};
// Input 33
goog.style = {};
goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS = !1;
goog.style.setStyle = function(element, style, opt_value) {
  goog.isString(style) ? goog.style.setStyle_(element, opt_value, style) : goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  propertyName && (element.style[propertyName] = value)
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(void 0 === element.style[camelStyle]) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(void 0 !== element.style[prefixedStyle]) {
      return prefixedStyle
    }
  }
  return camelStyle
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(void 0 === element.style[camelStyle]) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(void 0 !== element.style[prefixedStyle]) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style
    }
  }
  return style
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  return"undefined" !== typeof styleValue ? styleValue : element.style[goog.style.getVendorJsStyleName_(element, property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property) || ""
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y, buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersionOrHigher("1.9");
  arg1 instanceof goog.math.Coordinate ? (x = arg1.x, y = arg1.y) : (x = arg1, y = opt_arg2);
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  doc = opt_node ? goog.dom.getOwnerDocument(opt_node) : goog.dom.getDocument();
  return!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9) || goog.dom.getDomHelper(doc).isCss1CompatMode() ? doc.documentElement : doc.body
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body, documentElement = doc.documentElement, scrollLeft = body.scrollLeft || documentElement.scrollLeft, scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect()
  }catch(e) {
    return{left:0, top:0, right:0, bottom:0}
  }
  if(goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return element.offsetParent
  }
  for(var doc = goog.dom.getOwnerDocument(element), positionStyle = goog.style.getStyle_(element, "position"), skipStatic = "fixed" == positionStyle || "absolute" == positionStyle, parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    if(positionStyle = goog.style.getStyle_(parent, "position"), skipStatic = skipStatic && "static" == positionStyle && parent != doc.documentElement && parent != doc.body, !skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || "fixed" == positionStyle || "absolute" == positionStyle || "relative" == positionStyle)) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  for(var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0), dom = goog.dom.getDomHelper(element), body = dom.getDocument().body, documentElement = dom.getDocument().documentElement, scrollEl = dom.getDocumentScrollElement(), el = element;el = goog.style.getOffsetParent(el);) {
    if(!(goog.userAgent.IE && 0 == el.clientWidth || goog.userAgent.WEBKIT && 0 == el.clientHeight && el == body || el == body || el == documentElement || "visible" == goog.style.getStyle_(el, "overflow"))) {
      var pos = goog.style.getPageOffset(el), client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return 0 <= visibleRect.top && 0 <= visibleRect.left && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element), containerPos = goog.style.getPageOffset(container), containerBorder = goog.style.getBorderBox(container), relX = elementPos.x - containerPos.x - containerBorder.left, relY = elementPos.y - containerPos.y - containerBorder.top, spaceX = container.clientWidth - element.offsetWidth, spaceY = container.clientHeight - element.offsetHeight, scrollLeft = container.scrollLeft, scrollTop = container.scrollTop;
  opt_center ? (scrollLeft += relX - spaceX / 2, scrollTop += relY - spaceY / 2) : (scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0)), scrollTop += Math.min(relY, Math.max(relY - spaceY, 0)));
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth")), left = left + scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el), positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = !goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS && goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && "absolute" == positionStyle && (box = doc.getBoxObjectFor(el)) && (0 > box.screenX || 0 > box.screenY), pos = new goog.math.Coordinate(0, 0), viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        parent != el && (pos.x += parent.clientLeft || 0, pos.y += parent.clientTop || 0);
        if(goog.userAgent.WEBKIT && "fixed" == goog.style.getComputedPosition(parent)) {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && "absolute" == positionStyle) {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft, goog.userAgent.OPERA && "TR" == parent.tagName || (pos.y -= parent.scrollTop)
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0), currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el)), currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body, pos = goog.style.getFramedPageOffset(body, newBase.getWindow()), pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    goog.userAgent.IE && !origBase.isCss1CompatMode() && (pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll()));
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a), bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPositionForElement_ = function(el) {
  var pos;
  if(goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    var box = goog.style.getBoundingClientRect_(el);
    pos = new goog.math.Coordinate(box.left, box.top)
  }else {
    var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll(), pageCoord = goog.style.getPageOffset(el);
    pos = new goog.math.Coordinate(pageCoord.x - scrollCoord.x, pageCoord.y - scrollCoord.y)
  }
  return goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher(12) ? goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el)) : pos
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_(el)
  }
  var isAbstractedEvent = goog.isFunction(el.getBrowserEvent), targetEvent = el;
  el.targetTouches ? targetEvent = el.targetTouches[0] : isAbstractedEvent && el.getBrowserEvent().targetTouches && (targetEvent = el.getBrowserEvent().targetTouches[0]);
  return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY)
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  x instanceof goog.math.Coordinate && (opt_y = x.y, x = x.x);
  var dx = x - cur.x, dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height, w = w.width
  }else {
    if(void 0 == opt_h) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  "number" == typeof value && (value = (round ? Math.round(value) : value) + "px");
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, !0)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, !0)
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, element)
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if("none" != goog.style.getStyle_(element, "display")) {
    return fn(element)
  }
  var style = element.style, originalDisplay = style.display, originalVisibility = style.visibility, originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth, offsetHeight = element.offsetHeight, webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getTransformedSize = function(element) {
  if(!element.getBoundingClientRect) {
    return null
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element), s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style, result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        match && (result = String(match[1] / 100))
      }
    }
  }
  return"" == result ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  "opacity" in style ? style.opacity = alpha : "MozOpacity" in style ? style.MozOpacity = alpha : "filter" in style && (style.filter = "" === alpha ? "" : "alpha(opacity=" + 100 * alpha + ")")
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8") ? style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + src + '", sizingMethod="crop")' : (style.backgroundImage = "url(" + src + ")", style.backgroundPosition = "top left", style.backgroundRepeat = "no-repeat")
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  "filter" in style ? style.filter = "" : style.backgroundImage = "none"
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display)
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return"none" != el.style.display
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node), styleSheet = null, doc = dh.getDocument();
  if(goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet(), goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0], head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  goog.userAgent.IE ? element.cssText = stylesString : element.innerHTML = stylesString
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8") ? (style.whiteSpace = "pre", style.wordWrap = "break-word") : style.whiteSpace = goog.userAgent.GECKO ? "-moz-pre-wrap" : "pre-wrap"
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8") ? (style.zoom = "1", style.display = "inline") : style.display = goog.userAgent.GECKO ? goog.userAgent.isVersionOrHigher("1.9a") ? "inline-block" : "-moz-inline-box" : "inline-block"
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  return goog.style.unselectableStyle_ ? "none" == el.style[goog.style.unselectableStyle_].toLowerCase() : goog.userAgent.IE || goog.userAgent.OPERA ? "on" == el.getAttribute("unselectable") : !1
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = opt_noRecurse ? null : el.getElementsByTagName("*"), name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      if(value = unselectable ? "on" : "", el.setAttribute("unselectable", value), descendants) {
        for(i = 0;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element), isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(!goog.userAgent.IE || isCss1CompatMode && goog.userAgent.isVersionOrHigher("8")) {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }else {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element), borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width, style.pixelHeight = size.height
    }
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element), ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && "auto" != ieCurrentStyle.width && "auto" != ieCurrentStyle.height && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth"), height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }
  var borderBoxSize = goog.style.getBorderBoxSize(element), paddingBox = goog.style.getPaddingBox(element), borderBox = goog.style.getBorderBox(element);
  return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element), isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(!goog.userAgent.IE || isCss1CompatMode && goog.userAgent.isVersionOrHigher("8")) {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }else {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width, style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element), borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  goog.userAgent.GECKO ? style.MozBoxSizing = boxSizing : goog.userAgent.WEBKIT ? style.WebkitBoxSizing = boxSizing : style.boxSizing = boxSizing;
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }
  var oldStyleValue = element.style[name], oldRuntimeValue = element.runtimeStyle[name];
  element.runtimeStyle[name] = element.currentStyle[name];
  element.style[name] = value;
  var pixelValue = element.style[pixelName];
  element.style[name] = oldStyleValue;
  element.runtimeStyle[name] = oldRuntimeValue;
  return pixelValue
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left"), right = goog.style.getIePixelDistance_(element, stylePrefix + "Right"), top = goog.style.getIePixelDistance_(element, stylePrefix + "Top"), bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }
  left = goog.style.getComputedStyle(element, stylePrefix + "Left");
  right = goog.style.getComputedStyle(element, stylePrefix + "Right");
  top = goog.style.getComputedStyle(element, stylePrefix + "Top");
  bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
  return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {thin:2, medium:4, thick:6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if("none" == goog.style.getCascadedStyle(element, prop + "Style")) {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  return width in goog.style.ieBorderWidthKeywords_ ? goog.style.ieBorderWidthKeywords_[width] : goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft"), right = goog.style.getIePixelBorder_(element, "borderRight"), top = goog.style.getIePixelBorder_(element, "borderTop"), bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }
  left = goog.style.getComputedStyle(element, "borderLeftWidth");
  right = goog.style.getComputedStyle(element, "borderRightWidth");
  top = goog.style.getComputedStyle(element, "borderTopWidth");
  bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
  return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el), font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  font || (font = goog.style.getStyle_(el, "fontFamily"));
  var fontsArray = font.split(",");
  1 < fontsArray.length && (font = fontsArray[0]);
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {cm:1, "in":1, mm:1, pc:1, pt:1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {em:1, ex:1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize"), sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }
    if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
      var parentElement = el.parentNode, parentSize = goog.style.getStyle_(parentElement, "fontSize");
      return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
    }
  }
  var sizeElement = goog.dom.createDom("span", {style:"visibility:hidden;position:absolute;line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    2 == keyValue.length && (result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1])
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  opt_className && (outerDiv.className = opt_className);
  outerDiv.style.cssText = "overflow:auto;position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.style.MATRIX_TRANSLATION_REGEX_ = /matrix\([0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, ([0-9\.\-]+)p?x?, ([0-9\.\-]+)p?x?\)/;
goog.style.getCssTranslation = function(element) {
  var property;
  goog.userAgent.IE ? property = "-ms-transform" : goog.userAgent.WEBKIT ? property = "-webkit-transform" : goog.userAgent.OPERA ? property = "-o-transform" : goog.userAgent.GECKO && (property = "-moz-transform");
  var transform;
  property && (transform = goog.style.getStyle_(element, property));
  transform || (transform = goog.style.getStyle_(element, "transform"));
  if(!transform) {
    return new goog.math.Coordinate(0, 0)
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  return matches ? new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2])) : new goog.math.Coordinate(0, 0)
};
// Input 34
goog.debug.DivConsole = function(element) {
  this.publishHandler_ = goog.bind(this.addLogRecord, this);
  this.formatter_ = new goog.debug.HtmlFormatter;
  this.isCapturing_ = this.formatter_.showAbsoluteTime = !1;
  this.element_ = element;
  this.elementOwnerDocument_ = this.element_.ownerDocument || this.element_.document;
  this.installStyles()
};
goog.debug.DivConsole.prototype.installStyles = function() {
  goog.style.installStyles(".dbg-sev{color:#F00}.dbg-w{color:#C40}.dbg-sh{font-weight:bold;color:#000}.dbg-i{color:#444}.dbg-f{color:#999}.dbg-ev{color:#0A0}.dbg-m{color:#990}.logmsg{border-bottom:1px solid #CCC;padding:2px}.logsep{background-color: #8C8;}.logdiv{border:1px solid #CCC;background-color:#FCFCFC;font:medium monospace}", this.element_);
  this.element_.className += " logdiv"
};
goog.debug.DivConsole.prototype.setCapturing = function(capturing) {
  if(capturing != this.isCapturing_) {
    var rootLogger = goog.debug.LogManager.getRoot();
    capturing ? rootLogger.addHandler(this.publishHandler_) : rootLogger.removeHandler(this.publishHandler_);
    this.isCapturing_ = capturing
  }
};
goog.debug.DivConsole.prototype.addLogRecord = function(logRecord) {
  var scroll = 100 >= this.element_.scrollHeight - this.element_.scrollTop - this.element_.clientHeight, div = this.elementOwnerDocument_.createElement("div");
  div.className = "logmsg";
  div.innerHTML = this.formatter_.formatRecord(logRecord);
  this.element_.appendChild(div);
  scroll && (this.element_.scrollTop = this.element_.scrollHeight)
};
goog.debug.DivConsole.prototype.getFormatter = function() {
  return this.formatter_
};
goog.debug.DivConsole.prototype.clear = function() {
  this.element_.innerHTML = ""
};
// Input 35
goog.uri = {};
goog.uri.utils = {};
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  opt_scheme && (out += opt_scheme + ":");
  opt_domain && (out += "//", opt_userInfo && (out += opt_userInfo + "@"), out += opt_domain, opt_port && (out += ":" + opt_port));
  opt_path && (out += opt_path);
  opt_queryData && (out += "?" + opt_queryData);
  opt_fragment && (out += "#" + opt_fragment);
  return out
};
goog.uri.utils.splitRe_ = RegExp("^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if(goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = !1;
    var location = goog.global.location;
    if(location) {
      var href = location.href;
      if(href) {
        var domain = goog.uri.utils.getDomain(href);
        if(domain && domain != location.hostname) {
          throw goog.uri.utils.needsPhishingProtection_ = !0, Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if(!scheme && self.location) {
    var protocol = self.location.protocol, scheme = protocol.substr(0, protocol.length - 1)
  }
  return scheme ? scheme.toLowerCase() : ""
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return 0 > hashIndex ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return 0 > hashIndex ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1), pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (0 <= uri.indexOf("#") || 0 <= uri.indexOf("?"))) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not supported: [" + uri + "]");
  }
};
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0], hashIndex = baseUri.indexOf("#");
    0 <= hashIndex && (buffer.push(baseUri.substr(hashIndex)), buffer[0] = baseUri = baseUri.substr(0, hashIndex));
    var questionIndex = baseUri.indexOf("?");
    0 > questionIndex ? buffer[1] = "?" : questionIndex == baseUri.length - 1 && (buffer[1] = void 0)
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for(var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs)
    }
  }else {
    null != value && pairs.push("&", key, "" === value ? "" : "=", goog.string.urlEncode(value))
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(0 == Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(2 == arguments.length ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "&", key];
  goog.isDefAndNotNull(opt_value) && paramArr.push("=", goog.string.urlEncode(opt_value));
  return goog.uri.utils.appendQueryData_(paramArr)
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  for(var index = startIndex, keyLength = keyEncoded.length;0 <= (index = uri.indexOf(keyEncoded, index)) && index < hashOrEndIndex;) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return 0 <= goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_))
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_), foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(0 > foundIndex) {
    return null
  }
  var endPosition = uri.indexOf("&", foundIndex);
  if(0 > endPosition || endPosition > hashOrEndIndex) {
    endPosition = hashOrEndIndex
  }
  foundIndex += keyEncoded.length + 1;
  return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  for(var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_), position = 0, foundIndex, result = [];0 <= (foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex));) {
    position = uri.indexOf("&", foundIndex);
    if(0 > position || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  for(var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_), position = 0, foundIndex, buffer = [];0 <= (foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex));) {
    buffer.push(uri.substring(position, foundIndex)), position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  goog.string.endsWith(baseUri, "/") && (baseUri = baseUri.substr(0, baseUri.length - 1));
  goog.string.startsWith(path, "/") && (path = path.substr(1));
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
// Input 36
goog.color = {};
goog.color.names = {aliceblue:"#f0f8ff", antiquewhite:"#faebd7", aqua:"#00ffff", aquamarine:"#7fffd4", azure:"#f0ffff", beige:"#f5f5dc", bisque:"#ffe4c4", black:"#000000", blanchedalmond:"#ffebcd", blue:"#0000ff", blueviolet:"#8a2be2", brown:"#a52a2a", burlywood:"#deb887", cadetblue:"#5f9ea0", chartreuse:"#7fff00", chocolate:"#d2691e", coral:"#ff7f50", cornflowerblue:"#6495ed", cornsilk:"#fff8dc", crimson:"#dc143c", cyan:"#00ffff", darkblue:"#00008b", darkcyan:"#008b8b", darkgoldenrod:"#b8860b", 
darkgray:"#a9a9a9", darkgreen:"#006400", darkgrey:"#a9a9a9", darkkhaki:"#bdb76b", darkmagenta:"#8b008b", darkolivegreen:"#556b2f", darkorange:"#ff8c00", darkorchid:"#9932cc", darkred:"#8b0000", darksalmon:"#e9967a", darkseagreen:"#8fbc8f", darkslateblue:"#483d8b", darkslategray:"#2f4f4f", darkslategrey:"#2f4f4f", darkturquoise:"#00ced1", darkviolet:"#9400d3", deeppink:"#ff1493", deepskyblue:"#00bfff", dimgray:"#696969", dimgrey:"#696969", dodgerblue:"#1e90ff", firebrick:"#b22222", floralwhite:"#fffaf0", 
forestgreen:"#228b22", fuchsia:"#ff00ff", gainsboro:"#dcdcdc", ghostwhite:"#f8f8ff", gold:"#ffd700", goldenrod:"#daa520", gray:"#808080", green:"#008000", greenyellow:"#adff2f", grey:"#808080", honeydew:"#f0fff0", hotpink:"#ff69b4", indianred:"#cd5c5c", indigo:"#4b0082", ivory:"#fffff0", khaki:"#f0e68c", lavender:"#e6e6fa", lavenderblush:"#fff0f5", lawngreen:"#7cfc00", lemonchiffon:"#fffacd", lightblue:"#add8e6", lightcoral:"#f08080", lightcyan:"#e0ffff", lightgoldenrodyellow:"#fafad2", lightgray:"#d3d3d3", 
lightgreen:"#90ee90", lightgrey:"#d3d3d3", lightpink:"#ffb6c1", lightsalmon:"#ffa07a", lightseagreen:"#20b2aa", lightskyblue:"#87cefa", lightslategray:"#778899", lightslategrey:"#778899", lightsteelblue:"#b0c4de", lightyellow:"#ffffe0", lime:"#00ff00", limegreen:"#32cd32", linen:"#faf0e6", magenta:"#ff00ff", maroon:"#800000", mediumaquamarine:"#66cdaa", mediumblue:"#0000cd", mediumorchid:"#ba55d3", mediumpurple:"#9370db", mediumseagreen:"#3cb371", mediumslateblue:"#7b68ee", mediumspringgreen:"#00fa9a", 
mediumturquoise:"#48d1cc", mediumvioletred:"#c71585", midnightblue:"#191970", mintcream:"#f5fffa", mistyrose:"#ffe4e1", moccasin:"#ffe4b5", navajowhite:"#ffdead", navy:"#000080", oldlace:"#fdf5e6", olive:"#808000", olivedrab:"#6b8e23", orange:"#ffa500", orangered:"#ff4500", orchid:"#da70d6", palegoldenrod:"#eee8aa", palegreen:"#98fb98", paleturquoise:"#afeeee", palevioletred:"#db7093", papayawhip:"#ffefd5", peachpuff:"#ffdab9", peru:"#cd853f", pink:"#ffc0cb", plum:"#dda0dd", powderblue:"#b0e0e6", 
purple:"#800080", red:"#ff0000", rosybrown:"#bc8f8f", royalblue:"#4169e1", saddlebrown:"#8b4513", salmon:"#fa8072", sandybrown:"#f4a460", seagreen:"#2e8b57", seashell:"#fff5ee", sienna:"#a0522d", silver:"#c0c0c0", skyblue:"#87ceeb", slateblue:"#6a5acd", slategray:"#708090", slategrey:"#708090", snow:"#fffafa", springgreen:"#00ff7f", steelblue:"#4682b4", tan:"#d2b48c", teal:"#008080", thistle:"#d8bfd8", tomato:"#ff6347", turquoise:"#40e0d0", violet:"#ee82ee", wheat:"#f5deb3", white:"#ffffff", whitesmoke:"#f5f5f5", 
yellow:"#ffff00", yellowgreen:"#9acd32"};
// Input 37
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    return result.hex = goog.color.normalizeHex(maybeHex), result.type = "hex", result
  }
  var rgb = goog.color.isValidRgbColor_(str);
  if(rgb.length) {
    return result.hex = goog.color.rgbArrayToHex(rgb), result.type = "rgb", result
  }
  if(goog.color.names) {
    var hex = goog.color.names[str.toLowerCase()];
    if(hex) {
      return result.hex = hex, result.type = "named", result
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.isValidColor = function(str) {
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  return!!(goog.color.isValidHexColor_(maybeHex) || goog.color.isValidRgbColor_(str).length || goog.color.names && goog.color.names[str.toLowerCase()])
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  4 == hexColor.length && (hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3"));
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16), g = parseInt(hexColor.substr(3, 2), 16), b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || 0 > r || 255 < r || isNaN(g) || 0 > g || 255 < g || isNaN(b) || 0 > b || 255 < b) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessaryHelper(r.toString(16)), hexG = goog.color.prependZeroIfNecessaryHelper(g.toString(16)), hexB = goog.color.prependZeroIfNecessaryHelper(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255, normG = g / 255, normB = b / 255, max = Math.max(normR, normG, normB), min = Math.min(normR, normG, normB), h = 0, s = 0, l = 0.5 * (max + min);
  max != min && (max == normR ? h = 60 * (normG - normB) / (max - min) : max == normG ? h = 60 * (normB - normR) / (max - min) + 120 : max == normB && (h = 60 * (normR - normG) / (max - min) + 240), s = 0 < l && 0.5 >= l ? (max - min) / (2 * l) : (max - min) / (2 - 2 * l));
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  0 > vH ? vH += 1 : 1 < vH && (vH -= 1);
  return 1 > 6 * vH ? v1 + 6 * (v2 - v1) * vH : 1 > 2 * vH ? v2 : 2 > 3 * vH ? v1 + 6 * (v2 - v1) * (2 / 3 - vH) : v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0, g = 0, b = 0, normH = h / 360;
  if(0 == s) {
    r = g = b = 255 * l
  }else {
    var temp1 = 0, temp2 = 0, temp2 = 0.5 > l ? l * (1 + s) : l + s - s * l, temp1 = 2 * l - temp2, r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3), g = 255 * goog.color.hueToRgb_(temp1, temp2, normH), b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]), g = Number(regExpResultArray[2]), b = Number(regExpResultArray[3]);
    if(0 <= r && 255 >= r && 0 <= g && 255 >= g && 0 <= b && 255 >= b) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessaryHelper = function(hex) {
  return 1 == hex.length ? "0" + hex : hex
};
goog.color.prependHashIfNecessaryHelper = function(str) {
  return"#" == str.charAt(0) ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0, green = 0, blue = 0;
  if(0 == s) {
    blue = green = red = brightness
  }else {
    var sextant = Math.floor(h / 60), remainder = h / 60 - sextant, val1 = brightness * (1 - s), val2 = brightness * (1 - s * remainder), val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness, green = val3, blue = val1
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue), min = Math.min(Math.min(red, green), blue), hue, saturation, value = max;
  if(min == max) {
    saturation = hue = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    hue = red == max ? (green - blue) / delta : green == max ? 2 + (blue - red) / delta : 4 + (red - green) / delta;
    hue *= 60;
    0 > hue && (hue += 360);
    360 < hue && (hue -= 360)
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  sl1 = 0.5 >= hsl1[2] ? hsl1[1] * hsl1[2] : hsl1[1] * (1 - hsl1[2]);
  sl2 = 0.5 >= hsl2[2] ? hsl2[1] * hsl2[2] : hsl2[1] * (1 - hsl2[2]);
  var h1 = hsl1[0] / 360, h2 = hsl2[0] / 360, dh = 2 * (h1 - h2) * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  for(var suggestionsWithDiff = [], i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((299 * rgb[0] + 587 * rgb[1] + 114 * rgb[2]) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
// Input 38
goog.math.Range = function(a, b) {
  this.start = a < b ? a : b;
  this.end = a < b ? b : a
};
goog.math.Range.prototype.clone = function() {
  return new goog.math.Range(this.start, this.end)
};
goog.DEBUG && (goog.math.Range.prototype.toString = function() {
  return"[" + this.start + ", " + this.end + "]"
});
goog.math.Range.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.start == b.start && a.end == b.end : !1
};
goog.math.Range.intersection = function(a, b) {
  var c0 = Math.max(a.start, b.start), c1 = Math.min(a.end, b.end);
  return c0 <= c1 ? new goog.math.Range(c0, c1) : null
};
goog.math.Range.hasIntersection = function(a, b) {
  return Math.max(a.start, b.start) <= Math.min(a.end, b.end)
};
goog.math.Range.boundingRange = function(a, b) {
  return new goog.math.Range(Math.min(a.start, b.start), Math.max(a.end, b.end))
};
goog.math.Range.contains = function(a, b) {
  return a.start <= b.start && a.end >= b.end
};
goog.math.Range.containsPoint = function(range, p) {
  return range.start <= p && range.end >= p
};
// Input 39
var gviz = {graphics:{}};
// Input 40
gviz.graphics.logicalname = {};
gviz.graphics.logicalname.LOGICAL_NAME_ATTRIBUTE_ = "logicalname";
gviz.graphics.logicalname.DEFAULT_NAME = "_default_";
gviz.graphics.logicalname.setLogicalName = function(element, name) {
  element && (element[gviz.graphics.logicalname.LOGICAL_NAME_ATTRIBUTE_] = name)
};
gviz.graphics.logicalname.getLogicalName = function(element) {
  var namedElement = goog.dom.getAncestor(element, function(e) {
    return goog.isDefAndNotNull(e[gviz.graphics.logicalname.LOGICAL_NAME_ATTRIBUTE_])
  }, !0);
  return namedElement ? namedElement[gviz.graphics.logicalname.LOGICAL_NAME_ATTRIBUTE_] : gviz.graphics.logicalname.DEFAULT_NAME
};
// Input 41
gviz.graphics.util = {};
gviz.graphics.util.NO_COLOR = "none";
gviz.graphics.util.parseColor = function(color) {
  return color == gviz.graphics.util.NO_COLOR || "" == color || "transparent" == color ? gviz.graphics.util.NO_COLOR : goog.color.parse(color).hex
};
gviz.graphics.util.grayOutColor = function(color) {
  if(color == gviz.graphics.util.NO_COLOR) {
    return gviz.graphics.util.NO_COLOR
  }
  var colorRgb = goog.color.hexToRgb(color), value = Math.round((colorRgb[0] + colorRgb[1] + colorRgb[2]) / 3);
  return goog.color.rgbToHex(value, value, value)
};
gviz.graphics.util.createBoldTextStyle = function(textStyle, defaultBold) {
  textStyle = goog.object.clone(textStyle);
  goog.isDefAndNotNull(textStyle.bold) || (textStyle.bold = defaultBold);
  return textStyle
};
gviz.graphics.util.createDom = function(domHelper, definition) {
  var element = domHelper.createDom(definition.name, definition.properties);
  domHelper.setProperties(element, {style:definition.style});
  if(goog.isDefAndNotNull(definition.content)) {
    var childrenDef = goog.isArray(definition.content) ? definition.content : [definition.content];
    goog.array.forEach(childrenDef, function(childDef) {
      if(goog.isString(childDef)) {
        domHelper.appendChild(element, domHelper.createTextNode(childDef))
      }else {
        var child;
        child = goog.isString(childDef.content) && childDef.rawHtml ? domHelper.htmlToDocumentFragment(childDef.content) : gviz.graphics.util.createDom(domHelper, childDef);
        domHelper.appendChild(element, child)
      }
    })
  }
  goog.isDefAndNotNull(definition.id) && gviz.graphics.logicalname.setLogicalName(element, definition.id);
  return element
};
// Input 42
gviz.util = {};
gviz.util.roughlyEquals = function(a, b, opt_threshold) {
  var threshold = goog.isDefAndNotNull(opt_threshold) ? opt_threshold : 1E-5;
  goog.asserts.assert(0 <= threshold);
  return a == b || Math.abs(a - b) <= threshold
};
gviz.util.blendHexColors = function(color1, color2, factor) {
  return color1 && color1 != gviz.graphics.util.NO_COLOR ? color2 && color2 != gviz.graphics.util.NO_COLOR ? goog.color.rgbArrayToHex(goog.color.blend(goog.color.hexToRgb(color1), goog.color.hexToRgb(color2), factor)) : color1 : color2
};
gviz.util.extendRangeToInclude = function(range, value) {
  if(!goog.isDefAndNotNull(value)) {
    return range
  }
  var valueRange = new goog.math.Range(value, value);
  return range ? goog.math.Range.boundingRange(range, valueRange) : valueRange
};
gviz.util.getOverridenRange = function(range, min, max) {
  var newMin = goog.isDefAndNotNull(min) ? min : range && goog.isDefAndNotNull(max) && max < range.start ? max : range ? range.start : null, newMax = goog.isDefAndNotNull(max) ? max : range && goog.isDefAndNotNull(min) && min > range.end ? min : range ? range.end : null;
  return goog.isDefAndNotNull(newMin) && goog.isDefAndNotNull(newMax) ? new goog.math.Range(newMin, newMax) : null
};
gviz.util.calcBoundingBox = function(boxes) {
  if(0 == boxes.length) {
    return null
  }
  for(var boundingBox = boxes[0].clone(), i = 1;i < boxes.length;i++) {
    boundingBox.expandToInclude(boxes[i])
  }
  return boundingBox
};
gviz.util.findClosestValue = function(arr, val) {
  goog.asserts.assert(!goog.array.isEmpty(arr));
  var i = goog.array.binarySearch(arr, val);
  if(0 <= i) {
    return val
  }
  i = -(i + 1);
  if(0 == i) {
    return arr[0]
  }
  if(i == arr.length) {
    return goog.array.peek(arr)
  }
  var a = arr[i - 1], b = arr[i];
  return Math.abs(val - a) <= Math.abs(val - b) ? a : b
};
// Input 43
gviz.graphics.Pattern = function(style, color, opt_bgcolor) {
  this.style_ = style;
  this.color_ = gviz.graphics.util.parseColor(color);
  var bgcolor = goog.isDefAndNotNull(opt_bgcolor) ? opt_bgcolor : "#ffffff";
  this.bgcolor_ = gviz.graphics.util.parseColor(bgcolor)
};
gviz.graphics.Pattern.Style = {PRIMARY_DIAGONAL_STRIPES:"primarydiagonalstripes"};
gviz.graphics.Pattern.prototype.getStyle = function() {
  return this.style_
};
gviz.graphics.Pattern.prototype.getColor = function() {
  return this.color_
};
gviz.graphics.Pattern.prototype.getBackgroundColor = function() {
  return this.bgcolor_
};
gviz.graphics.Pattern.prototype.clone = function() {
  var newPattern = new gviz.graphics.Pattern(this.style_, this.color_, this.bgcolor_);
  return newPattern
};
gviz.graphics.Pattern.prototype.grayOut = function() {
  var newPattern = new gviz.graphics.Pattern(this.style_, gviz.graphics.util.grayOutColor(this.color_), gviz.graphics.util.grayOutColor(this.bgcolor_));
  return newPattern
};
gviz.graphics.Pattern.equals = function(a, b) {
  return a === b ? !0 : null == a || null == b ? !1 : a.bgcolor_ == b.bgcolor_ && a.color_ == b.color_ && a.style_ == b.style_
};
// Input 44
gviz.graphics.Brush = function(opt_brushProps) {
  var brushProps = opt_brushProps || {};
  this.fill_ = gviz.graphics.util.NO_COLOR;
  goog.isDefAndNotNull(brushProps.fill) && this.setFill(brushProps.fill);
  this.fillOpacity_ = gviz.graphics.Brush.DEFAULT_FILL_OPACITY;
  goog.isDefAndNotNull(brushProps.fillOpacity) && this.setFillOpacity(brushProps.fillOpacity);
  this.stroke_ = gviz.graphics.util.NO_COLOR;
  goog.isDefAndNotNull(brushProps.stroke) && this.setStroke(brushProps.stroke);
  this.strokeWidth_ = gviz.graphics.Brush.DEFAULT_STROKE_WIDTH;
  goog.isDefAndNotNull(brushProps.strokeWidth) && this.setStrokeWidth(brushProps.strokeWidth);
  this.strokeOpacity_ = gviz.graphics.Brush.DEFAULT_STROKE_OPACITY;
  goog.isDefAndNotNull(brushProps.strokeOpacity) && this.setStrokeOpacity(brushProps.strokeOpacity);
  this.strokeDashStyle_ = gviz.graphics.Brush.DEFAULT_STROKE_DASH_STYLE;
  goog.isDefAndNotNull(brushProps.strokeDashStyle) && this.setStrokeDashStyle(brushProps.strokeDashStyle);
  this.gradient = null;
  brushProps.gradient && (this.gradient = goog.object.clone(brushProps.gradient), this.gradient.color1 = gviz.graphics.util.parseColor(this.gradient.color1), this.gradient.color2 = gviz.graphics.util.parseColor(this.gradient.color2));
  this.pattern_ = null;
  brushProps.pattern && this.setPattern(brushProps.pattern)
};
gviz.graphics.Brush.prototype.getProperties = function() {
  return{fill:this.getFill(), fillOpacity:this.getFillOpacity(), stroke:this.getStroke(), strokeWidth:this.getStrokeWidth(), strokeOpacity:this.getStrokeOpacity(), strokeDashStyle:this.getStrokeDashStyle(), gradient:this.gradient ? goog.object.clone(this.gradient) : null, pattern:this.getPattern()}
};
gviz.graphics.Brush.prototype.toJSON = function() {
  var gradient = this.gradient || null;
  gradient && (gradient = {color1:gradient.color1, color2:gradient.color2, opacity1:gradient.opacity1, opacity2:gradient.opacity2, x1:gradient.x1, y1:gradient.y1, x2:gradient.x2, y2:gradient.y2, useObjectBoundingBoxUnits:gradient.useObjectBoundingBoxUnits, sharpTransition:gradient.sharpTransition});
  var pattern = this.getPattern() || null;
  pattern && (pattern = {style:pattern.getStyle(), color:pattern.getColor(), bgcolor:pattern.getBackgroundColor()});
  var ret = {fill:this.getFill(), fillOpacity:this.getFillOpacity(), stroke:this.getStroke(), strokeWidth:this.getStrokeWidth(), strokeOpacity:this.getStrokeOpacity(), strokeDashStyle:this.getStrokeDashStyle(), gradient:gradient, pattern:pattern};
  return"undefined" !== typeof JSON && JSON.stringify ? JSON.stringify(ret) : goog.json.serialize(ret)
};
gviz.graphics.Brush.prototype.clone = function() {
  return new gviz.graphics.Brush(this.getProperties())
};
gviz.graphics.Brush.prototype.grayOut = function() {
  var newBrush = this.clone();
  newBrush.setFill(gviz.graphics.util.grayOutColor(this.fill_));
  newBrush.setStroke(gviz.graphics.util.grayOutColor(this.stroke_));
  if(this.gradient) {
    var newGradient = goog.object.clone(this.gradient);
    newGradient.color1 = gviz.graphics.util.grayOutColor(this.gradient.color1);
    newGradient.color2 = gviz.graphics.util.grayOutColor(this.gradient.color2);
    newBrush.gradient = newGradient
  }
  this.pattern_ && newBrush.setPattern(this.pattern_.grayOut());
  return newBrush
};
gviz.graphics.Brush.DEFAULT_STROKE_WIDTH = 1;
gviz.graphics.Brush.DEFAULT_STROKE_OPACITY = 1;
gviz.graphics.Brush.StrokeDashStyle = {SOLID:"solid", DASH:"dash"};
gviz.graphics.Brush.DEFAULT_STROKE_DASH_STYLE = gviz.graphics.Brush.StrokeDashStyle.SOLID;
gviz.graphics.Brush.DEFAULT_FILL_OPACITY = 1;
gviz.graphics.Brush.isTransparent_ = function(color) {
  return!goog.isDefAndNotNull(color) || color == gviz.graphics.util.NO_COLOR
};
gviz.graphics.Brush.prototype.setFill = function(fill) {
  this.fill_ = gviz.graphics.util.parseColor(fill)
};
gviz.graphics.Brush.prototype.getFill = function() {
  return this.fill_
};
gviz.graphics.Brush.prototype.setFillOpacity = function(fillOpacity) {
  this.fillOpacity_ = goog.math.clamp(fillOpacity, 0, 1)
};
gviz.graphics.Brush.prototype.getFillOpacity = function() {
  return this.fillOpacity_
};
gviz.graphics.Brush.prototype.setStroke = function(stroke, opt_strokeWidth) {
  this.stroke_ = gviz.graphics.util.parseColor(stroke);
  goog.isDefAndNotNull(opt_strokeWidth) && this.setStrokeWidth(opt_strokeWidth)
};
gviz.graphics.Brush.prototype.getStroke = function() {
  return this.stroke_
};
gviz.graphics.Brush.prototype.setStrokeWidth = function(strokeWidth) {
  this.strokeWidth_ = strokeWidth
};
gviz.graphics.Brush.prototype.getStrokeWidth = function() {
  return this.strokeWidth_
};
gviz.graphics.Brush.prototype.getVisibleStrokeWidth = function() {
  return this.hasStroke() ? this.getStrokeWidth() : 0
};
gviz.graphics.Brush.prototype.setStrokeOpacity = function(strokeOpacity) {
  this.strokeOpacity_ = goog.math.clamp(strokeOpacity, 0, 1)
};
gviz.graphics.Brush.prototype.getStrokeOpacity = function() {
  return this.strokeOpacity_
};
gviz.graphics.Brush.prototype.setStrokeDashStyle = function(strokeDashStyle) {
  this.strokeDashStyle_ = strokeDashStyle
};
gviz.graphics.Brush.prototype.getStrokeDashStyle = function() {
  return this.strokeDashStyle_
};
gviz.graphics.Brush.prototype.setPattern = function(pattern) {
  this.pattern_ = pattern
};
gviz.graphics.Brush.prototype.getPattern = function() {
  return this.pattern_
};
gviz.graphics.Brush.prototype.hasFill = function() {
  return 0 < this.fillOpacity_ && (!gviz.graphics.Brush.isTransparent_(this.fill_) || goog.isDefAndNotNull(this.gradient) || goog.isDefAndNotNull(this.pattern_))
};
gviz.graphics.Brush.prototype.hasStroke = function() {
  return 0 < this.strokeWidth_ && 0 < this.strokeOpacity_ && !gviz.graphics.Brush.isTransparent_(this.stroke_)
};
gviz.graphics.Brush.prototype.strokeHasDashStyle = function() {
  return this.strokeDashStyle_ != gviz.graphics.Brush.StrokeDashStyle.SOLID
};
gviz.graphics.Brush.prototype.isTransparent = function() {
  return!this.hasFill() && !this.hasStroke()
};
gviz.graphics.Brush.prototype.isFillOpaque = function() {
  return this.hasFill() && 1 <= this.fillOpacity_
};
gviz.graphics.Brush.prototype.isStrokeOpaque = function() {
  return this.hasStroke() && 1 <= this.strokeOpacity_
};
gviz.graphics.Brush.TRANSPARENT_BRUSH = new gviz.graphics.Brush({fillOpacity:0, fill:"white", strokeOpacity:0, stroke:"white"});
gviz.graphics.Brush.createFillBrush = function(color, opt_opacity) {
  var opacity = goog.isDefAndNotNull(opt_opacity) ? opt_opacity : 1;
  return new gviz.graphics.Brush({stroke:"none", fill:color, fillOpacity:opacity})
};
gviz.graphics.Brush.createStrokeBrush = function(color, width, opt_whiteFill) {
  var whiteFill = goog.isDefAndNotNull(opt_whiteFill) ? opt_whiteFill : !1;
  return new gviz.graphics.Brush({stroke:color, strokeWidth:width, fill:whiteFill ? "#fff" : "none"})
};
gviz.graphics.Brush.blendFills = function(foreBrush, backBrush) {
  return foreBrush.isFillOpaque() ? foreBrush.getFill() : backBrush.isFillOpaque() ? foreBrush.hasFill() ? gviz.util.blendHexColors(foreBrush.getFill(), backBrush.getFill(), foreBrush.getFillOpacity()) : backBrush.getFill() : null
};
gviz.graphics.Brush.equals = function(a, b) {
  return a === b ? !0 : null == a || null == b ? !1 : a.fill_ == b.fill_ && a.fillOpacity_ == b.fillOpacity_ && a.stroke_ == b.stroke_ && a.strokeWidth_ == b.strokeWidth_ && a.strokeOpacity_ == b.strokeOpacity_ && a.strokeDashStyle_ == b.strokeDashStyle_ && gviz.graphics.Brush.gradientEquals(a.gradient, b.gradient) && gviz.graphics.Pattern.equals(a.pattern_, b.pattern_)
};
gviz.graphics.Brush.gradientEquals = function(a, b) {
  return a === b ? !0 : null == a || null == b ? !1 : a.color1 == b.color1 && a.color2 == b.color2 && a.x1 == b.x1 && a.y1 == b.y1 && a.x2 == b.x2 && a.y2 == b.y2
};
// Input 45
gviz.graphics.TextStyleToJSON = function(textStyle) {
  var ret = {fontName:textStyle.fontName, fontSize:textStyle.fontSize, color:textStyle.color, auraColor:textStyle.auraColor, bold:textStyle.bold, italic:textStyle.italic, underline:textStyle.underline};
  return"undefined" !== typeof JSON && JSON.stringify ? JSON.stringify(ret) : goog.json.serialize(ret)
};
// Input 46
goog.i18n = {};
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"January February March April May June July August September October November December".split(" "), STANDALONEMONTHS:"January February March April May June July August September October November December".split(" "), SHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
WEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), STANDALONEWEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), STANDALONESHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], AVAILABLEFORMATS:{Md:"M/d", MMMMd:"MMMM d", MMMd:"MMM d"}, FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"Januarie Februarie Maart April Mei Junie Julie Augustus September Oktober November Desember".split(" "), STANDALONEMONTHS:"Januarie Februarie Maart April Mei Junie Julie Augustus September Oktober November Desember".split(" "), SHORTMONTHS:"Jan Feb Mar Apr Mei Jun Jul Aug Sep Okt Nov Des".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr Mei Jun Jul Aug Sep Okt Nov Des".split(" "), 
WEEKDAYS:"Sondag Maandag Dinsdag Woensdag Donderdag Vrydag Saterdag".split(" "), STANDALONEWEEKDAYS:"Sondag Maandag Dinsdag Woensdag Donderdag Vrydag Saterdag".split(" "), SHORTWEEKDAYS:"So Ma Di Wo Do Vr Sa".split(" "), STANDALONESHORTWEEKDAYS:"So Ma Di Wo Do Vr Sa".split(" "), NARROWWEEKDAYS:"SMDWDVS".split(""), STANDALONENARROWWEEKDAYS:"SMDWDVS".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE dd MMMM y", 
"dd MMMM y", "dd MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["\u12d3/\u12d3", "\u12d3/\u121d"], ERANAMES:["\u12d3\u1218\u1270 \u12d3\u1208\u121d", "\u12d3\u1218\u1270 \u121d\u1215\u1228\u1275"], NARROWMONTHS:"\u1303\u134c\u121b\u12a4\u121c\u1301\u1301\u12a6\u1234\u12a6\u1296\u12f2".split(""), STANDALONENARROWMONTHS:"\u1303\u134c\u121b\u12a4\u121c\u1301\u1301\u12a6\u1234\u12a6\u1296\u12f2".split(""), MONTHS:"\u1303\u1295\u12e9\u12c8\u122a \u134c\u1265\u1229\u12c8\u122a \u121b\u122d\u127d \u12a4\u1355\u122a\u120d \u121c\u12ed \u1301\u1295 \u1301\u120b\u12ed \u12a6\u1308\u1235\u1275 \u1234\u1355\u1274\u121d\u1260\u122d \u12a6\u12ad\u1270\u12cd\u1260\u122d \u1296\u126c\u121d\u1260\u122d \u12f2\u1234\u121d\u1260\u122d".split(" "), 
STANDALONEMONTHS:"\u1303\u1295\u12e9\u12c8\u122a \u134c\u1265\u1229\u12c8\u122a \u121b\u122d\u127d \u12a4\u1355\u122a\u120d \u121c\u12ed \u1301\u1295 \u1301\u120b\u12ed \u12a6\u1308\u1235\u1275 \u1234\u1355\u1274\u121d\u1260\u122d \u12a6\u12ad\u1276\u1260\u122d \u1296\u126c\u121d\u1260\u122d \u12f2\u1234\u121d\u1260\u122d".split(" "), SHORTMONTHS:"\u1303\u1295\u12e9 \u134c\u1265\u1229 \u121b\u122d\u127d \u12a4\u1355\u122a \u121c\u12ed \u1301\u1295 \u1301\u120b\u12ed \u12a6\u1308\u1235 \u1234\u1355\u1274 \u12a6\u12ad\u1270 \u1296\u126c\u121d \u12f2\u1234\u121d".split(" "), 
STANDALONESHORTMONTHS:"\u1303\u1295\u12e9 \u134c\u1265\u1229 \u121b\u122d\u127d \u12a4\u1355\u122a \u121c\u12ed \u1301\u1295 \u1301\u120b\u12ed \u12a6\u1308\u1235 \u1234\u1355\u1274 \u12a6\u12ad\u1276 \u1296\u126c\u121d \u12f2\u1234\u121d".split(" "), WEEKDAYS:"\u12a5\u1211\u12f5 \u1230\u129e \u121b\u12ad\u1230\u129e \u1228\u1261\u12d5 \u1210\u1219\u1235 \u12d3\u122d\u1265 \u1245\u12f3\u121c".split(" "), STANDALONEWEEKDAYS:"\u12a5\u1211\u12f5 \u1230\u129e \u121b\u12ad\u1230\u129e \u1228\u1261\u12d5 \u1210\u1219\u1235 \u12d3\u122d\u1265 \u1245\u12f3\u121c".split(" "), 
SHORTWEEKDAYS:"\u12a5\u1211\u12f5 \u1230\u129e \u121b\u12ad\u1230 \u1228\u1261\u12d5 \u1210\u1219\u1235 \u12d3\u122d\u1265 \u1245\u12f3\u121c".split(" "), STANDALONESHORTWEEKDAYS:"\u12a5\u1211\u12f5 \u1230\u129e \u121b\u12ad\u1230 \u1228\u1261\u12d5 \u1210\u1219\u1235 \u12d3\u122d\u1265 \u1245\u12f3\u121c".split(" "), NARROWWEEKDAYS:"\u12a5\u1230\u121b\u1228\u1210\u12d3\u1245".split(""), STANDALONENARROWWEEKDAYS:"\u12a5\u1230\u121b\u1228\u1210\u12d3\u1245".split(""), SHORTQUARTERS:["\u1229\u12651", 
"\u1229\u12652", "\u1229\u12653", "\u1229\u12654"], QUARTERS:["1\u129b\u12cd \u1229\u1265", "\u1201\u1208\u1270\u129b\u12cd \u1229\u1265", "3\u129b\u12cd \u1229\u1265", "4\u129b\u12cd \u1229\u1265"], AMPMS:["\u1325\u12cb\u1275", "\u12a8\u1230\u12d3\u1275"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["\u0642.\u0645", "\u0645"], ERANAMES:["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0645\u064a\u0644\u0627\u062f\u064a"], NARROWMONTHS:"\u064a\u0641\u0645\u0623\u0648\u0646\u0644\u063a\u0633\u0643\u0628\u062f".split(""), STANDALONENARROWMONTHS:"\u064a\u0641\u0645\u0623\u0648\u0646\u0644\u063a\u0633\u0643\u0628\u062f".split(""), MONTHS:"\u064a\u0646\u0627\u064a\u0631 \u0641\u0628\u0631\u0627\u064a\u0631 \u0645\u0627\u0631\u0633 \u0623\u0628\u0631\u064a\u0644 \u0645\u0627\u064a\u0648 \u064a\u0648\u0646\u064a\u0648 \u064a\u0648\u0644\u064a\u0648 \u0623\u063a\u0633\u0637\u0633 \u0633\u0628\u062a\u0645\u0628\u0631 \u0623\u0643\u062a\u0648\u0628\u0631 \u0646\u0648\u0641\u0645\u0628\u0631 \u062f\u064a\u0633\u0645\u0628\u0631".split(" "), 
STANDALONEMONTHS:"\u064a\u0646\u0627\u064a\u0631 \u0641\u0628\u0631\u0627\u064a\u0631 \u0645\u0627\u0631\u0633 \u0623\u0628\u0631\u064a\u0644 \u0645\u0627\u064a\u0648 \u064a\u0648\u0646\u064a\u0648 \u064a\u0648\u0644\u064a\u0648 \u0623\u063a\u0633\u0637\u0633 \u0633\u0628\u062a\u0645\u0628\u0631 \u0623\u0643\u062a\u0648\u0628\u0631 \u0646\u0648\u0641\u0645\u0628\u0631 \u062f\u064a\u0633\u0645\u0628\u0631".split(" "), SHORTMONTHS:"\u064a\u0646\u0627\u064a\u0631 \u0641\u0628\u0631\u0627\u064a\u0631 \u0645\u0627\u0631\u0633 \u0623\u0628\u0631\u064a\u0644 \u0645\u0627\u064a\u0648 \u064a\u0648\u0646\u064a\u0648 \u064a\u0648\u0644\u064a\u0648 \u0623\u063a\u0633\u0637\u0633 \u0633\u0628\u062a\u0645\u0628\u0631 \u0623\u0643\u062a\u0648\u0628\u0631 \u0646\u0648\u0641\u0645\u0628\u0631 \u062f\u064a\u0633\u0645\u0628\u0631".split(" "), 
STANDALONESHORTMONTHS:"\u064a\u0646\u0627\u064a\u0631 \u0641\u0628\u0631\u0627\u064a\u0631 \u0645\u0627\u0631\u0633 \u0623\u0628\u0631\u064a\u0644 \u0645\u0627\u064a\u0648 \u064a\u0648\u0646\u064a\u0648 \u064a\u0648\u0644\u064a\u0648 \u0623\u063a\u0633\u0637\u0633 \u0633\u0628\u062a\u0645\u0628\u0631 \u0623\u0643\u062a\u0648\u0628\u0631 \u0646\u0648\u0641\u0645\u0628\u0631 \u062f\u064a\u0633\u0645\u0628\u0631".split(" "), WEEKDAYS:"\u0627\u0644\u0623\u062d\u062f \u0627\u0644\u0627\u062b\u0646\u064a\u0646 \u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621 \u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621 \u0627\u0644\u062e\u0645\u064a\u0633 \u0627\u0644\u062c\u0645\u0639\u0629 \u0627\u0644\u0633\u0628\u062a".split(" "), 
STANDALONEWEEKDAYS:"\u0627\u0644\u0623\u062d\u062f \u0627\u0644\u0627\u062b\u0646\u064a\u0646 \u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621 \u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621 \u0627\u0644\u062e\u0645\u064a\u0633 \u0627\u0644\u062c\u0645\u0639\u0629 \u0627\u0644\u0633\u0628\u062a".split(" "), SHORTWEEKDAYS:"\u0627\u0644\u0623\u062d\u062f \u0627\u0644\u0627\u062b\u0646\u064a\u0646 \u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621 \u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621 \u0627\u0644\u062e\u0645\u064a\u0633 \u0627\u0644\u062c\u0645\u0639\u0629 \u0627\u0644\u0633\u0628\u062a".split(" "), 
STANDALONESHORTWEEKDAYS:"\u0627\u0644\u0623\u062d\u062f \u0627\u0644\u0627\u062b\u0646\u064a\u0646 \u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621 \u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621 \u0627\u0644\u062e\u0645\u064a\u0633 \u0627\u0644\u062c\u0645\u0639\u0629 \u0627\u0644\u0633\u0628\u062a".split(" "), NARROWWEEKDAYS:"\u062d\u0646\u062b\u0631\u062e\u062c\u0633".split(""), STANDALONENARROWWEEKDAYS:"\u062d\u0646\u062b\u0631\u062e\u062c\u0633".split(""), SHORTQUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", 
"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], QUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], 
AMPMS:["\u0635", "\u0645"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "dd\u200f/MM\u200f/y", "d\u200f/M\u200f/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_bg = {ERAS:["\u043f\u0440. \u043d. \u0435.", "\u043e\u0442 \u043d. \u0435."], ERANAMES:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], NARROWMONTHS:"\u044f\u0444\u043c\u0430\u043c\u044e\u044e\u0430\u0441\u043e\u043d\u0434".split(""), STANDALONENARROWMONTHS:"\u044f\u0444\u043c\u0430\u043c\u044e\u044e\u0430\u0441\u043e\u043d\u0434".split(""), MONTHS:"\u044f\u043d\u0443\u0430\u0440\u0438 \u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438 \u043c\u0430\u0440\u0442 \u0430\u043f\u0440\u0438\u043b \u043c\u0430\u0439 \u044e\u043d\u0438 \u044e\u043b\u0438 \u0430\u0432\u0433\u0443\u0441\u0442 \u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438 \u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438 \u043d\u043e\u0435\u043c\u0432\u0440\u0438 \u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438".split(" "), 
STANDALONEMONTHS:"\u044f\u043d\u0443\u0430\u0440\u0438 \u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438 \u043c\u0430\u0440\u0442 \u0430\u043f\u0440\u0438\u043b \u043c\u0430\u0439 \u044e\u043d\u0438 \u044e\u043b\u0438 \u0430\u0432\u0433\u0443\u0441\u0442 \u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438 \u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438 \u043d\u043e\u0435\u043c\u0432\u0440\u0438 \u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438".split(" "), SHORTMONTHS:"\u044f\u043d. \u0444\u0435\u0432\u0440. \u043c\u0430\u0440\u0442 \u0430\u043f\u0440. \u043c\u0430\u0439 \u044e\u043d\u0438 \u044e\u043b\u0438 \u0430\u0432\u0433. \u0441\u0435\u043f\u0442. \u043e\u043a\u0442. \u043d\u043e\u0435\u043c. \u0434\u0435\u043a.".split(" "), 
STANDALONESHORTMONTHS:"\u044f\u043d. \u0444\u0435\u0432\u0440. \u043c\u0430\u0440\u0442 \u0430\u043f\u0440. \u043c\u0430\u0439 \u044e\u043d\u0438 \u044e\u043b\u0438 \u0430\u0432\u0433. \u0441\u0435\u043f\u0442. \u043e\u043a\u0442. \u043d\u043e\u0435\u043c. \u0434\u0435\u043a.".split(" "), WEEKDAYS:"\u043d\u0435\u0434\u0435\u043b\u044f \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a \u0432\u0442\u043e\u0440\u043d\u0438\u043a \u0441\u0440\u044f\u0434\u0430 \u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a \u043f\u0435\u0442\u044a\u043a \u0441\u044a\u0431\u043e\u0442\u0430".split(" "), 
STANDALONEWEEKDAYS:"\u043d\u0435\u0434\u0435\u043b\u044f \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a \u0432\u0442\u043e\u0440\u043d\u0438\u043a \u0441\u0440\u044f\u0434\u0430 \u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a \u043f\u0435\u0442\u044a\u043a \u0441\u044a\u0431\u043e\u0442\u0430".split(" "), SHORTWEEKDAYS:"\u043d\u0434 \u043f\u043d \u0432\u0442 \u0441\u0440 \u0447\u0442 \u043f\u0442 \u0441\u0431".split(" "), STANDALONESHORTWEEKDAYS:"\u043d\u0434 \u043f\u043d \u0432\u0442 \u0441\u0440 \u0447\u0442 \u043f\u0442 \u0441\u0431".split(" "), 
NARROWWEEKDAYS:"\u043d\u043f\u0432\u0441\u0447\u043f\u0441".split(""), STANDALONENARROWWEEKDAYS:"\u043d\u043f\u0432\u0441\u0447\u043f\u0441".split(""), SHORTQUARTERS:["I \u0442\u0440\u0438\u043c.", "II \u0442\u0440\u0438\u043c.", "III \u0442\u0440\u0438\u043c.", "IV \u0442\u0440\u0438\u043c."], QUARTERS:["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", 
"4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"], AMPMS:["\u043f\u0440. \u043e\u0431.", "\u0441\u043b. \u043e\u0431."], DATEFORMATS:["dd MMMM y, EEEE", "dd MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["\u0996\u09c3\u09b7\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], ERANAMES:["\u0996\u09c3\u09b7\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], NARROWMONTHS:"\u099c\u09be \u09ab\u09c7 \u09ae\u09be \u098f \u09ae\u09c7 \u099c\u09c1\u09a8 \u099c\u09c1 \u0986 \u09b8\u09c7 \u0985 \u09a8 \u09a1\u09bf".split(" "), STANDALONENARROWMONTHS:"\u099c\u09be \u09ab\u09c7 \u09ae\u09be \u098f \u09ae\u09c7 \u099c\u09c1\u09a8 \u099c\u09c1 \u0986 \u09b8\u09c7 \u0985 \u09a8 \u09a1\u09bf".split(" "), 
MONTHS:"\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0 \u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0 \u09ae\u09be\u09b0\u09cd\u099a \u098f\u09aa\u09cd\u09b0\u09bf\u09b2 \u09ae\u09c7 \u099c\u09c1\u09a8 \u099c\u09c1\u09b2\u09be\u0987 \u0986\u0997\u09b8\u09cd\u099f \u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0 \u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0 \u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0 \u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0".split(" "), 
STANDALONEMONTHS:"\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0 \u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0 \u09ae\u09be\u09b0\u09cd\u099a \u098f\u09aa\u09cd\u09b0\u09bf\u09b2 \u09ae\u09c7 \u099c\u09c1\u09a8 \u099c\u09c1\u09b2\u09be\u0987 \u0986\u0997\u09b8\u09cd\u099f \u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0 \u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0 \u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0 \u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0".split(" "), 
SHORTMONTHS:"\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0 \u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0 \u09ae\u09be\u09b0\u09cd\u099a \u098f\u09aa\u09cd\u09b0\u09bf\u09b2 \u09ae\u09c7 \u099c\u09c1\u09a8 \u099c\u09c1\u09b2\u09be\u0987 \u0986\u0997\u09b8\u09cd\u099f \u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0 \u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0 \u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0 \u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0".split(" "), 
STANDALONESHORTMONTHS:"\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0 \u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0 \u09ae\u09be\u09b0\u09cd\u099a \u098f\u09aa\u09cd\u09b0\u09bf\u09b2 \u09ae\u09c7 \u099c\u09c1\u09a8 \u099c\u09c1\u09b2\u09be\u0987 \u0986\u0997\u09b8\u09cd\u099f \u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0 \u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0 \u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0 \u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0".split(" "), 
WEEKDAYS:"\u09b0\u09ac\u09bf\u09ac\u09be\u09b0 \u09b8\u09cb\u09ae\u09ac\u09be\u09b0 \u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0 \u09ac\u09c1\u09a7\u09ac\u09be\u09b0 \u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0 \u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0 \u09b6\u09a8\u09bf\u09ac\u09be\u09b0".split(" "), STANDALONEWEEKDAYS:"\u09b0\u09ac\u09bf\u09ac\u09be\u09b0 \u09b8\u09cb\u09ae\u09ac\u09be\u09b0 \u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0 \u09ac\u09c1\u09a7\u09ac\u09be\u09b0 \u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0 \u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0 \u09b6\u09a8\u09bf\u09ac\u09be\u09b0".split(" "), 
SHORTWEEKDAYS:"\u09b0\u09ac\u09bf \u09b8\u09cb\u09ae \u09ae\u0999\u09cd\u0997\u09b2 \u09ac\u09c1\u09a7 \u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf \u09b6\u09c1\u0995\u09cd\u09b0 \u09b6\u09a8\u09bf".split(" "), STANDALONESHORTWEEKDAYS:"\u09b0\u09ac\u09bf \u09b8\u09cb\u09ae \u09ae\u0999\u09cd\u0997\u09b2 \u09ac\u09c1\u09a7 \u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf \u09b6\u09c1\u0995\u09cd\u09b0 \u09b6\u09a8\u09bf".split(" "), NARROWWEEKDAYS:"\u09b0 \u09b8\u09cb \u09ae \u09ac\u09c1 \u09ac\u09c3 \u09b6\u09c1 \u09b6".split(" "), 
STANDALONENARROWWEEKDAYS:"\u09b0 \u09b8\u09cb \u09ae \u09ac\u09c1 \u09ac\u09c3 \u09b6\u09c1 \u09b6".split(" "), SHORTQUARTERS:["\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e7", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e8", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e9", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09ea"], QUARTERS:["\u09aa\u09cd\u09b0\u09a5\u09ae \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", 
"\u09a4\u09c3\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5 \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_br = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"Genver C\u02bchwevrer Meurzh Ebrel Mae Mezheven Gouere Eost Gwengolo Here Du Kerzu".split(" "), STANDALONEMONTHS:"Genver C\u02bchwevrer Meurzh Ebrel Mae Mezheven Gouere Eost Gwengolo Here Du Kerzu".split(" "), SHORTMONTHS:"Gen C\u02bchwe Meur Ebr Mae Mezh Goue Eost Gwen Here Du Ker".split(" "), STANDALONESHORTMONTHS:"Gen C\u02bchwe Meur Ebr Mae Mezh Goue Eost Gwen Here Du Ker".split(" "), 
WEEKDAYS:"Sul Lun Meurzh Merc\u02bcher Yaou Gwener Sadorn".split(" "), STANDALONEWEEKDAYS:"Sul Lun Meurzh Merc\u02bcher Yaou Gwener Sadorn".split(" "), SHORTWEEKDAYS:"sul lun meu. mer. yaou gwe. sad.".split(" "), STANDALONESHORTWEEKDAYS:"sul lun meu. mer. yaou gwe. sad.".split(" "), NARROWWEEKDAYS:"su lu mz mc ya gw sa".split(" "), STANDALONENARROWWEEKDAYS:"su lu mz mc ya gw sa".split(" "), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["y MMMM d, EEEE", 
"y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "despr\u00e9s de Crist"], NARROWMONTHS:"GFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"gfmamjjasond".split(""), MONTHS:"de gener;de febrer;de mar\u00e7;d\u2019abril;de maig;de juny;de juliol;d\u2019agost;de setembre;d\u2019octubre;de novembre;de desembre".split(";"), STANDALONEMONTHS:"gener febrer mar\u00e7 abril maig juny juliol agost setembre octubre novembre desembre".split(" "), SHORTMONTHS:"de gen.;de febr.;de mar\u00e7;d\u2019abr.;de maig;de juny;de jul.;d\u2019ag.;de set.;d\u2019oct.;de nov.;de des.".split(";"), 
STANDALONESHORTMONTHS:"gen. febr. mar\u00e7 abr. maig juny jul. ag. set. oct. nov. des.".split(" "), WEEKDAYS:"diumenge dilluns dimarts dimecres dijous divendres dissabte".split(" "), STANDALONEWEEKDAYS:"Diumenge Dilluns Dimarts Dimecres Dijous Divendres Dissabte".split(" "), SHORTWEEKDAYS:"dg. dl. dt. dc. dj. dv. ds.".split(" "), STANDALONESHORTWEEKDAYS:"dg dl dt dc dj dv ds".split(" "), NARROWWEEKDAYS:"dg dl dt dc dj dv ds".split(" "), STANDALONENARROWWEEKDAYS:"dg dl dt dc dj dv ds".split(" "), 
SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM 'de' y", "d MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["\u13a4\u13d3\u13b7\u13b8", "\u13a4\u13b6\u13d0\u13c5"], ERANAMES:["\u13cf \u13e5\u13cc \u13be\u13d5\u13b2\u13cd\u13ac\u13be", "\u13a0\u13a9\u13c3\u13ae\u13b5\u13d3\u13cd\u13d7\u13f1 \u13a0\u13d5\u13d8\u13f1\u13cd\u13ac \u13f1\u13b0\u13e9 \u13e7\u13d3\u13c2\u13b8\u13a2\u13cd\u13d7"], NARROWMONTHS:"\u13a4\u13a7\u13a0\u13a7\u13a0\u13d5\u13ab\u13a6\u13da\u13da\u13c5\u13a4".split(""), STANDALONENARROWMONTHS:"\u13a4\u13a7\u13a0\u13a7\u13a0\u13d5\u13ab\u13a6\u13da\u13da\u13c5\u13a4".split(""), 
MONTHS:"\u13a4\u13c3\u13b8\u13d4\u13c5 \u13a7\u13a6\u13b5 \u13a0\u13c5\u13f1 \u13a7\u13ec\u13c2 \u13a0\u13c2\u13cd\u13ac\u13d8 \u13d5\u13ad\u13b7\u13f1 \u13ab\u13f0\u13c9\u13c2 \u13a6\u13b6\u13c2 \u13da\u13b5\u13cd\u13d7 \u13da\u13c2\u13c5\u13d7 \u13c5\u13d3\u13d5\u13c6 \u13a4\u13cd\u13a9\u13f1".split(" "), STANDALONEMONTHS:"\u13a4\u13c3\u13b8\u13d4\u13c5 \u13a7\u13a6\u13b5 \u13a0\u13c5\u13f1 \u13a7\u13ec\u13c2 \u13a0\u13c2\u13cd\u13ac\u13d8 \u13d5\u13ad\u13b7\u13f1 \u13ab\u13f0\u13c9\u13c2 \u13a6\u13b6\u13c2 \u13da\u13b5\u13cd\u13d7 \u13da\u13c2\u13c5\u13d7 \u13c5\u13d3\u13d5\u13c6 \u13a4\u13cd\u13a9\u13f1".split(" "), 
SHORTMONTHS:"\u13a4\u13c3 \u13a7\u13a6 \u13a0\u13c5 \u13a7\u13ec \u13a0\u13c2 \u13d5\u13ad \u13ab\u13f0 \u13a6\u13b6 \u13da\u13b5 \u13da\u13c2 \u13c5\u13d3 \u13a4\u13cd".split(" "), STANDALONESHORTMONTHS:"\u13a4\u13c3 \u13a7\u13a6 \u13a0\u13c5 \u13a7\u13ec \u13a0\u13c2 \u13d5\u13ad \u13ab\u13f0 \u13a6\u13b6 \u13da\u13b5 \u13da\u13c2 \u13c5\u13d3 \u13a4\u13cd".split(" "), WEEKDAYS:"\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac \u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af \u13d4\u13b5\u13c1\u13a2\u13a6 \u13e6\u13a2\u13c1\u13a2\u13a6 \u13c5\u13a9\u13c1\u13a2\u13a6 \u13e7\u13be\u13a9\u13b6\u13cd\u13d7 \u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be".split(" "), 
STANDALONEWEEKDAYS:"\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac \u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af \u13d4\u13b5\u13c1\u13a2\u13a6 \u13e6\u13a2\u13c1\u13a2\u13a6 \u13c5\u13a9\u13c1\u13a2\u13a6 \u13e7\u13be\u13a9\u13b6\u13cd\u13d7 \u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be".split(" "), SHORTWEEKDAYS:"\u13c6\u13cd\u13ac \u13c9\u13c5\u13af \u13d4\u13b5\u13c1 \u13e6\u13a2\u13c1 \u13c5\u13a9\u13c1 \u13e7\u13be\u13a9 \u13c8\u13d5\u13be".split(" "), STANDALONESHORTWEEKDAYS:"\u13c6\u13cd\u13ac \u13c9\u13c5\u13af \u13d4\u13b5\u13c1 \u13e6\u13a2\u13c1 \u13c5\u13a9\u13c1 \u13e7\u13be\u13a9 \u13c8\u13d5\u13be".split(" "), 
NARROWWEEKDAYS:"\u13c6\u13c9\u13d4\u13e6\u13c5\u13e7\u13a4".split(""), STANDALONENARROWWEEKDAYS:"\u13c6\u13c9\u13d4\u13e6\u13c5\u13e7\u13a4".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["\u13cc\u13be\u13b4", "\u13d2\u13af\u13f1\u13a2\u13d7\u13e2"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_cs = {ERAS:["p\u0159. n. l.", "n. l."], ERANAMES:["p\u0159. n. l.", "n. l."], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"l\u00fabdk\u010d\u010dsz\u0159lp".split(""), MONTHS:"ledna \u00fanora b\u0159ezna dubna kv\u011btna \u010dervna \u010dervence srpna z\u00e1\u0159\u00ed \u0159\u00edjna listopadu prosince".split(" "), STANDALONEMONTHS:"leden \u00fanor b\u0159ezen duben kv\u011bten \u010derven \u010dervenec srpen z\u00e1\u0159\u00ed \u0159\u00edjen listopad prosinec".split(" "), 
SHORTMONTHS:"led \u00fano b\u0159e dub kv\u011b \u010dvn \u010dvc srp z\u00e1\u0159 \u0159\u00edj lis pro".split(" "), STANDALONESHORTMONTHS:"led \u00fano b\u0159e dub kv\u011b \u010dvn \u010dvc srp z\u00e1\u0159 \u0159\u00edj lis pro".split(" "), WEEKDAYS:"ned\u011ble pond\u011bl\u00ed \u00fater\u00fd st\u0159eda \u010dtvrtek p\u00e1tek sobota".split(" "), STANDALONEWEEKDAYS:"ned\u011ble pond\u011bl\u00ed \u00fater\u00fd st\u0159eda \u010dtvrtek p\u00e1tek sobota".split(" "), SHORTWEEKDAYS:"ne po \u00fat st \u010dt p\u00e1 so".split(" "), 
STANDALONESHORTWEEKDAYS:"ne po \u00fat st \u010dt p\u00e1 so".split(" "), NARROWWEEKDAYS:"NP\u00daS\u010cPS".split(""), STANDALONENARROWWEEKDAYS:"NP\u00daS\u010cPS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010dtvrtlet\u00ed", "2. \u010dtvrtlet\u00ed", "3. \u010dtvrtlet\u00ed", "4. \u010dtvrtlet\u00ed"], AMPMS:["dop.", "odp."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. M. y", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:"I Ch M E M M G A M H T Rh".split(" "), STANDALONENARROWMONTHS:"I Ch M E M M G A M H T Rh".split(" "), MONTHS:"Ionawr Chwefror Mawrth Ebrill Mai Mehefin Gorffennaf Awst Medi Hydref Tachwedd Rhagfyr".split(" "), STANDALONEMONTHS:"Ionawr Chwefror Mawrth Ebrill Mai Mehefin Gorffennaf Awst Medi Hydref Tachwedd Rhagfyr".split(" "), SHORTMONTHS:"Ion Chwef Mawrth Ebrill Mai Meh Gorff Awst Medi Hyd Tach Rhag".split(" "), 
STANDALONESHORTMONTHS:"Ion Chw Maw Ebr Mai Meh Gor Awst Medi Hyd Tach Rhag".split(" "), WEEKDAYS:"Dydd Sul;Dydd Llun;Dydd Mawrth;Dydd Mercher;Dydd Iau;Dydd Gwener;Dydd Sadwrn".split(";"), STANDALONEWEEKDAYS:"Dydd Sul;Dydd Llun;Dydd Mawrth;Dydd Mercher;Dydd Iau;Dydd Gwener;Dydd Sadwrn".split(";"), SHORTWEEKDAYS:"Sul Llun Maw Mer Iau Gwen Sad".split(" "), STANDALONESHORTWEEKDAYS:"Sul Llun Maw Mer Iau Gwe Sad".split(" "), NARROWWEEKDAYS:"S Ll M M I G S".split(" "), STANDALONENARROWWEEKDAYS:"S Ll M M I G S".split(" "), 
SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["Chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"januar februar marts april maj juni juli august september oktober november december".split(" "), STANDALONEMONTHS:"januar februar marts april maj juni juli august september oktober november december".split(" "), SHORTMONTHS:"jan. feb. mar. apr. maj jun. jul. aug. sep. okt. nov. dec.".split(" "), STANDALONESHORTMONTHS:"jan feb mar apr maj jun jul aug sep okt nov dec".split(" "), 
WEEKDAYS:"s\u00f8ndag mandag tirsdag onsdag torsdag fredag l\u00f8rdag".split(" "), STANDALONEWEEKDAYS:"s\u00f8ndag mandag tirsdag onsdag torsdag fredag l\u00f8rdag".split(" "), SHORTWEEKDAYS:"s\u00f8n. man. tir. ons. tor. fre. l\u00f8r.".split(" "), STANDALONESHORTWEEKDAYS:"s\u00f8n man tir ons tor fre l\u00f8r".split(" "), NARROWWEEKDAYS:"SMTOTFL".split(""), STANDALONENARROWWEEKDAYS:"SMTOTFL".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", 
"4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMM y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"Januar Februar M\u00e4rz April Mai Juni Juli August September Oktober November Dezember".split(" "), STANDALONEMONTHS:"Januar Februar M\u00e4rz April Mai Juni Juli August September Oktober November Dezember".split(" "), SHORTMONTHS:"Jan. Feb. M\u00e4r. Apr. Mai Juni Juli Aug. Sep. Okt. Nov. Dez.".split(" "), STANDALONESHORTMONTHS:"Jan Feb M\u00e4r Apr Mai Jun Jul Aug Sep Okt Nov Dez".split(" "), 
WEEKDAYS:"Sonntag Montag Dienstag Mittwoch Donnerstag Freitag Samstag".split(" "), STANDALONEWEEKDAYS:"Sonntag Montag Dienstag Mittwoch Donnerstag Freitag Samstag".split(" "), SHORTWEEKDAYS:"So. Mo. Di. Mi. Do. Fr. Sa.".split(" "), STANDALONESHORTWEEKDAYS:"So Mo Di Mi Do Fr Sa".split(" "), NARROWWEEKDAYS:"SMDMDFS".split(""), STANDALONENARROWWEEKDAYS:"SMDMDFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], 
DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"J\u00e4nner Februar M\u00e4rz April Mai Juni Juli August September Oktober November Dezember".split(" "), STANDALONEMONTHS:"Januar Februar M\u00e4rz April Mai Juni Juli August September Oktober November Dezember".split(" "), SHORTMONTHS:"J\u00e4n Feb. M\u00e4r. Apr. Mai Juni Juli Aug. Sep. Okt. Nov. Dez.".split(" "), 
STANDALONESHORTMONTHS:"J\u00e4n Feb M\u00e4r Apr Mai Jun Jul Aug Sep Okt Nov Dez".split(" "), WEEKDAYS:"Sonntag Montag Dienstag Mittwoch Donnerstag Freitag Samstag".split(" "), STANDALONEWEEKDAYS:"Sonntag Montag Dienstag Mittwoch Donnerstag Freitag Samstag".split(" "), SHORTWEEKDAYS:"So. Mo. Di. Mi. Do. Fr. Sa.".split(" "), STANDALONESHORTWEEKDAYS:"So Mo Di Mi Do Fr Sa".split(" "), NARROWWEEKDAYS:"SMDMDFS".split(""), STANDALONENARROWWEEKDAYS:"SMDMDFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], 
QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["\u03c0.\u03a7.", "\u03bc.\u03a7."], ERANAMES:["\u03c0.\u03a7.", "\u03bc.\u03a7."], NARROWMONTHS:"\u0399\u03a6\u039c\u0391\u039c\u0399\u0399\u0391\u03a3\u039f\u039d\u0394".split(""), STANDALONENARROWMONTHS:"\u0399\u03a6\u039c\u0391\u039c\u0399\u0399\u0391\u03a3\u039f\u039d\u0394".split(""), MONTHS:"\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5 \u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5 \u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5 \u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5 \u039c\u03b1\u0390\u03bf\u03c5 \u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5 \u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5 \u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5 \u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5 \u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5 \u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5 \u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5".split(" "), 
STANDALONEMONTHS:"\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2 \u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2 \u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2 \u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2 \u039c\u03ac\u03b9\u03bf\u03c2 \u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2 \u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2 \u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2 \u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2 \u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2 \u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2 \u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2".split(" "), 
SHORTMONTHS:"\u0399\u03b1\u03bd \u03a6\u03b5\u03b2 \u039c\u03b1\u03c1 \u0391\u03c0\u03c1 \u039c\u03b1\u03ca \u0399\u03bf\u03c5\u03bd \u0399\u03bf\u03c5\u03bb \u0391\u03c5\u03b3 \u03a3\u03b5\u03c0 \u039f\u03ba\u03c4 \u039d\u03bf\u03b5 \u0394\u03b5\u03ba".split(" "), STANDALONESHORTMONTHS:"\u0399\u03b1\u03bd \u03a6\u03b5\u03b2 \u039c\u03ac\u03c1 \u0391\u03c0\u03c1 \u039c\u03ac\u03b9 \u0399\u03bf\u03cd\u03bd \u0399\u03bf\u03cd\u03bb \u0391\u03cd\u03b3 \u03a3\u03b5\u03c0 \u039f\u03ba\u03c4 \u039d\u03bf\u03ad \u0394\u03b5\u03ba".split(" "), 
WEEKDAYS:"\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae \u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1 \u03a4\u03c1\u03af\u03c4\u03b7 \u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7 \u03a0\u03ad\u03bc\u03c0\u03c4\u03b7 \u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf".split(" "), STANDALONEWEEKDAYS:"\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae \u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1 \u03a4\u03c1\u03af\u03c4\u03b7 \u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7 \u03a0\u03ad\u03bc\u03c0\u03c4\u03b7 \u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf".split(" "), 
SHORTWEEKDAYS:"\u039a\u03c5\u03c1 \u0394\u03b5\u03c5 \u03a4\u03c1\u03af \u03a4\u03b5\u03c4 \u03a0\u03ad\u03bc \u03a0\u03b1\u03c1 \u03a3\u03ac\u03b2".split(" "), STANDALONESHORTWEEKDAYS:"\u039a\u03c5\u03c1 \u0394\u03b5\u03c5 \u03a4\u03c1\u03af \u03a4\u03b5\u03c4 \u03a0\u03ad\u03bc \u03a0\u03b1\u03c1 \u03a3\u03ac\u03b2".split(" "), NARROWWEEKDAYS:"\u039a\u0394\u03a4\u03a4\u03a0\u03a0\u03a3".split(""), STANDALONENARROWWEEKDAYS:"\u039a\u0394\u03a4\u03a4\u03a0\u03a0\u03a3".split(""), SHORTQUARTERS:["\u03a41", 
"\u03a42", "\u03a43", "\u03a44"], QUARTERS:["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"], AMPMS:["\u03c0.\u03bc.", "\u03bc.\u03bc."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} - {0}", "{1} - {0}", "{1} - {0}", "{1} - {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"January February March April May June July August September October November December".split(" "), STANDALONEMONTHS:"January February March April May June July August September October November December".split(" "), SHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
WEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), STANDALONEWEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), STANDALONESHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"January February March April May June July August September October November December".split(" "), STANDALONEMONTHS:"January February March April May June July August September October November December".split(" "), SHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
WEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), STANDALONEWEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), STANDALONESHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd/MM/y", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"January February March April May June July August September October November December".split(" "), STANDALONEMONTHS:"January February March April May June July August September October November December".split(" "), SHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
WEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), STANDALONEWEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), STANDALONESHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["am", "pm"], 
DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"January February March April May June July August September October November December".split(" "), STANDALONEMONTHS:"January February March April May June July August September October November December".split(" "), SHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
WEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), STANDALONEWEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), STANDALONESHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], 
DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"January February March April May June July August September October November December".split(" "), STANDALONEMONTHS:"January February March April May June July August September October November December".split(" "), SHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
WEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), STANDALONEWEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), STANDALONESHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"January February March April May June July August September October November December".split(" "), STANDALONEMONTHS:"January February March April May June July August September October November December".split(" "), SHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
WEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), STANDALONEWEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), STANDALONESHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"January February March April May June July August September October November December".split(" "), STANDALONEMONTHS:"January February March April May June July August September October November December".split(" "), SHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
WEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), STANDALONEWEEKDAYS:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), STANDALONESHORTWEEKDAYS:"Sun Mon Tue Wed Thu Fri Sat".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y/MM/dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:"EFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"EFMAMJJASOND".split(""), MONTHS:"enero febrero marzo abril mayo junio julio agosto septiembre octubre noviembre diciembre".split(" "), STANDALONEMONTHS:"enero febrero marzo abril mayo junio julio agosto septiembre octubre noviembre diciembre".split(" "), SHORTMONTHS:"ene feb mar abr may jun jul ago sep oct nov dic".split(" "), STANDALONESHORTMONTHS:"ene feb mar abr mayo jun jul ago sep oct nov dic".split(" "), 
WEEKDAYS:"domingo lunes martes mi\u00e9rcoles jueves viernes s\u00e1bado".split(" "), STANDALONEWEEKDAYS:"domingo lunes martes mi\u00e9rcoles jueves viernes s\u00e1bado".split(" "), SHORTWEEKDAYS:"dom lun mar mi\u00e9 jue vie s\u00e1b".split(" "), STANDALONESHORTWEEKDAYS:"dom lun mar mi\u00e9 jue vie s\u00e1b".split(" "), NARROWWEEKDAYS:"DLMXJVS".split(""), STANDALONENARROWWEEKDAYS:"DLMXJVS".split(""), SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2\u00ba trimestre", "3er trimestre", 
"4\u00ba trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_419 = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:"EFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"EFMAMJJASOND".split(""), MONTHS:"enero febrero marzo abril mayo junio julio agosto septiembre octubre noviembre diciembre".split(" "), STANDALONEMONTHS:"enero febrero marzo abril mayo junio julio agosto septiembre octubre noviembre diciembre".split(" "), SHORTMONTHS:"ene feb mar abr may jun jul ago sep oct nov dic".split(" "), 
STANDALONESHORTMONTHS:"ene feb mar abr mayo jun jul ago sep oct nov dic".split(" "), WEEKDAYS:"domingo lunes martes mi\u00e9rcoles jueves viernes s\u00e1bado".split(" "), STANDALONEWEEKDAYS:"domingo lunes martes mi\u00e9rcoles jueves viernes s\u00e1bado".split(" "), SHORTWEEKDAYS:"dom lun mar mi\u00e9 jue vie s\u00e1b".split(" "), STANDALONESHORTWEEKDAYS:"dom lun mar mi\u00e9 jue vie s\u00e1b".split(" "), NARROWWEEKDAYS:"DLMMJVS".split(""), STANDALONENARROWWEEKDAYS:"DLMMJVS".split(""), SHORTQUARTERS:["T1", 
"T2", "T3", "T4"], QUARTERS:["1er trimestre", "2\u00ba trimestre", "3er trimestre", "4\u00ba trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_ES = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_et = {ERAS:["e.m.a.", "m.a.j."], ERANAMES:["enne meie aega", "meie aja j\u00e4rgi"], NARROWMONTHS:"JVMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JVMAMJJASOND".split(""), MONTHS:"jaanuar veebruar m\u00e4rts aprill mai juuni juuli august september oktoober november detsember".split(" "), STANDALONEMONTHS:"jaanuar veebruar m\u00e4rts aprill mai juuni juuli august september oktoober november detsember".split(" "), SHORTMONTHS:"jaan veebr m\u00e4rts apr mai juuni juuli aug sept okt nov dets".split(" "), 
STANDALONESHORTMONTHS:"jaan veebr m\u00e4rts apr mai juuni juuli aug sept okt nov dets".split(" "), WEEKDAYS:"p\u00fchap\u00e4ev esmasp\u00e4ev teisip\u00e4ev kolmap\u00e4ev neljap\u00e4ev reede laup\u00e4ev".split(" "), STANDALONEWEEKDAYS:"p\u00fchap\u00e4ev esmasp\u00e4ev teisip\u00e4ev kolmap\u00e4ev neljap\u00e4ev reede laup\u00e4ev".split(" "), SHORTWEEKDAYS:"PETKNRL".split(""), STANDALONESHORTWEEKDAYS:"PETKNRL".split(""), NARROWWEEKDAYS:"PETKNRL".split(""), STANDALONENARROWWEEKDAYS:"PETKNRL".split(""), 
SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["H:mm.ss zzzz", "H:mm.ss z", "H:mm.ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "K.o."], NARROWMONTHS:"UOMAMEUAIUAA".split(""), STANDALONENARROWMONTHS:"UOMAMEUAIUAA".split(""), MONTHS:"urtarrila otsaila martxoa apirila maiatza ekaina uztaila abuztua iraila urria azaroa abendua".split(" "), STANDALONEMONTHS:"urtarrila otsaila martxoa apirila maiatza ekaina uztaila abuztua iraila urria azaroa abendua".split(" "), SHORTMONTHS:"urt ots mar api mai eka uzt abu ira urr aza abe".split(" "), STANDALONESHORTMONTHS:"urt ots mar api mai eka uzt abu ira urr aza abe".split(" "), 
WEEKDAYS:"igandea astelehena asteartea asteazkena osteguna ostirala larunbata".split(" "), STANDALONEWEEKDAYS:"igandea astelehena asteartea asteazkena osteguna ostirala larunbata".split(" "), SHORTWEEKDAYS:"ig al as az og or lr".split(" "), STANDALONESHORTWEEKDAYS:"ig al as az og or lr".split(" "), NARROWWEEKDAYS:"IMAAAOI".split(""), STANDALONENARROWWEEKDAYS:"IMALAOI".split(""), SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], 
AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["\u0642.\u0645.", "\u0645."], ERANAMES:["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0645\u06cc\u0644\u0627\u062f\u06cc"], NARROWMONTHS:"\u0698\u0641\u0645\u0622\u0645\u0698\u0698\u0627\u0633\u0627\u0646\u062f".split(""), STANDALONENARROWMONTHS:"\u0698\u0641\u0645\u0622\u0645\u0698\u0698\u0627\u0633\u0627\u0646\u062f".split(""), MONTHS:"\u0698\u0627\u0646\u0648\u06cc\u0647\u0654 \u0641\u0648\u0631\u06cc\u0647\u0654 \u0645\u0627\u0631\u0633 \u0622\u0648\u0631\u06cc\u0644 \u0645\u0647\u0654 \u0698\u0648\u0626\u0646 \u0698\u0648\u0626\u06cc\u0647\u0654 \u0627\u0648\u062a \u0633\u067e\u062a\u0627\u0645\u0628\u0631 \u0627\u06a9\u062a\u0628\u0631 \u0646\u0648\u0627\u0645\u0628\u0631 \u062f\u0633\u0627\u0645\u0628\u0631".split(" "), 
STANDALONEMONTHS:"\u0698\u0627\u0646\u0648\u06cc\u0647 \u0641\u0648\u0631\u06cc\u0647 \u0645\u0627\u0631\u0633 \u0622\u0648\u0631\u06cc\u0644 \u0645\u0647 \u0698\u0648\u0626\u0646 \u0698\u0648\u0626\u06cc\u0647 \u0627\u0648\u062a \u0633\u067e\u062a\u0627\u0645\u0628\u0631 \u0627\u06a9\u062a\u0628\u0631 \u0646\u0648\u0627\u0645\u0628\u0631 \u062f\u0633\u0627\u0645\u0628\u0631".split(" "), SHORTMONTHS:"\u0698\u0627\u0646\u0648\u06cc\u0647\u0654 \u0641\u0648\u0631\u06cc\u0647\u0654 \u0645\u0627\u0631\u0633 \u0622\u0648\u0631\u06cc\u0644 \u0645\u0647\u0654 \u0698\u0648\u0626\u0646 \u0698\u0648\u0626\u06cc\u0647\u0654 \u0627\u0648\u062a \u0633\u067e\u062a\u0627\u0645\u0628\u0631 \u0627\u06a9\u062a\u0628\u0631 \u0646\u0648\u0627\u0645\u0628\u0631 \u062f\u0633\u0627\u0645\u0628\u0631".split(" "), 
STANDALONESHORTMONTHS:"\u0698\u0627\u0646\u0648\u06cc\u0647 \u0641\u0648\u0631\u06cc\u0647 \u0645\u0627\u0631\u0633 \u0622\u0648\u0631\u06cc\u0644 \u0645\u0647 \u0698\u0648\u0626\u0646 \u0698\u0648\u0626\u06cc\u0647 \u0627\u0648\u062a \u0633\u067e\u062a\u0627\u0645\u0628\u0631 \u0627\u06a9\u062a\u0628\u0631 \u0646\u0648\u0627\u0645\u0628\u0631 \u062f\u0633\u0627\u0645\u0628\u0631".split(" "), WEEKDAYS:"\u06cc\u06a9\u0634\u0646\u0628\u0647 \u062f\u0648\u0634\u0646\u0628\u0647 \u0633\u0647\u200c\u0634\u0646\u0628\u0647 \u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647 \u067e\u0646\u062c\u0634\u0646\u0628\u0647 \u062c\u0645\u0639\u0647 \u0634\u0646\u0628\u0647".split(" "), 
STANDALONEWEEKDAYS:"\u06cc\u06a9\u0634\u0646\u0628\u0647 \u062f\u0648\u0634\u0646\u0628\u0647 \u0633\u0647\u200c\u0634\u0646\u0628\u0647 \u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647 \u067e\u0646\u062c\u0634\u0646\u0628\u0647 \u062c\u0645\u0639\u0647 \u0634\u0646\u0628\u0647".split(" "), SHORTWEEKDAYS:"\u06cc\u06a9\u0634\u0646\u0628\u0647 \u062f\u0648\u0634\u0646\u0628\u0647 \u0633\u0647\u200c\u0634\u0646\u0628\u0647 \u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647 \u067e\u0646\u062c\u0634\u0646\u0628\u0647 \u062c\u0645\u0639\u0647 \u0634\u0646\u0628\u0647".split(" "), 
STANDALONESHORTWEEKDAYS:"\u06cc\u06a9\u0634\u0646\u0628\u0647 \u062f\u0648\u0634\u0646\u0628\u0647 \u0633\u0647\u200c\u0634\u0646\u0628\u0647 \u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647 \u067e\u0646\u062c\u0634\u0646\u0628\u0647 \u062c\u0645\u0639\u0647 \u0634\u0646\u0628\u0647".split(" "), NARROWWEEKDAYS:"\u06cc\u062f\u0633\u0686\u067e\u062c\u0634".split(""), STANDALONENARROWWEEKDAYS:"\u06cc\u062f\u0633\u0686\u067e\u062c\u0634".split(""), SHORTQUARTERS:["\u0633\u200c\u0645\u06f1", "\u0633\u200c\u0645\u06f2", 
"\u0633\u200c\u0645\u06f3", "\u0633\u200c\u0645\u06f4"], QUARTERS:["\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0627\u0648\u0644", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u062f\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0633\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0686\u0647\u0627\u0631\u0645"], AMPMS:["\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631", "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631"], DATEFORMATS:["EEEE d MMMM y", 
"d MMMM y", "d MMM y", "y/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c\u200f {0}", "{1}\u060c\u200f {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[3, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntym\u00e4\u00e4", "j\u00e4lkeen Kristuksen syntym\u00e4n"], NARROWMONTHS:"THMHTKHESLMJ".split(""), STANDALONENARROWMONTHS:"THMHTKHESLMJ".split(""), MONTHS:"tammikuuta helmikuuta maaliskuuta huhtikuuta toukokuuta kes\u00e4kuuta hein\u00e4kuuta elokuuta syyskuuta lokakuuta marraskuuta joulukuuta".split(" "), STANDALONEMONTHS:"tammikuu helmikuu maaliskuu huhtikuu toukokuu kes\u00e4kuu hein\u00e4kuu elokuu syyskuu lokakuu marraskuu joulukuu".split(" "), 
SHORTMONTHS:"tammikuuta helmikuuta maaliskuuta huhtikuuta toukokuuta kes\u00e4kuuta hein\u00e4kuuta elokuuta syyskuuta lokakuuta marraskuuta joulukuuta".split(" "), STANDALONESHORTMONTHS:"tammi helmi maalis huhti touko kes\u00e4 hein\u00e4 elo syys loka marras joulu".split(" "), WEEKDAYS:"sunnuntaina maanantaina tiistaina keskiviikkona torstaina perjantaina lauantaina".split(" "), STANDALONEWEEKDAYS:"sunnuntai maanantai tiistai keskiviikko torstai perjantai lauantai".split(" "), SHORTWEEKDAYS:"su ma ti ke to pe la".split(" "), 
STANDALONESHORTWEEKDAYS:"su ma ti ke to pe la".split(" "), NARROWWEEKDAYS:"SMTKTPL".split(""), STANDALONENARROWWEEKDAYS:"SMTKTPL".split(""), SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. nelj\u00e4nnes", "2. nelj\u00e4nnes", "3. nelj\u00e4nnes", "4. nelj\u00e4nnes"], AMPMS:["ap.", "ip."], DATEFORMATS:["cccc d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:"EPMAMHHASOND".split(""), STANDALONENARROWMONTHS:"EPMAMHHASOND".split(""), MONTHS:"Enero Pebrero Marso Abril Mayo Hunyo Hulyo Agosto Setyembre Oktubre Nobyembre Disyembre".split(" "), STANDALONEMONTHS:"Enero Pebrero Marso Abril Mayo Hunyo Hulyo Agosto Setyembre Oktubre Nobyembre Disyembre".split(" "), SHORTMONTHS:"Ene Peb Mar Abr May Hun Hul Ago Set Okt Nob Dis".split(" "), STANDALONESHORTMONTHS:"Ene Peb Mar Abr May Hun Hul Ago Set Okt Nob Dis".split(" "), 
WEEKDAYS:"Linggo Lunes Martes Miyerkules Huwebes Biyernes Sabado".split(" "), STANDALONEWEEKDAYS:"Linggo Lunes Martes Miyerkules Huwebes Biyernes Sabado".split(" "), SHORTWEEKDAYS:"Lin Lun Mar Mye Huw Bye Sab".split(" "), STANDALONESHORTWEEKDAYS:"Lin Lun Mar Miy Huw Biy Sab".split(" "), NARROWWEEKDAYS:"LLMMHBS".split(""), STANDALONENARROWWEEKDAYS:"LLMMHBS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 sangkapat", "ika-2 sangkapat", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", 
"PM"], DATEFORMATS:["EEEE, MMMM dd y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"janvier f\u00e9vrier mars avril mai juin juillet ao\u00fbt septembre octobre novembre d\u00e9cembre".split(" "), STANDALONEMONTHS:"janvier f\u00e9vrier mars avril mai juin juillet ao\u00fbt septembre octobre novembre d\u00e9cembre".split(" "), SHORTMONTHS:"janv. f\u00e9vr. mars avr. mai juin juil. ao\u00fbt sept. oct. nov. d\u00e9c.".split(" "), 
STANDALONESHORTMONTHS:"janv. f\u00e9vr. mars avr. mai juin juil. ao\u00fbt sept. oct. nov. d\u00e9c.".split(" "), WEEKDAYS:"dimanche lundi mardi mercredi jeudi vendredi samedi".split(" "), STANDALONEWEEKDAYS:"dimanche lundi mardi mercredi jeudi vendredi samedi".split(" "), SHORTWEEKDAYS:"dim. lun. mar. mer. jeu. ven. sam.".split(" "), STANDALONESHORTWEEKDAYS:"dim. lun. mar. mer. jeu. ven. sam.".split(" "), NARROWWEEKDAYS:"DLMMJVS".split(""), STANDALONENARROWWEEKDAYS:"DLMMJVS".split(""), SHORTQUARTERS:["T1", 
"T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"janvier f\u00e9vrier mars avril mai juin juillet ao\u00fbt septembre octobre novembre d\u00e9cembre".split(" "), STANDALONEMONTHS:"janvier f\u00e9vrier mars avril mai juin juillet ao\u00fbt septembre octobre novembre d\u00e9cembre".split(" "), SHORTMONTHS:"janv. f\u00e9vr. mars avr. mai juin juil. ao\u00fbt sept. oct. nov. d\u00e9c.".split(" "), 
STANDALONESHORTMONTHS:"janv. f\u00e9vr. mars avr. mai juin juil. ao\u00fbt sept. oct. nov. d\u00e9c.".split(" "), WEEKDAYS:"dimanche lundi mardi mercredi jeudi vendredi samedi".split(" "), STANDALONEWEEKDAYS:"dimanche lundi mardi mercredi jeudi vendredi samedi".split(" "), SHORTWEEKDAYS:"dim. lun. mar. mer. jeu. ven. sam.".split(" "), STANDALONESHORTWEEKDAYS:"dim. lun. mar. mer. jeu. ven. sam.".split(" "), NARROWWEEKDAYS:"DLMMJVS".split(""), STANDALONENARROWWEEKDAYS:"DLMMJVS".split(""), SHORTQUARTERS:["T1", 
"T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "y-MM-dd", "yy-MM-dd"], TIMEFORMATS:["HH 'h' mm 'min' ss 's' zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:"XFMAMXXASOND".split(""), STANDALONENARROWMONTHS:"XFMAMXXASOND".split(""), MONTHS:"Xaneiro Febreiro Marzo Abril Maio Xu\u00f1o Xullo Agosto Setembro Outubro Novembro Decembro".split(" "), STANDALONEMONTHS:"Xaneiro Febreiro Marzo Abril Maio Xu\u00f1o Xullo Agosto Setembro Outubro Novembro Decembro".split(" "), SHORTMONTHS:"Xan Feb Mar Abr Mai Xu\u00f1 Xul Ago Set Out Nov Dec".split(" "), 
STANDALONESHORTMONTHS:"Xan Feb Mar Abr Mai Xu\u00f1 Xul Ago Set Out Nov Dec".split(" "), WEEKDAYS:"Domingo Luns Martes M\u00e9rcores Xoves Venres S\u00e1bado".split(" "), STANDALONEWEEKDAYS:"Domingo Luns Martes M\u00e9rcores Xoves Venres S\u00e1bado".split(" "), SHORTWEEKDAYS:"Dom Lun Mar M\u00e9r Xov Ven S\u00e1b".split(" "), STANDALONESHORTWEEKDAYS:"Dom Lun Mar M\u00e9r Xov Ven S\u00e1b".split(" "), NARROWWEEKDAYS:"DLMMXVS".split(""), STANDALONENARROWWEEKDAYS:"DLMMXVS".split(""), SHORTQUARTERS:["T1", 
"T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "d MMM, y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"Januar Februar M\u00e4rz April Mai Juni Juli Auguscht Sept\u00e4mber Oktoober Nov\u00e4mber Dez\u00e4mber".split(" "), STANDALONEMONTHS:"Januar Februar M\u00e4rz April Mai Juni Juli Auguscht Sept\u00e4mber Oktoober Nov\u00e4mber Dez\u00e4mber".split(" "), SHORTMONTHS:"Jan Feb M\u00e4r Apr Mai Jun Jul Aug Sep Okt Nov Dez".split(" "), 
STANDALONESHORTMONTHS:"Jan Feb M\u00e4r Apr Mai Jun Jul Aug Sep Okt Nov Dez".split(" "), WEEKDAYS:"Sunntig M\u00e4\u00e4ntig Ziischtig Mittwuch Dunschtig Friitig Samschtig".split(" "), STANDALONEWEEKDAYS:"Sunntig M\u00e4\u00e4ntig Ziischtig Mittwuch Dunschtig Friitig Samschtig".split(" "), SHORTWEEKDAYS:"Su. M\u00e4. Zi. Mi. Du. Fr. Sa.".split(" "), STANDALONESHORTWEEKDAYS:"Su. M\u00e4. Zi. Mi. Du. Fr. Sa.".split(" "), NARROWWEEKDAYS:"SMDMDFS".split(""), STANDALONENARROWWEEKDAYS:"SMDMDFS".split(""), 
SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nam."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gu = {ERAS:["\u0a88\u0ab2\u0ac1\u0aa8\u0abe \u0a9c\u0aa8\u0acd\u0aae \u0aaa\u0ab9\u0ac7\u0ab8\u0abe\u0a82", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], ERANAMES:["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], NARROWMONTHS:"\u0a9c\u0abe \u0aab\u0ac7 \u0aae\u0abe \u0a8f \u0aae\u0ac7 \u0a9c\u0ac2 \u0a9c\u0ac1 \u0a91 \u0ab8 \u0a91 \u0aa8 \u0aa1\u0abf".split(" "), STANDALONENARROWMONTHS:"\u0a9c\u0abe \u0aab\u0ac7 \u0aae\u0abe \u0a8f \u0aae\u0ac7 \u0a9c\u0ac2 \u0a9c\u0ac1 \u0a91 \u0ab8 \u0a91 \u0aa8 \u0aa1\u0abf".split(" "), 
MONTHS:"\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0 \u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0 \u0aae\u0abe\u0ab0\u0acd\u0a9a \u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2 \u0aae\u0ac7 \u0a9c\u0ac2\u0aa8 \u0a9c\u0ac1\u0ab2\u0abe\u0a88 \u0a91\u0a97\u0ab8\u0acd\u0a9f \u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0 \u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0 \u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0 \u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0".split(" "), STANDALONEMONTHS:"\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0 \u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0 \u0aae\u0abe\u0ab0\u0acd\u0a9a \u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2 \u0aae\u0ac7 \u0a9c\u0ac2\u0aa8 \u0a9c\u0ac1\u0ab2\u0abe\u0a88 \u0a91\u0a97\u0ab8\u0acd\u0a9f \u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0 \u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0 \u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0 \u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0".split(" "), 
SHORTMONTHS:"\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1 \u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1 \u0aae\u0abe\u0ab0\u0acd\u0a9a \u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2 \u0aae\u0ac7 \u0a9c\u0ac2\u0aa8 \u0a9c\u0ac1\u0ab2\u0abe\u0a88 \u0a91\u0a97\u0ab8\u0acd\u0a9f \u0ab8\u0aaa\u0acd\u0a9f\u0ac7 \u0a91\u0a95\u0acd\u0a9f\u0acb \u0aa8\u0ab5\u0ac7 \u0aa1\u0abf\u0ab8\u0ac7".split(" "), STANDALONESHORTMONTHS:"\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1 \u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1 \u0aae\u0abe\u0ab0\u0acd\u0a9a \u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2 \u0aae\u0ac7 \u0a9c\u0ac2\u0aa8 \u0a9c\u0ac1\u0ab2\u0abe\u0a88 \u0a91\u0a97 \u0ab8\u0aaa\u0acd\u0a9f\u0ac7 \u0a91\u0a95\u0acd\u0a9f\u0acb \u0aa8\u0ab5\u0ac7 \u0aa1\u0abf\u0ab8\u0ac7".split(" "), 
WEEKDAYS:"\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0 \u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0 \u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0 \u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0 \u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0 \u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0 \u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0".split(" "), STANDALONEWEEKDAYS:"\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0 \u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0 \u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0 \u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0 \u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0 \u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0 \u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0".split(" "), 
SHORTWEEKDAYS:"\u0ab0\u0ab5\u0abf \u0ab8\u0acb\u0aae \u0aae\u0a82\u0a97\u0ab3 \u0aac\u0ac1\u0aa7 \u0a97\u0ac1\u0ab0\u0ac1 \u0ab6\u0ac1\u0a95\u0acd\u0ab0 \u0ab6\u0aa8\u0abf".split(" "), STANDALONESHORTWEEKDAYS:"\u0ab0\u0ab5\u0abf \u0ab8\u0acb\u0aae \u0aae\u0a82\u0a97\u0ab3 \u0aac\u0ac1\u0aa7 \u0a97\u0ac1\u0ab0\u0ac1 \u0ab6\u0ac1\u0a95\u0acd\u0ab0 \u0ab6\u0aa8\u0abf".split(" "), NARROWWEEKDAYS:"\u0ab0 \u0ab8\u0acb \u0aae\u0a82 \u0aac\u0ac1 \u0a97\u0ac1 \u0ab6\u0ac1 \u0ab6".split(" "), STANDALONENARROWWEEKDAYS:"\u0ab0 \u0ab8\u0acb \u0aae\u0a82 \u0aac\u0ac1 \u0a97\u0ac1 \u0ab6\u0ac1 \u0ab6".split(" "), 
SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0aaa\u0ab9\u0ac7\u0ab2\u0acb \u0ab9\u0a82\u0aa4", "\u0aac\u0ac0\u0a9c\u0acb \u0ab9\u0a82\u0aa4", "\u0aa4\u0acd\u0ab0\u0ac0\u0a9c\u0acb \u0ab9\u0a82\u0aa4", "\u0a9a\u0acb\u0aa5\u0acb \u0ab9\u0a82\u0aa4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-MM-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"Ianuali Pepeluali Malaki \u02bbApelila Mei Iune Iulai \u02bbAukake Kepakemapa \u02bbOkakopa Nowemapa Kekemapa".split(" "), STANDALONEMONTHS:"Ianuali Pepeluali Malaki \u02bbApelila Mei Iune Iulai \u02bbAukake Kepakemapa \u02bbOkakopa Nowemapa Kekemapa".split(" "), SHORTMONTHS:"Ian. Pep. Mal. \u02bbAp. Mei Iun. Iul. \u02bbAu. Kep. \u02bbOk. Now. Kek.".split(" "), 
STANDALONESHORTMONTHS:"Ian. Pep. Mal. \u02bbAp. Mei Iun. Iul. \u02bbAu. Kep. \u02bbOk. Now. Kek.".split(" "), WEEKDAYS:"L\u0101pule Po\u02bbakahi Po\u02bbalua Po\u02bbakolu Po\u02bbah\u0101 Po\u02bbalima Po\u02bbaono".split(" "), STANDALONEWEEKDAYS:"L\u0101pule Po\u02bbakahi Po\u02bbalua Po\u02bbakolu Po\u02bbah\u0101 Po\u02bbalima Po\u02bbaono".split(" "), SHORTWEEKDAYS:"LP P1 P2 P3 P4 P5 P6".split(" "), STANDALONESHORTWEEKDAYS:"LP P1 P2 P3 P4 P5 P6".split(" "), NARROWWEEKDAYS:"SMTWTFS".split(""), 
STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"\u05d9\u05e0\u05d5\u05d0\u05e8 \u05e4\u05d1\u05e8\u05d5\u05d0\u05e8 \u05de\u05e8\u05e5 \u05d0\u05e4\u05e8\u05d9\u05dc \u05de\u05d0\u05d9 \u05d9\u05d5\u05e0\u05d9 \u05d9\u05d5\u05dc\u05d9 \u05d0\u05d5\u05d2\u05d5\u05e1\u05d8 \u05e1\u05e4\u05d8\u05de\u05d1\u05e8 \u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8 \u05e0\u05d5\u05d1\u05de\u05d1\u05e8 \u05d3\u05e6\u05de\u05d1\u05e8".split(" "), 
STANDALONEMONTHS:"\u05d9\u05e0\u05d5\u05d0\u05e8 \u05e4\u05d1\u05e8\u05d5\u05d0\u05e8 \u05de\u05e8\u05e5 \u05d0\u05e4\u05e8\u05d9\u05dc \u05de\u05d0\u05d9 \u05d9\u05d5\u05e0\u05d9 \u05d9\u05d5\u05dc\u05d9 \u05d0\u05d5\u05d2\u05d5\u05e1\u05d8 \u05e1\u05e4\u05d8\u05de\u05d1\u05e8 \u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8 \u05e0\u05d5\u05d1\u05de\u05d1\u05e8 \u05d3\u05e6\u05de\u05d1\u05e8".split(" "), SHORTMONTHS:"\u05d9\u05e0\u05d5 \u05e4\u05d1\u05e8 \u05de\u05e8\u05e5 \u05d0\u05e4\u05e8 \u05de\u05d0\u05d9 \u05d9\u05d5\u05e0 \u05d9\u05d5\u05dc \u05d0\u05d5\u05d2 \u05e1\u05e4\u05d8 \u05d0\u05d5\u05e7 \u05e0\u05d5\u05d1 \u05d3\u05e6\u05de".split(" "), 
STANDALONESHORTMONTHS:"\u05d9\u05e0\u05d5\u05f3 \u05e4\u05d1\u05e8\u05f3 \u05de\u05e8\u05e5 \u05d0\u05e4\u05e8\u05f3 \u05de\u05d0\u05d9 \u05d9\u05d5\u05e0\u05f3 \u05d9\u05d5\u05dc\u05f3 \u05d0\u05d5\u05d2\u05f3 \u05e1\u05e4\u05d8\u05f3 \u05d0\u05d5\u05e7\u05f3 \u05e0\u05d5\u05d1\u05f3 \u05d3\u05e6\u05de\u05f3".split(" "), WEEKDAYS:"\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df;\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9;\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9;\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea".split(";"), 
STANDALONEWEEKDAYS:"\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df;\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9;\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9;\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea".split(";"), SHORTWEEKDAYS:"\u05d9\u05d5\u05dd \u05d0\u05f3;\u05d9\u05d5\u05dd \u05d1\u05f3;\u05d9\u05d5\u05dd \u05d2\u05f3;\u05d9\u05d5\u05dd \u05d3\u05f3;\u05d9\u05d5\u05dd \u05d4\u05f3;\u05d9\u05d5\u05dd \u05d5\u05f3;\u05e9\u05d1\u05ea".split(";"), 
STANDALONESHORTWEEKDAYS:"\u05d9\u05d5\u05dd \u05d0\u05f3;\u05d9\u05d5\u05dd \u05d1\u05f3;\u05d9\u05d5\u05dd \u05d2\u05f3;\u05d9\u05d5\u05dd \u05d3\u05f3;\u05d9\u05d5\u05dd \u05d4\u05f3;\u05d9\u05d5\u05dd \u05d5\u05f3;\u05e9\u05d1\u05ea".split(";"), NARROWWEEKDAYS:"\u05d0' \u05d1' \u05d2' \u05d3' \u05d4' \u05d5\u05f3 \u05e9\u05f3".split(" "), STANDALONENARROWWEEKDAYS:"\u05d0\u05f3 \u05d1\u05f3 \u05d2\u05f3 \u05d3\u05f3 \u05d4\u05f3 \u05d5 \u05e9".split(" "), SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", 
"\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], NARROWMONTHS:"\u091c \u092b\u093c \u092e\u093e \u0905 \u092e \u091c\u0942 \u091c\u0941 \u0905 \u0938\u093f \u0905 \u0928 \u0926\u093f".split(" "), STANDALONENARROWMONTHS:"\u091c \u092b\u093c \u092e\u093e \u0905 \u092e \u091c\u0942 \u091c\u0941 \u0905 \u0938\u093f \u0905 \u0928 \u0926\u093f".split(" "), MONTHS:"\u091c\u0928\u0935\u0930\u0940 \u092b\u0930\u0935\u0930\u0940 \u092e\u093e\u0930\u094d\u091a \u0905\u092a\u094d\u0930\u0948\u0932 \u092e\u0908 \u091c\u0942\u0928 \u091c\u0941\u0932\u093e\u0908 \u0905\u0917\u0938\u094d\u0924 \u0938\u093f\u0924\u092e\u094d\u092c\u0930 \u0905\u0915\u094d\u0924\u0942\u092c\u0930 \u0928\u0935\u092e\u094d\u092c\u0930 \u0926\u093f\u0938\u092e\u094d\u092c\u0930".split(" "), 
STANDALONEMONTHS:"\u091c\u0928\u0935\u0930\u0940 \u092b\u0930\u0935\u0930\u0940 \u092e\u093e\u0930\u094d\u091a \u0905\u092a\u094d\u0930\u0948\u0932 \u092e\u0908 \u091c\u0942\u0928 \u091c\u0941\u0932\u093e\u0908 \u0905\u0917\u0938\u094d\u0924 \u0938\u093f\u0924\u092e\u094d\u092c\u0930 \u0905\u0915\u094d\u0924\u0942\u092c\u0930 \u0928\u0935\u092e\u094d\u092c\u0930 \u0926\u093f\u0938\u092e\u094d\u092c\u0930".split(" "), SHORTMONTHS:"\u091c\u0928\u0935\u0930\u0940 \u092b\u0930\u0935\u0930\u0940 \u092e\u093e\u0930\u094d\u091a \u0905\u092a\u094d\u0930\u0948\u0932 \u092e\u0908 \u091c\u0942\u0928 \u091c\u0941\u0932\u093e\u0908 \u0905\u0917\u0938\u094d\u0924 \u0938\u093f\u0924\u092e\u094d\u092c\u0930 \u0905\u0915\u094d\u0924\u0942\u092c\u0930 \u0928\u0935\u092e\u094d\u092c\u0930 \u0926\u093f\u0938\u092e\u094d\u092c\u0930".split(" "), 
STANDALONESHORTMONTHS:"\u091c\u0928\u0935\u0930\u0940 \u092b\u0930\u0935\u0930\u0940 \u092e\u093e\u0930\u094d\u091a \u0905\u092a\u094d\u0930\u0948\u0932 \u092e\u0908 \u091c\u0942\u0928 \u091c\u0941\u0932\u093e\u0908 \u0905\u0917\u0938\u094d\u0924 \u0938\u093f\u0924\u092e\u094d\u092c\u0930 \u0905\u0915\u094d\u0924\u0942\u092c\u0930 \u0928\u0935\u092e\u094d\u092c\u0930 \u0926\u093f\u0938\u092e\u094d\u092c\u0930".split(" "), WEEKDAYS:"\u0930\u0935\u093f\u0935\u093e\u0930 \u0938\u094b\u092e\u0935\u093e\u0930 \u092e\u0902\u0917\u0932\u0935\u093e\u0930 \u092c\u0941\u0927\u0935\u093e\u0930 \u092c\u0943\u0939\u0938\u094d\u092a\u0924\u093f\u0935\u093e\u0930 \u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930 \u0936\u0928\u093f\u0935\u093e\u0930".split(" "), 
STANDALONEWEEKDAYS:"\u0930\u0935\u093f\u0935\u093e\u0930 \u0938\u094b\u092e\u0935\u093e\u0930 \u092e\u0902\u0917\u0932\u0935\u093e\u0930 \u092c\u0941\u0927\u0935\u093e\u0930 \u092c\u0943\u0939\u0938\u094d\u092a\u0924\u093f\u0935\u093e\u0930 \u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930 \u0936\u0928\u093f\u0935\u093e\u0930".split(" "), SHORTWEEKDAYS:"\u0930\u0935\u093f. \u0938\u094b\u092e. \u092e\u0902\u0917\u0932. \u092c\u0941\u0927. \u092c\u0943\u0939. \u0936\u0941\u0915\u094d\u0930. \u0936\u0928\u093f.".split(" "), 
STANDALONESHORTWEEKDAYS:"\u0930\u0935\u093f. \u0938\u094b\u092e. \u092e\u0902\u0917\u0932. \u092c\u0941\u0927. \u092c\u0943\u0939. \u0936\u0941\u0915\u094d\u0930. \u0936\u0928\u093f.".split(" "), NARROWWEEKDAYS:"\u0930 \u0938\u094b \u092e\u0902 \u092c\u0941 \u0917\u0941 \u0936\u0941 \u0936".split(" "), STANDALONENARROWWEEKDAYS:"\u0930 \u0938\u094b \u092e\u0902 \u092c\u0941 \u0917\u0941 \u0936\u0941 \u0936".split(" "), SHORTQUARTERS:["\u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", 
"\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], QUARTERS:["\u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd-MM-y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["p. n. e.", "A. D."], ERANAMES:["Prije Krista", "Poslije Krista"], NARROWMONTHS:"1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12.".split(" "), STANDALONENARROWMONTHS:"1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12.".split(" "), MONTHS:"sije\u010dnja velja\u010de o\u017eujka travnja svibnja lipnja srpnja kolovoza rujna listopada studenoga prosinca".split(" "), STANDALONEMONTHS:"sije\u010danj velja\u010da o\u017eujak travanj svibanj lipanj srpanj kolovoz rujan listopad studeni prosinac".split(" "), 
SHORTMONTHS:"sij velj o\u017eu tra svi lip srp kol ruj lis stu pro".split(" "), STANDALONESHORTMONTHS:"sij velj o\u017eu tra svi lip srp kol ruj lis stu pro".split(" "), WEEKDAYS:"nedjelja ponedjeljak utorak srijeda \u010detvrtak petak subota".split(" "), STANDALONEWEEKDAYS:"nedjelja ponedjeljak utorak srijeda \u010detvrtak petak subota".split(" "), SHORTWEEKDAYS:"ned pon uto sri \u010det pet sub".split(" "), STANDALONESHORTWEEKDAYS:"ned pon uto sri \u010det pet sub".split(" "), NARROWWEEKDAYS:"NPUS\u010cPS".split(""), 
STANDALONENARROWWEEKDAYS:"npus\u010dps".split(""), SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. M. y.", "d.M.y."], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["id\u0151sz\u00e1m\u00edt\u00e1sunk el\u0151tt", "id\u0151sz\u00e1m\u00edt\u00e1sunk szerint"], NARROWMONTHS:"J F M \u00c1 M J J \u00c1 Sz O N D".split(" "), STANDALONENARROWMONTHS:"J F M \u00c1 M J J A Sz O N D".split(" "), MONTHS:"janu\u00e1r febru\u00e1r m\u00e1rcius \u00e1prilis m\u00e1jus j\u00fanius j\u00falius augusztus szeptember okt\u00f3ber november december".split(" "), STANDALONEMONTHS:"janu\u00e1r febru\u00e1r m\u00e1rcius \u00e1prilis m\u00e1jus j\u00fanius j\u00falius augusztus szeptember okt\u00f3ber november december".split(" "), 
SHORTMONTHS:"jan. febr. m\u00e1rc. \u00e1pr. m\u00e1j. j\u00fan. j\u00fal. aug. szept. okt. nov. dec.".split(" "), STANDALONESHORTMONTHS:"jan. febr. m\u00e1rc. \u00e1pr. m\u00e1j. j\u00fan. j\u00fal. aug. szept. okt. nov. dec.".split(" "), WEEKDAYS:"vas\u00e1rnap h\u00e9tf\u0151 kedd szerda cs\u00fct\u00f6rt\u00f6k p\u00e9ntek szombat".split(" "), STANDALONEWEEKDAYS:"vas\u00e1rnap h\u00e9tf\u0151 kedd szerda cs\u00fct\u00f6rt\u00f6k p\u00e9ntek szombat".split(" "), SHORTWEEKDAYS:"V H K Sze Cs P Szo".split(" "), 
STANDALONESHORTWEEKDAYS:"V H K Sze Cs P Szo".split(" "), NARROWWEEKDAYS:"V H K Sz Cs P Sz".split(" "), STANDALONENARROWWEEKDAYS:"V H K Sz Cs P Sz".split(" "), SHORTQUARTERS:["N1", "N2", "N3", "N4"], QUARTERS:["I. negyed\u00e9v", "II. negyed\u00e9v", "III. negyed\u00e9v", "IV. negyed\u00e9v"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "y.MM.dd.", "y.MM.dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"Januari Februari Maret April Mei Juni Juli Agustus September Oktober November Desember".split(" "), STANDALONEMONTHS:"Januari Februari Maret April Mei Juni Juli Agustus September Oktober November Desember".split(" "), SHORTMONTHS:"Jan Feb Mar Apr Mei Jun Jul Agt Sep Okt Nov Des".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr Mei Jun Jul Agt Sep Okt Nov Des".split(" "), 
WEEKDAYS:"Minggu Senin Selasa Rabu Kamis Jumat Sabtu".split(" "), STANDALONEWEEKDAYS:"Minggu Senin Selasa Rabu Kamis Jumat Sabtu".split(" "), SHORTWEEKDAYS:"Min Sen Sel Rab Kam Jum Sab".split(" "), STANDALONESHORTWEEKDAYS:"Min Sen Sel Rab Kam Jum Sab".split(" "), NARROWWEEKDAYS:"MSSRKJS".split(""), STANDALONENARROWWEEKDAYS:"MSSRKJS".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", 
"d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"Januari Februari Maret April Mei Juni Juli Agustus September Oktober November Desember".split(" "), STANDALONEMONTHS:"Januari Februari Maret April Mei Juni Juli Agustus September Oktober November Desember".split(" "), SHORTMONTHS:"Jan Feb Mar Apr Mei Jun Jul Agt Sep Okt Nov Des".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr Mei Jun Jul Agt Sep Okt Nov Des".split(" "), 
WEEKDAYS:"Minggu Senin Selasa Rabu Kamis Jumat Sabtu".split(" "), STANDALONEWEEKDAYS:"Minggu Senin Selasa Rabu Kamis Jumat Sabtu".split(" "), SHORTWEEKDAYS:"Min Sen Sel Rab Kam Jum Sab".split(" "), STANDALONESHORTWEEKDAYS:"Min Sen Sel Rab Kam Jum Sab".split(" "), NARROWWEEKDAYS:"MSSRKJS".split(""), STANDALONENARROWWEEKDAYS:"MSSRKJS".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", 
"d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:"JFMAMJJ\u00c1LOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJ\u00c1SOND".split(""), MONTHS:"jan\u00faar febr\u00faar mars apr\u00edl ma\u00ed j\u00fan\u00ed j\u00fal\u00ed \u00e1g\u00fast september okt\u00f3ber n\u00f3vember desember".split(" "), STANDALONEMONTHS:"jan\u00faar febr\u00faar mars apr\u00edl ma\u00ed j\u00fan\u00ed j\u00fal\u00ed \u00e1g\u00fast september okt\u00f3ber n\u00f3vember desember".split(" "), 
SHORTMONTHS:"jan feb mar apr ma\u00ed j\u00fan j\u00fal \u00e1g\u00fa sep okt n\u00f3v des".split(" "), STANDALONESHORTMONTHS:"jan feb mar apr ma\u00ed j\u00fan j\u00fal \u00e1g\u00fa sep okt n\u00f3v des".split(" "), WEEKDAYS:"sunnudagur m\u00e1nudagur \u00feri\u00f0judagur mi\u00f0vikudagur fimmtudagur f\u00f6studagur laugardagur".split(" "), STANDALONEWEEKDAYS:"sunnudagur m\u00e1nudagur \u00feri\u00f0judagur mi\u00f0vikudagur fimmtudagur f\u00f6studagur laugardagur".split(" "), SHORTWEEKDAYS:"sun m\u00e1n \u00feri mi\u00f0 fim f\u00f6s lau".split(" "), 
STANDALONESHORTWEEKDAYS:"sun m\u00e1n \u00feri mi\u00f0 fim f\u00f6s lau".split(" "), NARROWWEEKDAYS:"SM\u00deMFFL".split(""), STANDALONENARROWWEEKDAYS:"SM\u00feMFFL".split(""), SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1. fj\u00f3r\u00f0ungur", "2. fj\u00f3r\u00f0ungur", "3. fj\u00f3r\u00f0ungur", "4. fj\u00f3r\u00f0ungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["aC", "dC"], ERANAMES:["a.C.", "d.C."], NARROWMONTHS:"GFMAMGLASOND".split(""), STANDALONENARROWMONTHS:"GFMAMGLASOND".split(""), MONTHS:"gennaio febbraio marzo aprile maggio giugno luglio agosto settembre ottobre novembre dicembre".split(" "), STANDALONEMONTHS:"Gennaio Febbraio Marzo Aprile Maggio Giugno Luglio Agosto Settembre Ottobre Novembre Dicembre".split(" "), SHORTMONTHS:"gen feb mar apr mag giu lug ago set ott nov dic".split(" "), STANDALONESHORTMONTHS:"gen feb mar apr mag giu lug ago set ott nov dic".split(" "), 
WEEKDAYS:"domenica luned\u00ec marted\u00ec mercoled\u00ec gioved\u00ec venerd\u00ec sabato".split(" "), STANDALONEWEEKDAYS:"Domenica Luned\u00ec Marted\u00ec Mercoled\u00ec Gioved\u00ec Venerd\u00ec Sabato".split(" "), SHORTWEEKDAYS:"dom lun mar mer gio ven sab".split(" "), STANDALONESHORTWEEKDAYS:"dom lun mar mer gio ven sab".split(" "), NARROWWEEKDAYS:"DLMMGVS".split(""), STANDALONENARROWWEEKDAYS:"DLMMGVS".split(""), SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", 
"3o trimestre", "4o trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "dd MMMM y", "dd/MMM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"\u05d9\u05e0\u05d5\u05d0\u05e8 \u05e4\u05d1\u05e8\u05d5\u05d0\u05e8 \u05de\u05e8\u05e5 \u05d0\u05e4\u05e8\u05d9\u05dc \u05de\u05d0\u05d9 \u05d9\u05d5\u05e0\u05d9 \u05d9\u05d5\u05dc\u05d9 \u05d0\u05d5\u05d2\u05d5\u05e1\u05d8 \u05e1\u05e4\u05d8\u05de\u05d1\u05e8 \u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8 \u05e0\u05d5\u05d1\u05de\u05d1\u05e8 \u05d3\u05e6\u05de\u05d1\u05e8".split(" "), 
STANDALONEMONTHS:"\u05d9\u05e0\u05d5\u05d0\u05e8 \u05e4\u05d1\u05e8\u05d5\u05d0\u05e8 \u05de\u05e8\u05e5 \u05d0\u05e4\u05e8\u05d9\u05dc \u05de\u05d0\u05d9 \u05d9\u05d5\u05e0\u05d9 \u05d9\u05d5\u05dc\u05d9 \u05d0\u05d5\u05d2\u05d5\u05e1\u05d8 \u05e1\u05e4\u05d8\u05de\u05d1\u05e8 \u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8 \u05e0\u05d5\u05d1\u05de\u05d1\u05e8 \u05d3\u05e6\u05de\u05d1\u05e8".split(" "), SHORTMONTHS:"\u05d9\u05e0\u05d5 \u05e4\u05d1\u05e8 \u05de\u05e8\u05e5 \u05d0\u05e4\u05e8 \u05de\u05d0\u05d9 \u05d9\u05d5\u05e0 \u05d9\u05d5\u05dc \u05d0\u05d5\u05d2 \u05e1\u05e4\u05d8 \u05d0\u05d5\u05e7 \u05e0\u05d5\u05d1 \u05d3\u05e6\u05de".split(" "), 
STANDALONESHORTMONTHS:"\u05d9\u05e0\u05d5\u05f3 \u05e4\u05d1\u05e8\u05f3 \u05de\u05e8\u05e5 \u05d0\u05e4\u05e8\u05f3 \u05de\u05d0\u05d9 \u05d9\u05d5\u05e0\u05f3 \u05d9\u05d5\u05dc\u05f3 \u05d0\u05d5\u05d2\u05f3 \u05e1\u05e4\u05d8\u05f3 \u05d0\u05d5\u05e7\u05f3 \u05e0\u05d5\u05d1\u05f3 \u05d3\u05e6\u05de\u05f3".split(" "), WEEKDAYS:"\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df;\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9;\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9;\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea".split(";"), 
STANDALONEWEEKDAYS:"\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df;\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9;\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9;\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9;\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea".split(";"), SHORTWEEKDAYS:"\u05d9\u05d5\u05dd \u05d0\u05f3;\u05d9\u05d5\u05dd \u05d1\u05f3;\u05d9\u05d5\u05dd \u05d2\u05f3;\u05d9\u05d5\u05dd \u05d3\u05f3;\u05d9\u05d5\u05dd \u05d4\u05f3;\u05d9\u05d5\u05dd \u05d5\u05f3;\u05e9\u05d1\u05ea".split(";"), 
STANDALONESHORTWEEKDAYS:"\u05d9\u05d5\u05dd \u05d0\u05f3;\u05d9\u05d5\u05dd \u05d1\u05f3;\u05d9\u05d5\u05dd \u05d2\u05f3;\u05d9\u05d5\u05dd \u05d3\u05f3;\u05d9\u05d5\u05dd \u05d4\u05f3;\u05d9\u05d5\u05dd \u05d5\u05f3;\u05e9\u05d1\u05ea".split(";"), NARROWWEEKDAYS:"\u05d0' \u05d1' \u05d2' \u05d3' \u05d4' \u05d5\u05f3 \u05e9\u05f3".split(" "), STANDALONENARROWWEEKDAYS:"\u05d0\u05f3 \u05d1\u05f3 \u05d2\u05f3 \u05d3\u05f3 \u05d4\u05f3 \u05d5 \u05e9".split(" "), SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", 
"\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["\u7d00\u5143\u524d", "\u897f\u66a6"], ERANAMES:["\u7d00\u5143\u524d", "\u897f\u66a6"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), STANDALONEMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), SHORTMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), 
STANDALONESHORTMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), WEEKDAYS:"\u65e5\u66dc\u65e5 \u6708\u66dc\u65e5 \u706b\u66dc\u65e5 \u6c34\u66dc\u65e5 \u6728\u66dc\u65e5 \u91d1\u66dc\u65e5 \u571f\u66dc\u65e5".split(" "), STANDALONEWEEKDAYS:"\u65e5\u66dc\u65e5 \u6708\u66dc\u65e5 \u706b\u66dc\u65e5 \u6c34\u66dc\u65e5 \u6728\u66dc\u65e5 \u91d1\u66dc\u65e5 \u571f\u66dc\u65e5".split(" "), SHORTWEEKDAYS:"\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f".split(""), 
STANDALONESHORTWEEKDAYS:"\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f".split(""), NARROWWEEKDAYS:"\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f".split(""), STANDALONENARROWWEEKDAYS:"\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f".split(""), SHORTQUARTERS:["1Q", "2Q", "3Q", "4Q"], QUARTERS:["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"], AMPMS:["\u5348\u524d", "\u5348\u5f8c"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", 
"y/MM/dd", "y/MM/dd"], TIMEFORMATS:["H\u6642mm\u5206ss\u79d2 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c9c\u0cbe\u0cb9\u0cc0"], ERANAMES:["\u0c88\u0cb8\u0caa\u0cc2\u0cb5\u0cef.", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"], NARROWMONTHS:"\u0c9c \u0cab\u0cc6 \u0cae\u0cbe \u0c8f \u0cae\u0cc7 \u0c9c\u0cc2 \u0c9c\u0cc1 \u0c86 \u0cb8\u0cc6 \u0c85 \u0ca8 \u0ca1\u0cbf".split(" "), STANDALONENARROWMONTHS:"\u0c9c \u0cab\u0cc6 \u0cae\u0cbe \u0c8e \u0cae\u0cc7 \u0c9c\u0cc2 \u0c9c\u0cc1 \u0c86 \u0cb8\u0cc6 \u0c85 \u0ca8 \u0ca1\u0cbf".split(" "), 
MONTHS:"\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0 \u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0 \u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd \u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd \u0cae\u0cc6 \u0c9c\u0cc2\u0ca8\u0ccd \u0c9c\u0cc1\u0cb2\u0cc8 \u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd \u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd \u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd \u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd \u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd".split(" "), STANDALONEMONTHS:"\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0 \u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0 \u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd \u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd \u0cae\u0cc6 \u0c9c\u0cc2\u0ca8\u0ccd \u0c9c\u0cc1\u0cb2\u0cc8 \u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd \u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd \u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd \u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd \u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd".split(" "), 
SHORTMONTHS:"\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf \u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1\u0cb5\u0cb0\u0cbf \u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd \u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd\u200c\u200c \u0cae\u0cc7 \u0c9c\u0cc2\u0ca8\u0ccd \u0c9c\u0cc1\u0cb2\u0cc8 \u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd \u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd\u200c \u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd \u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd \u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd".split(" "), 
STANDALONESHORTMONTHS:"\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf \u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1\u0cb5\u0cb0\u0cbf \u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd \u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd\u200c\u200c \u0cae\u0cc7 \u0c9c\u0cc2\u0ca8\u0ccd \u0c9c\u0cc1\u0cb2\u0cc8 \u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd \u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd\u200c \u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd \u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd \u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd".split(" "), 
WEEKDAYS:"\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0 \u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0 \u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0 \u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0 \u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0 \u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0 \u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0".split(" "), STANDALONEWEEKDAYS:"\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0 \u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0 \u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0 \u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0 \u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0 \u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0 \u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0".split(" "), 
SHORTWEEKDAYS:"\u0cb0. \u0cb8\u0ccb. \u0cae\u0c82. \u0cac\u0cc1. \u0c97\u0cc1. \u0cb6\u0cc1. \u0cb6\u0ca8\u0cbf.".split(" "), STANDALONESHORTWEEKDAYS:"\u0cb0. \u0cb8\u0ccb. \u0cae\u0c82. \u0cac\u0cc1. \u0c97\u0cc1. \u0cb6\u0cc1. \u0cb6\u0ca8\u0cbf.".split(" "), NARROWWEEKDAYS:"\u0cb0 \u0cb8\u0ccb \u0cae\u0c82 \u0cac\u0cc1 \u0c97\u0cc1 \u0cb6\u0cc1 \u0cb6".split(" "), STANDALONENARROWWEEKDAYS:"\u0cb0 \u0cb8\u0ccb \u0cae\u0c82 \u0cac\u0cc1 \u0c97\u0cc1 \u0cb6\u0cc1 \u0cb6".split(" "), SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["\uae30\uc6d0\uc804", "\uc11c\uae30"], ERANAMES:["\uc11c\ub825\uae30\uc6d0\uc804", "\uc11c\ub825\uae30\uc6d0"], NARROWMONTHS:"1\uc6d4 2\uc6d4 3\uc6d4 4\uc6d4 5\uc6d4 6\uc6d4 7\uc6d4 8\uc6d4 9\uc6d4 10\uc6d4 11\uc6d4 12\uc6d4".split(" "), STANDALONENARROWMONTHS:"1\uc6d4 2\uc6d4 3\uc6d4 4\uc6d4 5\uc6d4 6\uc6d4 7\uc6d4 8\uc6d4 9\uc6d4 10\uc6d4 11\uc6d4 12\uc6d4".split(" "), MONTHS:"1\uc6d4 2\uc6d4 3\uc6d4 4\uc6d4 5\uc6d4 6\uc6d4 7\uc6d4 8\uc6d4 9\uc6d4 10\uc6d4 11\uc6d4 12\uc6d4".split(" "), 
STANDALONEMONTHS:"1\uc6d4 2\uc6d4 3\uc6d4 4\uc6d4 5\uc6d4 6\uc6d4 7\uc6d4 8\uc6d4 9\uc6d4 10\uc6d4 11\uc6d4 12\uc6d4".split(" "), SHORTMONTHS:"1\uc6d4 2\uc6d4 3\uc6d4 4\uc6d4 5\uc6d4 6\uc6d4 7\uc6d4 8\uc6d4 9\uc6d4 10\uc6d4 11\uc6d4 12\uc6d4".split(" "), STANDALONESHORTMONTHS:"1\uc6d4 2\uc6d4 3\uc6d4 4\uc6d4 5\uc6d4 6\uc6d4 7\uc6d4 8\uc6d4 9\uc6d4 10\uc6d4 11\uc6d4 12\uc6d4".split(" "), WEEKDAYS:"\uc77c\uc694\uc77c \uc6d4\uc694\uc77c \ud654\uc694\uc77c \uc218\uc694\uc77c \ubaa9\uc694\uc77c \uae08\uc694\uc77c \ud1a0\uc694\uc77c".split(" "), 
STANDALONEWEEKDAYS:"\uc77c\uc694\uc77c \uc6d4\uc694\uc77c \ud654\uc694\uc77c \uc218\uc694\uc77c \ubaa9\uc694\uc77c \uae08\uc694\uc77c \ud1a0\uc694\uc77c".split(" "), SHORTWEEKDAYS:"\uc77c\uc6d4\ud654\uc218\ubaa9\uae08\ud1a0".split(""), STANDALONESHORTWEEKDAYS:"\uc77c\uc6d4\ud654\uc218\ubaa9\uae08\ud1a0".split(""), NARROWWEEKDAYS:"\uc77c\uc6d4\ud654\uc218\ubaa9\uae08\ud1a0".split(""), STANDALONENARROWWEEKDAYS:"\uc77c\uc6d4\ud654\uc218\ubaa9\uae08\ud1a0".split(""), SHORTQUARTERS:["1\ubd84\uae30", "2\ubd84\uae30", 
"3\ubd84\uae30", "4\ubd84\uae30"], QUARTERS:["\uc81c 1/4\ubd84\uae30", "\uc81c 2/4\ubd84\uae30", "\uc81c 3/4\ubd84\uae30", "\uc81c 4/4\ubd84\uae30"], AMPMS:["\uc624\uc804", "\uc624\ud6c4"], DATEFORMATS:["y\ub144 M\uc6d4 d\uc77c EEEE", "y\ub144 M\uc6d4 d\uc77c", "y. M. d.", "yy. M. d."], TIMEFORMATS:["a h\uc2dc m\ubd84 s\ucd08 zzzz", "a h\uc2dc m\ubd84 s\ucd08 z", "a h:mm:ss", "a h:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ln = {ERAS:["lib\u00f3so ya", "nsima ya Y"], ERANAMES:["Yambo ya Y\u00e9zu Kr\u00eds", "Nsima ya Y\u00e9zu Kr\u00eds"], NARROWMONTHS:"yfmamyyas\u0254nd".split(""), STANDALONENARROWMONTHS:"yfmamyyas\u0254nd".split(""), MONTHS:"s\u00e1nz\u00e1 ya yambo;s\u00e1nz\u00e1 ya m\u00edbal\u00e9;s\u00e1nz\u00e1 ya m\u00eds\u00e1to;s\u00e1nz\u00e1 ya m\u00ednei;s\u00e1nz\u00e1 ya m\u00edt\u00e1no;s\u00e1nz\u00e1 ya mot\u00f3b\u00e1;s\u00e1nz\u00e1 ya nsambo;s\u00e1nz\u00e1 ya mwambe;s\u00e1nz\u00e1 ya libwa;s\u00e1nz\u00e1 ya z\u00f3mi;s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301;s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9".split(";"), 
STANDALONEMONTHS:"s\u00e1nz\u00e1 ya yambo;s\u00e1nz\u00e1 ya m\u00edbal\u00e9;s\u00e1nz\u00e1 ya m\u00eds\u00e1to;s\u00e1nz\u00e1 ya m\u00ednei;s\u00e1nz\u00e1 ya m\u00edt\u00e1no;s\u00e1nz\u00e1 ya mot\u00f3b\u00e1;s\u00e1nz\u00e1 ya nsambo;s\u00e1nz\u00e1 ya mwambe;s\u00e1nz\u00e1 ya libwa;s\u00e1nz\u00e1 ya z\u00f3mi;s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301;s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9".split(";"), SHORTMONTHS:"yan fbl msi apl mai yun yul agt stb \u0254tb nvb dsb".split(" "), 
STANDALONESHORTMONTHS:"yan fbl msi apl mai yun yul agt stb \u0254tb nvb dsb".split(" "), WEEKDAYS:"eyenga;mok\u0254l\u0254 mwa yambo;mok\u0254l\u0254 mwa m\u00edbal\u00e9;mok\u0254l\u0254 mwa m\u00eds\u00e1to;mok\u0254l\u0254 ya m\u00edn\u00e9i;mok\u0254l\u0254 ya m\u00edt\u00e1no;mp\u0254\u0301s\u0254".split(";"), STANDALONEWEEKDAYS:"eyenga;mok\u0254l\u0254 mwa yambo;mok\u0254l\u0254 mwa m\u00edbal\u00e9;mok\u0254l\u0254 mwa m\u00eds\u00e1to;mok\u0254l\u0254 ya m\u00edn\u00e9i;mok\u0254l\u0254 ya m\u00edt\u00e1no;mp\u0254\u0301s\u0254".split(";"), 
SHORTWEEKDAYS:"eye ybo mbl mst min mtn mps".split(" "), STANDALONESHORTWEEKDAYS:"eye ybo mbl mst min mtn mps".split(" "), NARROWWEEKDAYS:"eymmmmp".split(""), STANDALONENARROWWEEKDAYS:"eymmmmp".split(""), SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["s\u00e1nz\u00e1 m\u00eds\u00e1to ya yambo", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00ednei"], AMPMS:["nt\u0254\u0301ng\u0254\u0301", 
"mp\u00f3kwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prie\u0161 Krist\u0173", "po Kristaus"], NARROWMONTHS:"SVKBGBLRRSLG".split(""), STANDALONENARROWMONTHS:"SVKBGBLRRSLG".split(""), MONTHS:"sausis vasaris kovas balandis gegu\u017e\u0117 bir\u017eelis liepa rugpj\u016btis rugs\u0117jis spalis lapkritis gruodis".split(" "), STANDALONEMONTHS:"sausis vasaris kovas balandis gegu\u017e\u0117 bir\u017eelis liepa rugpj\u016btis rugs\u0117jis spalis lapkritis gruodis".split(" "), SHORTMONTHS:"saus. vas. kov. bal. geg. bir\u017e. liep. rugp. rugs. spal. lapkr. gruod.".split(" "), 
STANDALONESHORTMONTHS:"saus. vas. kov. bal. geg. bir\u017e. liep. rugp. rugs. spal. lapkr. gruod.".split(" "), WEEKDAYS:"sekmadienis pirmadienis antradienis tre\u010diadienis ketvirtadienis penktadienis \u0161e\u0161tadienis".split(" "), STANDALONEWEEKDAYS:"sekmadienis pirmadienis antradienis tre\u010diadienis ketvirtadienis penktadienis \u0161e\u0161tadienis".split(" "), SHORTWEEKDAYS:"sk pr an tr kt pn \u0161t".split(" "), STANDALONESHORTWEEKDAYS:"sk pr an tr kt pn \u0161t".split(" "), NARROWWEEKDAYS:"SPATKP\u0160".split(""), 
STANDALONENARROWWEEKDAYS:"SPATKP\u0160".split(""), SHORTQUARTERS:["I k.", "II k.", "III k.", "IV k."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], AMPMS:["prie\u0161piet", "popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.\u0113.", "m.\u0113."], ERANAMES:["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"janv\u0101ris febru\u0101ris marts apr\u012blis maijs j\u016bnijs j\u016blijs augusts septembris oktobris novembris decembris".split(" "), STANDALONEMONTHS:"Janv\u0101ris Febru\u0101ris Marts Apr\u012blis Maijs J\u016bnijs J\u016blijs Augusts Septembris Oktobris Novembris Decembris".split(" "), 
SHORTMONTHS:"janv. febr. marts apr. maijs j\u016bn. j\u016bl. aug. sept. okt. nov. dec.".split(" "), STANDALONESHORTMONTHS:"Janv. Febr. Marts Apr. Maijs J\u016bn. J\u016bl. Aug. Sept. Okt. Nov. Dec.".split(" "), WEEKDAYS:"sv\u0113tdiena pirmdiena otrdiena tre\u0161diena ceturtdiena piektdiena sestdiena".split(" "), STANDALONEWEEKDAYS:"Sv\u0113tdiena Pirmdiena Otrdiena Tre\u0161diena Ceturtdiena Piektdiena Sestdiena".split(" "), SHORTWEEKDAYS:"Sv Pr Ot Tr Ce Pk Se".split(" "), STANDALONESHORTWEEKDAYS:"Sv Pr Ot Tr Ce Pk Se".split(" "), 
NARROWWEEKDAYS:"SPOTCPS".split(""), STANDALONENARROWWEEKDAYS:"SPOTCPS".split(""), SHORTQUARTERS:["C1", "C2", "C3", "C4"], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], AMPMS:["priek\u0161pusdien\u0101", "p\u0113cpusdien\u0101"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["\u0d15\u0d4d\u0d30\u0d3f.\u0d2e\u0d42", "\u0d15\u0d4d\u0d30\u0d3f.\u0d2a\u0d3f."], ERANAMES:["\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d41\u0d4d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d\u200c", "\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d4d \u0d2a\u0d3f\u0d7b\u0d2a\u0d4d"], NARROWMONTHS:"\u0d1c \u0d2b\u0d46 \u0d2e\u0d3e \u0d0f \u0d2e\u0d47 \u0d1c\u0d42 \u0d1c\u0d42 \u0d13 \u0d38\u0d46 \u0d12 \u0d28 \u0d21\u0d3f".split(" "), 
STANDALONENARROWMONTHS:"\u0d1c \u0d2b\u0d46 \u0d2e\u0d3e \u0d0f \u0d2e\u0d47 \u0d1c\u0d42 \u0d1c\u0d42 \u0d13 \u0d38\u0d46 \u0d12 \u0d28 \u0d21\u0d3f".split(" "), MONTHS:"\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f \u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f \u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d \u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d \u0d2e\u0d47\u0d2f\u0d4d \u0d1c\u0d42\u0d7a \u0d1c\u0d42\u0d32\u0d48 \u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c \u0d12\u0d15\u0d4d\u0d1f\u0d4b\u0d2c\u0d7c \u0d28\u0d35\u0d02\u0d2c\u0d7c \u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c".split(" "), 
STANDALONEMONTHS:"\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f \u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f \u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d \u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d \u0d2e\u0d47\u0d2f\u0d4d \u0d1c\u0d42\u0d7a \u0d1c\u0d42\u0d32\u0d48 \u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c \u0d12\u0d15\u0d4d\u0d1f\u0d4b\u0d2c\u0d7c \u0d28\u0d35\u0d02\u0d2c\u0d7c \u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c".split(" "), SHORTMONTHS:"\u0d1c\u0d28\u0d41 \u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41 \u0d2e\u0d3e\u0d7c \u0d0f\u0d2a\u0d4d\u0d30\u0d3f \u0d2e\u0d47\u0d2f\u0d4d \u0d1c\u0d42\u0d7a \u0d1c\u0d42\u0d32\u0d48 \u0d13\u0d17 \u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02 \u0d12\u0d15\u0d4d\u0d1f\u0d4b \u0d28\u0d35\u0d02 \u0d21\u0d3f\u0d38\u0d02".split(" "), 
STANDALONESHORTMONTHS:"\u0d1c\u0d28\u0d41 \u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41 \u0d2e\u0d3e\u0d7c \u0d0f\u0d2a\u0d4d\u0d30\u0d3f \u0d2e\u0d47\u0d2f\u0d4d \u0d1c\u0d42\u0d7a \u0d1c\u0d42\u0d32\u0d48 \u0d13\u0d17 \u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02 \u0d12\u0d15\u0d4d\u0d1f\u0d4b \u0d28\u0d35\u0d02 \u0d21\u0d3f\u0d38\u0d02".split(" "), WEEKDAYS:"\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u0d1a \u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u0d1a \u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a \u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u0d1a \u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u0d1a \u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a \u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a".split(" "), 
STANDALONEWEEKDAYS:"\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u0d1a \u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u0d1a \u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a \u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u0d1a \u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u0d1a \u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a \u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a".split(" "), SHORTWEEKDAYS:"\u0d1e\u0d3e\u0d2f\u0d7c \u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e \u0d1a\u0d4a\u0d35\u0d4d\u0d35 \u0d2c\u0d41\u0d27\u0d7b \u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02 \u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f \u0d36\u0d28\u0d3f".split(" "), 
STANDALONESHORTWEEKDAYS:"\u0d1e\u0d3e\u0d2f\u0d7c \u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e \u0d1a\u0d4a\u0d35\u0d4d\u0d35 \u0d2c\u0d41\u0d27\u0d7b \u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02 \u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f \u0d36\u0d28\u0d3f".split(" "), NARROWWEEKDAYS:"\u0d1e\u0d3e \u0d24\u0d3f \u0d1a\u0d4a \u0d2c\u0d41 \u0d35\u0d4d\u0d2f\u0d3e \u0d35\u0d46 \u0d36".split(" "), STANDALONENARROWWEEKDAYS:"\u0d1e\u0d3e \u0d24\u0d3f \u0d1a\u0d4a \u0d2c\u0d41 \u0d35\u0d4d\u0d2f\u0d3e \u0d35\u0d46 \u0d36".split(" "), 
SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], AMPMS:["AM", "PM"], DATEFORMATS:["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mr = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u0935\u0940\u0938\u0928\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940\u0938\u0928"], NARROWMONTHS:"\u091c\u093e \u092b\u0947 \u092e\u093e \u090f \u092e\u0947 \u091c\u0942 \u091c\u0941 \u0911 \u0938 \u0911 \u0928\u094b \u0921\u093f".split(" "), STANDALONENARROWMONTHS:"\u091c\u093e \u092b\u0947 \u092e\u093e \u090f \u092e\u0947 \u091c\u0942 \u091c\u0941 \u0911 \u0938 \u0911 \u0928\u094b \u0921\u093f".split(" "), 
MONTHS:"\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940 \u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940 \u092e\u093e\u0930\u094d\u091a \u090f\u092a\u094d\u0930\u093f\u0932 \u092e\u0947 \u091c\u0942\u0928 \u091c\u0941\u0932\u0948 \u0911\u0917\u0938\u094d\u091f \u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930 \u0911\u0915\u094d\u091f\u094b\u092c\u0930 \u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930 \u0921\u093f\u0938\u0947\u0902\u092c\u0930".split(" "), STANDALONEMONTHS:"\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940 \u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940 \u092e\u093e\u0930\u094d\u091a \u090f\u092a\u094d\u0930\u093f\u0932 \u092e\u0947 \u091c\u0942\u0928 \u091c\u0941\u0932\u0948 \u0911\u0917\u0938\u094d\u091f \u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930 \u0911\u0915\u094d\u091f\u094b\u092c\u0930 \u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930 \u0921\u093f\u0938\u0947\u0902\u092c\u0930".split(" "), 
SHORTMONTHS:"\u091c\u093e\u0928\u0947 \u092b\u0947\u092c\u094d\u0930\u0941 \u092e\u093e\u0930\u094d\u091a \u090f\u092a\u094d\u0930\u093f \u092e\u0947 \u091c\u0942\u0928 \u091c\u0941\u0932\u0948 \u0911\u0917 \u0938\u0947\u092a\u094d\u091f\u0947\u0902 \u0911\u0915\u094d\u091f \u0928\u094b\u0935\u094d\u0939\u0947\u0902 \u0921\u093f\u0938\u0947\u0902".split(" "), STANDALONESHORTMONTHS:"\u091c\u093e\u0928\u0947 \u092b\u0947\u092c\u094d\u0930\u0941 \u092e\u093e\u0930\u094d\u091a \u090f\u092a\u094d\u0930\u093f \u092e\u0947 \u091c\u0942\u0928 \u091c\u0941\u0932\u0948 \u0911\u0917 \u0938\u0947\u092a\u094d\u091f\u0947\u0902 \u0911\u0915\u094d\u091f \u0928\u094b\u0935\u094d\u0939\u0947\u0902 \u0921\u093f\u0938\u0947\u0902".split(" "), 
WEEKDAYS:"\u0930\u0935\u093f\u0935\u093e\u0930 \u0938\u094b\u092e\u0935\u093e\u0930 \u092e\u0902\u0917\u0933\u0935\u093e\u0930 \u092c\u0941\u0927\u0935\u093e\u0930 \u0917\u0941\u0930\u0941\u0935\u093e\u0930 \u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930 \u0936\u0928\u093f\u0935\u093e\u0930".split(" "), STANDALONEWEEKDAYS:"\u0930\u0935\u093f\u0935\u093e\u0930 \u0938\u094b\u092e\u0935\u093e\u0930 \u092e\u0902\u0917\u0933\u0935\u093e\u0930 \u092c\u0941\u0927\u0935\u093e\u0930 \u0917\u0941\u0930\u0941\u0935\u093e\u0930 \u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930 \u0936\u0928\u093f\u0935\u093e\u0930".split(" "), 
SHORTWEEKDAYS:"\u0930\u0935\u093f \u0938\u094b\u092e \u092e\u0902\u0917\u0933 \u092c\u0941\u0927 \u0917\u0941\u0930\u0941 \u0936\u0941\u0915\u094d\u0930 \u0936\u0928\u093f".split(" "), STANDALONESHORTWEEKDAYS:"\u0930\u0935\u093f \u0938\u094b\u092e \u092e\u0902\u0917\u0933 \u092c\u0941\u0927 \u0917\u0941\u0930\u0941 \u0936\u0941\u0915\u094d\u0930 \u0936\u0928\u093f".split(" "), NARROWWEEKDAYS:"\u0930 \u0938\u094b \u092e\u0902 \u092c\u0941 \u0917\u0941 \u0936\u0941 \u0936".split(" "), STANDALONENARROWWEEKDAYS:"\u0930 \u0938\u094b \u092e\u0902 \u092c\u0941 \u0917\u0941 \u0936\u0941 \u0936".split(" "), 
SHORTQUARTERS:["\u0924\u093f 1", "\u0924\u093f 2", "\u0924\u093f 3", "\u0924\u093f 4"], QUARTERS:["\u092a\u094d\u0930\u0925\u092e \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0943\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u0924\u0941\u0930\u094d\u0925 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h-mm-ss a zzzz", 
"h-mm-ss a z", "h-mm-ss a", "h-mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:"JFMAMJJOSOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJOSOND".split(""), MONTHS:"Januari Februari Mac April Mei Jun Julai Ogos September Oktober November Disember".split(" "), STANDALONEMONTHS:"Januari Februari Mac April Mei Jun Julai Ogos September Oktober November Disember".split(" "), SHORTMONTHS:"Jan Feb Mac Apr Mei Jun Jul Ogos Sep Okt Nov Dis".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mac Apr Mei Jun Jul Ogos Sep Okt Nov Dis".split(" "), 
WEEKDAYS:"Ahad Isnin Selasa Rabu Khamis Jumaat Sabtu".split(" "), STANDALONEWEEKDAYS:"Ahad Isnin Selasa Rabu Khamis Jumaat Sabtu".split(" "), SHORTWEEKDAYS:"Ahd Isn Sel Rab Kha Jum Sab".split(" "), STANDALONESHORTWEEKDAYS:"Ahd Isn Sel Rab Kha Jum Sab".split(" "), NARROWWEEKDAYS:"AISRKJS".split(""), STANDALONENARROWWEEKDAYS:"AISRKJS".split(""), SHORTQUARTERS:["Suku 1", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", 
"d MMMM y", "dd/MM/y", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:"JFMAM\u0120LASOND".split(""), STANDALONENARROWMONTHS:"JFMAM\u0120LASOND".split(""), MONTHS:"Jannar Frar Marzu April Mejju \u0120unju Lulju Awwissu Settembru Ottubru Novembru Di\u010bembru".split(" "), STANDALONEMONTHS:"Jannar Frar Marzu April Mejju \u0120unju Lulju Awwissu Settembru Ottubru Novembru Di\u010bembru".split(" "), SHORTMONTHS:"Jan Fra Mar Apr Mej \u0120un Lul Aww Set Ott Nov Di\u010b".split(" "), 
STANDALONESHORTMONTHS:"Jan Fra Mar Apr Mej \u0120un Lul Aww Set Ott Nov Di\u010b".split(" "), WEEKDAYS:"Il-\u0126add It-Tnejn It-Tlieta L-Erbg\u0127a Il-\u0126amis Il-\u0120img\u0127a Is-Sibt".split(" "), STANDALONEWEEKDAYS:"Il-\u0126add It-Tnejn It-Tlieta L-Erbg\u0127a Il-\u0126amis Il-\u0120img\u0127a Is-Sibt".split(" "), SHORTWEEKDAYS:"\u0126ad Tne Tli Erb \u0126am \u0120im Sib".split(" "), STANDALONESHORTWEEKDAYS:"\u0126ad Tne Tli Erb \u0126am \u0120im Sib".split(" "), NARROWWEEKDAYS:"\u0126TTE\u0126\u0120S".split(""), 
STANDALONENARROWWEEKDAYS:"\u0126TTE\u0126\u0120S".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["K1", "K2", "K3", "K4"], AMPMS:["QN", "WN"], DATEFORMATS:["EEEE, d 'ta'\u2019 MMMM y", "d 'ta'\u2019 MMMM y", "dd MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nb = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"januar februar mars april mai juni juli august september oktober november desember".split(" "), STANDALONEMONTHS:"januar februar mars april mai juni juli august september oktober november desember".split(" "), SHORTMONTHS:"jan. feb. mars apr. mai juni juli aug. sep. okt. nov. des.".split(" "), STANDALONESHORTMONTHS:"jan feb mar apr mai jun jul aug sep okt nov des".split(" "), 
WEEKDAYS:"s\u00f8ndag mandag tirsdag onsdag torsdag fredag l\u00f8rdag".split(" "), STANDALONEWEEKDAYS:"s\u00f8ndag mandag tirsdag onsdag torsdag fredag l\u00f8rdag".split(" "), SHORTWEEKDAYS:"s\u00f8n. man. tir. ons. tor. fre. l\u00f8r.".split(" "), STANDALONESHORTWEEKDAYS:"s\u00f8. ma. ti. on. to. fr. l\u00f8.".split(" "), NARROWWEEKDAYS:"SMTOTFL".split(""), STANDALONENARROWWEEKDAYS:"SMTOTFL".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", 
"4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v.Chr.", "n.Chr."], ERANAMES:["Voor Christus", "na Christus"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"januari februari maart april mei juni juli augustus september oktober november december".split(" "), STANDALONEMONTHS:"januari februari maart april mei juni juli augustus september oktober november december".split(" "), SHORTMONTHS:"jan. feb. mrt. apr. mei jun. jul. aug. sep. okt. nov. dec.".split(" "), 
STANDALONESHORTMONTHS:"jan feb mrt apr mei jun jul aug sep okt nov dec".split(" "), WEEKDAYS:"zondag maandag dinsdag woensdag donderdag vrijdag zaterdag".split(" "), STANDALONEWEEKDAYS:"zondag maandag dinsdag woensdag donderdag vrijdag zaterdag".split(" "), SHORTWEEKDAYS:"zo ma di wo do vr za".split(" "), STANDALONESHORTWEEKDAYS:"zo ma di wo do vr za".split(" "), NARROWWEEKDAYS:"ZMDWDVZ".split(""), STANDALONENARROWWEEKDAYS:"ZMDWDVZ".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", 
"2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"januar februar mars april mai juni juli august september oktober november desember".split(" "), STANDALONEMONTHS:"januar februar mars april mai juni juli august september oktober november desember".split(" "), SHORTMONTHS:"jan. feb. mars apr. mai juni juli aug. sep. okt. nov. des.".split(" "), STANDALONESHORTMONTHS:"jan feb mar apr mai jun jul aug sep okt nov des".split(" "), 
WEEKDAYS:"s\u00f8ndag mandag tirsdag onsdag torsdag fredag l\u00f8rdag".split(" "), STANDALONEWEEKDAYS:"s\u00f8ndag mandag tirsdag onsdag torsdag fredag l\u00f8rdag".split(" "), SHORTWEEKDAYS:"s\u00f8n. man. tir. ons. tor. fre. l\u00f8r.".split(" "), STANDALONESHORTWEEKDAYS:"s\u00f8. ma. ti. on. to. fr. l\u00f8.".split(" "), NARROWWEEKDAYS:"SMTOTFL".split(""), STANDALONENARROWWEEKDAYS:"SMTOTFL".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", 
"4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:"\u0b1c\u0b3e \u0b2b\u0b47 \u0b2e\u0b3e \u0b05 \u0b2e\u0b47 \u0b1c\u0b41 \u0b1c\u0b41 \u0b05 \u0b38\u0b47 \u0b05 \u0b28 \u0b21\u0b3f".split(" "), STANDALONENARROWMONTHS:"\u0b1c\u0b3e \u0b2b\u0b47 \u0b2e\u0b3e \u0b05 \u0b2e\u0b47 \u0b1c\u0b41 \u0b1c\u0b41 \u0b05 \u0b38\u0b47 \u0b05 \u0b28 \u0b21\u0b3f".split(" "), MONTHS:"\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40 \u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40 \u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a \u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32 \u0b2e\u0b47 \u0b1c\u0b41\u0b28 \u0b1c\u0b41\u0b32\u0b3e\u0b07 \u0b05\u0b17\u0b37\u0b4d\u0b1f \u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30 \u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30 \u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30 \u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30".split(" "), 
STANDALONEMONTHS:"\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40 \u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40 \u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a \u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32 \u0b2e\u0b47 \u0b1c\u0b41\u0b28 \u0b1c\u0b41\u0b32\u0b3e\u0b07 \u0b05\u0b17\u0b37\u0b4d\u0b1f \u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30 \u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30 \u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30 \u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30".split(" "), 
SHORTMONTHS:"\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40 \u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40 \u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a \u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32 \u0b2e\u0b47 \u0b1c\u0b41\u0b28 \u0b1c\u0b41\u0b32\u0b3e\u0b07 \u0b05\u0b17\u0b37\u0b4d\u0b1f \u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30 \u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30 \u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30 \u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30".split(" "), STANDALONESHORTMONTHS:"\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40 \u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40 \u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a \u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32 \u0b2e\u0b47 \u0b1c\u0b41\u0b28 \u0b1c\u0b41\u0b32\u0b3e\u0b07 \u0b05\u0b17\u0b37\u0b4d\u0b1f \u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30 \u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30 \u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30 \u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30".split(" "), 
WEEKDAYS:"\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30 \u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30 \u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30 \u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30 \u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30 \u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30 \u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30".split(" "), STANDALONEWEEKDAYS:"\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30 \u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30 \u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30 \u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30 \u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30 \u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30 \u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30".split(" "), 
SHORTWEEKDAYS:"\u0b30\u0b2c\u0b3f \u0b38\u0b4b\u0b2e \u0b2e\u0b19\u0b4d\u0b17\u0b33 \u0b2c\u0b41\u0b27 \u0b17\u0b41\u0b30\u0b41 \u0b36\u0b41\u0b15\u0b4d\u0b30 \u0b36\u0b28\u0b3f".split(" "), STANDALONESHORTWEEKDAYS:"\u0b30\u0b2c\u0b3f \u0b38\u0b4b\u0b2e \u0b2e\u0b19\u0b4d\u0b17\u0b33 \u0b2c\u0b41\u0b27 \u0b17\u0b41\u0b30\u0b41 \u0b36\u0b41\u0b15\u0b4d\u0b30 \u0b36\u0b28\u0b3f".split(" "), NARROWWEEKDAYS:"\u0b30 \u0b38\u0b4b \u0b2e \u0b2c\u0b41 \u0b17\u0b41 \u0b36\u0b41 \u0b36".split(" "), STANDALONENARROWWEEKDAYS:"\u0b30 \u0b38\u0b4b \u0b2e \u0b2c\u0b41 \u0b17\u0b41 \u0b36\u0b41 \u0b36".split(" "), 
SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["p.n.e.", "n.e."], NARROWMONTHS:"slmkmclswplg".split(""), STANDALONENARROWMONTHS:"slmkmclswplg".split(""), MONTHS:"stycznia lutego marca kwietnia maja czerwca lipca sierpnia wrze\u015bnia pa\u017adziernika listopada grudnia".split(" "), STANDALONEMONTHS:"stycze\u0144 luty marzec kwiecie\u0144 maj czerwiec lipiec sierpie\u0144 wrzesie\u0144 pa\u017adziernik listopad grudzie\u0144".split(" "), SHORTMONTHS:"sty lut mar kwi maj cze lip sie wrz pa\u017a lis gru".split(" "), 
STANDALONESHORTMONTHS:"sty lut mar kwi maj cze lip sie wrz pa\u017a lis gru".split(" "), WEEKDAYS:"niedziela poniedzia\u0142ek wtorek \u015broda czwartek pi\u0105tek sobota".split(" "), STANDALONEWEEKDAYS:"niedziela poniedzia\u0142ek wtorek \u015broda czwartek pi\u0105tek sobota".split(" "), SHORTWEEKDAYS:"niedz. pon. wt. \u015br. czw. pt. sob.".split(" "), STANDALONESHORTWEEKDAYS:"niedz. pon. wt. \u015br. czw. pt. sob.".split(" "), NARROWWEEKDAYS:"NPW\u015aCPS".split(""), STANDALONENARROWWEEKDAYS:"NPW\u015aCPS".split(""), 
SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"janeiro fevereiro mar\u00e7o abril maio junho julho agosto setembro outubro novembro dezembro".split(" "), STANDALONEMONTHS:"janeiro fevereiro mar\u00e7o abril maio junho julho agosto setembro outubro novembro dezembro".split(" "), SHORTMONTHS:"jan fev mar abr mai jun jul ago set out nov dez".split(" "), 
STANDALONESHORTMONTHS:"jan fev mar abr mai jun jul ago set out nov dez".split(" "), WEEKDAYS:"domingo segunda-feira ter\u00e7a-feira quarta-feira quinta-feira sexta-feira s\u00e1bado".split(" "), STANDALONEWEEKDAYS:"domingo segunda-feira ter\u00e7a-feira quarta-feira quinta-feira sexta-feira s\u00e1bado".split(" "), SHORTWEEKDAYS:"dom seg ter qua qui sex s\u00e1b".split(" "), STANDALONESHORTWEEKDAYS:"dom seg ter qua qui sex s\u00e1b".split(" "), NARROWWEEKDAYS:"DSTQQSS".split(""), STANDALONENARROWWEEKDAYS:"DSTQQSS".split(""), 
SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"Janeiro Fevereiro Mar\u00e7o Abril Maio Junho Julho Agosto Setembro Outubro Novembro Dezembro".split(" "), STANDALONEMONTHS:"Janeiro Fevereiro Mar\u00e7o Abril Maio Junho Julho Agosto Setembro Outubro Novembro Dezembro".split(" "), SHORTMONTHS:"Jan Fev Mar Abr Mai Jun Jul Ago Set Out Nov Dez".split(" "), 
STANDALONESHORTMONTHS:"Jan Fev Mar Abr Mai Jun Jul Ago Set Out Nov Dez".split(" "), WEEKDAYS:"Domingo Segunda-feira Ter\u00e7a-feira Quarta-feira Quinta-feira Sexta-feira S\u00e1bado".split(" "), STANDALONEWEEKDAYS:"Domingo Segunda-feira Ter\u00e7a-feira Quarta-feira Quinta-feira Sexta-feira S\u00e1bado".split(" "), SHORTWEEKDAYS:"dom seg ter qua qui sex s\u00e1b".split(" "), STANDALONESHORTWEEKDAYS:"dom seg ter qua qui sex s\u00e1b".split(" "), NARROWWEEKDAYS:"DSTQQSS".split(""), STANDALONENARROWWEEKDAYS:"DSTQQSS".split(""), 
SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.\u00ba trimestre", "2.\u00ba trimestre", "3.\u00ba trimestre", "4.\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} '\u00e0s' {0}", "{1} '\u00e0s' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["\u00ee.Hr.", "d.Hr."], ERANAMES:["\u00eenainte de Hristos", "dup\u0103 Hristos"], NARROWMONTHS:"IFMAMIIASOND".split(""), STANDALONENARROWMONTHS:"IFMAMIIASOND".split(""), MONTHS:"ianuarie februarie martie aprilie mai iunie iulie august septembrie octombrie noiembrie decembrie".split(" "), STANDALONEMONTHS:"ianuarie februarie martie aprilie mai iunie iulie august septembrie octombrie noiembrie decembrie".split(" "), SHORTMONTHS:"ian. feb. mar. apr. mai iun. iul. aug. sept. oct. nov. dec.".split(" "), 
STANDALONESHORTMONTHS:"ian. feb. mar. apr. mai iun. iul. aug. sept. oct. nov. dec.".split(" "), WEEKDAYS:"duminic\u0103 luni mar\u021bi miercuri joi vineri s\u00e2mb\u0103t\u0103".split(" "), STANDALONEWEEKDAYS:"duminic\u0103 luni mar\u021bi miercuri joi vineri s\u00e2mb\u0103t\u0103".split(" "), SHORTWEEKDAYS:"Du Lu Ma Mi Jo Vi S\u00e2".split(" "), STANDALONESHORTWEEKDAYS:"Du Lu Ma Mi Jo Vi S\u00e2".split(" "), NARROWWEEKDAYS:"DLMMJVS".split(""), STANDALONENARROWWEEKDAYS:"DLMMJVS".split(""), SHORTQUARTERS:["trim. I", 
"trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd.MM.y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], ERANAMES:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], NARROWMONTHS:"\u042f\u0424\u041c\u0410\u041c\u0418\u0418\u0410\u0421\u041e\u041d\u0414".split(""), STANDALONENARROWMONTHS:"\u042f\u0424\u041c\u0410\u041c\u0418\u0418\u0410\u0421\u041e\u041d\u0414".split(""), MONTHS:"\u044f\u043d\u0432\u0430\u0440\u044f \u0444\u0435\u0432\u0440\u0430\u043b\u044f \u043c\u0430\u0440\u0442\u0430 \u0430\u043f\u0440\u0435\u043b\u044f \u043c\u0430\u044f \u0438\u044e\u043d\u044f \u0438\u044e\u043b\u044f \u0430\u0432\u0433\u0443\u0441\u0442\u0430 \u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f \u043e\u043a\u0442\u044f\u0431\u0440\u044f \u043d\u043e\u044f\u0431\u0440\u044f \u0434\u0435\u043a\u0430\u0431\u0440\u044f".split(" "), 
STANDALONEMONTHS:"\u042f\u043d\u0432\u0430\u0440\u044c \u0424\u0435\u0432\u0440\u0430\u043b\u044c \u041c\u0430\u0440\u0442 \u0410\u043f\u0440\u0435\u043b\u044c \u041c\u0430\u0439 \u0418\u044e\u043d\u044c \u0418\u044e\u043b\u044c \u0410\u0432\u0433\u0443\u0441\u0442 \u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c \u041e\u043a\u0442\u044f\u0431\u0440\u044c \u041d\u043e\u044f\u0431\u0440\u044c \u0414\u0435\u043a\u0430\u0431\u0440\u044c".split(" "), SHORTMONTHS:"\u044f\u043d\u0432. \u0444\u0435\u0432\u0440. \u043c\u0430\u0440\u0442\u0430 \u0430\u043f\u0440. \u043c\u0430\u044f \u0438\u044e\u043d\u044f \u0438\u044e\u043b\u044f \u0430\u0432\u0433. \u0441\u0435\u043d\u0442. \u043e\u043a\u0442. \u043d\u043e\u044f\u0431. \u0434\u0435\u043a.".split(" "), 
STANDALONESHORTMONTHS:"\u042f\u043d\u0432. \u0424\u0435\u0432\u0440. \u041c\u0430\u0440\u0442 \u0410\u043f\u0440. \u041c\u0430\u0439 \u0418\u044e\u043d\u044c \u0418\u044e\u043b\u044c \u0410\u0432\u0433. \u0421\u0435\u043d\u0442. \u041e\u043a\u0442. \u041d\u043e\u044f\u0431. \u0414\u0435\u043a.".split(" "), WEEKDAYS:"\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435 \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a \u0432\u0442\u043e\u0440\u043d\u0438\u043a \u0441\u0440\u0435\u0434\u0430 \u0447\u0435\u0442\u0432\u0435\u0440\u0433 \u043f\u044f\u0442\u043d\u0438\u0446\u0430 \u0441\u0443\u0431\u0431\u043e\u0442\u0430".split(" "), 
STANDALONEWEEKDAYS:"\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435 \u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a \u0412\u0442\u043e\u0440\u043d\u0438\u043a \u0421\u0440\u0435\u0434\u0430 \u0427\u0435\u0442\u0432\u0435\u0440\u0433 \u041f\u044f\u0442\u043d\u0438\u0446\u0430 \u0421\u0443\u0431\u0431\u043e\u0442\u0430".split(" "), SHORTWEEKDAYS:"\u0432\u0441 \u043f\u043d \u0432\u0442 \u0441\u0440 \u0447\u0442 \u043f\u0442 \u0441\u0431".split(" "), STANDALONESHORTWEEKDAYS:"\u0412\u0441 \u041f\u043d \u0412\u0442 \u0421\u0440 \u0427\u0442 \u041f\u0442 \u0421\u0431".split(" "), 
NARROWWEEKDAYS:"\u0432\u0441 \u043f\u043d \u0432\u0442 \u0441\u0440 \u0447\u0442 \u043f\u0442 \u0441\u0431".split(" "), STANDALONENARROWWEEKDAYS:"\u0412\u041f\u0412\u0421\u0427\u041f\u0421".split(""), SHORTQUARTERS:["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."], QUARTERS:["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], 
AMPMS:["\u0434\u043e \u043f\u043e\u043b\u0443\u0434\u043d\u044f", "\u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0434\u043d\u044f"], DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "dd MMM y '\u0433'.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred n.l.", "n.l."], ERANAMES:["pred n.l.", "n.l."], NARROWMONTHS:"jfmamjjasond".split(""), STANDALONENARROWMONTHS:"jfmamjjasond".split(""), MONTHS:"janu\u00e1ra febru\u00e1ra marca apr\u00edla m\u00e1ja j\u00fana j\u00fala augusta septembra okt\u00f3bra novembra decembra".split(" "), STANDALONEMONTHS:"janu\u00e1r febru\u00e1r marec apr\u00edl m\u00e1j j\u00fan j\u00fal august september okt\u00f3ber november december".split(" "), SHORTMONTHS:"jan feb mar apr m\u00e1j j\u00fan j\u00fal aug sep okt nov dec".split(" "), 
STANDALONESHORTMONTHS:"jan feb mar apr m\u00e1j j\u00fan j\u00fal aug sep okt nov dec".split(" "), WEEKDAYS:"nede\u013ea pondelok utorok streda \u0161tvrtok piatok sobota".split(" "), STANDALONEWEEKDAYS:"nede\u013ea pondelok utorok streda \u0161tvrtok piatok sobota".split(" "), SHORTWEEKDAYS:"ne po ut st \u0161t pi so".split(" "), STANDALONESHORTWEEKDAYS:"ne po ut st \u0161t pi so".split(" "), NARROWWEEKDAYS:"NPUS\u0160PS".split(""), STANDALONENARROWWEEKDAYS:"NPUS\u0160PS".split(""), SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"], AMPMS:["dopoludnia", "popoludn\u00ed"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. n. \u0161t.", "po Kr."], ERANAMES:["pred na\u0161im \u0161tetjem", "na\u0161e \u0161tetje"], NARROWMONTHS:"jfmamjjasond".split(""), STANDALONENARROWMONTHS:"jfmamjjasond".split(""), MONTHS:"januar februar marec april maj junij julij avgust september oktober november december".split(" "), STANDALONEMONTHS:"januar februar marec april maj junij julij avgust september oktober november december".split(" "), SHORTMONTHS:"jan. feb. mar. apr. maj jun. jul. avg. sep. okt. nov. dec.".split(" "), 
STANDALONESHORTMONTHS:"jan feb mar apr maj jun jul avg sep okt nov dec".split(" "), WEEKDAYS:"nedelja ponedeljek torek sreda \u010detrtek petek sobota".split(" "), STANDALONEWEEKDAYS:"nedelja ponedeljek torek sreda \u010detrtek petek sobota".split(" "), SHORTWEEKDAYS:"ned. pon. tor. sre. \u010det. pet. sob.".split(" "), STANDALONESHORTWEEKDAYS:"ned pon tor sre \u010det pet sob".split(" "), NARROWWEEKDAYS:"npts\u010dps".split(""), STANDALONENARROWWEEKDAYS:"npts\u010dps".split(""), SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM y", "d. MM. yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.e.r.", "n.e.r."], ERANAMES:["p.e.r.", "n.e.r."], NARROWMONTHS:"JSMPMQKGSTND".split(""), STANDALONENARROWMONTHS:"JSMPMQKGSTND".split(""), MONTHS:"janar shkurt mars prill maj qershor korrik gusht shtator tetor n\u00ebntor dhjetor".split(" "), STANDALONEMONTHS:"janar shkurt mars prill maj qershor korrik gusht shtator tetor n\u00ebntor dhjetor".split(" "), SHORTMONTHS:"Jan Shk Mar Pri Maj Qer Kor Gsh Sht Tet N\u00ebn Dhj".split(" "), STANDALONESHORTMONTHS:"Jan Shk Mar Pri Maj Qer Kor Gsh Sht Tet N\u00ebn Dhj".split(" "), 
WEEKDAYS:"e diel;e h\u00ebn\u00eb;e mart\u00eb;e m\u00ebrkur\u00eb;e enjte;e premte;e shtun\u00eb".split(";"), STANDALONEWEEKDAYS:"e diel;e h\u00ebn\u00eb;e mart\u00eb;e m\u00ebrkur\u00eb;e enjte;e premte;e shtun\u00eb".split(";"), SHORTWEEKDAYS:"Die H\u00ebn Mar M\u00ebr Enj Pre Sht".split(" "), STANDALONESHORTWEEKDAYS:"Die H\u00ebn Mar M\u00ebr Enj Pre Sht".split(" "), NARROWWEEKDAYS:"DHMMEPS".split(""), STANDALONENARROWWEEKDAYS:"DHMMEPS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", 
"Q2", "Q3", "Q4"], AMPMS:["PD", "MD"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "y-MM-dd", "yy-MM-dd"], TIMEFORMATS:["h.mm.ss.a zzzz", "h.mm.ss.a z", "h.mm.ss.a", "h.mm.a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["\u043f. \u043d. \u0435.", "\u043d. \u0435."], ERANAMES:["\u041f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435", "\u041d\u043e\u0432\u0435 \u0435\u0440\u0435"], NARROWMONTHS:"\u0458\u0444\u043c\u0430\u043c\u0458\u0458\u0430\u0441\u043e\u043d\u0434".split(""), STANDALONENARROWMONTHS:"\u0458\u0444\u043c\u0430\u043c\u0458\u0458\u0430\u0441\u043e\u043d\u0434".split(""), MONTHS:"\u0458\u0430\u043d\u0443\u0430\u0440 \u0444\u0435\u0431\u0440\u0443\u0430\u0440 \u043c\u0430\u0440\u0442 \u0430\u043f\u0440\u0438\u043b \u043c\u0430\u0458 \u0458\u0443\u043d \u0458\u0443\u043b \u0430\u0432\u0433\u0443\u0441\u0442 \u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440 \u043e\u043a\u0442\u043e\u0431\u0430\u0440 \u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440 \u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440".split(" "), 
STANDALONEMONTHS:"\u0458\u0430\u043d\u0443\u0430\u0440 \u0444\u0435\u0431\u0440\u0443\u0430\u0440 \u043c\u0430\u0440\u0442 \u0430\u043f\u0440\u0438\u043b \u043c\u0430\u0458 \u0458\u0443\u043d \u0458\u0443\u043b \u0430\u0432\u0433\u0443\u0441\u0442 \u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440 \u043e\u043a\u0442\u043e\u0431\u0430\u0440 \u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440 \u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440".split(" "), SHORTMONTHS:"\u0458\u0430\u043d \u0444\u0435\u0431 \u043c\u0430\u0440 \u0430\u043f\u0440 \u043c\u0430\u0458 \u0458\u0443\u043d \u0458\u0443\u043b \u0430\u0432\u0433 \u0441\u0435\u043f \u043e\u043a\u0442 \u043d\u043e\u0432 \u0434\u0435\u0446".split(" "), 
STANDALONESHORTMONTHS:"\u0458\u0430\u043d \u0444\u0435\u0431 \u043c\u0430\u0440 \u0430\u043f\u0440 \u043c\u0430\u0458 \u0458\u0443\u043d \u0458\u0443\u043b \u0430\u0432\u0433 \u0441\u0435\u043f \u043e\u043a\u0442 \u043d\u043e\u0432 \u0434\u0435\u0446".split(" "), WEEKDAYS:"\u043d\u0435\u0434\u0435\u0459\u0430 \u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a \u0443\u0442\u043e\u0440\u0430\u043a \u0441\u0440\u0435\u0434\u0430 \u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a \u043f\u0435\u0442\u0430\u043a \u0441\u0443\u0431\u043e\u0442\u0430".split(" "), 
STANDALONEWEEKDAYS:"\u043d\u0435\u0434\u0435\u0459\u0430 \u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a \u0443\u0442\u043e\u0440\u0430\u043a \u0441\u0440\u0435\u0434\u0430 \u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a \u043f\u0435\u0442\u0430\u043a \u0441\u0443\u0431\u043e\u0442\u0430".split(" "), SHORTWEEKDAYS:"\u043d\u0435\u0434 \u043f\u043e\u043d \u0443\u0442\u043e \u0441\u0440\u0435 \u0447\u0435\u0442 \u043f\u0435\u0442 \u0441\u0443\u0431".split(" "), STANDALONESHORTWEEKDAYS:"\u043d\u0435\u0434 \u043f\u043e\u043d \u0443\u0442\u043e \u0441\u0440\u0435 \u0447\u0435\u0442 \u043f\u0435\u0442 \u0441\u0443\u0431".split(" "), 
NARROWWEEKDAYS:"\u043d\u043f\u0443\u0441\u0447\u043f\u0441".split(""), STANDALONENARROWWEEKDAYS:"\u043d\u043f\u0443\u0441\u0447\u043f\u0441".split(""), SHORTQUARTERS:["\u041a1", "\u041a2", "\u041a3", "\u041a4"], QUARTERS:["\u041f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0414\u0440\u0443\u0433\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0422\u0440\u0435\u045b\u0435 \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", 
"\u0427\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435 \u043f\u043e\u0434\u043d\u0435", "\u043f\u043e\u043f\u043e\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f\u00f6re Kristus", "efter Kristus"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"januari februari mars april maj juni juli augusti september oktober november december".split(" "), STANDALONEMONTHS:"Januari Februari Mars April Maj Juni Juli Augusti September Oktober November December".split(" "), SHORTMONTHS:"jan feb mar apr maj jun jul aug sep okt nov dec".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mar Apr Maj Jun Jul Aug Sep Okt Nov Dec".split(" "), 
WEEKDAYS:"s\u00f6ndag m\u00e5ndag tisdag onsdag torsdag fredag l\u00f6rdag".split(" "), STANDALONEWEEKDAYS:"S\u00f6ndag M\u00e5ndag Tisdag Onsdag Torsdag Fredag L\u00f6rdag".split(" "), SHORTWEEKDAYS:"s\u00f6n m\u00e5n tis ons tors fre l\u00f6r".split(" "), STANDALONESHORTWEEKDAYS:"S\u00f6n M\u00e5n Tis Ons Tor Fre L\u00f6r".split(" "), NARROWWEEKDAYS:"SMTOTFL".split(""), STANDALONENARROWWEEKDAYS:"SMTOTFL".split(""), SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", 
"3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE'en' 'den' d:'e' MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["KK", "BK"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"Januari Februari Machi Aprili Mei Juni Julai Agosti Septemba Oktoba Novemba Desemba".split(" "), STANDALONEMONTHS:"Januari Februari Machi Aprili Mei Juni Julai Agosti Septemba Oktoba Novemba Desemba".split(" "), SHORTMONTHS:"Jan Feb Mac Apr Mei Jun Jul Ago Sep Okt Nov Des".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mac Apr Mei Jun Jul Ago Sep Okt Nov Des".split(" "), 
WEEKDAYS:"Jumapili Jumatatu Jumanne Jumatano Alhamisi Ijumaa Jumamosi".split(" "), STANDALONEWEEKDAYS:"Jumapili Jumatatu Jumanne Jumatano Alhamisi Ijumaa Jumamosi".split(" "), SHORTWEEKDAYS:"J2 J3 J4 J5 Alh Ij J1".split(" "), STANDALONESHORTWEEKDAYS:"J2 J3 J4 J5 Alh Ij J1".split(" "), NARROWWEEKDAYS:"2345AI1".split(""), STANDALONENARROWWEEKDAYS:"2345AI1".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Robo 1", "Robo 2", "Robo 3", "Robo 4"], AMPMS:["asubuhi", "alasiri"], DATEFORMATS:["EEEE, d MMMM y", 
"d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."], ERANAMES:["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"], NARROWMONTHS:"\u0b9c \u0baa\u0bbf \u0bae\u0bbe \u0b8f \u0bae\u0bc7 \u0b9c\u0bc2 \u0b9c\u0bc2 \u0b86 \u0b9a\u0bc6 \u0b85 \u0ba8 \u0b9f\u0bbf".split(" "), STANDALONENARROWMONTHS:"\u0b9c \u0baa\u0bbf \u0bae\u0bbe \u0b8f \u0bae\u0bc7 \u0b9c\u0bc2 \u0b9c\u0bc2 \u0b86 \u0b9a\u0bc6 \u0b85 \u0ba8 \u0b9f\u0bbf".split(" "), 
MONTHS:"\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf \u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf \u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd \u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd \u0bae\u0bc7 \u0b9c\u0bc2\u0ba9\u0bcd \u0b9c\u0bc2\u0bb2\u0bc8 \u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd \u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd \u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd \u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd \u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd".split(" "), STANDALONEMONTHS:"\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf \u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf \u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd \u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd \u0bae\u0bc7 \u0b9c\u0bc2\u0ba9\u0bcd \u0b9c\u0bc2\u0bb2\u0bc8 \u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bc1 \u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd \u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd \u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd \u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd".split(" "), 
SHORTMONTHS:"\u0b9c\u0ba9. \u0baa\u0bbf\u0baa\u0bcd. \u0bae\u0bbe\u0bb0\u0bcd. \u0b8f\u0baa\u0bcd. \u0bae\u0bc7 \u0b9c\u0bc2\u0ba9\u0bcd \u0b9c\u0bc2\u0bb2\u0bc8 \u0b86\u0b95. \u0b9a\u0bc6\u0baa\u0bcd. \u0b85\u0b95\u0bcd. \u0ba8\u0bb5. \u0b9f\u0bbf\u0b9a.".split(" "), STANDALONESHORTMONTHS:"\u0b9c\u0ba9. \u0baa\u0bbf\u0baa\u0bcd. \u0bae\u0bbe\u0bb0\u0bcd. \u0b8f\u0baa\u0bcd. \u0bae\u0bc7 \u0b9c\u0bc2\u0ba9\u0bcd \u0b9c\u0bc2\u0bb2\u0bc8 \u0b86\u0b95. \u0b9a\u0bc6\u0baa\u0bcd. \u0b85\u0b95\u0bcd. \u0ba8\u0bb5. \u0b9f\u0bbf\u0b9a.".split(" "), 
WEEKDAYS:"\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1 \u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd \u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd \u0baa\u0bc1\u0ba4\u0ba9\u0bcd \u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd \u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf \u0b9a\u0ba9\u0bbf".split(" "), STANDALONEWEEKDAYS:"\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1 \u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd \u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd \u0baa\u0bc1\u0ba4\u0ba9\u0bcd \u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd \u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf \u0b9a\u0ba9\u0bbf".split(" "), 
SHORTWEEKDAYS:"\u0b9e\u0bbe \u0ba4\u0bbf \u0b9a\u0bc6 \u0baa\u0bc1 \u0bb5\u0bbf \u0bb5\u0bc6 \u0b9a".split(" "), STANDALONESHORTWEEKDAYS:"\u0b9e\u0bbe \u0ba4\u0bbf \u0b9a\u0bc6 \u0baa\u0bc1 \u0bb5\u0bbf \u0bb5\u0bc6 \u0b9a".split(" "), NARROWWEEKDAYS:"\u0b9e\u0bbe \u0ba4\u0bbf \u0b9a\u0bc6 \u0baa\u0bc1 \u0bb5\u0bbf \u0bb5\u0bc6 \u0b9a".split(" "), STANDALONENARROWWEEKDAYS:"\u0b9e\u0bbe \u0ba4\u0bbf \u0b9a\u0bc6 \u0baa\u0bc1 \u0bb5\u0bbf \u0bb5\u0bc6 \u0b9a".split(" "), SHORTQUARTERS:["\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc11", 
"\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc12", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc13", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc14"], QUARTERS:["\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"], 
AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["\u0c15\u0c4d\u0c30\u0c40\u0c2a\u0c42", "\u0c15\u0c4d\u0c30\u0c40\u0c36"], ERANAMES:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], NARROWMONTHS:"\u0c1c \u0c2b\u0c3f \u0c2e\u0c3e \u0c0f \u0c2e\u0c47 \u0c1c\u0c42 \u0c1c\u0c41 \u0c06 \u0c38\u0c46 \u0c05 \u0c28 \u0c21\u0c3f".split(" "), STANDALONENARROWMONTHS:"\u0c1c \u0c2b\u0c3f \u0c2e\u0c3e \u0c0f \u0c2e\u0c47 \u0c1c\u0c41 \u0c1c\u0c41 \u0c06 \u0c38\u0c46 \u0c05 \u0c28 \u0c21\u0c3f".split(" "), 
MONTHS:"\u0c1c\u0c28\u0c35\u0c30\u0c3f \u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f \u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f \u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d \u0c2e\u0c47 \u0c1c\u0c42\u0c28\u0c4d \u0c1c\u0c42\u0c32\u0c48 \u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41 \u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d \u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d \u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d \u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d".split(" "), STANDALONEMONTHS:"\u0c1c\u0c28\u0c35\u0c30\u0c3f \u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f \u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f \u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d \u0c2e\u0c47 \u0c1c\u0c42\u0c28\u0c4d \u0c1c\u0c42\u0c32\u0c48 \u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41 \u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d \u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d \u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d \u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d".split(" "), 
SHORTMONTHS:"\u0c1c\u0c28 \u0c2b\u0c3f\u0c2c\u0c4d\u0c30 \u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f \u0c0f\u0c2a\u0c4d\u0c30\u0c3f \u0c2e\u0c47 \u0c1c\u0c42\u0c28\u0c4d \u0c1c\u0c42\u0c32\u0c48 \u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41 \u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d \u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d \u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d \u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d".split(" "), STANDALONESHORTMONTHS:"\u0c1c\u0c28 \u0c2b\u0c3f\u0c2c\u0c4d\u0c30 \u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f \u0c0f\u0c2a\u0c4d\u0c30\u0c3f \u0c2e\u0c47 \u0c1c\u0c42\u0c28\u0c4d \u0c1c\u0c42\u0c32\u0c48 \u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41 \u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02 \u0c05\u0c15\u0c4d\u0c1f\u0c4b \u0c28\u0c35\u0c02 \u0c21\u0c3f\u0c38\u0c46\u0c02".split(" "), 
WEEKDAYS:"\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02 \u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02 \u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02 \u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02 \u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02 \u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02 \u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02".split(" "), STANDALONEWEEKDAYS:"\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02 \u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02 \u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02 \u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02 \u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02 \u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02 \u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02".split(" "), 
SHORTWEEKDAYS:"\u0c06\u0c26\u0c3f \u0c38\u0c4b\u0c2e \u0c2e\u0c02\u0c17\u0c33 \u0c2c\u0c41\u0c27 \u0c17\u0c41\u0c30\u0c41 \u0c36\u0c41\u0c15\u0c4d\u0c30 \u0c36\u0c28\u0c3f".split(" "), STANDALONESHORTWEEKDAYS:"\u0c06\u0c26\u0c3f \u0c38\u0c4b\u0c2e \u0c2e\u0c02\u0c17\u0c33 \u0c2c\u0c41\u0c27 \u0c17\u0c41\u0c30\u0c41 \u0c36\u0c41\u0c15\u0c4d\u0c30 \u0c36\u0c28\u0c3f".split(" "), NARROWWEEKDAYS:"\u0c06 \u0c38\u0c4b \u0c2e \u0c2c\u0c41 \u0c17\u0c41 \u0c36\u0c41 \u0c36".split(" "), STANDALONENARROWWEEKDAYS:"\u0c06 \u0c38\u0c4b \u0c2e \u0c2c\u0c41 \u0c17\u0c41 \u0c36\u0c41 \u0c36".split(" "), 
SHORTQUARTERS:["\u0c24\u0c4d\u0c30\u0c481", "\u0c24\u0c4d\u0c30\u0c482", "\u0c24\u0c4d\u0c30\u0c483", "\u0c24\u0c4d\u0c30\u0c484"], QUARTERS:["1\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "2\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "3\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "4\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19 \u0e04.\u0e28.", "\u0e04.\u0e28."], ERANAMES:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"], NARROWMONTHS:"\u0e21.\u0e04. \u0e01.\u0e1e. \u0e21\u0e35.\u0e04. \u0e40\u0e21.\u0e22. \u0e1e.\u0e04. \u0e21\u0e34.\u0e22 \u0e01.\u0e04. \u0e2a.\u0e04. \u0e01.\u0e22. \u0e15.\u0e04. \u0e1e.\u0e22. \u0e18.\u0e04.".split(" "), 
STANDALONENARROWMONTHS:"\u0e21.\u0e04. \u0e01.\u0e1e. \u0e21\u0e35.\u0e04. \u0e40\u0e21.\u0e22. \u0e1e.\u0e04. \u0e21\u0e34.\u0e22. \u0e01.\u0e04. \u0e2a.\u0e04. \u0e01.\u0e22. \u0e15.\u0e04. \u0e1e.\u0e22. \u0e18.\u0e04.".split(" "), MONTHS:"\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21 \u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c \u0e21\u0e35\u0e19\u0e32\u0e04\u0e21 \u0e40\u0e21\u0e29\u0e32\u0e22\u0e19 \u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21 \u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19 \u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21 \u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21 \u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19 \u0e15\u0e38\u0e25\u0e32\u0e04\u0e21 \u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19 \u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21".split(" "), 
STANDALONEMONTHS:"\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21 \u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c \u0e21\u0e35\u0e19\u0e32\u0e04\u0e21 \u0e40\u0e21\u0e29\u0e32\u0e22\u0e19 \u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21 \u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19 \u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21 \u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21 \u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19 \u0e15\u0e38\u0e25\u0e32\u0e04\u0e21 \u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19 \u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21".split(" "), 
SHORTMONTHS:"\u0e21.\u0e04. \u0e01.\u0e1e. \u0e21\u0e35.\u0e04. \u0e40\u0e21.\u0e22. \u0e1e.\u0e04. \u0e21\u0e34.\u0e22. \u0e01.\u0e04. \u0e2a.\u0e04. \u0e01.\u0e22. \u0e15.\u0e04. \u0e1e.\u0e22. \u0e18.\u0e04.".split(" "), STANDALONESHORTMONTHS:"\u0e21.\u0e04. \u0e01.\u0e1e. \u0e21\u0e35.\u0e04. \u0e40\u0e21.\u0e22. \u0e1e.\u0e04. \u0e21\u0e34.\u0e22. \u0e01.\u0e04. \u0e2a.\u0e04. \u0e01.\u0e22. \u0e15.\u0e04. \u0e1e.\u0e22. \u0e18.\u0e04.".split(" "), WEEKDAYS:"\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c \u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c \u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23 \u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18 \u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35 \u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c \u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c".split(" "), 
STANDALONEWEEKDAYS:"\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c \u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c \u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23 \u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18 \u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35 \u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c \u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c".split(" "), SHORTWEEKDAYS:"\u0e2d\u0e32. \u0e08. \u0e2d. \u0e1e. \u0e1e\u0e24. \u0e28. \u0e2a.".split(" "), 
STANDALONESHORTWEEKDAYS:"\u0e2d\u0e32. \u0e08. \u0e2d. \u0e1e. \u0e1e\u0e24. \u0e28. \u0e2a.".split(" "), NARROWWEEKDAYS:"\u0e2d\u0e32. \u0e08. \u0e2d. \u0e1e. \u0e1e\u0e24. \u0e28. \u0e2a.".split(" "), STANDALONENARROWWEEKDAYS:"\u0e2d\u0e32. \u0e08. \u0e2d. \u0e1e. \u0e1e\u0e24. \u0e28. \u0e2a.".split(" "), SHORTQUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], QUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", 
"\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], AMPMS:["\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07", "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"], DATEFORMATS:["EEEE\u0e17\u0e35\u0e48 d MMMM G y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 zzzz", "H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:"EPMAMHHASOND".split(""), STANDALONENARROWMONTHS:"EPMAMHHASOND".split(""), MONTHS:"Enero Pebrero Marso Abril Mayo Hunyo Hulyo Agosto Setyembre Oktubre Nobyembre Disyembre".split(" "), STANDALONEMONTHS:"Enero Pebrero Marso Abril Mayo Hunyo Hulyo Agosto Setyembre Oktubre Nobyembre Disyembre".split(" "), SHORTMONTHS:"Ene Peb Mar Abr May Hun Hul Ago Set Okt Nob Dis".split(" "), STANDALONESHORTMONTHS:"Ene Peb Mar Abr May Hun Hul Ago Set Okt Nob Dis".split(" "), 
WEEKDAYS:"Linggo Lunes Martes Miyerkules Huwebes Biyernes Sabado".split(" "), STANDALONEWEEKDAYS:"Linggo Lunes Martes Miyerkules Huwebes Biyernes Sabado".split(" "), SHORTWEEKDAYS:"Lin Lun Mar Mye Huw Bye Sab".split(" "), STANDALONESHORTWEEKDAYS:"Lin Lun Mar Miy Huw Biy Sab".split(" "), NARROWWEEKDAYS:"LLMMHBS".split(""), STANDALONENARROWWEEKDAYS:"LLMMHBS".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 sangkapat", "ika-2 sangkapat", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", 
"PM"], DATEFORMATS:["EEEE, MMMM dd y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["M\u00d6", "MS"], ERANAMES:["Milattan \u00d6nce", "Milattan Sonra"], NARROWMONTHS:"O\u015eMNMHTAEEKA".split(""), STANDALONENARROWMONTHS:"O\u015eMNMHTAEEKA".split(""), MONTHS:"Ocak \u015eubat Mart Nisan May\u0131s Haziran Temmuz A\u011fustos Eyl\u00fcl Ekim Kas\u0131m Aral\u0131k".split(" "), STANDALONEMONTHS:"Ocak \u015eubat Mart Nisan May\u0131s Haziran Temmuz A\u011fustos Eyl\u00fcl Ekim Kas\u0131m Aral\u0131k".split(" "), SHORTMONTHS:"Oca \u015eub Mar Nis May Haz Tem A\u011fu Eyl Eki Kas Ara".split(" "), 
STANDALONESHORTMONTHS:"Oca \u015eub Mar Nis May Haz Tem A\u011fu Eyl Eki Kas Ara".split(" "), WEEKDAYS:"Pazar Pazartesi Sal\u0131 \u00c7ar\u015famba Per\u015fembe Cuma Cumartesi".split(" "), STANDALONEWEEKDAYS:"Pazar Pazartesi Sal\u0131 \u00c7ar\u015famba Per\u015fembe Cuma Cumartesi".split(" "), SHORTWEEKDAYS:"Paz Pzt Sal \u00c7ar Per Cum Cmt".split(" "), STANDALONESHORTWEEKDAYS:"Paz Pzt Sal \u00c7ar Per Cum Cmt".split(" "), NARROWWEEKDAYS:"PPS\u00c7PCC".split(""), STANDALONENARROWWEEKDAYS:"PPS\u00c7PCC".split(""), 
SHORTQUARTERS:["\u00c71", "\u00c72", "\u00c73", "\u00c74"], QUARTERS:["1. \u00e7eyrek", "2. \u00e7eyrek", "3. \u00e7eyrek", "4. \u00e7eyrek"], AMPMS:["\u00d6\u00d6", "\u00d6S"], DATEFORMATS:["d MMMM y EEEE", "d MMMM y", "d MMM y", "d MM y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"], NARROWMONTHS:"\u0421\u041b\u0411\u041a\u0422\u0427\u041b\u0421\u0412\u0416\u041b\u0413".split(""), STANDALONENARROWMONTHS:"\u0421\u041b\u0411\u041a\u0422\u0427\u041b\u0421\u0412\u0416\u041b\u0413".split(""), MONTHS:"\u0441\u0456\u0447\u043d\u044f \u043b\u044e\u0442\u043e\u0433\u043e \u0431\u0435\u0440\u0435\u0437\u043d\u044f \u043a\u0432\u0456\u0442\u043d\u044f \u0442\u0440\u0430\u0432\u043d\u044f \u0447\u0435\u0440\u0432\u043d\u044f \u043b\u0438\u043f\u043d\u044f \u0441\u0435\u0440\u043f\u043d\u044f \u0432\u0435\u0440\u0435\u0441\u043d\u044f \u0436\u043e\u0432\u0442\u043d\u044f \u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430 \u0433\u0440\u0443\u0434\u043d\u044f".split(" "), 
STANDALONEMONTHS:"\u0421\u0456\u0447\u0435\u043d\u044c \u041b\u044e\u0442\u0438\u0439 \u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c \u041a\u0432\u0456\u0442\u0435\u043d\u044c \u0422\u0440\u0430\u0432\u0435\u043d\u044c \u0427\u0435\u0440\u0432\u0435\u043d\u044c \u041b\u0438\u043f\u0435\u043d\u044c \u0421\u0435\u0440\u043f\u0435\u043d\u044c \u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c \u0416\u043e\u0432\u0442\u0435\u043d\u044c \u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434 \u0413\u0440\u0443\u0434\u0435\u043d\u044c".split(" "), 
SHORTMONTHS:"\u0441\u0456\u0447. \u043b\u044e\u0442. \u0431\u0435\u0440. \u043a\u0432\u0456\u0442. \u0442\u0440\u0430\u0432. \u0447\u0435\u0440\u0432. \u043b\u0438\u043f. \u0441\u0435\u0440\u043f. \u0432\u0435\u0440. \u0436\u043e\u0432\u0442. \u043b\u0438\u0441\u0442. \u0433\u0440\u0443\u0434.".split(" "), STANDALONESHORTMONTHS:"\u0421\u0456\u0447 \u041b\u044e\u0442 \u0411\u0435\u0440 \u041a\u0432\u0456 \u0422\u0440\u0430 \u0427\u0435\u0440 \u041b\u0438\u043f \u0421\u0435\u0440 \u0412\u0435\u0440 \u0416\u043e\u0432 \u041b\u0438\u0441 \u0413\u0440\u0443".split(" "), 
WEEKDAYS:"\u041d\u0435\u0434\u0456\u043b\u044f \u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a \u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a \u0421\u0435\u0440\u0435\u0434\u0430 \u0427\u0435\u0442\u0432\u0435\u0440 \u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f \u0421\u0443\u0431\u043e\u0442\u0430".split(" "), STANDALONEWEEKDAYS:"\u041d\u0435\u0434\u0456\u043b\u044f \u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a \u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a \u0421\u0435\u0440\u0435\u0434\u0430 \u0427\u0435\u0442\u0432\u0435\u0440 \u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f \u0421\u0443\u0431\u043e\u0442\u0430".split(" "), 
SHORTWEEKDAYS:"\u041d\u0434 \u041f\u043d \u0412\u0442 \u0421\u0440 \u0427\u0442 \u041f\u0442 \u0421\u0431".split(" "), STANDALONESHORTWEEKDAYS:"\u041d\u0434 \u041f\u043d \u0412\u0442 \u0421\u0440 \u0427\u0442 \u041f\u0442 \u0421\u0431".split(" "), NARROWWEEKDAYS:"\u041d\u041f\u0412\u0421\u0427\u041f\u0421".split(""), STANDALONENARROWWEEKDAYS:"\u041d\u041f\u0412\u0421\u0427\u041f\u0421".split(""), SHORTQUARTERS:["I \u043a\u0432.", "II \u043a\u0432.", "III \u043a\u0432.", "IV \u043a\u0432."], QUARTERS:["I \u043a\u0432\u0430\u0440\u0442\u0430\u043b", 
"II \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "III \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "IV \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], AMPMS:["\u0434\u043f", "\u043f\u043f"], DATEFORMATS:["EEEE, d MMMM y '\u0440'.", "d MMMM y '\u0440'.", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["\u0642 \u0645", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], ERANAMES:["\u0642\u0628\u0644 \u0645\u0633\u06cc\u062d", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"\u062c\u0646\u0648\u0631\u06cc \u0641\u0631\u0648\u0631\u06cc \u0645\u0627\u0631\u0686 \u0627\u067e\u0631\u06cc\u0644 \u0645\u0626 \u062c\u0648\u0646 \u062c\u0648\u0644\u0627\u0626 \u0627\u06af\u0633\u062a \u0633\u062a\u0645\u0628\u0631 \u0627\u06a9\u062a\u0648\u0628\u0631 \u0646\u0648\u0645\u0628\u0631 \u062f\u0633\u0645\u0628\u0631".split(" "), 
STANDALONEMONTHS:"\u062c\u0646\u0648\u0631\u06cc \u0641\u0631\u0648\u0631\u06cc \u0645\u0627\u0631\u0686 \u0627\u067e\u0631\u06cc\u0644 \u0645\u0626 \u062c\u0648\u0646 \u062c\u0648\u0644\u0627\u0626 \u0627\u06af\u0633\u062a \u0633\u062a\u0645\u0628\u0631 \u0627\u06a9\u062a\u0648\u0628\u0631 \u0646\u0648\u0645\u0628\u0631 \u062f\u0633\u0645\u0628\u0631".split(" "), SHORTMONTHS:"\u062c\u0646\u0648\u0631\u06cc \u0641\u0631\u0648\u0631\u06cc \u0645\u0627\u0631\u0686 \u0627\u067e\u0631\u06cc\u0644 \u0645\u0626 \u062c\u0648\u0646 \u062c\u0648\u0644\u0627\u0626 \u0627\u06af\u0633\u062a \u0633\u062a\u0645\u0628\u0631 \u0627\u06a9\u062a\u0648\u0628\u0631 \u0646\u0648\u0645\u0628\u0631 \u062f\u0633\u0645\u0628\u0631".split(" "), 
STANDALONESHORTMONTHS:"\u062c\u0646\u0648\u0631\u06cc \u0641\u0631\u0648\u0631\u06cc \u0645\u0627\u0631\u0686 \u0627\u067e\u0631\u06cc\u0644 \u0645\u0626 \u062c\u0648\u0646 \u062c\u0648\u0644\u0627\u0626 \u0627\u06af\u0633\u062a \u0633\u062a\u0645\u0628\u0631 \u0627\u06a9\u062a\u0648\u0628\u0631 \u0646\u0648\u0645\u0628\u0631 \u062f\u0633\u0645\u0628\u0631".split(" "), WEEKDAYS:"\u0627\u062a\u0648\u0627\u0631 \u067e\u06cc\u0631 \u0645\u0646\u06af\u0644 \u0628\u062f\u0647 \u062c\u0645\u0639\u0631\u0627\u062a \u062c\u0645\u0639\u06c1 \u06c1\u0641\u062a\u06c1".split(" "), 
STANDALONEWEEKDAYS:"\u0627\u062a\u0648\u0627\u0631 \u067e\u06cc\u0631 \u0645\u0646\u06af\u0644 \u0628\u062f\u0647 \u062c\u0645\u0639\u0631\u0627\u062a \u062c\u0645\u0639\u06c1 \u06c1\u0641\u062a\u06c1".split(" "), SHORTWEEKDAYS:"\u0627\u062a\u0648\u0627\u0631 \u067e\u06cc\u0631 \u0645\u0646\u06af\u0644 \u0628\u062f\u0647 \u062c\u0645\u0639\u0631\u0627\u062a \u062c\u0645\u0639\u06c1 \u06c1\u0641\u062a\u06c1".split(" "), STANDALONESHORTWEEKDAYS:"\u0627\u062a\u0648\u0627\u0631 \u067e\u06cc\u0631 \u0645\u0646\u06af\u0644 \u0628\u062f\u0647 \u062c\u0645\u0639\u0631\u0627\u062a \u062c\u0645\u0639\u06c1 \u06c1\u0641\u062a\u06c1".split(" "), 
NARROWWEEKDAYS:"SMTWTFS".split(""), STANDALONENARROWWEEKDAYS:"SMTWTFS".split(""), SHORTQUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], QUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", 
"\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], AMPMS:["\u0642\u0628\u0644 \u062f\u0648\u067e\u06c1\u0631", "\u0628\u0639\u062f \u062f\u0648\u067e\u06c1\u0631"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "d MMM\u060c y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_vi = {ERAS:["tr. CN", "sau CN"], ERANAMES:["tr. CN", "sau CN"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"th\u00e1ng m\u1ed9t;th\u00e1ng hai;th\u00e1ng ba;th\u00e1ng t\u01b0;th\u00e1ng n\u0103m;th\u00e1ng s\u00e1u;th\u00e1ng b\u1ea3y;th\u00e1ng t\u00e1m;th\u00e1ng ch\u00edn;th\u00e1ng m\u01b0\u1eddi;th\u00e1ng m\u01b0\u1eddi m\u1ed9t;th\u00e1ng m\u01b0\u1eddi hai".split(";"), STANDALONEMONTHS:"th\u00e1ng m\u1ed9t;th\u00e1ng hai;th\u00e1ng ba;th\u00e1ng t\u01b0;th\u00e1ng n\u0103m;th\u00e1ng s\u00e1u;th\u00e1ng b\u1ea3y;th\u00e1ng t\u00e1m;th\u00e1ng ch\u00edn;th\u00e1ng m\u01b0\u1eddi;th\u00e1ng m\u01b0\u1eddi m\u1ed9t;th\u00e1ng m\u01b0\u1eddi hai".split(";"), 
SHORTMONTHS:"thg 1;thg 2;thg 3;thg 4;thg 5;thg 6;thg 7;thg 8;thg 9;thg 10;thg 11;thg 12".split(";"), STANDALONESHORTMONTHS:"thg 1;thg 2;thg 3;thg 4;thg 5;thg 6;thg 7;thg 8;thg 9;thg 10;thg 11;thg 12".split(";"), WEEKDAYS:"Ch\u1ee7 nh\u1eadt;Th\u1ee9 hai;Th\u1ee9 ba;Th\u1ee9 t\u01b0;Th\u1ee9 n\u0103m;Th\u1ee9 s\u00e1u;Th\u1ee9 b\u1ea3y".split(";"), STANDALONEWEEKDAYS:"Ch\u1ee7 nh\u1eadt;Th\u1ee9 hai;Th\u1ee9 ba;Th\u1ee9 t\u01b0;Th\u1ee9 n\u0103m;Th\u1ee9 s\u00e1u;Th\u1ee9 b\u1ea3y".split(";"), SHORTWEEKDAYS:"CN;Th 2;Th 3;Th 4;Th 5;Th 6;Th 7".split(";"), 
STANDALONESHORTWEEKDAYS:"CN;Th 2;Th 3;Th 4;Th 5;Th 6;Th 7".split(";"), NARROWWEEKDAYS:"CN T2 T3 T4 T5 T6 T7".split(" "), STANDALONENARROWWEEKDAYS:"CN T2 T3 T4 T5 T6 T7".split(" "), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Qu\u00fd 1", "Qu\u00fd 2", "Qu\u00fd 3", "Qu\u00fd 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, 'ng\u00e0y' dd MMMM 'n\u0103m' y", "'Ng\u00e0y' dd 'th\u00e1ng' M 'n\u0103m' y", "dd-MM-y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{0} {1}", 
"{0} {1}", "{0} {1}", "{0} {1}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["\u516c\u5143\u524d", "\u516c\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"\u4e00\u6708 \u4e8c\u6708 \u4e09\u6708 \u56db\u6708 \u4e94\u6708 \u516d\u6708 \u4e03\u6708 \u516b\u6708 \u4e5d\u6708 \u5341\u6708 \u5341\u4e00\u6708 \u5341\u4e8c\u6708".split(" "), STANDALONEMONTHS:"\u4e00\u6708 \u4e8c\u6708 \u4e09\u6708 \u56db\u6708 \u4e94\u6708 \u516d\u6708 \u4e03\u6708 \u516b\u6708 \u4e5d\u6708 \u5341\u6708 \u5341\u4e00\u6708 \u5341\u4e8c\u6708".split(" "), 
SHORTMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), STANDALONESHORTMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), WEEKDAYS:"\u661f\u671f\u65e5 \u661f\u671f\u4e00 \u661f\u671f\u4e8c \u661f\u671f\u4e09 \u661f\u671f\u56db \u661f\u671f\u4e94 \u661f\u671f\u516d".split(" "), STANDALONEWEEKDAYS:"\u661f\u671f\u65e5 \u661f\u671f\u4e00 \u661f\u671f\u4e8c \u661f\u671f\u4e09 \u661f\u671f\u56db \u661f\u671f\u4e94 \u661f\u671f\u516d".split(" "), 
SHORTWEEKDAYS:"\u5468\u65e5 \u5468\u4e00 \u5468\u4e8c \u5468\u4e09 \u5468\u56db \u5468\u4e94 \u5468\u516d".split(" "), STANDALONESHORTWEEKDAYS:"\u5468\u65e5 \u5468\u4e00 \u5468\u4e8c \u5468\u4e09 \u5468\u56db \u5468\u4e94 \u5468\u516d".split(" "), NARROWWEEKDAYS:"\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d".split(""), STANDALONENARROWWEEKDAYS:"\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d".split(""), SHORTQUARTERS:["1\u5b63\u5ea6", "2\u5b63\u5ea6", "3\u5b63\u5ea6", "4\u5b63\u5ea6"], QUARTERS:["\u7b2c\u4e00\u5b63\u5ea6", 
"\u7b2c\u4e8c\u5b63\u5ea6", "\u7b2c\u4e09\u5b63\u5ea6", "\u7b2c\u56db\u5b63\u5ea6"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "yy-M-d"], TIMEFORMATS:["zzzzah:mm:ss", "zah:mm:ss", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1}{0}", "{1}{0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), STANDALONEMONTHS:"\u4e00\u6708 \u4e8c\u6708 \u4e09\u6708 \u56db\u6708 \u4e94\u6708 \u516d\u6708 \u4e03\u6708 \u516b\u6708 \u4e5d\u6708 \u5341\u6708 \u5341\u4e00\u6708 \u5341\u4e8c\u6708".split(" "), 
SHORTMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), STANDALONESHORTMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), WEEKDAYS:"\u661f\u671f\u65e5 \u661f\u671f\u4e00 \u661f\u671f\u4e8c \u661f\u671f\u4e09 \u661f\u671f\u56db \u661f\u671f\u4e94 \u661f\u671f\u516d".split(" "), STANDALONEWEEKDAYS:"\u661f\u671f\u65e5 \u661f\u671f\u4e00 \u661f\u671f\u4e8c \u661f\u671f\u4e09 \u661f\u671f\u56db \u661f\u671f\u4e94 \u661f\u671f\u516d".split(" "), 
SHORTWEEKDAYS:"\u9031\u65e5 \u9031\u4e00 \u9031\u4e8c \u9031\u4e09 \u9031\u56db \u9031\u4e94 \u9031\u516d".split(" "), STANDALONESHORTWEEKDAYS:"\u5468\u65e5 \u5468\u4e00 \u5468\u4e8c \u5468\u4e09 \u5468\u56db \u5468\u4e94 \u5468\u516d".split(" "), NARROWWEEKDAYS:"\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d".split(""), STANDALONENARROWWEEKDAYS:"\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d".split(""), SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", 
"\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "d/M/yy"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ahh:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}{0}", "{1}{0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), STANDALONENARROWMONTHS:"1 2 3 4 5 6 7 8 9 10 11 12".split(" "), MONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), STANDALONEMONTHS:"\u4e00\u6708 \u4e8c\u6708 \u4e09\u6708 \u56db\u6708 \u4e94\u6708 \u516d\u6708 \u4e03\u6708 \u516b\u6708 \u4e5d\u6708 \u5341\u6708 \u5341\u4e00\u6708 \u5341\u4e8c\u6708".split(" "), 
SHORTMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), STANDALONESHORTMONTHS:"1\u6708 2\u6708 3\u6708 4\u6708 5\u6708 6\u6708 7\u6708 8\u6708 9\u6708 10\u6708 11\u6708 12\u6708".split(" "), WEEKDAYS:"\u661f\u671f\u65e5 \u661f\u671f\u4e00 \u661f\u671f\u4e8c \u661f\u671f\u4e09 \u661f\u671f\u56db \u661f\u671f\u4e94 \u661f\u671f\u516d".split(" "), STANDALONEWEEKDAYS:"\u661f\u671f\u65e5 \u661f\u671f\u4e00 \u661f\u671f\u4e8c \u661f\u671f\u4e09 \u661f\u671f\u56db \u661f\u671f\u4e94 \u661f\u671f\u516d".split(" "), 
SHORTWEEKDAYS:"\u9031\u65e5 \u9031\u4e00 \u9031\u4e8c \u9031\u4e09 \u9031\u56db \u9031\u4e94 \u9031\u516d".split(" "), STANDALONESHORTWEEKDAYS:"\u5468\u65e5 \u5468\u4e00 \u5468\u4e8c \u5468\u4e09 \u5468\u56db \u5468\u4e94 \u5468\u516d".split(" "), NARROWWEEKDAYS:"\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d".split(""), STANDALONENARROWWEEKDAYS:"\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d".split(""), SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", 
"\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y/M/d", "y/M/d"], TIMEFORMATS:["zzzzah\u6642mm\u5206ss\u79d2", "zah\u6642mm\u5206ss\u79d2", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1}{0}", "{1}{0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:"JFMAMJJASOND".split(""), STANDALONENARROWMONTHS:"JFMAMJJASOND".split(""), MONTHS:"Januwari Februwari Mashi Apreli Meyi Juni Julayi Agasti Septhemba Okthoba Novemba Disemba".split(" "), STANDALONEMONTHS:"uJanuwari uFebruwari uMashi u-Apreli uMeyi uJuni uJulayi uAgasti uSepthemba u-Okthoba uNovemba uDisemba".split(" "), SHORTMONTHS:"Jan Feb Mas Apr Mey Jun Jul Aga Sep Okt Nov Dis".split(" "), STANDALONESHORTMONTHS:"Jan Feb Mas Apr Mey Jun Jul Aga Sep Okt Nov Dis".split(" "), 
WEEKDAYS:"Sonto Msombuluko Lwesibili Lwesithathu uLwesine Lwesihlanu Mgqibelo".split(" "), STANDALONEWEEKDAYS:"Sonto Msombuluko Lwesibili Lwesithathu uLwesine Lwesihlanu Mgqibelo".split(" "), SHORTWEEKDAYS:"Son Mso Bil Tha Sin Hla Mgq".split(" "), STANDALONESHORTWEEKDAYS:"Son Mso Bil Tha Sin Hla Mgq".split(" "), NARROWWEEKDAYS:"SMBTSHM".split(""), STANDALONENARROWWEEKDAYS:"SMBTSHM".split(""), SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota yoku-1", "ikota yesi-2", "ikota yesi-3", "ikota yesi-4"], 
AMPMS:["Ekuseni", "Ntambama"], DATEFORMATS:["EEEE dd MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols = "af" == goog.LOCALE ? goog.i18n.DateTimeSymbols_af : "am" == goog.LOCALE ? goog.i18n.DateTimeSymbols_am : "ar" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ar : "bg" == goog.LOCALE ? goog.i18n.DateTimeSymbols_bg : "bn" == goog.LOCALE ? goog.i18n.DateTimeSymbols_bn : "br" == goog.LOCALE ? goog.i18n.DateTimeSymbols_br : "ca" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ca : "chr" == goog.LOCALE ? goog.i18n.DateTimeSymbols_chr : "cs" == goog.LOCALE ? goog.i18n.DateTimeSymbols_cs : 
"cy" == goog.LOCALE ? goog.i18n.DateTimeSymbols_cy : "da" == goog.LOCALE ? goog.i18n.DateTimeSymbols_da : "de" == goog.LOCALE ? goog.i18n.DateTimeSymbols_de : "de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE ? goog.i18n.DateTimeSymbols_de_AT : "de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE ? goog.i18n.DateTimeSymbols_de : "el" == goog.LOCALE ? goog.i18n.DateTimeSymbols_el : "en" == goog.LOCALE ? goog.i18n.DateTimeSymbols_en : "en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE ? goog.i18n.DateTimeSymbols_en_AU : 
"en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE ? goog.i18n.DateTimeSymbols_en_GB : "en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE ? goog.i18n.DateTimeSymbols_en_IE : "en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE ? goog.i18n.DateTimeSymbols_en_IN : "en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE ? goog.i18n.DateTimeSymbols_en_SG : "en_US" == goog.LOCALE || "en-US" == goog.LOCALE ? goog.i18n.DateTimeSymbols_en : "en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE ? goog.i18n.DateTimeSymbols_en_ZA : 
"es" == goog.LOCALE ? goog.i18n.DateTimeSymbols_es : "es_419" == goog.LOCALE || "es-419" == goog.LOCALE ? goog.i18n.DateTimeSymbols_es_419 : "es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE ? goog.i18n.DateTimeSymbols_es : "et" == goog.LOCALE ? goog.i18n.DateTimeSymbols_et : "eu" == goog.LOCALE ? goog.i18n.DateTimeSymbols_eu : "fa" == goog.LOCALE ? goog.i18n.DateTimeSymbols_fa : "fi" == goog.LOCALE ? goog.i18n.DateTimeSymbols_fi : "fil" == goog.LOCALE ? goog.i18n.DateTimeSymbols_fil : "fr" == goog.LOCALE ? 
goog.i18n.DateTimeSymbols_fr : "fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE ? goog.i18n.DateTimeSymbols_fr_CA : "gl" == goog.LOCALE ? goog.i18n.DateTimeSymbols_gl : "gsw" == goog.LOCALE ? goog.i18n.DateTimeSymbols_gsw : "gu" == goog.LOCALE ? goog.i18n.DateTimeSymbols_gu : "haw" == goog.LOCALE ? goog.i18n.DateTimeSymbols_haw : "he" == goog.LOCALE ? goog.i18n.DateTimeSymbols_he : "hi" == goog.LOCALE ? goog.i18n.DateTimeSymbols_hi : "hr" == goog.LOCALE ? goog.i18n.DateTimeSymbols_hr : "hu" == goog.LOCALE ? 
goog.i18n.DateTimeSymbols_hu : "id" == goog.LOCALE ? goog.i18n.DateTimeSymbols_id : "in" == goog.LOCALE ? goog.i18n.DateTimeSymbols_in : "is" == goog.LOCALE ? goog.i18n.DateTimeSymbols_is : "it" == goog.LOCALE ? goog.i18n.DateTimeSymbols_it : "iw" == goog.LOCALE ? goog.i18n.DateTimeSymbols_iw : "ja" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ja : "kn" == goog.LOCALE ? goog.i18n.DateTimeSymbols_kn : "ko" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ko : "ln" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ln : 
"lt" == goog.LOCALE ? goog.i18n.DateTimeSymbols_lt : "lv" == goog.LOCALE ? goog.i18n.DateTimeSymbols_lv : "ml" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ml : "mr" == goog.LOCALE ? goog.i18n.DateTimeSymbols_mr : "ms" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ms : "mt" == goog.LOCALE ? goog.i18n.DateTimeSymbols_mt : "nb" == goog.LOCALE ? goog.i18n.DateTimeSymbols_nb : "nl" == goog.LOCALE ? goog.i18n.DateTimeSymbols_nl : "no" == goog.LOCALE ? goog.i18n.DateTimeSymbols_no : "or" == goog.LOCALE ? goog.i18n.DateTimeSymbols_or : 
"pl" == goog.LOCALE ? goog.i18n.DateTimeSymbols_pl : "pt" == goog.LOCALE ? goog.i18n.DateTimeSymbols_pt : "pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE ? goog.i18n.DateTimeSymbols_pt : "pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE ? goog.i18n.DateTimeSymbols_pt_PT : "ro" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ro : "ru" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ru : "sk" == goog.LOCALE ? goog.i18n.DateTimeSymbols_sk : "sl" == goog.LOCALE ? goog.i18n.DateTimeSymbols_sl : "sq" == goog.LOCALE ? 
goog.i18n.DateTimeSymbols_sq : "sr" == goog.LOCALE ? goog.i18n.DateTimeSymbols_sr : "sv" == goog.LOCALE ? goog.i18n.DateTimeSymbols_sv : "sw" == goog.LOCALE ? goog.i18n.DateTimeSymbols_sw : "ta" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ta : "te" == goog.LOCALE ? goog.i18n.DateTimeSymbols_te : "th" == goog.LOCALE ? goog.i18n.DateTimeSymbols_th : "tl" == goog.LOCALE ? goog.i18n.DateTimeSymbols_tl : "tr" == goog.LOCALE ? goog.i18n.DateTimeSymbols_tr : "uk" == goog.LOCALE ? goog.i18n.DateTimeSymbols_uk : 
"ur" == goog.LOCALE ? goog.i18n.DateTimeSymbols_ur : "vi" == goog.LOCALE ? goog.i18n.DateTimeSymbols_vi : "zh" == goog.LOCALE ? goog.i18n.DateTimeSymbols_zh : "zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE ? goog.i18n.DateTimeSymbols_zh : "zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE ? goog.i18n.DateTimeSymbols_zh_HK : "zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE ? goog.i18n.DateTimeSymbols_zh_TW : "zu" == goog.LOCALE ? goog.i18n.DateTimeSymbols_zu : goog.i18n.DateTimeSymbols_en;
// Input 47
goog.date = {};
// Input 48
goog.date.weekDay = {MON:0, TUE:1, WED:2, THU:3, FRI:4, SAT:5, SUN:6};
goog.date.month = {JAN:0, FEB:1, MAR:2, APR:3, MAY:4, JUN:5, JUL:6, AUG:7, SEP:8, OCT:9, NOV:10, DEC:11};
goog.date.formatMonthAndYear = function(monthName, yearNum) {
  var MSG_MONTH_AND_YEAR = monthName + (" " + yearNum);
  return MSG_MONTH_AND_YEAR
};
goog.date.splitDateStringRegex_ = /^(\d{4})(?:(?:-?(\d{2})(?:-?(\d{2}))?)|(?:-?(\d{3}))|(?:-?W(\d{2})(?:-?([1-7]))?))?$/;
goog.date.splitTimeStringRegex_ = /^(\d{2})(?::?(\d{2})(?::?(\d{2})(\.\d+)?)?)?$/;
goog.date.splitTimezoneStringRegex_ = /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/;
goog.date.splitDurationRegex_ = /^(-)?P(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)D)?(T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$/;
goog.date.isLeapYear = function(year) {
  return 0 == year % 4 && (0 != year % 100 || 0 == year % 400)
};
goog.date.isLongIsoYear = function(year) {
  var n = 5 * year + 12 - 4 * (Math.floor(year / 100) - Math.floor(year / 400)), n = n + (Math.floor((year - 100) / 400) - Math.floor((year - 102) / 400)), n = n + (Math.floor((year - 200) / 400) - Math.floor((year - 199) / 400));
  return 5 > n % 28
};
goog.date.getNumberOfDaysInMonth = function(year, month) {
  switch(month) {
    case goog.date.month.FEB:
      return goog.date.isLeapYear(year) ? 29 : 28;
    case goog.date.month.JUN:
    ;
    case goog.date.month.SEP:
    ;
    case goog.date.month.NOV:
    ;
    case goog.date.month.APR:
      return 30
  }
  return 31
};
goog.date.isSameDay = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getDate() == now.getDate() && goog.date.isSameMonth(date, now)
};
goog.date.isSameMonth = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getMonth() == now.getMonth() && goog.date.isSameYear(date, now)
};
goog.date.isSameYear = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getFullYear() == now.getFullYear()
};
goog.date.getWeekNumber = function(year, month, date, opt_weekDay, opt_firstDayOfWeek) {
  var d = new Date(year, month, date), cutoff = opt_weekDay || goog.date.weekDay.THU, firstday = opt_firstDayOfWeek || goog.date.weekDay.MON, isoday = (d.getDay() + 6) % 7, daypos = (isoday - firstday + 7) % 7, cutoffpos = (cutoff - firstday + 7) % 7, cutoffSameWeek = d.valueOf() + 864E5 * (cutoffpos - daypos), jan1 = (new Date((new Date(cutoffSameWeek)).getFullYear(), 0, 1)).valueOf();
  return Math.floor(Math.round((cutoffSameWeek - jan1) / 864E5) / 7) + 1
};
goog.date.min = function(date1, date2) {
  return date1 < date2 ? date1 : date2
};
goog.date.max = function(date1, date2) {
  return date1 > date2 ? date1 : date2
};
goog.date.fromIsoString = function(formatted) {
  var ret = new goog.date.DateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null
};
goog.date.setIso8601DateTime = function(dateTime, formatted) {
  formatted = goog.string.trim(formatted);
  var delim = -1 == formatted.indexOf("T") ? " " : "T", parts = formatted.split(delim);
  return goog.date.setIso8601DateOnly_(dateTime, parts[0]) && (2 > parts.length || goog.date.setIso8601TimeOnly_(dateTime, parts[1]))
};
goog.date.setIso8601DateOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitDateStringRegex_);
  if(!parts) {
    return!1
  }
  var year = Number(parts[1]), month = Number(parts[2]), date = Number(parts[3]), dayOfYear = Number(parts[4]), week = Number(parts[5]), dayOfWeek = Number(parts[6]) || 1;
  d.setFullYear(year);
  if(dayOfYear) {
    d.setDate(1);
    d.setMonth(0);
    var offset = dayOfYear - 1;
    d.add(new goog.date.Interval(goog.date.Interval.DAYS, offset))
  }else {
    week ? goog.date.setDateFromIso8601Week_(d, week, dayOfWeek) : (month && (d.setDate(1), d.setMonth(month - 1)), date && d.setDate(date))
  }
  return!0
};
goog.date.setDateFromIso8601Week_ = function(d, week, dayOfWeek) {
  d.setMonth(0);
  d.setDate(1);
  var jsDay = d.getDay(), jan1WeekDay = jsDay || 7, startDelta = 4 >= jan1WeekDay ? 1 - jan1WeekDay : 8 - jan1WeekDay, absoluteDays = Number(dayOfWeek) + 7 * (Number(week) - 1), delta = startDelta + absoluteDays - 1, interval = new goog.date.Interval(goog.date.Interval.DAYS, delta);
  d.add(interval)
};
goog.date.setIso8601TimeOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitTimezoneStringRegex_), offset = 0;
  parts && ("Z" != parts[0] && (offset = 60 * parts[2] + Number(parts[3]), offset *= "-" == parts[1] ? 1 : -1), offset -= d.getTimezoneOffset(), formatted = formatted.substr(0, formatted.length - parts[0].length));
  parts = formatted.match(goog.date.splitTimeStringRegex_);
  if(!parts) {
    return!1
  }
  d.setHours(Number(parts[1]));
  d.setMinutes(Number(parts[2]) || 0);
  d.setSeconds(Number(parts[3]) || 0);
  d.setMilliseconds(parts[4] ? 1E3 * parts[4] : 0);
  0 != offset && d.setTime(d.getTime() + 6E4 * offset);
  return!0
};
goog.date.Interval = function(opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) {
  if(goog.isString(opt_years)) {
    var type = opt_years, interval = opt_months;
    this.years = type == goog.date.Interval.YEARS ? interval : 0;
    this.months = type == goog.date.Interval.MONTHS ? interval : 0;
    this.days = type == goog.date.Interval.DAYS ? interval : 0;
    this.hours = type == goog.date.Interval.HOURS ? interval : 0;
    this.minutes = type == goog.date.Interval.MINUTES ? interval : 0;
    this.seconds = type == goog.date.Interval.SECONDS ? interval : 0
  }else {
    this.years = opt_years || 0, this.months = opt_months || 0, this.days = opt_days || 0, this.hours = opt_hours || 0, this.minutes = opt_minutes || 0, this.seconds = opt_seconds || 0
  }
};
goog.date.Interval.fromIsoString = function(duration) {
  var parts = duration.match(goog.date.splitDurationRegex_);
  if(!parts) {
    return null
  }
  var timeEmpty = !(parts[6] || parts[7] || parts[8]), dateTimeEmpty = timeEmpty && !(parts[2] || parts[3] || parts[4]);
  if(dateTimeEmpty || timeEmpty && parts[5]) {
    return null
  }
  var negative = parts[1], years = parseInt(parts[2], 10) || 0, months = parseInt(parts[3], 10) || 0, days = parseInt(parts[4], 10) || 0, hours = parseInt(parts[6], 10) || 0, minutes = parseInt(parts[7], 10) || 0, seconds = parseFloat(parts[8]) || 0;
  return negative ? new goog.date.Interval(-years, -months, -days, -hours, -minutes, -seconds) : new goog.date.Interval(years, months, days, hours, minutes, seconds)
};
goog.date.Interval.prototype.toIsoString = function(opt_verbose) {
  var minField = Math.min(this.years, this.months, this.days, this.hours, this.minutes, this.seconds), maxField = Math.max(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  if(0 > minField && 0 < maxField) {
    return null
  }
  if(!opt_verbose && 0 == minField && 0 == maxField) {
    return"PT0S"
  }
  var res = [];
  0 > minField && res.push("-");
  res.push("P");
  (this.years || opt_verbose) && res.push(Math.abs(this.years) + "Y");
  (this.months || opt_verbose) && res.push(Math.abs(this.months) + "M");
  (this.days || opt_verbose) && res.push(Math.abs(this.days) + "D");
  if(this.hours || this.minutes || this.seconds || opt_verbose) {
    res.push("T"), (this.hours || opt_verbose) && res.push(Math.abs(this.hours) + "H"), (this.minutes || opt_verbose) && res.push(Math.abs(this.minutes) + "M"), (this.seconds || opt_verbose) && res.push(Math.abs(this.seconds) + "S")
  }
  return res.join("")
};
goog.date.Interval.prototype.equals = function(other) {
  return other.years == this.years && other.months == this.months && other.days == this.days && other.hours == this.hours && other.minutes == this.minutes && other.seconds == this.seconds
};
goog.date.Interval.prototype.clone = function() {
  return new goog.date.Interval(this.years, this.months, this.days, this.hours, this.minutes, this.seconds)
};
goog.date.Interval.YEARS = "y";
goog.date.Interval.MONTHS = "m";
goog.date.Interval.DAYS = "d";
goog.date.Interval.HOURS = "h";
goog.date.Interval.MINUTES = "n";
goog.date.Interval.SECONDS = "s";
goog.date.Interval.prototype.getInverse = function() {
  return this.times(-1)
};
goog.date.Interval.prototype.times = function(n) {
  return new goog.date.Interval(this.years * n, this.months * n, this.days * n, this.hours * n, this.minutes * n, this.seconds * n)
};
goog.date.Interval.prototype.add = function(interval) {
  this.years += interval.years;
  this.months += interval.months;
  this.days += interval.days;
  this.hours += interval.hours;
  this.minutes += interval.minutes;
  this.seconds += interval.seconds
};
goog.date.Date = function(opt_year, opt_month, opt_date) {
  goog.isNumber(opt_year) ? (this.date = new Date(opt_year, opt_month || 0, opt_date || 1), this.maybeFixDst_(opt_date || 1)) : goog.isObject(opt_year) ? (this.date = new Date(opt_year.getFullYear(), opt_year.getMonth(), opt_year.getDate()), this.maybeFixDst_(opt_year.getDate())) : (this.date = new Date(goog.now()), this.date.setHours(0), this.date.setMinutes(0), this.date.setSeconds(0), this.date.setMilliseconds(0))
};
goog.date.Date.prototype.firstDayOfWeek_ = goog.i18n.DateTimeSymbols.FIRSTDAYOFWEEK;
goog.date.Date.prototype.firstWeekCutOffDay_ = goog.i18n.DateTimeSymbols.FIRSTWEEKCUTOFFDAY;
goog.date.Date.prototype.clone = function() {
  var date = new goog.date.Date(this.date);
  date.firstDayOfWeek_ = this.firstDayOfWeek_;
  date.firstWeekCutOffDay_ = this.firstWeekCutOffDay_;
  return date
};
goog.date.Date.prototype.getFullYear = function() {
  return this.date.getFullYear()
};
goog.date.Date.prototype.getYear = function() {
  return this.getFullYear()
};
goog.date.Date.prototype.getMonth = function() {
  return this.date.getMonth()
};
goog.date.Date.prototype.getDate = function() {
  return this.date.getDate()
};
goog.date.Date.prototype.getTime = function() {
  return this.date.getTime()
};
goog.date.Date.prototype.getDay = function() {
  return this.date.getDay()
};
goog.date.Date.prototype.getIsoWeekday = function() {
  return(this.getDay() + 6) % 7
};
goog.date.Date.prototype.getUTCFullYear = function() {
  return this.date.getUTCFullYear()
};
goog.date.Date.prototype.getUTCMonth = function() {
  return this.date.getUTCMonth()
};
goog.date.Date.prototype.getUTCDate = function() {
  return this.date.getUTCDate()
};
goog.date.Date.prototype.getUTCDay = function() {
  return this.date.getDay()
};
goog.date.Date.prototype.getUTCHours = function() {
  return this.date.getUTCHours()
};
goog.date.Date.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes()
};
goog.date.Date.prototype.getFirstDayOfWeek = function() {
  return this.firstDayOfWeek_
};
goog.date.Date.prototype.getFirstWeekCutOffDay = function() {
  return this.firstWeekCutOffDay_
};
goog.date.Date.prototype.getNumberOfDaysInMonth = function() {
  return goog.date.getNumberOfDaysInMonth(this.getFullYear(), this.getMonth())
};
goog.date.Date.prototype.getWeekNumber = function() {
  return goog.date.getWeekNumber(this.getFullYear(), this.getMonth(), this.getDate(), this.firstWeekCutOffDay_, this.firstDayOfWeek_)
};
goog.date.Date.prototype.getTimezoneOffset = function() {
  return this.date.getTimezoneOffset()
};
goog.date.Date.prototype.getTimezoneOffsetString = function() {
  var tz, offset = this.getTimezoneOffset();
  if(0 == offset) {
    tz = "Z"
  }else {
    var n = Math.abs(offset) / 60, h = Math.floor(n), m = 60 * (n - h);
    tz = (0 < offset ? "-" : "+") + goog.string.padNumber(h, 2) + ":" + goog.string.padNumber(m, 2)
  }
  return tz
};
goog.date.Date.prototype.set = function(date) {
  this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate())
};
goog.date.Date.prototype.setFullYear = function(year) {
  this.date.setFullYear(year)
};
goog.date.Date.prototype.setYear = function(year) {
  this.setFullYear(year)
};
goog.date.Date.prototype.setMonth = function(month) {
  this.date.setMonth(month)
};
goog.date.Date.prototype.setDate = function(date) {
  this.date.setDate(date)
};
goog.date.Date.prototype.setTime = function(ms) {
  this.date.setTime(ms)
};
goog.date.Date.prototype.setUTCFullYear = function(year) {
  this.date.setUTCFullYear(year)
};
goog.date.Date.prototype.setUTCMonth = function(month) {
  this.date.setUTCMonth(month)
};
goog.date.Date.prototype.setUTCDate = function(date) {
  this.date.setUTCDate(date)
};
goog.date.Date.prototype.setFirstDayOfWeek = function(day) {
  this.firstDayOfWeek_ = day
};
goog.date.Date.prototype.setFirstWeekCutOffDay = function(day) {
  this.firstWeekCutOffDay_ = day
};
goog.date.Date.prototype.add = function(interval) {
  if(interval.years || interval.months) {
    var month = this.getMonth() + interval.months + 12 * interval.years, year = this.getYear() + Math.floor(month / 12), month = month % 12;
    0 > month && (month += 12);
    var daysInTargetMonth = goog.date.getNumberOfDaysInMonth(year, month), date = Math.min(daysInTargetMonth, this.getDate());
    this.setDate(1);
    this.setFullYear(year);
    this.setMonth(month);
    this.setDate(date)
  }
  if(interval.days) {
    var noon = new Date(this.getYear(), this.getMonth(), this.getDate(), 12), result = new Date(noon.getTime() + 864E5 * interval.days);
    this.setDate(1);
    this.setFullYear(result.getFullYear());
    this.setMonth(result.getMonth());
    this.setDate(result.getDate());
    this.maybeFixDst_(result.getDate())
  }
};
goog.date.Date.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getFullYear(), goog.string.padNumber(this.getMonth() + 1, 2), goog.string.padNumber(this.getDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? this.getTimezoneOffsetString() : "")
};
goog.date.Date.prototype.equals = function(other) {
  return!(!other || this.getYear() != other.getYear() || this.getMonth() != other.getMonth() || this.getDate() != other.getDate())
};
goog.date.Date.prototype.toString = function() {
  return this.toIsoString()
};
goog.date.Date.prototype.maybeFixDst_ = function(expected) {
  if(this.getDate() != expected) {
    var dir = this.getDate() < expected ? 1 : -1;
    this.date.setUTCHours(this.date.getUTCHours() + dir)
  }
};
goog.date.Date.prototype.valueOf = function() {
  return this.date.valueOf()
};
goog.date.Date.compare = function(date1, date2) {
  return date1.getTime() - date2.getTime()
};
goog.date.DateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  this.date = goog.isNumber(opt_year) ? new Date(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0) : new Date(opt_year ? opt_year.getTime() : goog.now())
};
goog.inherits(goog.date.DateTime, goog.date.Date);
goog.date.DateTime.fromRfc822String = function(formatted) {
  var date = new Date(formatted);
  return isNaN(date.getTime()) ? null : new goog.date.DateTime(date)
};
goog.date.DateTime.prototype.getHours = function() {
  return this.date.getHours()
};
goog.date.DateTime.prototype.getMinutes = function() {
  return this.date.getMinutes()
};
goog.date.DateTime.prototype.getSeconds = function() {
  return this.date.getSeconds()
};
goog.date.DateTime.prototype.getMilliseconds = function() {
  return this.date.getMilliseconds()
};
goog.date.DateTime.prototype.getUTCDay = function() {
  return this.date.getUTCDay()
};
goog.date.DateTime.prototype.getUTCHours = function() {
  return this.date.getUTCHours()
};
goog.date.DateTime.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes()
};
goog.date.DateTime.prototype.getUTCSeconds = function() {
  return this.date.getUTCSeconds()
};
goog.date.DateTime.prototype.getUTCMilliseconds = function() {
  return this.date.getUTCMilliseconds()
};
goog.date.DateTime.prototype.setHours = function(hours) {
  this.date.setHours(hours)
};
goog.date.DateTime.prototype.setMinutes = function(minutes) {
  this.date.setMinutes(minutes)
};
goog.date.DateTime.prototype.setSeconds = function(seconds) {
  this.date.setSeconds(seconds)
};
goog.date.DateTime.prototype.setMilliseconds = function(ms) {
  this.date.setMilliseconds(ms)
};
goog.date.DateTime.prototype.setUTCHours = function(hours) {
  this.date.setUTCHours(hours)
};
goog.date.DateTime.prototype.setUTCMinutes = function(minutes) {
  this.date.setUTCMinutes(minutes)
};
goog.date.DateTime.prototype.setUTCSeconds = function(seconds) {
  this.date.setUTCSeconds(seconds)
};
goog.date.DateTime.prototype.setUTCMilliseconds = function(ms) {
  this.date.setUTCMilliseconds(ms)
};
goog.date.DateTime.prototype.add = function(interval) {
  goog.date.Date.prototype.add.call(this, interval);
  interval.hours && this.setHours(this.date.getHours() + interval.hours);
  interval.minutes && this.setMinutes(this.date.getMinutes() + interval.minutes);
  interval.seconds && this.setSeconds(this.date.getSeconds() + interval.seconds)
};
goog.date.DateTime.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var dateString = goog.date.Date.prototype.toIsoString.call(this, opt_verbose);
  return opt_verbose ? dateString + " " + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "") : dateString + "T" + goog.string.padNumber(this.getHours(), 2) + goog.string.padNumber(this.getMinutes(), 2) + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "")
};
goog.date.DateTime.prototype.equals = function(other) {
  return this.getTime() == other.getTime()
};
goog.date.DateTime.prototype.toString = function() {
  return this.toIsoString()
};
goog.date.DateTime.prototype.clone = function() {
  var date = new goog.date.DateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date
};
// Input 49
gviz.object = {};
gviz.object.unsafeEquals = function(obj1, obj2) {
  if(!goog.isDefAndNotNull(obj1) && !goog.isDefAndNotNull(obj2)) {
    return obj1 === obj2
  }
  if(obj1 === obj2) {
    return!0
  }
  var type1 = goog.typeOf(obj1), type2 = goog.typeOf(obj2);
  if(type1 != type2) {
    return!1
  }
  var obj1IsDateLike = goog.isDateLike(obj1), obj2IsDateLike = goog.isDateLike(obj2);
  if(obj1IsDateLike != obj2IsDateLike) {
    return!1
  }
  switch(type1) {
    case "object":
      if(obj1IsDateLike && obj2IsDateLike) {
        return 0 == goog.date.Date.compare(obj1, obj2)
      }
      for(var key1 in obj1) {
        if(obj1.hasOwnProperty(key1) && (!obj2.hasOwnProperty(key1) || !gviz.object.unsafeEquals(obj1[key1], obj2[key1]))) {
          return!1
        }
      }
      for(var key2 in obj2) {
        if(obj2.hasOwnProperty(key2) && !obj1.hasOwnProperty(key2)) {
          return!1
        }
      }
      return!0;
    case "array":
      if(obj1.length != obj2.length) {
        return!1
      }
      for(var i = 0;i < obj1.length;++i) {
        if(!gviz.object.unsafeEquals(obj1[i], obj2[i])) {
          return!1
        }
      }
      return!0;
    case "function":
      return!0;
    case "string":
    ;
    case "number":
    ;
    case "boolean":
      return!1;
    default:
      throw Error("Error while comparing " + obj1 + " and " + obj2 + ": unexpected type of obj1 " + type1);
  }
};
gviz.object.unsafeClone = function(obj) {
  if(goog.isDateLike(obj)) {
    var ret = new Date;
    ret.setTime(obj.valueOf());
    return ret
  }
  var type = goog.typeOf(obj);
  if("object" == type || "array" == type) {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = "array" == type ? [] : {}, key;
    for(key in obj) {
      clone[key] = gviz.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
gviz.object.clone = function(obj) {
  if(goog.isDateLike(obj)) {
    var ret = new Date;
    ret.setTime(obj.valueOf());
    return ret
  }
  return goog.object.clone(obj)
};
gviz.object.getObjectByName = function(name, opt_obj) {
  for(var parts = name.split("."), cur = opt_obj || goog.global, i = 0;i < parts.length;i++) {
    var part = parts[i];
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
// Input 50
gviz.Options = function(layers) {
  this.layers_ = layers
};
gviz.Options.prototype.mergeLayer = function(srcOptions) {
  this.merge_(this.layers_[0], srcOptions)
};
gviz.Options.prototype.merge_ = function(dstOptions, srcOptions) {
  for(var option in srcOptions) {
    goog.isObject(srcOptions[option]) && dstOptions[option] ? this.merge_(dstOptions[option], srcOptions[option]) : dstOptions[option] = srcOptions[option]
  }
};
gviz.Options.getValue = function(options, optionPath, opt_func) {
  if(goog.isString(optionPath)) {
    return gviz.Options.getValueFromSpecificPath_(options, optionPath, opt_func)
  }
  for(var i = 0;i < optionPath.length;++i) {
    var value = gviz.Options.getValueFromSpecificPath_(options, optionPath[i], opt_func);
    if(goog.isDefAndNotNull(value)) {
      return value
    }
  }
  return null
};
gviz.Options.getValueFromSpecificPath_ = function(options, optionPath, opt_func) {
  var value = gviz.object.getObjectByName(optionPath, options);
  return goog.isDefAndNotNull(value) && goog.isFunction(opt_func) ? opt_func(value) : value
};
gviz.Options.prototype.inferValue = function(optionPath, opt_defaultValue, opt_func) {
  for(var value = null, i = 0;i < this.layers_.length;i++) {
    if(value = gviz.Options.getValue(this.layers_[i], optionPath, opt_func), goog.isDefAndNotNull(value)) {
      return value
    }
  }
  value = opt_defaultValue;
  return goog.isDef(value) ? value : null
};
gviz.Options.extendObjectValue_ = function(obj, options, optionPath, opt_func) {
  goog.isString(optionPath) && (optionPath = [optionPath]);
  for(var i = optionPath.length - 1;0 <= i;--i) {
    var optionValue = gviz.Options.getValueFromSpecificPath_(options, optionPath[i], opt_func) || {};
    goog.object.extend(obj, optionValue)
  }
};
gviz.Options.prototype.inferObjectValue = function(optionPath, opt_defaultValue, opt_func) {
  for(var result = goog.isDefAndNotNull(opt_defaultValue) ? goog.object.clone(opt_defaultValue) : {}, i = this.layers_.length - 1;0 <= i;i--) {
    gviz.Options.extendObjectValue_(result, this.layers_[i], optionPath, opt_func)
  }
  return result
};
gviz.Options.convertToBoolean = function(value) {
  if(!goog.isDefAndNotNull(value)) {
    return null
  }
  if("boolean" == typeof value) {
    return value
  }
  var s = String(value);
  return"1" == s || "true" == s.toLowerCase() ? !0 : "0" == s || "false" == s.toLowerCase() ? !1 : null
};
gviz.Options.prototype.inferBooleanValue = function(optionPath, opt_defaultValue) {
  var value = this.inferOptionalBooleanValue(optionPath);
  if(goog.isDefAndNotNull(value)) {
    return value
  }
  goog.isDef(opt_defaultValue) || (opt_defaultValue = !1);
  return opt_defaultValue
};
gviz.Options.prototype.inferOptionalBooleanValue = function(optionPath) {
  return this.inferValue(optionPath, null, gviz.Options.convertToBoolean)
};
gviz.Options.convertToNumber = function(value) {
  if(!goog.isDefAndNotNull(value)) {
    return null
  }
  if("number" == typeof value) {
    return value
  }
  var res = goog.string.toNumber(String(value));
  return isNaN(res) ? null : res
};
gviz.Options.convertDateToNumber = function(value) {
  if(!goog.isDefAndNotNull(value)) {
    return null
  }
  if(goog.isNumber(value)) {
    return value
  }
  var numberValue = Number(value);
  return isNaN(numberValue) ? null : numberValue
};
gviz.Options.prototype.inferNumberValue = function(optionPath, opt_defaultValue) {
  var value = this.inferOptionalNumberValue(optionPath);
  if(goog.isDefAndNotNull(value)) {
    return value
  }
  goog.isDef(opt_defaultValue) || (opt_defaultValue = 0);
  return opt_defaultValue
};
gviz.Options.prototype.inferNumberFromDateValue = function(optionPath, opt_defaultValue) {
  var value = this.inferOptionalNumberFromDateValue(optionPath);
  if(goog.isDefAndNotNull(value)) {
    return value
  }
  goog.isDef(opt_defaultValue) || (opt_defaultValue = 0);
  return opt_defaultValue
};
gviz.Options.prototype.inferOptionalNumberValue = function(optionPath) {
  return this.inferValue(optionPath, null, gviz.Options.convertToNumber)
};
gviz.Options.prototype.inferOptionalNumberFromDateValue = function(optionPath) {
  var value = this.inferValue(optionPath, null, gviz.Options.convertDateToNumber);
  return value
};
gviz.Options.convertToNonNegativeNumber = function(value) {
  var num = gviz.Options.convertToNumber(value);
  return goog.isDefAndNotNull(num) && 0 <= num ? num : null
};
gviz.Options.prototype.inferNonNegativeNumberValue = function(optionPath, opt_defaultValue) {
  var value = this.inferOptionalNonNegativeNumberValue(optionPath);
  if(goog.isDefAndNotNull(value)) {
    return value
  }
  goog.isDef(opt_defaultValue) || (opt_defaultValue = 0);
  return opt_defaultValue
};
gviz.Options.prototype.inferOptionalNonNegativeNumberValue = function(optionPath) {
  return this.inferValue(optionPath, null, gviz.Options.convertToNonNegativeNumber)
};
gviz.Options.convertToRatioNumber = function(value) {
  var num = gviz.Options.convertToNonNegativeNumber(value);
  return goog.isDefAndNotNull(num) ? goog.math.clamp(num, 0, 1) : null
};
gviz.Options.prototype.inferRatioNumberValue = function(optionPath, opt_defaultValue) {
  var value = this.inferOptionalRatioNumberValue(optionPath);
  if(goog.isDefAndNotNull(value)) {
    return value
  }
  goog.isDef(opt_defaultValue) || (opt_defaultValue = 0);
  return opt_defaultValue
};
gviz.Options.prototype.inferOptionalRatioNumberValue = function(optionPath) {
  return this.inferValue(optionPath, null, gviz.Options.convertToRatioNumber)
};
gviz.Options.convertToString = function(value) {
  return goog.isDefAndNotNull(value) ? String(value) : null
};
gviz.Options.prototype.inferStringValue = function(optionPath, opt_defaultValue) {
  goog.isDef(opt_defaultValue) || (opt_defaultValue = "");
  return this.inferValue(optionPath, opt_defaultValue, gviz.Options.convertToString)
};
gviz.Options.prototype.inferOptionalStringValue = function(optionPath) {
  return this.inferValue(optionPath, null, gviz.Options.convertToString)
};
gviz.Options.convertToColor = function(value, opt_additionalValues) {
  var res = gviz.Options.convertToString(value);
  if(!res) {
    return null
  }
  var additionalValues = opt_additionalValues || [];
  if(goog.array.contains(additionalValues, res)) {
    return res
  }
  try {
    return gviz.graphics.util.parseColor(res)
  }catch(e) {
    return null
  }
};
gviz.Options.prototype.inferColorValue = function(optionPath, defaultValue) {
  return this.inferValue(optionPath, defaultValue, gviz.Options.convertToColor)
};
gviz.Options.prototype.inferExtendedColorValue = function(optionPath, additionalValues, defaultValue) {
  return this.inferValue(optionPath, defaultValue, function(value) {
    return gviz.Options.convertToColor(value, additionalValues)
  })
};
gviz.Options.prototype.inferOptionalColorValue = function(optionPath) {
  return this.inferValue(optionPath, null, gviz.Options.convertToColor)
};
gviz.Options.convertToEnum = function(enumObj, value) {
  var strValue = gviz.Options.convertToString(value);
  return goog.object.containsValue(enumObj, strValue) ? strValue : null
};
gviz.Options.prototype.inferEnumValue = function(optionPath, enumObj, defaultValue) {
  return this.inferValue(optionPath, defaultValue, goog.bind(gviz.Options.convertToEnum, null, enumObj))
};
gviz.Options.convertToEnumOrThrow = function(enumObj, message, value) {
  if(!goog.isDefAndNotNull(value)) {
    return null
  }
  var strValue = gviz.Options.convertToString(value);
  if(goog.object.containsValue(enumObj, strValue)) {
    return strValue
  }
  throw Error(message);
};
gviz.Options.prototype.inferOptionalEnumValue = function(optionPath, enumObj) {
  return this.inferValue(optionPath, null, goog.bind(gviz.Options.convertToEnum, null, enumObj))
};
gviz.Options.prototype.inferOptionalTimeOfDayValue = function(optionPath) {
  var value = this.inferValue(optionPath, null);
  if(goog.isString(value)) {
    var tokens = value.split(":");
    1 == tokens.length && (tokens = value.split(","));
    if(3 == tokens.length) {
      var hours = goog.string.toNumber(tokens[0]), minutes = goog.string.toNumber(tokens[1]), seconds = goog.string.toNumber(tokens[2]);
      if(0 <= seconds && 0 <= minutes && 0 <= hours) {
        return[hours, minutes, seconds]
      }
    }
  }
  return!goog.isArray(value) || 3 != value.length && 4 != value.length ? null : value
};
gviz.Options.prototype.inferWholeObjectValue = function(optionPath, opt_defaultValue) {
  goog.isDef(opt_defaultValue) || (opt_defaultValue = null);
  return this.inferValue(optionPath, opt_defaultValue)
};
gviz.Options.prototype.inferBrushValue = function(optionPath, opt_defaultValue) {
  var defaultBrushProps = opt_defaultValue ? opt_defaultValue.getProperties() : null, brushProps = this.inferObjectValue(optionPath, defaultBrushProps, function(obj) {
    goog.isObject(obj) || (obj = {fill:obj});
    var brushPropsObj = {}, fill = gviz.Options.convertToColor(obj.fill);
    goog.isDefAndNotNull(fill) && (brushPropsObj.fill = fill);
    var fillOpacity = gviz.Options.convertToRatioNumber(obj.fillOpacity);
    goog.isDefAndNotNull(fillOpacity) && (brushPropsObj.fillOpacity = fillOpacity);
    var stroke = gviz.Options.convertToColor(obj.stroke);
    goog.isDefAndNotNull(stroke) && (brushPropsObj.stroke = stroke);
    var strokeWidth = gviz.Options.convertToNonNegativeNumber(obj.strokeWidth);
    goog.isDefAndNotNull(strokeWidth) && (brushPropsObj.strokeWidth = strokeWidth);
    var strokeOpacity = gviz.Options.convertToRatioNumber(obj.strokeOpacity);
    goog.isDefAndNotNull(strokeOpacity) && (brushPropsObj.strokeOpacity = strokeOpacity);
    var gradient = obj.gradient;
    if(gradient && goog.isDefAndNotNull(gradient.color1) && goog.isDefAndNotNull(gradient.color2) && goog.isDefAndNotNull(gradient.x1) && goog.isDefAndNotNull(gradient.y1) && goog.isDefAndNotNull(gradient.x2) && goog.isDefAndNotNull(gradient.y2)) {
      var gradientObj = {};
      gradientObj.color1 = gviz.Options.convertToColor(gradient.color1);
      gradientObj.color2 = gviz.Options.convertToColor(gradient.color2);
      gradientObj.x1 = gradient.x1;
      gradientObj.y1 = gradient.y1;
      gradientObj.x2 = gradient.x2;
      gradientObj.y2 = gradient.y2;
      brushPropsObj.gradient = gradientObj
    }
    return brushPropsObj
  }), brush = new gviz.graphics.Brush(brushProps), transparentBrush = gviz.graphics.Brush.TRANSPARENT_BRUSH;
  brush.hasFill() || (brush.setFill(transparentBrush.getFill()), brush.setFillOpacity(transparentBrush.getFillOpacity()));
  brush.hasStroke() || (brush.setStroke(transparentBrush.getStroke()), brush.setStrokeOpacity(transparentBrush.getStrokeOpacity()));
  return brush
};
gviz.Options.convertToTextStyle = function(object, opt_additionalColorValues) {
  var textStyle = {}, color = gviz.Options.convertToColor(object.color, opt_additionalColorValues);
  goog.isDefAndNotNull(color) && (textStyle.color = color);
  var opacity = gviz.Options.convertToRatioNumber(object.opacity);
  goog.isDefAndNotNull(opacity) && (textStyle.opacity = opacity);
  var auraColor = gviz.Options.convertToColor(object.auraColor, opt_additionalColorValues);
  goog.isDefAndNotNull(auraColor) && (textStyle.auraColor = auraColor);
  var fontName = gviz.Options.convertToString(object.fontName);
  fontName && (textStyle.fontName = fontName);
  var fontSize = gviz.Options.convertToNonNegativeNumber(object.fontSize);
  fontSize && (textStyle.fontSize = fontSize);
  var bold = gviz.Options.convertToBoolean(object.bold);
  goog.isDefAndNotNull(bold) && (textStyle.bold = bold);
  var italic = gviz.Options.convertToBoolean(object.italic);
  goog.isDefAndNotNull(italic) && (textStyle.italic = italic);
  var underline = gviz.Options.convertToBoolean(object.underline);
  goog.isDefAndNotNull(underline) && (textStyle.underline = underline);
  return textStyle
};
gviz.Options.prototype.inferTextStyleValue = function(optionPath, opt_defaultValue) {
  return this.inferObjectValue(optionPath, opt_defaultValue, function(value) {
    var object = value;
    return gviz.Options.convertToTextStyle(object)
  })
};
gviz.Options.prototype.inferExtendedColorTextStyleValue = function(optionPath, additionalColorValues, opt_defaultValue) {
  return this.inferObjectValue(optionPath, opt_defaultValue, function(value) {
    var object = value;
    return gviz.Options.convertToTextStyle(object, additionalColorValues)
  })
};
gviz.Options.convertAbsOrPercentageToNumber = function(whole, value) {
  goog.asserts.assert(goog.math.isFiniteNumber(whole));
  var result = null, absolute = gviz.Options.convertToNumber(value);
  if(goog.isDefAndNotNull(absolute)) {
    result = absolute
  }else {
    var strValue = gviz.Options.convertToString(value);
    if(goog.isDefAndNotNull(strValue) && goog.string.endsWith(strValue, "%")) {
      var percentageStr = goog.string.removeAt(strValue, strValue.length - 1, 1), percentage = goog.string.toNumber(percentageStr), result = whole * percentage / 100
    }
  }
  goog.isDefAndNotNull(result) && (result = goog.math.clamp(result, 0, whole));
  return result
};
gviz.Options.prototype.inferAbsOrPercentageValue = function(optionPath, whole, opt_defaultValue) {
  var value = this.inferOptionalAbsOrPercentageValue(optionPath, whole);
  if(goog.isDefAndNotNull(value)) {
    return value
  }
  goog.isDef(opt_defaultValue) || (opt_defaultValue = 0);
  return opt_defaultValue
};
gviz.Options.prototype.inferOptionalAbsOrPercentageValue = function(optionPath, whole) {
  return this.inferValue(optionPath, null, goog.bind(gviz.Options.convertAbsOrPercentageToNumber, null, whole))
};
gviz.Options.SelectionMode = {MULTIPLE:"multiple", SINGLE:"single"};
gviz.Options.TooltipTrigger = {NONE:"none", FOCUS:"focus", SELECTION:"selection", BOTH:"both"};
// Input 51
gviz.util.VisCommon = {};
gviz.util.VisCommon.DEFAULT_WIDTH_ = 400;
gviz.util.VisCommon.DEFAULT_HEIGHT_ = 200;
gviz.util.VisCommon.DEFAULT_MIN_WIDTH_ = 30;
gviz.util.VisCommon.DEFAULT_MIN_HEIGHT_ = 30;
gviz.util.VisCommon.HASHCODE_MAX_ = 67108864;
gviz.util.VisCommon.DEFAULT_APIS_BASE_ = "//ajax.googleapis.com/ajax";
gviz.util.VisCommon.DEFAULT_STATIC_PATH_ = "/static/modules/gviz/";
gviz.util.VisCommon.DEFAULT_VERSION_ = "1.0";
gviz.util.VisCommon.getWidth = function(container, options, opt_default) {
  return options.inferOptionalNonNegativeNumberValue("width") || goog.style.getContentBoxSize(container).width || opt_default || gviz.util.VisCommon.DEFAULT_WIDTH_
};
gviz.util.VisCommon.getHeight = function(container, options, opt_default) {
  return options.inferOptionalNonNegativeNumberValue("height") || goog.style.getContentBoxSize(container).height || opt_default || gviz.util.VisCommon.DEFAULT_HEIGHT_
};
gviz.util.VisCommon.getDesiredWidth = function(opt_container, opt_options, opt_default, opt_max, opt_min) {
  var res;
  return opt_options && (res = opt_options.width, goog.isString(res) && goog.string.isNumeric(res) && (res = parseInt(res, 10)), "number" == typeof res && res >= (opt_min || gviz.util.VisCommon.DEFAULT_MIN_WIDTH_) && (!opt_max || res <= opt_max)) || opt_container && (res = opt_container.clientWidth, res >= (opt_min || gviz.util.VisCommon.DEFAULT_MIN_WIDTH_) && (!opt_max || res <= opt_max)) ? res : opt_default || gviz.util.VisCommon.DEFAULT_WIDTH_
};
gviz.util.VisCommon.getDesiredHeight = function(opt_container, opt_options, opt_default, opt_max, opt_min) {
  var res;
  return opt_options && (res = opt_options.height, goog.isString(res) && goog.string.isNumeric(res) && (res = parseInt(res, 10)), "number" == typeof res && res >= (opt_min || gviz.util.VisCommon.DEFAULT_MIN_HEIGHT_) && (!opt_max || res <= opt_max)) || opt_container && (res = opt_container.clientHeight, res >= (opt_min || gviz.util.VisCommon.DEFAULT_MIN_HEIGHT_) && (!opt_max || res <= opt_max)) ? res : opt_default || gviz.util.VisCommon.DEFAULT_HEIGHT_
};
gviz.util.VisCommon.getDesiredColors = function(opt_options, opt_default) {
  var colors = opt_options && opt_options.colors;
  if(!colors || 0 == colors.length) {
    var color = opt_options && opt_options.color, colors = color ? [color] : opt_default
  }
  return colors
};
gviz.util.VisCommon.getModulePath = function() {
  var modulePath = goog.getObjectByName("google.loader.GoogleApisBase");
  goog.isDefAndNotNull(modulePath) || (modulePath = "//ajax.googleapis.com/ajax");
  var version = goog.getObjectByName("google.visualization.Version");
  goog.isDefAndNotNull(version) || (version = "1.0");
  return modulePath + "/static/modules/gviz/" + version
};
gviz.util.VisCommon.getHead = function() {
  if(0 == document.getElementsByTagName("head").length) {
    var htmlElement = document.getElementsByTagName("html")[0], bodyElement = document.getElementsByTagName("body")[0], headElement = document.createElement("head");
    htmlElement.insertBefore(headElement, bodyElement)
  }
  return document.getElementsByTagName("head")[0]
};
gviz.util.VisCommon.addCssToDom = function(relativePath) {
  for(var modulePath = gviz.util.VisCommon.getModulePath(), cssHref = modulePath + relativePath, links = document.getElementsByTagName("LINK"), ind = 0;ind < links.length;ind++) {
    if(links[ind] && links[ind].getAttribute("href") && links[ind].getAttribute("href") == cssHref) {
      return
    }
  }
  var cssLink = document.createElement("link");
  cssLink.href = cssHref;
  cssLink.rel = "stylesheet";
  cssLink.type = "text/css";
  var head = gviz.util.VisCommon.getHead();
  head.appendChild(cssLink)
};
gviz.util.VisCommon.loadMapsApiCallbacks_ = [];
gviz.util.VisCommon.loadMapsApi = function(callback) {
  function callbackWrapper() {
    if(gviz.util.VisCommon.isMapsApiV3Loaded()) {
      var callbacks = gviz.util.VisCommon.loadMapsApiCallbacks_;
      gviz.util.VisCommon.loadMapsApiCallbacks_ = [];
      goog.array.forEach(callbacks, function(aCallback) {
        aCallback()
      })
    }else {
      throw Error("Error: cannot load Maps API.");
    }
  }
  if(gviz.util.VisCommon.isMapsApiV3Loaded()) {
    callback()
  }else {
    if(gviz.util.VisCommon.loadMapsApiCallbacks_.push(callback), 1 == gviz.util.VisCommon.loadMapsApiCallbacks_.length) {
      var otherParams = "sensor=false";
      gviz.util.VisCommon.isGoogleDomainSSL() && (otherParams += "&client=google-gviz");
      google.load("maps", "3", {callback:callbackWrapper, other_params:otherParams})
    }
  }
};
gviz.util.VisCommon.isGoogleDomainSSL = function(opt_url) {
  var location = opt_url || gviz.util.VisCommon.getLocation();
  if(!goog.string.isEmptySafe(location)) {
    if("https" != goog.uri.utils.getScheme(location)) {
      return!1
    }
    var domain = goog.uri.utils.getDomain(location);
    if(!goog.string.isEmptySafe(domain)) {
      var isGoogleCom = /\.google\.com$/.test(domain), isAjaxApis = /^ajax\.googleapis\.com$/.test(domain);
      return isGoogleCom || isAjaxApis
    }
  }
  return!1
};
gviz.util.VisCommon.getLocation = function() {
  return goog.global.location.href
};
gviz.util.VisCommon.isMapsApiV3Loaded = function() {
  return!!goog.getObjectByName("google.maps.DirectionsService")
};
gviz.util.VisCommon.checkScriptPresent = function(prefix) {
  for(var scripts = document.getElementsByTagName("SCRIPT"), ind = 0;ind < scripts.length;ind++) {
    if(scripts[ind] && scripts[ind].src && goog.string.startsWith(scripts[ind].src, prefix)) {
      return!0
    }
  }
  return!1
};
gviz.util.VisCommon.appendScript = function(url) {
  var head = gviz.util.VisCommon.getHead(), script = document.createElement("script");
  script.type = "text/javascript";
  script.src = url;
  head.appendChild(script)
};
gviz.util.VisCommon.getLocale = function(pkgName) {
  var locale = null, google = goog.global.google, localeObj = google && google.visualization && google.visualization.Locale;
  localeObj && localeObj.packages && localeObj.packages[pkgName] && (locale = localeObj.locale);
  return locale
};
gviz.util.VisCommon.getLoadedLanguage = function() {
  var locale = null, loadArgs = goog.getObjectByName("google.visualization.LoadArgs");
  loadArgs && goog.uri.utils.hasParam(loadArgs, "hl") && (locale = goog.uri.utils.getParamValue(loadArgs, "hl"));
  return locale
};
gviz.util.VisCommon.getHash = function(obj) {
  return gviz.util.VisCommon.getHash_(obj, 1)
};
gviz.util.VisCommon.getHash_ = function(obj, seed) {
  var HASH_MAX = gviz.util.VisCommon.HASHCODE_MAX_, type = goog.typeOf(obj);
  seed = (31 * seed + goog.string.hashCode(type)) % HASH_MAX;
  switch(type) {
    case "object":
      if(obj.constructor == Date) {
        seed = (31 * seed + goog.string.hashCode("date")) % HASH_MAX, seed = gviz.util.VisCommon.getHash_(obj.getTime(), seed)
      }else {
        var orderedSet = gviz.util.VisCommon.getOrderedKeySet_(obj), key;
        for(key in orderedSet) {
          seed = gviz.util.VisCommon.getHash_(obj[key], gviz.util.VisCommon.getHash_(key, seed))
        }
      }
      break;
    case "array":
      for(var i = 0;i < obj.length;i++) {
        seed = gviz.util.VisCommon.getHash_(obj[i], gviz.util.VisCommon.getHash_(String(i), seed))
      }
      break;
    default:
      seed = (31 * seed + goog.string.hashCode(String(obj))) % HASH_MAX
  }
  return seed
};
gviz.util.VisCommon.getOrderedKeySet_ = function(obj) {
  var arr = goog.object.getKeys(obj);
  goog.array.sort(arr);
  return goog.object.createSet(arr)
};
gviz.util.VisCommon.validateContainer = function(container) {
  if(!goog.dom.isNodeLike(container)) {
    throw Error("Container is not defined");
  }
  goog.asserts.assert(container);
  return container
};
gviz.util.VisCommon.DEFAULT_LOG_DIV_ID = "gviz-log-div";
gviz.util.VisCommon.LOGGER_DIV_CONSOLES_ = {};
gviz.util.VisCommon.createLogger = function(className, opt_divName) {
  var logger = goog.debug.Logger.getLogger(className);
  if(goog.DEBUG && logger) {
    logger.setLevel(goog.debug.Logger.Level.ALL);
    goog.debug.Console.instance = goog.debug.Console.instance || new goog.debug.Console;
    goog.debug.Console.instance.setCapturing(!0);
    var divName = goog.isDefAndNotNull(opt_divName) ? opt_divName : gviz.util.VisCommon.DEFAULT_LOG_DIV_ID, div = goog.dom.getElement(divName);
    if(div && !gviz.util.VisCommon.LOGGER_DIV_CONSOLES_[divName]) {
      var console = new goog.debug.DivConsole(div);
      console.setCapturing(!0);
      gviz.util.VisCommon.LOGGER_DIV_CONSOLES_[divName] = console
    }
  }
  return logger
};
gviz.util.VisCommon.resolveConstructor = function(type) {
  var result = goog.getObjectByName("google.visualization." + type);
  goog.isFunction(result) || (result = goog.getObjectByName(type), goog.isFunction(result) || (result = null));
  return result
};
gviz.util.VisCommon.loadApi = function(moduleName, moduleVersion, opt_Settings) {
  opt_Settings = opt_Settings ? opt_Settings : {};
  var lang = gviz.util.VisCommon.getLoadedLanguage();
  lang && !opt_Settings.language && (opt_Settings.language = lang);
  google.load(moduleName, moduleVersion, opt_Settings)
};
// Input 52
google.visualization.TableArrowFormat = function(opt_options) {
  this.options_ = opt_options || {};
  gviz.util.VisCommon.addCssToDom("/util/format.css")
};
google.visualization.TableArrowFormat.CSS_PREFIX_ = "google-visualization-formatters-arrow-";
google.visualization.TableArrowFormat.CSS_CLASS_ = {UP_GREEN:"ug", DOWN_RED:"dr", EMPTY_TRANSPARENT:"empty"};
google.visualization.TableArrowFormat.prototype.format = function(dataTable, columnIndex) {
  if("number" == dataTable.getColumnType(columnIndex)) {
    for(var options = this.options_, base = options.base || 0, row = 0;row < dataTable.getNumberOfRows();row++) {
      var value = dataTable.getValue(row, columnIndex), className = null, className = value < base ? google.visualization.TableArrowFormat.CSS_PREFIX_ + google.visualization.TableArrowFormat.CSS_CLASS_.DOWN_RED : value > base ? google.visualization.TableArrowFormat.CSS_PREFIX_ + google.visualization.TableArrowFormat.CSS_CLASS_.UP_GREEN : google.visualization.TableArrowFormat.CSS_PREFIX_ + google.visualization.TableArrowFormat.CSS_CLASS_.EMPTY_TRANSPARENT;
      dataTable.setProperty(row, columnIndex, "className", className)
    }
  }
};
// Input 53
// Input 54
goog.json = {};
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return!1
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g, simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(null == object) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0), rv = "\\u";
    16 > cc ? rv += "000" : 256 > cc ? rv += "00" : 4096 > cc && (rv += "0");
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  for(var sep = "", i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "", key;
  for(key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      "function" != typeof value && (sb.push(sep), this.serializeString_(key, sb), sb.push(":"), this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb), sep = ",")
    }
  }
  sb.push("}")
};
// Input 55
gviz.json = {};
gviz.json.serialize = function(obj) {
  return goog.json.serialize(gviz.json.clone(obj))
};
gviz.json.deserialize = function(json) {
  goog.json.parse(json);
  return gviz.json.unsafeDeserialize(json)
};
gviz.json.unsafeDeserialize = function(json) {
  var notJson = gviz.json.insertDateConstructor_(json), notJson = "(" + notJson + ")";
  return eval(notJson)
};
gviz.json.globalEval = function(js) {
  goog.globalEval(gviz.json.insertDateConstructor_(js))
};
gviz.json.clone = function(obj) {
  var cloneObj = gviz.json.filteredClone_(obj, gviz.json.serializeDate_);
  return cloneObj
};
gviz.json.filteredClone_ = function(src, filter) {
  src = filter(src);
  var type = goog.typeOf(src), result;
  if("object" == type || "array" == type) {
    result = "array" == type ? [] : {};
    for(var key in src) {
      if(src.hasOwnProperty(key)) {
        var value = gviz.json.filteredClone_(src[key], filter);
        goog.isDef(value) && (result[key] = value)
      }
    }
  }else {
    result = src
  }
  return result
};
gviz.json.insertDateConstructor_ = function(json) {
  var reggie = /"(Date\([\d,\s]*\))"/g;
  return json.replace(reggie, function(wholeMatch, group1) {
    return"new " + group1
  })
};
gviz.json.serializeDate_ = function(src) {
  var result = src;
  goog.isDateLike(result) && (result = 0 !== result.getMilliseconds() ? [result.getFullYear(), result.getMonth(), result.getDate(), result.getHours(), result.getMinutes(), result.getSeconds(), result.getMilliseconds()] : 0 !== result.getSeconds() || 0 !== result.getMinutes() || 0 !== result.getHours() ? [result.getFullYear(), result.getMonth(), result.getDate(), result.getHours(), result.getMinutes(), result.getSeconds()] : [result.getFullYear(), result.getMonth(), result.getDate()], result = "Date(" + 
  result.join(", ") + ")");
  return result
};
// Input 56
goog.i18n.TimeZone = function() {
};
goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_ = 36E5;
goog.i18n.TimeZone.NameType = {STD_SHORT_NAME:0, STD_LONG_NAME:1, DLT_SHORT_NAME:2, DLT_LONG_NAME:3};
goog.i18n.TimeZone.createTimeZone = function(timeZoneData) {
  if("number" == typeof timeZoneData) {
    return goog.i18n.TimeZone.createSimpleTimeZone_(timeZoneData)
  }
  var tz = new goog.i18n.TimeZone;
  tz.timeZoneId_ = timeZoneData.id;
  tz.standardOffset_ = -timeZoneData.std_offset;
  tz.tzNames_ = timeZoneData.names;
  tz.transitions_ = timeZoneData.transitions;
  return tz
};
goog.i18n.TimeZone.createSimpleTimeZone_ = function(timeZoneOffsetInMinutes) {
  var tz = new goog.i18n.TimeZone;
  tz.standardOffset_ = timeZoneOffsetInMinutes;
  tz.timeZoneId_ = goog.i18n.TimeZone.composePosixTimeZoneID_(timeZoneOffsetInMinutes);
  var str = goog.i18n.TimeZone.composeUTCString_(timeZoneOffsetInMinutes);
  tz.tzNames_ = [str, str];
  tz.transitions_ = [];
  return tz
};
goog.i18n.TimeZone.composeGMTString_ = function(offset) {
  var parts = ["GMT"];
  parts.push(0 >= offset ? "+" : "-");
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), ":", goog.string.padNumber(offset % 60, 2));
  return parts.join("")
};
goog.i18n.TimeZone.composePosixTimeZoneID_ = function(offset) {
  if(0 == offset) {
    return"Etc/GMT"
  }
  var parts = ["Etc/GMT", 0 > offset ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset %= 60;
  0 != offset && parts.push(":", goog.string.padNumber(offset, 2));
  return parts.join("")
};
goog.i18n.TimeZone.composeUTCString_ = function(offset) {
  if(0 == offset) {
    return"UTC"
  }
  var parts = ["UTC", 0 > offset ? "+" : "-"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset %= 60;
  0 != offset && parts.push(":", offset);
  return parts.join("")
};
goog.i18n.TimeZone.prototype.getDaylightAdjustment = function(date) {
  for(var timeInMs = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes()), timeInHours = timeInMs / goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_, index = 0;index < this.transitions_.length && timeInHours >= this.transitions_[index];) {
    index += 2
  }
  return 0 == index ? 0 : this.transitions_[index - 1]
};
goog.i18n.TimeZone.prototype.getGMTString = function(date) {
  return goog.i18n.TimeZone.composeGMTString_(this.getOffset(date))
};
goog.i18n.TimeZone.prototype.getLongName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_LONG_NAME : goog.i18n.TimeZone.NameType.STD_LONG_NAME]
};
goog.i18n.TimeZone.prototype.getOffset = function(date) {
  return this.standardOffset_ - this.getDaylightAdjustment(date)
};
goog.i18n.TimeZone.prototype.getRFCTimeZoneString = function(date) {
  var offset = -this.getOffset(date), parts = [0 > offset ? "-" : "+"], offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), goog.string.padNumber(offset % 60, 2));
  return parts.join("")
};
goog.i18n.TimeZone.prototype.getShortName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_SHORT_NAME : goog.i18n.TimeZone.NameType.STD_SHORT_NAME]
};
goog.i18n.TimeZone.prototype.getTimeZoneId = function() {
  return this.timeZoneId_
};
goog.i18n.TimeZone.prototype.isDaylightTime = function(date) {
  return 0 < this.getDaylightAdjustment(date)
};
// Input 57
goog.i18n.DateTimeFormat = function(pattern) {
  goog.asserts.assert(goog.isDef(pattern), "Pattern must be defined");
  this.patternParts_ = [];
  "number" == typeof pattern ? this.applyStandardPattern_(pattern) : this.applyPattern_(pattern)
};
goog.i18n.DateTimeFormat.Format = {FULL_DATE:0, LONG_DATE:1, MEDIUM_DATE:2, SHORT_DATE:3, FULL_TIME:4, LONG_TIME:5, MEDIUM_TIME:6, SHORT_TIME:7, FULL_DATETIME:8, LONG_DATETIME:9, MEDIUM_DATETIME:10, SHORT_DATETIME:11};
goog.i18n.DateTimeFormat.TOKENS_ = [/^\'(?:[^\']|\'\')*\'/, /^(?:G+|y+|M+|k+|S+|E+|a+|h+|K+|H+|c+|L+|Q+|d+|m+|s+|v+|z+|Z+)/, /^[^\'GyMkSEahKHcLQdmsvzZ]+/];
goog.i18n.DateTimeFormat.PartTypes_ = {QUOTED_STRING:0, FIELD:1, LITERAL:2};
goog.i18n.DateTimeFormat.prototype.applyPattern_ = function(pattern) {
  for(;pattern;) {
    for(var i = 0;i < goog.i18n.DateTimeFormat.TOKENS_.length;++i) {
      var m = pattern.match(goog.i18n.DateTimeFormat.TOKENS_[i]);
      if(m) {
        var part = m[0];
        pattern = pattern.substring(part.length);
        i == goog.i18n.DateTimeFormat.PartTypes_.QUOTED_STRING && ("''" == part ? part = "'" : (part = part.substring(1, part.length - 1), part = part.replace(/\'\'/, "'")));
        this.patternParts_.push({text:part, type:i});
        break
      }
    }
  }
};
goog.i18n.DateTimeFormat.prototype.format = function(date, opt_timeZone) {
  var diff = opt_timeZone ? 6E4 * (date.getTimezoneOffset() - opt_timeZone.getOffset(date)) : 0, dateForDate = diff ? new Date(date.getTime() + diff) : date, dateForTime = dateForDate;
  opt_timeZone && dateForDate.getTimezoneOffset() != date.getTimezoneOffset() && (diff += 0 < diff ? -864E5 : 864E5, dateForTime = new Date(date.getTime() + diff));
  for(var out = [], i = 0;i < this.patternParts_.length;++i) {
    var text = this.patternParts_[i].text;
    goog.i18n.DateTimeFormat.PartTypes_.FIELD == this.patternParts_[i].type ? out.push(this.formatField_(text, date, dateForDate, dateForTime, opt_timeZone)) : out.push(text)
  }
  return out.join("")
};
goog.i18n.DateTimeFormat.prototype.applyStandardPattern_ = function(formatType) {
  var pattern;
  if(4 > formatType) {
    pattern = goog.i18n.DateTimeSymbols.DATEFORMATS[formatType]
  }else {
    if(8 > formatType) {
      pattern = goog.i18n.DateTimeSymbols.TIMEFORMATS[formatType - 4]
    }else {
      if(12 > formatType) {
        pattern = goog.i18n.DateTimeSymbols.DATETIMEFORMATS[formatType - 8], pattern = pattern.replace("{1}", goog.i18n.DateTimeSymbols.DATEFORMATS[formatType - 8]), pattern = pattern.replace("{0}", goog.i18n.DateTimeSymbols.TIMEFORMATS[formatType - 8])
      }else {
        this.applyStandardPattern_(goog.i18n.DateTimeFormat.Format.MEDIUM_DATETIME);
        return
      }
    }
  }
  this.applyPattern_(pattern)
};
goog.i18n.DateTimeFormat.prototype.localizeNumbers = function(input) {
  if(void 0 === goog.i18n.DateTimeSymbols.ZERODIGIT) {
    return input
  }
  for(var parts = [], i = 0;i < input.length;i++) {
    var c = input.charCodeAt(i);
    parts.push(48 <= c && 57 >= c ? String.fromCharCode(goog.i18n.DateTimeSymbols.ZERODIGIT + c - 48) : input.charAt(i))
  }
  return parts.join("")
};
goog.i18n.DateTimeFormat.prototype.formatEra_ = function(count, date) {
  var value = 0 < date.getFullYear() ? 1 : 0;
  return 4 <= count ? goog.i18n.DateTimeSymbols.ERANAMES[value] : goog.i18n.DateTimeSymbols.ERAS[value]
};
goog.i18n.DateTimeFormat.prototype.formatYear_ = function(count, date) {
  var value = date.getFullYear();
  0 > value && (value = -value);
  return this.localizeNumbers(2 == count ? goog.string.padNumber(value % 100, 2) : String(value))
};
goog.i18n.DateTimeFormat.prototype.formatMonth_ = function(count, date) {
  var value = date.getMonth();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.NARROWMONTHS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.MONTHS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.SHORTMONTHS[value];
    default:
      return this.localizeNumbers(goog.string.padNumber(value + 1, count))
  }
};
goog.i18n.DateTimeFormat.prototype.format24Hours_ = function(count, date) {
  return this.localizeNumbers(goog.string.padNumber(date.getHours() || 24, count))
};
goog.i18n.DateTimeFormat.prototype.formatFractionalSeconds_ = function(count, date) {
  var value = date.getTime() % 1E3 / 1E3;
  return this.localizeNumbers(value.toFixed(Math.min(3, count)).substr(2) + (3 < count ? goog.string.padNumber(0, count - 3) : ""))
};
goog.i18n.DateTimeFormat.prototype.formatDayOfWeek_ = function(count, date) {
  var value = date.getDay();
  return 4 <= count ? goog.i18n.DateTimeSymbols.WEEKDAYS[value] : goog.i18n.DateTimeSymbols.SHORTWEEKDAYS[value]
};
goog.i18n.DateTimeFormat.prototype.formatAmPm_ = function(count, date) {
  var hours = date.getHours();
  return goog.i18n.DateTimeSymbols.AMPMS[12 <= hours && 24 > hours ? 1 : 0]
};
goog.i18n.DateTimeFormat.prototype.format1To12Hours_ = function(count, date) {
  return this.localizeNumbers(goog.string.padNumber(date.getHours() % 12 || 12, count))
};
goog.i18n.DateTimeFormat.prototype.format0To11Hours_ = function(count, date) {
  return this.localizeNumbers(goog.string.padNumber(date.getHours() % 12, count))
};
goog.i18n.DateTimeFormat.prototype.format0To23Hours_ = function(count, date) {
  return this.localizeNumbers(goog.string.padNumber(date.getHours(), count))
};
goog.i18n.DateTimeFormat.prototype.formatStandaloneDay_ = function(count, date) {
  var value = date.getDay();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.STANDALONENARROWWEEKDAYS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.STANDALONEWEEKDAYS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.STANDALONESHORTWEEKDAYS[value];
    default:
      return this.localizeNumbers(goog.string.padNumber(value, 1))
  }
};
goog.i18n.DateTimeFormat.prototype.formatStandaloneMonth_ = function(count, date) {
  var value = date.getMonth();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.STANDALONENARROWMONTHS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.STANDALONEMONTHS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.STANDALONESHORTMONTHS[value];
    default:
      return this.localizeNumbers(goog.string.padNumber(value + 1, count))
  }
};
goog.i18n.DateTimeFormat.prototype.formatQuarter_ = function(count, date) {
  var value = Math.floor(date.getMonth() / 3);
  return 4 > count ? goog.i18n.DateTimeSymbols.SHORTQUARTERS[value] : goog.i18n.DateTimeSymbols.QUARTERS[value]
};
goog.i18n.DateTimeFormat.prototype.formatDate_ = function(count, date) {
  return this.localizeNumbers(goog.string.padNumber(date.getDate(), count))
};
goog.i18n.DateTimeFormat.prototype.formatMinutes_ = function(count, date) {
  return this.localizeNumbers(goog.string.padNumber(date.getMinutes(), count))
};
goog.i18n.DateTimeFormat.prototype.formatSeconds_ = function(count, date) {
  return this.localizeNumbers(goog.string.padNumber(date.getSeconds(), count))
};
goog.i18n.DateTimeFormat.prototype.formatTimeZoneRFC_ = function(count, date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return 4 > count ? opt_timeZone.getRFCTimeZoneString(date) : this.localizeNumbers(opt_timeZone.getGMTString(date))
};
goog.i18n.DateTimeFormat.prototype.formatTimeZone_ = function(count, date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return 4 > count ? opt_timeZone.getShortName(date) : opt_timeZone.getLongName(date)
};
goog.i18n.DateTimeFormat.prototype.formatTimeZoneId_ = function(date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return opt_timeZone.getTimeZoneId()
};
goog.i18n.DateTimeFormat.prototype.formatField_ = function(patternStr, date, dateForDate, dateForTime, opt_timeZone) {
  var count = patternStr.length;
  switch(patternStr.charAt(0)) {
    case "G":
      return this.formatEra_(count, dateForDate);
    case "y":
      return this.formatYear_(count, dateForDate);
    case "M":
      return this.formatMonth_(count, dateForDate);
    case "k":
      return this.format24Hours_(count, dateForTime);
    case "S":
      return this.formatFractionalSeconds_(count, dateForTime);
    case "E":
      return this.formatDayOfWeek_(count, dateForDate);
    case "a":
      return this.formatAmPm_(count, dateForTime);
    case "h":
      return this.format1To12Hours_(count, dateForTime);
    case "K":
      return this.format0To11Hours_(count, dateForTime);
    case "H":
      return this.format0To23Hours_(count, dateForTime);
    case "c":
      return this.formatStandaloneDay_(count, dateForDate);
    case "L":
      return this.formatStandaloneMonth_(count, dateForDate);
    case "Q":
      return this.formatQuarter_(count, dateForDate);
    case "d":
      return this.formatDate_(count, dateForDate);
    case "m":
      return this.formatMinutes_(count, dateForTime);
    case "s":
      return this.formatSeconds_(count, dateForTime);
    case "v":
      return this.formatTimeZoneId_(date, opt_timeZone);
    case "z":
      return this.formatTimeZone_(count, date, opt_timeZone);
    case "Z":
      return this.formatTimeZoneRFC_(count, date, opt_timeZone);
    default:
      return""
  }
};
// Input 58
goog.i18n.DateTimePatterns_af = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, MMM d", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_am = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, MMM d", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ar = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/\u200fM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE\u060c d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_bg = {YEAR_FULL:"yyyy '\u0433'.", YEAR_MONTH_ABBR:"MMM y '\u0433'.", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d.M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"d MMM, EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_bn = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_br = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"y MMM", YEAR_MONTH_FULL:"yyyy MMMM", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"MM-dd", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d, EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ca = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"LLL y", YEAR_MONTH_FULL:"LLLL 'de' yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_chr = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d, EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_cs = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"LLLL y", YEAR_MONTH_FULL:"LLLL yyyy", MONTH_DAY_ABBR:"d. M.", MONTH_DAY_FULL:"dd. M.", MONTH_DAY_SHORT:"d. M.", MONTH_DAY_MEDIUM:"d. M.", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. M.", DAY_ABBR:"d."};
goog.i18n.DateTimePatterns_cy = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_da = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d. MMM", DAY_ABBR:"d."};
goog.i18n.DateTimePatterns_de = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_de_AT = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_de_CH = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_el = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"LLL y", YEAR_MONTH_FULL:"LLLL yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_en = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, MMM d", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_en_AU = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd/MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_en_GB = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd/MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_en_IE = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_en_IN = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd/MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_en_SG = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd/MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_en_US = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, MMM d", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_en_ZA = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"dd MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"MM/dd", MONTH_DAY_MEDIUM:"dd MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE dd MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_es = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM 'de' yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd 'de' MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d 'de' MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_es_419 = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM 'de' yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd 'de' MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d 'de' MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_es_ES = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM 'de' yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd 'de' MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d 'de' MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_et = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_eu = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, MMM d", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_fa = {YEAR_FULL:"y G", YEAR_MONTH_ABBR:"MMM y G", YEAR_MONTH_FULL:"MMMM y G", MONTH_DAY_ABBR:"d LLL", MONTH_DAY_FULL:"dd LLLL", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"d LLLL", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d LLL", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_fi = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"LLL y", YEAR_MONTH_FULL:"LLLL yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"ccc d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_fil = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"M-d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"EEE MMM d", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_fr = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_fr_CA = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"M-d", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_gl = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d-M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_gsw = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_gu = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_haw = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"y MMM", YEAR_MONTH_FULL:"yyyy MMMM", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"MM-dd", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d, EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_he = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d \u05d1MMM", MONTH_DAY_FULL:"dd \u05d1MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d \u05d1MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d \u05d1MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_hi = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_hr = {YEAR_FULL:"yyyy.", YEAR_MONTH_ABBR:"LLL y.", YEAR_MONTH_FULL:"LLLL yyyy.", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d. M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. MMM", DAY_ABBR:"d."};
goog.i18n.DateTimePatterns_hu = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"y. MMM", YEAR_MONTH_FULL:"yyyy. MMMM", MONTH_DAY_ABBR:"MMM d.", MONTH_DAY_FULL:"MMMM dd.", MONTH_DAY_SHORT:"M. d.", MONTH_DAY_MEDIUM:"MMMM d.", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d., EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_id = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_in = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_is = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_it = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_iw = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d \u05d1MMM", MONTH_DAY_FULL:"dd \u05d1MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d \u05d1MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d \u05d1MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ja = {YEAR_FULL:"yyyy\u5e74", YEAR_MONTH_ABBR:"y\u5e74M\u6708", YEAR_MONTH_FULL:"yyyy\u5e74M\u6708", MONTH_DAY_ABBR:"M\u6708d\u65e5", MONTH_DAY_FULL:"M\u6708dd\u65e5", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"M\u6708d\u65e5", WEEKDAY_MONTH_DAY_MEDIUM:"M\u6708d\u65e5(EEE)", DAY_ABBR:"d\u65e5"};
goog.i18n.DateTimePatterns_kn = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ko = {YEAR_FULL:"yyyy\ub144", YEAR_MONTH_ABBR:"y\ub144 MMM", YEAR_MONTH_FULL:"yyyy\ub144 MMMM", MONTH_DAY_ABBR:"MMM d\uc77c", MONTH_DAY_FULL:"MMMM dd\uc77c", MONTH_DAY_SHORT:"M. d.", MONTH_DAY_MEDIUM:"MMMM d\uc77c", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d\uc77c (EEE)", DAY_ABBR:"d\uc77c"};
goog.i18n.DateTimePatterns_ln = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_lt = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM, y", YEAR_MONTH_FULL:"MMMM, yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM-dd", MONTH_DAY_SHORT:"MM-d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d, EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_lv = {YEAR_FULL:"yyyy. 'g'.", YEAR_MONTH_ABBR:"y. 'g'. MMM", YEAR_MONTH_FULL:"yyyy. 'g'. MMMM", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"dd.MM.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ml = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"y MMM", YEAR_MONTH_FULL:"yyyy MMMM", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d, EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_mo = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd.MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_mr = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ms = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d-M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_mt = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"y MMM", YEAR_MONTH_FULL:"yyyy MMMM", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"MM-dd", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d, EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_nb = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d. MMM", DAY_ABBR:"d."};
goog.i18n.DateTimePatterns_nl = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d-M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_no = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d. MMM", DAY_ABBR:"d."};
goog.i18n.DateTimePatterns_or = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"y MMM", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"d-M", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"MMM d, EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_pl = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"LLL y", YEAR_MONTH_FULL:"LLLL yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d.MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_pt = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM 'de' y", YEAR_MONTH_FULL:"MMMM 'de' yyyy", MONTH_DAY_ABBR:"d 'de' MMM", MONTH_DAY_FULL:"dd 'de' MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d 'de' MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d 'de' MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_pt_BR = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM 'de' y", YEAR_MONTH_FULL:"MMMM 'de' yyyy", MONTH_DAY_ABBR:"d 'de' MMM", MONTH_DAY_FULL:"dd 'de' MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d 'de' MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d 'de' MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_pt_PT = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MM/y", YEAR_MONTH_FULL:"MMMM 'de' yyyy", MONTH_DAY_ABBR:"d/MM", MONTH_DAY_FULL:"dd 'de' MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d 'de' MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d/MM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ro = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd.MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ru = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"LLL y", YEAR_MONTH_FULL:"LLLL yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd.MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"ccc, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_sk = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"LLL y", YEAR_MONTH_FULL:"LLLL yyyy", MONTH_DAY_ABBR:"d. MMM.", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d.M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. MMM.", DAY_ABBR:"d."};
goog.i18n.DateTimePatterns_sl = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d. M.", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_sq = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"M-d", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_sr = {YEAR_FULL:"yyyy.", YEAR_MONTH_ABBR:"MMM y.", YEAR_MONTH_FULL:"MMMM yyyy.", MONTH_DAY_ABBR:"d. MMM", MONTH_DAY_FULL:"dd. MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d. MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d. MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_sv = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd:'e' MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d:'e' MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_sw = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d-M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ta = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_te = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_th = {YEAR_FULL:"G y", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM y", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_tl = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"M-d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"EEE MMM d", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_tr = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd/MM", MONTH_DAY_MEDIUM:"dd MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"d MMMM EEE", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_uk = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"LLL y", YEAR_MONTH_FULL:"LLLL yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd.MM", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_ur = {YEAR_FULL:"yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"d MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"d MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE\u060c d MMM", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns_vi = {YEAR_FULL:"'N\u0103m' yyyy", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"dd MMM", MONTH_DAY_FULL:"dd MMMM", MONTH_DAY_SHORT:"dd-M", MONTH_DAY_MEDIUM:"dd MMMM", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, dd MMM", DAY_ABBR:"'Ng\u00e0y' dd"};
goog.i18n.DateTimePatterns_zh = {YEAR_FULL:"yyyy\u5e74", YEAR_MONTH_ABBR:"y\u5e74M\u6708", YEAR_MONTH_FULL:"yyyy\u5e74M\u6708", MONTH_DAY_ABBR:"M\u6708d\u65e5", MONTH_DAY_FULL:"M\u6708dd\u65e5", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"M\u6708d\u65e5", WEEKDAY_MONTH_DAY_MEDIUM:"M\u6708d\u65e5EEE", DAY_ABBR:"d\u65e5"};
goog.i18n.DateTimePatterns_zh_CN = {YEAR_FULL:"yyyy\u5e74", YEAR_MONTH_ABBR:"y\u5e74M\u6708", YEAR_MONTH_FULL:"yyyy\u5e74M\u6708", MONTH_DAY_ABBR:"M\u6708d\u65e5", MONTH_DAY_FULL:"M\u6708dd\u65e5", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"M\u6708d\u65e5", WEEKDAY_MONTH_DAY_MEDIUM:"M\u6708d\u65e5EEE", DAY_ABBR:"d\u65e5"};
goog.i18n.DateTimePatterns_zh_HK = {YEAR_FULL:"yyyy\u5e74", YEAR_MONTH_ABBR:"y\u5e74M\u6708", YEAR_MONTH_FULL:"yyyy\u5e74M\u6708", MONTH_DAY_ABBR:"M\u6708d\u65e5", MONTH_DAY_FULL:"M\u6708dd\u65e5", MONTH_DAY_SHORT:"d/M", MONTH_DAY_MEDIUM:"M\u6708d\u65e5", WEEKDAY_MONTH_DAY_MEDIUM:"M\u6708d\u65e5EEE", DAY_ABBR:"d\u65e5"};
goog.i18n.DateTimePatterns_zh_TW = {YEAR_FULL:"yyyy\u5e74", YEAR_MONTH_ABBR:"y\u5e74M\u6708", YEAR_MONTH_FULL:"yyyy\u5e74M\u6708", MONTH_DAY_ABBR:"M\u6708d\u65e5", MONTH_DAY_FULL:"M\u6708dd\u65e5", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"M\u6708d\u65e5", WEEKDAY_MONTH_DAY_MEDIUM:"M\u6708d\u65e5EEE", DAY_ABBR:"d\u65e5"};
goog.i18n.DateTimePatterns_zu = {YEAR_FULL:"YYYY", YEAR_MONTH_ABBR:"MMM y", YEAR_MONTH_FULL:"MMMM yyyy", MONTH_DAY_ABBR:"MMM d", MONTH_DAY_FULL:"MMMM dd", MONTH_DAY_SHORT:"M/d", MONTH_DAY_MEDIUM:"MMMM d", WEEKDAY_MONTH_DAY_MEDIUM:"EEE, MMM d", DAY_ABBR:"d"};
goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en;
"af" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_af);
"am" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_am);
"ar" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ar);
"bg" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_bg);
"bn" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_bn);
"br" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_br);
"ca" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ca);
"chr" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_chr);
"cs" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_cs);
"cy" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_cy);
"da" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_da);
"de" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_de);
if("de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_de_AT
}
if("de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_de_CH
}
"el" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_el);
"en" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en);
if("en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en_AU
}
if("en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en_GB
}
if("en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en_IE
}
if("en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en_IN
}
if("en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en_SG
}
if("en_US" == goog.LOCALE || "en-US" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en_US
}
if("en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_en_ZA
}
"es" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_es);
if("es_419" == goog.LOCALE || "es-419" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_es_419
}
if("es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_es_ES
}
"et" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_et);
"eu" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_eu);
"fa" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_fa);
"fi" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_fi);
"fil" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_fil);
"fr" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_fr);
if("fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_fr_CA
}
"gl" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_gl);
"gsw" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_gsw);
"gu" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_gu);
"haw" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_haw);
"he" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_he);
"hi" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_hi);
"hr" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_hr);
"hu" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_hu);
"id" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_id);
"in" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_in);
"is" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_is);
"it" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_it);
"iw" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_iw);
"ja" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ja);
"kn" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_kn);
"ko" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ko);
"ln" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ln);
"lt" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_lt);
"lv" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_lv);
"ml" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ml);
"mo" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_mo);
"mr" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_mr);
"ms" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ms);
"mt" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_mt);
"nb" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_nb);
"nl" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_nl);
"no" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_no);
"or" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_or);
"pl" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_pl);
"pt" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_pt);
if("pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_pt_BR
}
if("pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_pt_PT
}
"ro" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ro);
"ru" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ru);
"sk" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_sk);
"sl" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_sl);
"sq" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_sq);
"sr" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_sr);
"sv" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_sv);
"sw" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_sw);
"ta" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ta);
"te" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_te);
"th" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_th);
"tl" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_tl);
"tr" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_tr);
"uk" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_uk);
"ur" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_ur);
"vi" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_vi);
"zh" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_zh);
if("zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_zh_CN
}
if("zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_zh_HK
}
if("zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE) {
  goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_zh_TW
}
"zu" == goog.LOCALE && (goog.i18n.DateTimePatterns = goog.i18n.DateTimePatterns_zu);
// Input 59
google.visualization.IDataTable = function() {
};
// Input 60
gviz.format = {};
gviz.format.DateFormat = {};
gviz.format.DateFormat.Format = {};
google.visualization.DateFormat = function(opt_options) {
  var defaults = {formatType:google.visualization.DateFormat.FormatType.SHORT, valueType:google.visualization.DateFormat.ValueType.DATETIME}, options = new gviz.Options([opt_options || {}, defaults]);
  this.pattern_ = options.inferValue("pattern");
  this.formatter_ = null;
  this.formatType_ = options.inferOptionalEnumValue("formatType", google.visualization.DateFormat.FormatType);
  this.valueType_ = options.inferOptionalEnumValue("valueType", google.visualization.DateFormat.ValueType);
  this.clearMinutes_ = options.inferBooleanValue("clearMinutes", !1);
  this.timeZone_ = null;
  var timeZone = options.inferOptionalNumberValue("timeZone");
  null != timeZone && (this.timeZone_ = goog.i18n.TimeZone.createTimeZone(60 * -timeZone))
};
google.visualization.DateFormat.Format = goog.i18n.DateTimeFormat.Format;
google.visualization.DateFormat.Patterns = goog.i18n.DateTimePatterns;
google.visualization.DateFormat.FormatType = {FULL:"full", LONG:"long", MEDIUM:"medium", SHORT:"short"};
google.visualization.DateFormat.ValueType = {DATE:"date", DATETIME:"datetime", TIME:"time"};
google.visualization.DateFormat.dontLocalizeDigits = function() {
  goog.i18n.DateTimeSymbols.ZERODIGIT = void 0
};
google.visualization.DateFormat.combinePattern_ = function(valueType, formatType) {
  switch(valueType) {
    case google.visualization.DateFormat.ValueType.DATE:
      switch(formatType) {
        case google.visualization.DateFormat.FormatType.FULL:
          return goog.i18n.DateTimeFormat.Format.FULL_DATE;
        case google.visualization.DateFormat.FormatType.LONG:
          return goog.i18n.DateTimeFormat.Format.LONG_DATE;
        case google.visualization.DateFormat.FormatType.MEDIUM:
          return goog.i18n.DateTimeFormat.Format.MEDIUM_DATE;
        case google.visualization.DateFormat.FormatType.SHORT:
          return goog.i18n.DateTimeFormat.Format.SHORT_DATE
      }
    ;
    case google.visualization.DateFormat.ValueType.DATETIME:
      switch(formatType) {
        case google.visualization.DateFormat.FormatType.FULL:
          return goog.i18n.DateTimeFormat.Format.FULL_DATETIME;
        case google.visualization.DateFormat.FormatType.LONG:
          return goog.i18n.DateTimeFormat.Format.LONG_DATETIME;
        case google.visualization.DateFormat.FormatType.MEDIUM:
          return goog.i18n.DateTimeFormat.Format.MEDIUM_DATETIME;
        case google.visualization.DateFormat.FormatType.SHORT:
          return goog.i18n.DateTimeFormat.Format.SHORT_DATETIME
      }
    ;
    case google.visualization.DateFormat.ValueType.TIME:
      switch(formatType) {
        case google.visualization.DateFormat.FormatType.FULL:
          return goog.i18n.DateTimeFormat.Format.FULL_TIME;
        case google.visualization.DateFormat.FormatType.LONG:
          return goog.i18n.DateTimeFormat.Format.LONG_TIME;
        case google.visualization.DateFormat.FormatType.MEDIUM:
          return goog.i18n.DateTimeFormat.Format.MEDIUM_TIME;
        case google.visualization.DateFormat.FormatType.SHORT:
          return goog.i18n.DateTimeFormat.Format.SHORT_TIME
      }
    ;
    default:
      return goog.i18n.DateTimeFormat.Format.FULL_DATETIME
  }
};
google.visualization.DateFormat.prototype.format = function(dataTable, columnIndex) {
  var valueType = gviz.Options.convertToEnum(google.visualization.DateFormat.ValueType, dataTable.getColumnType(columnIndex));
  if(valueType == google.visualization.DateFormat.ValueType.DATE || valueType == google.visualization.DateFormat.ValueType.DATETIME) {
    for(var formatter = this.createFormatter_(valueType), numberOfRows = dataTable.getNumberOfRows(), r = 0;r < numberOfRows;r++) {
      var value = dataTable.getValue(r, columnIndex), formattedValue = this.formatValue_(formatter, value);
      dataTable.setFormattedValue(r, columnIndex, formattedValue)
    }
  }
};
google.visualization.DateFormat.prototype.formatValue = function(value) {
  this.formatter_ || (this.formatter_ = this.createFormatter_(this.valueType_));
  return this.formatValue_(this.formatter_, value)
};
google.visualization.DateFormat.prototype.createFormatter_ = function(valueType) {
  var pattern = this.pattern_;
  goog.isDefAndNotNull(pattern) || (pattern = google.visualization.DateFormat.combinePattern_(valueType, this.formatType_));
  return new goog.i18n.DateTimeFormat(pattern)
};
google.visualization.DateFormat.prototype.formatValue_ = function(formatter, value) {
  if(goog.isNull(value)) {
    return""
  }
  var timeZone = this.timeZone_;
  null == timeZone && (timeZone = goog.i18n.TimeZone.createTimeZone(value.getTimezoneOffset()));
  var toFormat = new Date(value.getTime());
  this.clearMinutes_ && toFormat.setMinutes(0);
  return formatter.format(toFormat, timeZone)
};
google.visualization.DateFormat.overrideFormatValue = function(cb) {
  google.visualization.DateFormat.prototype.formatValue = cb
};
// Input 61
goog.i18n.CompactNumberFormatSymbols_af = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0m"}, 1E7:{other:"00\u00a0m"}, 1E8:{other:"000\u00a0m"}, 1E9:{other:"0\u00a0mjd"}, 1E10:{other:"00\u00a0mjd"}, 1E11:{other:"000\u00a0mjd"}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 duisend"}, 1E4:{other:"00 duisend"}, 1E5:{other:"000 duisend"}, 1E6:{other:"0 miljoen"}, 1E7:{other:"00 miljoen"}, 
1E8:{other:"000 miljoen"}, 1E9:{other:"0 miljard"}, 1E10:{other:"00 miljard"}, 1E11:{other:"000 miljard"}, 1E12:{other:"0 biljoen"}, 1E13:{other:"00 biljoen"}, 1E14:{other:"000 biljoen"}}};
goog.i18n.CompactNumberFormatSymbols_af_ZA = goog.i18n.CompactNumberFormatSymbols_af;
goog.i18n.CompactNumberFormatSymbols_am = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u123a"}, 1E4:{other:"00\u00a0\u123a"}, 1E5:{other:"000\u00a0\u123a"}, 1E6:{other:"0\u00a0\u121c\u1275\u122d"}, 1E7:{other:"00\u00a0\u121c\u1275\u122d"}, 1E8:{other:"000\u00a0\u121c\u1275\u122d"}, 1E9:{other:"0\u00a0\u1262"}, 1E10:{other:"00\u00a0\u1262"}, 1E11:{other:"000\u00a0\u1262"}, 1E12:{other:"0\u00a0\u1275"}, 1E13:{other:"00\u00a0\u1275"}, 1E14:{other:"000\u00a0\u1275"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u123a"}, 
1E4:{other:"00 \u123a"}, 1E5:{other:"000 \u123a"}, 1E6:{other:"0 \u121a\u120a\u12ee\u1295"}, 1E7:{other:"00 \u121a\u120a\u12ee\u1295"}, 1E8:{other:"000 \u121a\u120a\u12ee\u1295"}, 1E9:{other:"0 \u1262\u120a\u12ee\u1295"}, 1E10:{other:"00 \u1262\u120a\u12ee\u1295"}, 1E11:{other:"000 \u1262\u120a\u12ee\u1295"}, 1E12:{other:"0 \u1275\u122a\u120a\u12ee\u1295"}, 1E13:{other:"00 \u1275\u122a\u120a\u12ee\u1295"}, 1E14:{other:"000 \u1275\u122a\u120a\u12ee\u1295"}}};
goog.i18n.CompactNumberFormatSymbols_am_ET = goog.i18n.CompactNumberFormatSymbols_am;
goog.i18n.CompactNumberFormatSymbols_ar = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0623\u0644\u0641"}, 1E4:{other:"00\u00a0\u0623\u0644\u0641"}, 1E5:{other:"000\u00a0\u0623\u0644\u0641"}, 1E6:{other:"0\u00a0\u0645\u0644\u064a\u0648"}, 1E7:{other:"00\u00a0\u0645\u0644\u064a\u0648"}, 1E8:{other:"000\u00a0\u0645\u0644\u064a\u0648"}, 1E9:{other:"0\u00a0\u0628\u0644\u064a\u0648"}, 1E10:{other:"00\u00a0\u0628\u0644\u064a\u0648"}, 1E11:{other:"000\u00a0\u0628\u0644\u064a\u0648"}, 1E12:{other:"0\u00a0\u062a\u0631\u0644\u064a\u0648"}, 
1E13:{other:"00\u00a0\u062a\u0631\u0644\u064a\u0648"}, 1E14:{other:"000\u00a0\u062a\u0631\u0644\u064a\u0648"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0623\u0644\u0641"}, 1E4:{other:"00 \u0623\u0644\u0641"}, 1E5:{other:"000 \u0623\u0644\u0641"}, 1E6:{other:"0 \u0645\u0644\u064a\u0648\u0646"}, 1E7:{other:"00 \u0645\u0644\u064a\u0648\u0646"}, 1E8:{other:"000 \u0645\u0644\u064a\u0648\u0646"}, 1E9:{other:"0 \u0628\u0644\u064a\u0648\u0646"}, 1E10:{other:"00 \u0628\u0644\u064a\u0648\u0646"}, 1E11:{other:"000 \u0628\u0644\u064a\u0648\u0646"}, 
1E12:{other:"0 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}, 1E13:{other:"00 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}, 1E14:{other:"000 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}}};
goog.i18n.CompactNumberFormatSymbols_ar_001 = goog.i18n.CompactNumberFormatSymbols_ar;
goog.i18n.CompactNumberFormatSymbols_ar_EG = goog.i18n.CompactNumberFormatSymbols_ar;
goog.i18n.CompactNumberFormatSymbols_bg = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0425"}, 1E4:{other:"00\u00a0\u0425"}, 1E5:{other:"000\u00a0\u0425"}, 1E6:{other:"0\u00a0\u041c"}, 1E7:{other:"00\u00a0\u041c"}, 1E8:{other:"000\u00a0\u041c"}, 1E9:{other:"0\u00a0\u0411"}, 1E10:{other:"00\u00a0\u0411"}, 1E11:{other:"000\u00a0\u0411"}, 1E12:{other:"0\u00a0\u0422"}, 1E13:{other:"00\u00a0\u0422"}, 1E14:{other:"000\u00a0\u0422"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0445\u0438\u043b\u044f\u0434\u0438"}, 
1E4:{other:"00 \u0445\u0438\u043b\u044f\u0434\u0438"}, 1E5:{other:"000 \u0445\u0438\u043b\u044f\u0434\u0438"}, 1E6:{other:"0 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E10:{other:"00 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 
1E13:{other:"00 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_bg_BG = goog.i18n.CompactNumberFormatSymbols_bg;
goog.i18n.CompactNumberFormatSymbols_bn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u09b9\u09be\u099c\u09be\u09b0"}, 1E4:{other:"00 \u09b9\u09be\u099c\u09be\u09b0"}, 1E5:{other:"000 \u09b9\u09be\u099c\u09be\u09b0"}, 1E6:{other:"0 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 
1E7:{other:"00 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E8:{other:"000 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E9:{other:"0 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E10:{other:"00 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E11:{other:"000 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E12:{other:"0 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E13:{other:"00 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E14:{other:"000 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}}};
goog.i18n.CompactNumberFormatSymbols_bn_BD = goog.i18n.CompactNumberFormatSymbols_bn;
goog.i18n.CompactNumberFormatSymbols_br = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_br_FR = goog.i18n.CompactNumberFormatSymbols_br;
goog.i18n.CompactNumberFormatSymbols_ca = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 milions"}, 
1E7:{other:"00 milions"}, 1E8:{other:"000 milions"}, 1E9:{other:"0 miliards"}, 1E10:{other:"00 miliards"}, 1E11:{other:"000 miliards"}, 1E12:{other:"0 bilions"}, 1E13:{other:"00 bilions"}, 1E14:{other:"000 bilions"}}};
goog.i18n.CompactNumberFormatSymbols_ca_AD = goog.i18n.CompactNumberFormatSymbols_ca;
goog.i18n.CompactNumberFormatSymbols_ca_ES = goog.i18n.CompactNumberFormatSymbols_ca;
goog.i18n.CompactNumberFormatSymbols_chr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_chr_US = goog.i18n.CompactNumberFormatSymbols_chr;
goog.i18n.CompactNumberFormatSymbols_cs = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00 tis\u00edc"}, 1E5:{other:"000 tis\u00edc"}, 
1E6:{other:"0 milion\u016f"}, 1E7:{other:"00 milion\u016f"}, 1E8:{other:"000 milion\u016f"}, 1E9:{other:"0 miliard"}, 1E10:{other:"00 miliard"}, 1E11:{other:"000 miliard"}, 1E12:{other:"0 bilion\u016f"}, 1E13:{other:"00 bilion\u016f"}, 1E14:{other:"000 bilion\u016f"}}};
goog.i18n.CompactNumberFormatSymbols_cs_CZ = goog.i18n.CompactNumberFormatSymbols_cs;
goog.i18n.CompactNumberFormatSymbols_cy = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 miliwn"}, 1E7:{other:"00 miliwn"}, 1E8:{other:"000 miliwn"}, 1E9:{other:"0 biliwn"}, 
1E10:{other:"00 biliwn"}, 1E11:{other:"000 biliwn"}, 1E12:{other:"0 triliwn"}, 1E13:{other:"00 triliwn"}, 1E14:{other:"000 triliwn"}}};
goog.i18n.CompactNumberFormatSymbols_cy_GB = goog.i18n.CompactNumberFormatSymbols_cy;
goog.i18n.CompactNumberFormatSymbols_da = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0mio"}, 1E7:{other:"00\u00a0mio"}, 1E8:{other:"000\u00a0mio"}, 1E9:{other:"0\u00a0mia"}, 1E10:{other:"00\u00a0mia"}, 1E11:{other:"000\u00a0mia"}, 1E12:{other:"0\u00a0bill"}, 1E13:{other:"00\u00a0bill"}, 1E14:{other:"000\u00a0bill"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusind"}, 1E4:{other:"00 tusind"}, 1E5:{other:"000 tusind"}, 1E6:{other:"0 millioner"}, 
1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_da_DK = goog.i18n.CompactNumberFormatSymbols_da;
goog.i18n.CompactNumberFormatSymbols_de = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0Mio"}, 1E7:{other:"00\u00a0Mio"}, 1E8:{other:"000\u00a0Mio"}, 1E9:{other:"0\u00a0Mrd"}, 1E10:{other:"00\u00a0Mrd"}, 1E11:{other:"000\u00a0Mrd"}, 1E12:{other:"0\u00a0Bio"}, 1E13:{other:"00\u00a0Bio"}, 1E14:{other:"000\u00a0Bio"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 Tausend"}, 1E4:{other:"00 Tausend"}, 1E5:{other:"000 Tausend"}, 1E6:{other:"0 Millionen"}, 
1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_de_AT = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0Mio"}, 1E7:{other:"00\u00a0Mio"}, 1E8:{other:"000\u00a0Mio"}, 1E9:{other:"0\u00a0Mrd"}, 1E10:{other:"00\u00a0Mrd"}, 1E11:{other:"000\u00a0Mrd"}, 1E12:{other:"0\u00a0Bio"}, 1E13:{other:"00\u00a0Bio"}, 1E14:{other:"000\u00a0Bio"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 Tausend"}, 1E4:{other:"00 Tausend"}, 1E5:{other:"000 Tausend"}, 1E6:{other:"0 Millionen"}, 
1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_de_BE = goog.i18n.CompactNumberFormatSymbols_de;
goog.i18n.CompactNumberFormatSymbols_de_CH = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0Mio"}, 1E7:{other:"00\u00a0Mio"}, 1E8:{other:"000\u00a0Mio"}, 1E9:{other:"0\u00a0Mrd"}, 1E10:{other:"00\u00a0Mrd"}, 1E11:{other:"000\u00a0Mrd"}, 1E12:{other:"0\u00a0Bio"}, 1E13:{other:"00\u00a0Bio"}, 1E14:{other:"000\u00a0Bio"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 Tausend"}, 1E4:{other:"00 Tausend"}, 1E5:{other:"000 Tausend"}, 1E6:{other:"0 Millionen"}, 
1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_de_DE = goog.i18n.CompactNumberFormatSymbols_de;
goog.i18n.CompactNumberFormatSymbols_de_LU = goog.i18n.CompactNumberFormatSymbols_de;
goog.i18n.CompactNumberFormatSymbols_el = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u03c7\u03b9\u03bb."}, 1E4:{other:"00\u00a0\u03c7\u03b9\u03bb."}, 1E5:{other:"000\u00a0\u03c7\u03b9\u03bb."}, 1E6:{other:"0\u00a0\u03b5\u03ba."}, 1E7:{other:"00\u00a0\u03b5\u03ba."}, 1E8:{other:"000\u00a0\u03b5\u03ba."}, 1E9:{other:"0\u00a0\u03b4\u03b9\u03c2"}, 1E10:{other:"00\u00a0\u03b4\u03b9\u03c2"}, 1E11:{other:"000\u00a0\u03b4\u03b9\u03c2"}, 1E12:{other:"0\u00a0\u03c4\u03c1\u03b9\u03c2"}, 1E13:{other:"00\u00a0\u03c4\u03c1\u03b9\u03c2"}, 
1E14:{other:"000\u00a0\u03c4\u03c1\u03b9\u03c2"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E4:{other:"00 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E5:{other:"000 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E6:{other:"0 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E7:{other:"00 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E8:{other:"000 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 
1E9:{other:"0 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E10:{other:"00 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E11:{other:"000 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E12:{other:"0 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E13:{other:"00 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 
1E14:{other:"000 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}}};
goog.i18n.CompactNumberFormatSymbols_el_GR = goog.i18n.CompactNumberFormatSymbols_el;
goog.i18n.CompactNumberFormatSymbols_en = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_AS = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_AU = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_Dsrt_US = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_FM = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_GB = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_GU = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_IE = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_IN = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_MH = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_MP = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_PR = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_PW = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_SG = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_TC = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_UM = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_US = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_VG = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_VI = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_ZA = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_es = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00\u00a0K\u00a0M"}, 1E11:{other:"000\u00a0K\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 
1E7:{other:"00 millones"}, 1E8:{other:"000 millones"}, 1E9:{other:"0 millardos"}, 1E10:{other:"00 millardos"}, 1E11:{other:"000 millardos"}, 1E12:{other:"0 billones"}, 1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_es_419 = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0k\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 1E7:{other:"00 millones"}, 
1E8:{other:"000 millones"}, 1E9:{other:"0 millardos"}, 1E10:{other:"00 millardos"}, 1E11:{other:"000 millardos"}, 1E12:{other:"0 billones"}, 1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_es_EA = goog.i18n.CompactNumberFormatSymbols_es;
goog.i18n.CompactNumberFormatSymbols_es_ES = goog.i18n.CompactNumberFormatSymbols_es;
goog.i18n.CompactNumberFormatSymbols_es_IC = goog.i18n.CompactNumberFormatSymbols_es;
goog.i18n.CompactNumberFormatSymbols_et = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tuh"}, 1E4:{other:"00\u00a0tuh"}, 1E5:{other:"000\u00a0tuh"}, 1E6:{other:"0\u00a0mln"}, 1E7:{other:"00\u00a0mln"}, 1E8:{other:"000\u00a0mln"}, 1E9:{other:"0\u00a0mld"}, 1E10:{other:"00\u00a0mld"}, 1E11:{other:"000\u00a0mld"}, 1E12:{other:"0\u00a0trl"}, 1E13:{other:"00\u00a0trl"}, 1E14:{other:"000\u00a0trl"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tuhat"}, 1E4:{other:"00 tuhat"}, 1E5:{other:"000 tuhat"}, 
1E6:{other:"0 miljonit"}, 1E7:{other:"00 miljonit"}, 1E8:{other:"000 miljonit"}, 1E9:{other:"0 miljardit"}, 1E10:{other:"00 miljardit"}, 1E11:{other:"000 miljardit"}, 1E12:{other:"0 triljonit"}, 1E13:{other:"00 triljonit"}, 1E14:{other:"000 triljonit"}}};
goog.i18n.CompactNumberFormatSymbols_et_EE = goog.i18n.CompactNumberFormatSymbols_et;
goog.i18n.CompactNumberFormatSymbols_eu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0 milioi"}, 1E7:{other:"00 milioi"}, 1E8:{other:"000 milioi"}, 
1E9:{other:"0000 milioi"}, 1E10:{other:"00000 milioi"}, 1E11:{other:"000000 milioi"}, 1E12:{other:"0 bilioi"}, 1E13:{other:"00 bilioi"}, 1E14:{other:"000 bilioi"}}};
goog.i18n.CompactNumberFormatSymbols_eu_ES = goog.i18n.CompactNumberFormatSymbols_eu;
goog.i18n.CompactNumberFormatSymbols_fa = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0647\u0632\u0627\u0631"}, 1E4:{other:"00 \u0647\u0632\u0627\u0631"}, 1E5:{other:"000 \u0647\u0632\u0627\u0631"}, 1E6:{other:"0 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 
1E7:{other:"00 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E8:{other:"000 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E9:{other:"0 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E10:{other:"00 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E11:{other:"000 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E12:{other:"0 \u0647\u0632\u0627\u0631 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E13:{other:"00 \u0647\u0632\u0627\u0631 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E14:{other:"000 \u0647\u0632\u0627\u0631 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}}};
goog.i18n.CompactNumberFormatSymbols_fa_IR = goog.i18n.CompactNumberFormatSymbols_fa;
goog.i18n.CompactNumberFormatSymbols_fi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0t."}, 1E4:{other:"00\u00a0t."}, 1E5:{other:"000\u00a0t."}, 1E6:{other:"0\u00a0milj."}, 1E7:{other:"00\u00a0milj."}, 1E8:{other:"000\u00a0milj."}, 1E9:{other:"0\u00a0mrd."}, 1E10:{other:"00\u00a0mrd."}, 1E11:{other:"000\u00a0mrd."}, 1E12:{other:"0\u00a0bilj."}, 1E13:{other:"00\u00a0bilj."}, 1E14:{other:"000\u00a0bilj."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tuhatta"}, 1E4:{other:"00 tuhatta"}, 1E5:{other:"000 tuhatta"}, 
1E6:{other:"0 miljoonaa"}, 1E7:{other:"00 miljoonaa"}, 1E8:{other:"000 miljoonaa"}, 1E9:{other:"0 miljardia"}, 1E10:{other:"00 miljardia"}, 1E11:{other:"000 miljardia"}, 1E12:{other:"0 biljoonaa"}, 1E13:{other:"00 biljoonaa"}, 1E14:{other:"000 biljoonaa"}}};
goog.i18n.CompactNumberFormatSymbols_fi_FI = goog.i18n.CompactNumberFormatSymbols_fi;
goog.i18n.CompactNumberFormatSymbols_fil = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 (na) libo"}, 1E4:{other:"00 (na) libo"}, 1E5:{other:"000 (na) libo"}, 1E6:{other:"0 (na) milyon"}, 1E7:{other:"00 (na) milyon"}, 1E8:{other:"000 (na) milyon"}, 
1E9:{other:"0 (na) bilyon"}, 1E10:{other:"00 (na) bilyon"}, 1E11:{other:"000 (na) bilyon"}, 1E12:{other:"0 (na) trilyon"}, 1E13:{other:"00 (na) trilyon"}, 1E14:{other:"000 (na) trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_fil_PH = goog.i18n.CompactNumberFormatSymbols_fil;
goog.i18n.CompactNumberFormatSymbols_fr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0Md"}, 1E10:{other:"00\u00a0Md"}, 1E11:{other:"000\u00a0Md"}, 1E12:{other:"0\u00a0Bn"}, 1E13:{other:"00\u00a0Bn"}, 1E14:{other:"000\u00a0Bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mille"}, 1E4:{other:"00 mille"}, 1E5:{other:"000 mille"}, 1E6:{other:"0 millions"}, 
1E7:{other:"00 millions"}, 1E8:{other:"000 millions"}, 1E9:{other:"0 milliards"}, 1E10:{other:"00 milliards"}, 1E11:{other:"000 milliards"}, 1E12:{other:"0 billions"}, 1E13:{other:"00 billions"}, 1E14:{other:"000 billions"}}};
goog.i18n.CompactNumberFormatSymbols_fr_BL = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_CA = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0Md"}, 1E10:{other:"00\u00a0Md"}, 1E11:{other:"000\u00a0Md"}, 1E12:{other:"0\u00a0Bn"}, 1E13:{other:"00\u00a0Bn"}, 1E14:{other:"000\u00a0Bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mille"}, 1E4:{other:"00 mille"}, 1E5:{other:"000 mille"}, 1E6:{other:"0 millions"}, 
1E7:{other:"00 millions"}, 1E8:{other:"000 millions"}, 1E9:{other:"0 milliards"}, 1E10:{other:"00 milliards"}, 1E11:{other:"000 milliards"}, 1E12:{other:"0 billions"}, 1E13:{other:"00 billions"}, 1E14:{other:"000 billions"}}};
goog.i18n.CompactNumberFormatSymbols_fr_FR = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_GF = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_GP = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_MC = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_MF = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_MQ = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_RE = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_YT = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_gl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 mill\u00f3ns"}, 1E7:{other:"00 mill\u00f3ns"}, 
1E8:{other:"000 mill\u00f3ns"}, 1E9:{other:"0 mil mill\u00f3ns"}, 1E10:{other:"00 mil mill\u00f3ns"}, 1E11:{other:"000 mil mill\u00f3ns"}, 1E12:{other:"0 bill\u00f3ns"}, 1E13:{other:"00 bill\u00f3ns"}, 1E14:{other:"000 bill\u00f3ns"}}};
goog.i18n.CompactNumberFormatSymbols_gl_ES = goog.i18n.CompactNumberFormatSymbols_gl;
goog.i18n.CompactNumberFormatSymbols_gsw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tsd"}, 1E4:{other:"00\u00a0tsd"}, 1E5:{other:"000\u00a0tsd"}, 1E6:{other:"0\u00a0Mio"}, 1E7:{other:"00\u00a0Mio"}, 1E8:{other:"000\u00a0Mio"}, 1E9:{other:"0\u00a0Mrd"}, 1E10:{other:"00\u00a0Mrd"}, 1E11:{other:"000\u00a0Mrd"}, 1E12:{other:"0\u00a0Bio"}, 1E13:{other:"00\u00a0Bio"}, 1E14:{other:"000\u00a0Bio"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tausend"}, 1E4:{other:"00 tausend"}, 1E5:{other:"000 tausend"}, 
1E6:{other:"0 Millionen"}, 1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_gsw_CH = goog.i18n.CompactNumberFormatSymbols_gsw;
goog.i18n.CompactNumberFormatSymbols_gu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0ab9\u0a9c\u0abe\u0ab0"}, 1E4:{other:"00 \u0ab9\u0a9c\u0abe\u0ab0"}, 1E5:{other:"000 \u0ab9\u0a9c\u0abe\u0ab0"}, 1E6:{other:"0 \u0aae\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}, 
1E7:{other:"00 \u0aae\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}, 1E8:{other:"000 \u0aae\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}, 1E9:{other:"0 \u0aac\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}, 1E10:{other:"00 \u0aac\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}, 1E11:{other:"000 \u0aac\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}, 1E12:{other:"0 \u0a9f\u0acd\u0ab0\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}, 1E13:{other:"00 \u0a9f\u0acd\u0ab0\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}, 1E14:{other:"000 \u0a9f\u0acd\u0ab0\u0abf\u0ab2\u0abf\u0aaf\u0aa8"}}};
goog.i18n.CompactNumberFormatSymbols_gu_IN = goog.i18n.CompactNumberFormatSymbols_gu;
goog.i18n.CompactNumberFormatSymbols_haw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_haw_US = goog.i18n.CompactNumberFormatSymbols_haw;
goog.i18n.CompactNumberFormatSymbols_he = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"\u200f0\u00a0\u05d0\u05dc\u05e3"}, 1E4:{other:"\u200f00\u00a0\u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000\u00a0\u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0\u00a0\u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E7:{other:"\u200f00\u00a0\u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E8:{other:"\u200f000\u00a0\u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 
1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"\u200f0 \u05d0\u05dc\u05e3"}, 1E4:{other:"\u200f00 \u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000 \u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E7:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E8:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E9:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E10:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E11:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 
1E12:{other:"\u200f0 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E13:{other:"\u200f00 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E14:{other:"\u200f000 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}}};
goog.i18n.CompactNumberFormatSymbols_he_IL = goog.i18n.CompactNumberFormatSymbols_he;
goog.i18n.CompactNumberFormatSymbols_hi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0L"}, 1E6:{other:"00L"}, 1E7:{other:"0Cr"}, 1E8:{other:"00Cr"}, 1E9:{other:"000Cr"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0939\u091c\u093c\u093e\u0930"}, 1E4:{other:"00 \u0939\u091c\u093c\u093e\u0930"}, 1E5:{other:"0 \u0932\u093e\u0916"}, 1E6:{other:"00 \u0932\u093e\u0916"}, 
1E7:{other:"0 \u0915\u0930\u094b\u0921\u093c"}, 1E8:{other:"00 \u0915\u0930\u094b\u0921\u093c"}, 1E9:{other:"0 \u0905\u0930\u092c"}, 1E10:{other:"00 \u0905\u0930\u092c"}, 1E11:{other:"0 \u0916\u0930\u092c"}, 1E12:{other:"00 \u0916\u0930\u092c"}, 1E13:{other:"000 \u0916\u0930\u092c"}, 1E14:{other:"0000 \u0916\u0930\u092c"}}};
goog.i18n.CompactNumberFormatSymbols_hi_IN = goog.i18n.CompactNumberFormatSymbols_hi;
goog.i18n.CompactNumberFormatSymbols_hr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mlr."}, 1E10:{other:"00\u00a0mlr."}, 1E11:{other:"000\u00a0mlr."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0 milijuna"}, 1E7:{other:"00 milijuna"}, 
1E8:{other:"000 milijuna"}, 1E9:{other:"0 milijarda"}, 1E10:{other:"00 milijarda"}, 1E11:{other:"000 milijarda"}, 1E12:{other:"0 bilijuna"}, 1E13:{other:"00 bilijuna"}, 1E14:{other:"000 bilijuna"}}};
goog.i18n.CompactNumberFormatSymbols_hr_HR = goog.i18n.CompactNumberFormatSymbols_hr;
goog.i18n.CompactNumberFormatSymbols_hu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0E"}, 1E4:{other:"00\u00a0E"}, 1E5:{other:"000\u00a0E"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0Mrd"}, 1E10:{other:"00\u00a0Mrd"}, 1E11:{other:"000\u00a0Mrd"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ezer"}, 1E4:{other:"00 ezer"}, 1E5:{other:"000 ezer"}, 1E6:{other:"0 milli\u00f3"}, 
1E7:{other:"00 milli\u00f3"}, 1E8:{other:"000 milli\u00f3"}, 1E9:{other:"0 milli\u00e1rd"}, 1E10:{other:"00 milli\u00e1rd"}, 1E11:{other:"000 milli\u00e1rd"}, 1E12:{other:"0 billi\u00f3"}, 1E13:{other:"00 billi\u00f3"}, 1E14:{other:"000 billi\u00f3"}}};
goog.i18n.CompactNumberFormatSymbols_hu_HU = goog.i18n.CompactNumberFormatSymbols_hu;
goog.i18n.CompactNumberFormatSymbols_id = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00\u00a0rb"}, 1E5:{other:"000\u00a0rb"}, 1E6:{other:"0\u00a0jt"}, 1E7:{other:"00\u00a0jt"}, 1E8:{other:"000\u00a0jt"}, 1E9:{other:"0\u00a0M"}, 1E10:{other:"00\u00a0M"}, 1E11:{other:"000\u00a0M"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 1E7:{other:"00 juta"}, 
1E8:{other:"000 juta"}, 1E9:{other:"0 miliar"}, 1E10:{other:"00 miliar"}, 1E11:{other:"000 miliar"}, 1E12:{other:"0 triliun"}, 1E13:{other:"00 triliun"}, 1E14:{other:"000 triliun"}}};
goog.i18n.CompactNumberFormatSymbols_id_ID = goog.i18n.CompactNumberFormatSymbols_id;
goog.i18n.CompactNumberFormatSymbols_in = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00\u00a0rb"}, 1E5:{other:"000\u00a0rb"}, 1E6:{other:"0\u00a0jt"}, 1E7:{other:"00\u00a0jt"}, 1E8:{other:"000\u00a0jt"}, 1E9:{other:"0\u00a0M"}, 1E10:{other:"00\u00a0M"}, 1E11:{other:"000\u00a0M"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 1E7:{other:"00 juta"}, 
1E8:{other:"000 juta"}, 1E9:{other:"0 miliar"}, 1E10:{other:"00 miliar"}, 1E11:{other:"000 miliar"}, 1E12:{other:"0 triliun"}, 1E13:{other:"00 triliun"}, 1E14:{other:"000 triliun"}}};
goog.i18n.CompactNumberFormatSymbols_is = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u00fe."}, 1E4:{other:"00\u00a0\u00fe."}, 1E5:{other:"000\u00a0\u00fe."}, 1E6:{other:"0\u00a0m."}, 1E7:{other:"00\u00a0m."}, 1E8:{other:"000\u00a0m."}, 1E9:{other:"0\u00a0ma."}, 1E10:{other:"00\u00a0ma."}, 1E11:{other:"000\u00a0ma."}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u00fe\u00fasund"}, 1E4:{other:"00 \u00fe\u00fasund"}, 
1E5:{other:"000 \u00fe\u00fasund"}, 1E6:{other:"0 millj\u00f3nir"}, 1E7:{other:"00 millj\u00f3nir"}, 1E8:{other:"000 millj\u00f3nir"}, 1E9:{other:"0 milljar\u00f0ar"}, 1E10:{other:"00 milljar\u00f0ar"}, 1E11:{other:"000 milljar\u00f0ar"}, 1E12:{other:"0 billj\u00f3nir"}, 1E13:{other:"00 billj\u00f3nir"}, 1E14:{other:"000 billj\u00f3nir"}}};
goog.i18n.CompactNumberFormatSymbols_is_IS = goog.i18n.CompactNumberFormatSymbols_is;
goog.i18n.CompactNumberFormatSymbols_it = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0Mln"}, 1E7:{other:"00\u00a0Mln"}, 1E8:{other:"000\u00a0Mln"}, 1E9:{other:"0\u00a0Mld"}, 1E10:{other:"00\u00a0Mld"}, 1E11:{other:"000\u00a0Mld"}, 1E12:{other:"0\u00a0Bln"}, 1E13:{other:"00\u00a0Bln"}, 1E14:{other:"000\u00a0Bln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 migliaia"}, 1E4:{other:"00 migliaia"}, 1E5:{other:"000 migliaia"}, 1E6:{other:"0 milioni"}, 
1E7:{other:"00 milioni"}, 1E8:{other:"000 milioni"}, 1E9:{other:"0 miliardi"}, 1E10:{other:"00 miliardi"}, 1E11:{other:"000 miliardi"}, 1E12:{other:"0 bilioni"}, 1E13:{other:"00 bilioni"}, 1E14:{other:"000 bilioni"}}};
goog.i18n.CompactNumberFormatSymbols_it_IT = goog.i18n.CompactNumberFormatSymbols_it;
goog.i18n.CompactNumberFormatSymbols_it_SM = goog.i18n.CompactNumberFormatSymbols_it;
goog.i18n.CompactNumberFormatSymbols_iw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"\u200f0\u00a0\u05d0\u05dc\u05e3"}, 1E4:{other:"\u200f00\u00a0\u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000\u00a0\u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0\u00a0\u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E7:{other:"\u200f00\u00a0\u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E8:{other:"\u200f000\u00a0\u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 
1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"\u200f0 \u05d0\u05dc\u05e3"}, 1E4:{other:"\u200f00 \u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000 \u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E7:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E8:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E9:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E10:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E11:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 
1E12:{other:"\u200f0 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E13:{other:"\u200f00 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E14:{other:"\u200f000 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}}};
goog.i18n.CompactNumberFormatSymbols_ja = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u5343"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0\u5343"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 
1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_ja_JP = goog.i18n.CompactNumberFormatSymbols_ja;
goog.i18n.CompactNumberFormatSymbols_kn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 1E4:{other:"00 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 1E5:{other:"000 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 1E6:{other:"0 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 
1E7:{other:"00 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E8:{other:"000 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E9:{other:"0 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E10:{other:"00 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E11:{other:"000 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E12:{other:"0 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}, 1E13:{other:"00 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}, 1E14:{other:"000 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}}};
goog.i18n.CompactNumberFormatSymbols_kn_IN = goog.i18n.CompactNumberFormatSymbols_kn;
goog.i18n.CompactNumberFormatSymbols_ko = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\ub9cc"}, 1E5:{other:"00\ub9cc"}, 1E6:{other:"000\ub9cc"}, 1E7:{other:"0000\ub9cc"}, 1E8:{other:"0\uc5b5"}, 1E9:{other:"00\uc5b5"}, 1E10:{other:"000\uc5b5"}, 1E11:{other:"0000\uc5b5"}, 1E12:{other:"0\uc870"}, 1E13:{other:"00\uc870"}, 1E14:{other:"000\uc870"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\ub9cc"}, 1E5:{other:"00\ub9cc"}, 1E6:{other:"000\ub9cc"}, 1E7:{other:"0000\ub9cc"}, 
1E8:{other:"0\uc5b5"}, 1E9:{other:"00\uc5b5"}, 1E10:{other:"000\uc5b5"}, 1E11:{other:"0000\uc5b5"}, 1E12:{other:"0\uc870"}, 1E13:{other:"00\uc870"}, 1E14:{other:"000\uc870"}}};
goog.i18n.CompactNumberFormatSymbols_ko_KR = goog.i18n.CompactNumberFormatSymbols_ko;
goog.i18n.CompactNumberFormatSymbols_ln = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_ln_CD = goog.i18n.CompactNumberFormatSymbols_ln;
goog.i18n.CompactNumberFormatSymbols_lt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0G"}, 1E10:{other:"00\u00a0G"}, 1E11:{other:"000\u00a0G"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 t\u016bkstan\u010di\u0173"}, 1E4:{other:"00 t\u016bkstan\u010di\u0173"}, 1E5:{other:"000 t\u016bkstan\u010di\u0173"}, 
1E6:{other:"0 milijon\u0173"}, 1E7:{other:"00 milijon\u0173"}, 1E8:{other:"000 milijon\u0173"}, 1E9:{other:"0 milijard\u0173"}, 1E10:{other:"00 milijard\u0173"}, 1E11:{other:"000 milijard\u0173"}, 1E12:{other:"0 trilijon\u0173"}, 1E13:{other:"00 trilijon\u0173"}, 1E14:{other:"000 trilijon\u0173"}}};
goog.i18n.CompactNumberFormatSymbols_lt_LT = goog.i18n.CompactNumberFormatSymbols_lt;
goog.i18n.CompactNumberFormatSymbols_lv = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0t\u016bkst."}, 1E4:{other:"00\u00a0t\u016bkst."}, 1E5:{other:"000\u00a0t\u016bkst."}, 1E6:{other:"0\u00a0milj."}, 1E7:{other:"00\u00a0milj."}, 1E8:{other:"000\u00a0milj."}, 1E9:{other:"0\u00a0md"}, 1E10:{other:"00\u00a0md"}, 1E11:{other:"000\u00a0md"}, 1E12:{other:"0\u00a0trilj."}, 1E13:{other:"00\u00a0trilj."}, 1E14:{other:"000\u00a0trilj."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 t\u016bksto\u0161i"}, 
1E4:{other:"00 t\u016bksto\u0161i"}, 1E5:{other:"000 t\u016bksto\u0161i"}, 1E6:{other:"0 miljoni"}, 1E7:{other:"00 miljoni"}, 1E8:{other:"000 miljoni"}, 1E9:{other:"0 miljardi"}, 1E10:{other:"00 miljardi"}, 1E11:{other:"000 miljardi"}, 1E12:{other:"0 trilj."}, 1E13:{other:"00 trilj."}, 1E14:{other:"000 trilj."}}};
goog.i18n.CompactNumberFormatSymbols_lv_LV = goog.i18n.CompactNumberFormatSymbols_lv;
goog.i18n.CompactNumberFormatSymbols_ml = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E4:{other:"00 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E5:{other:"000 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E6:{other:"0 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 
1E7:{other:"00 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 1E8:{other:"000 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 1E9:{other:"0 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E10:{other:"00 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E11:{other:"000 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E12:{other:"0 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}, 1E13:{other:"00 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}, 1E14:{other:"000 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}}};
goog.i18n.CompactNumberFormatSymbols_ml_IN = goog.i18n.CompactNumberFormatSymbols_ml;
goog.i18n.CompactNumberFormatSymbols_mr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0939\u091c\u093e\u0930"}, 1E4:{other:"00 \u0939\u091c\u093e\u0930"}, 1E5:{other:"000 \u0939\u091c\u093e\u0930"}, 1E6:{other:"0 \u0926\u0936\u0932\u0915\u094d\u0937"}, 
1E7:{other:"00 \u0926\u0936\u0932\u0915\u094d\u0937"}, 1E8:{other:"000 \u0926\u0936\u0932\u0915\u094d\u0937"}, 1E9:{other:"0 \u092e\u0939\u093e\u092a\u0926\u094d\u092e"}, 1E10:{other:"00 \u092e\u0939\u093e\u092a\u0926\u094d\u092e"}, 1E11:{other:"000 \u092e\u0939\u093e\u092a\u0926\u094d\u092e"}, 1E12:{other:"0 \u0926\u0939\u093e \u0916\u0930\u092c"}, 1E13:{other:"00 \u0926\u0939\u093e \u0916\u0930\u092c"}, 1E14:{other:"000 \u0926\u0939\u093e \u0916\u0930\u092c"}}};
goog.i18n.CompactNumberFormatSymbols_mr_IN = goog.i18n.CompactNumberFormatSymbols_mr;
goog.i18n.CompactNumberFormatSymbols_ms = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0J"}, 1E7:{other:"00J"}, 1E8:{other:"000J"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 1E7:{other:"00 juta"}, 1E8:{other:"000 juta"}, 1E9:{other:"0 bilion"}, 1E10:{other:"00 bilion"}, 
1E11:{other:"000 bilion"}, 1E12:{other:"0 trilion"}, 1E13:{other:"00 trilion"}, 1E14:{other:"000 trilion"}}};
goog.i18n.CompactNumberFormatSymbols_ms_Latn_MY = goog.i18n.CompactNumberFormatSymbols_ms;
goog.i18n.CompactNumberFormatSymbols_mt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_mt_MT = goog.i18n.CompactNumberFormatSymbols_mt;
goog.i18n.CompactNumberFormatSymbols_nb = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0mill"}, 1E7:{other:"00\u00a0mill"}, 1E8:{other:"000\u00a0mill"}, 1E9:{other:"0\u00a0mrd"}, 1E10:{other:"00\u00a0mrd"}, 1E11:{other:"000\u00a0mrd"}, 1E12:{other:"0\u00a0bill"}, 1E13:{other:"00\u00a0bill"}, 1E14:{other:"000\u00a0bill"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 1E6:{other:"0 millioner"}, 
1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_nb_NO = goog.i18n.CompactNumberFormatSymbols_nb;
goog.i18n.CompactNumberFormatSymbols_nl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0\u00a0mln."}, 1E7:{other:"00\u00a0mln."}, 1E8:{other:"000\u00a0mln."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bln."}, 1E13:{other:"00\u00a0bln."}, 1E14:{other:"000\u00a0bln."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 duizend"}, 1E4:{other:"00 duizend"}, 1E5:{other:"000 duizend"}, 1E6:{other:"0 miljoen"}, 
1E7:{other:"00 miljoen"}, 1E8:{other:"000 miljoen"}, 1E9:{other:"0 miljard"}, 1E10:{other:"00 miljard"}, 1E11:{other:"000 miljard"}, 1E12:{other:"0 biljoen"}, 1E13:{other:"00 biljoen"}, 1E14:{other:"000 biljoen"}}};
goog.i18n.CompactNumberFormatSymbols_nl_NL = goog.i18n.CompactNumberFormatSymbols_nl;
goog.i18n.CompactNumberFormatSymbols_no = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0mill"}, 1E7:{other:"00\u00a0mill"}, 1E8:{other:"000\u00a0mill"}, 1E9:{other:"0\u00a0mrd"}, 1E10:{other:"00\u00a0mrd"}, 1E11:{other:"000\u00a0mrd"}, 1E12:{other:"0\u00a0bill"}, 1E13:{other:"00\u00a0bill"}, 1E14:{other:"000\u00a0bill"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 1E6:{other:"0 millioner"}, 
1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_or = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_or_IN = goog.i18n.CompactNumberFormatSymbols_or;
goog.i18n.CompactNumberFormatSymbols_pl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tys."}, 1E4:{other:"00\u00a0tys."}, 1E5:{other:"000\u00a0tys."}, 1E6:{other:"0\u00a0mln"}, 1E7:{other:"00\u00a0mln"}, 1E8:{other:"000\u00a0mln"}, 1E9:{other:"0\u00a0mld"}, 1E10:{other:"00\u00a0mld"}, 1E11:{other:"000\u00a0mld"}, 1E12:{other:"0\u00a0bln"}, 1E13:{other:"00\u00a0bln"}, 1E14:{other:"000\u00a0bln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tysi\u0105ca"}, 1E4:{other:"00 tysi\u0105ca"}, 1E5:{other:"000 tysi\u0105ca"}, 
1E6:{other:"0 miliona"}, 1E7:{other:"00 miliona"}, 1E8:{other:"000 miliona"}, 1E9:{other:"0 miliarda"}, 1E10:{other:"00 miliarda"}, 1E11:{other:"000 miliarda"}, 1E12:{other:"0 biliona"}, 1E13:{other:"00 biliona"}, 1E14:{other:"000 biliona"}}};
goog.i18n.CompactNumberFormatSymbols_pl_PL = goog.i18n.CompactNumberFormatSymbols_pl;
goog.i18n.CompactNumberFormatSymbols_pt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0mil"}, 1E4:{other:"00\u00a0mil"}, 1E5:{other:"000\u00a0mil"}, 1E6:{other:"0\u00a0mi"}, 1E7:{other:"00\u00a0mi"}, 1E8:{other:"000\u00a0mi"}, 1E9:{other:"0\u00a0bi"}, 1E10:{other:"00\u00a0bi"}, 1E11:{other:"000\u00a0bi"}, 1E12:{other:"0\u00a0tri"}, 1E13:{other:"00\u00a0tri"}, 1E14:{other:"000\u00a0tri"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 milh\u00f5es"}, 
1E7:{other:"00 milh\u00f5es"}, 1E8:{other:"000 milh\u00f5es"}, 1E9:{other:"0 bilh\u00f5es"}, 1E10:{other:"00 bilh\u00f5es"}, 1E11:{other:"000 bilh\u00f5es"}, 1E12:{other:"0 trilh\u00f5es"}, 1E13:{other:"00 trilh\u00f5es"}, 1E14:{other:"000 trilh\u00f5es"}}};
goog.i18n.CompactNumberFormatSymbols_pt_BR = goog.i18n.CompactNumberFormatSymbols_pt;
goog.i18n.CompactNumberFormatSymbols_pt_PT = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0mil"}, 1E4:{other:"00\u00a0mil"}, 1E5:{other:"000\u00a0mil"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0MM"}, 1E10:{other:"00\u00a0MM"}, 1E11:{other:"000\u00a0MM"}, 1E12:{other:"0\u00a0Bi"}, 1E13:{other:"00\u00a0Bi"}, 1E14:{other:"000\u00a0Bi"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 milh\u00f5es"}, 
1E7:{other:"00 milh\u00f5es"}, 1E8:{other:"000 milh\u00f5es"}, 1E9:{other:"0 mil milh\u00f5es"}, 1E10:{other:"00 mil milh\u00f5es"}, 1E11:{other:"000 mil milh\u00f5es"}, 1E12:{other:"0 bili\u00f5es"}, 1E13:{other:"00 bili\u00f5es"}, 1E14:{other:"000 bili\u00f5es"}}};
goog.i18n.CompactNumberFormatSymbols_ro = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 de mii"}, 1E4:{other:"00 de mii"}, 1E5:{other:"000 de mii"}, 
1E6:{other:"0 de milioane"}, 1E7:{other:"00 de milioane"}, 1E8:{other:"000 de milioane"}, 1E9:{other:"0 de miliarde"}, 1E10:{other:"00 de miliarde"}, 1E11:{other:"000 de miliarde"}, 1E12:{other:"0 de trilioane"}, 1E13:{other:"00 de trilioane"}, 1E14:{other:"000 de trilioane"}}};
goog.i18n.CompactNumberFormatSymbols_ro_RO = goog.i18n.CompactNumberFormatSymbols_ro;
goog.i18n.CompactNumberFormatSymbols_ru = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0442\u044b\u0441."}, 1E4:{other:"00\u00a0\u0442\u044b\u0441."}, 1E5:{other:"000\u00a0\u0442\u044b\u0441."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E4:{other:"00 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E5:{other:"000 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E6:{other:"0 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_ru_RU = goog.i18n.CompactNumberFormatSymbols_ru;
goog.i18n.CompactNumberFormatSymbols_sk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tis\u00edc"}, 1E4:{other:"00 tis\u00edc"}, 
1E5:{other:"000 tis\u00edc"}, 1E6:{other:"0 mili\u00f3nov"}, 1E7:{other:"00 mili\u00f3nov"}, 1E8:{other:"000 mili\u00f3nov"}, 1E9:{other:"0 miliard"}, 1E10:{other:"00 mili\u00e1rd"}, 1E11:{other:"000 mili\u00e1rd"}, 1E12:{other:"0 bili\u00f3nov"}, 1E13:{other:"00 bili\u00f3nov"}, 1E14:{other:"000 bili\u00f3nov"}}};
goog.i18n.CompactNumberFormatSymbols_sk_SK = goog.i18n.CompactNumberFormatSymbols_sk;
goog.i18n.CompactNumberFormatSymbols_sl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mio."}, 1E7:{other:"00\u00a0mio."}, 1E8:{other:"000\u00a0mio."}, 1E9:{other:"0\u00a0mrd."}, 1E10:{other:"00\u00a0mrd."}, 1E11:{other:"000\u00a0mrd."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tiso\u010d"}, 1E4:{other:"00 tiso\u010d"}, 
1E5:{other:"000 tiso\u010d"}, 1E6:{other:"0 milijonov"}, 1E7:{other:"00 milijonov"}, 1E8:{other:"000 milijonov"}, 1E9:{other:"0 milijard"}, 1E10:{other:"00 milijard"}, 1E11:{other:"000 milijard"}, 1E12:{other:"0 bilijonov"}, 1E13:{other:"00 bilijonov"}, 1E14:{other:"000 bilijonov"}}};
goog.i18n.CompactNumberFormatSymbols_sl_SI = goog.i18n.CompactNumberFormatSymbols_sl;
goog.i18n.CompactNumberFormatSymbols_sq = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_sq_AL = goog.i18n.CompactNumberFormatSymbols_sq;
goog.i18n.CompactNumberFormatSymbols_sr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00\u00a0\u0445\u0438\u0459"}, 1E5:{other:"000\u00a0\u0445\u0438\u0459"}, 1E6:{other:"0\u00a0\u043c\u0438\u043b"}, 1E7:{other:"00\u00a0\u043c\u0438\u043b"}, 1E8:{other:"000\u00a0\u043c\u0438\u043b"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0431\u0438\u043b"}, 1E13:{other:"00\u00a0\u0431\u0438\u043b"}, 
1E14:{other:"000\u00a0\u0431\u0438\u043b"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E4:{other:"00 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E5:{other:"000 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E6:{other:"0 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E10:{other:"00 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 
1E11:{other:"000 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_RS = goog.i18n.CompactNumberFormatSymbols_sr;
goog.i18n.CompactNumberFormatSymbols_sv = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tn"}, 1E4:{other:"00\u00a0tn"}, 1E5:{other:"000\u00a0tn"}, 1E6:{other:"0\u00a0mn"}, 1E7:{other:"00\u00a0mn"}, 1E8:{other:"000\u00a0mn"}, 1E9:{other:"0\u00a0md"}, 1E10:{other:"00\u00a0md"}, 1E11:{other:"000\u00a0md"}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 1E6:{other:"0 miljoner"}, 
1E7:{other:"00 miljoner"}, 1E8:{other:"000 miljoner"}, 1E9:{other:"0 miljarder"}, 1E10:{other:"00 miljarder"}, 1E11:{other:"000 miljarder"}, 1E12:{other:"0 biljoner"}, 1E13:{other:"00 biljoner"}, 1E14:{other:"000 biljoner"}}};
goog.i18n.CompactNumberFormatSymbols_sv_SE = goog.i18n.CompactNumberFormatSymbols_sv;
goog.i18n.CompactNumberFormatSymbols_sw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"elfu\u00a00"}, 1E4:{other:"elfu\u00a000"}, 1E5:{other:"laki0"}, 1E6:{other:"M0"}, 1E7:{other:"M00"}, 1E8:{other:"M000"}, 1E9:{other:"B0"}, 1E10:{other:"B00"}, 1E11:{other:"B000"}, 1E12:{other:"T0"}, 1E13:{other:"T00"}, 1E14:{other:"T000"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"Elfu 0"}, 1E4:{other:"Elfu 00"}, 1E5:{other:"Elfu 000"}, 1E6:{other:"Milioni 0"}, 1E7:{other:"Milioni 00"}, 1E8:{other:"Milioni 000"}, 
1E9:{other:"Bilioni 0"}, 1E10:{other:"Bilioni 00"}, 1E11:{other:"Bilioni 000"}, 1E12:{other:"Trilioni 0"}, 1E13:{other:"Trilioni 00"}, 1E14:{other:"Trilioni 000"}}};
goog.i18n.CompactNumberFormatSymbols_sw_TZ = goog.i18n.CompactNumberFormatSymbols_sw;
goog.i18n.CompactNumberFormatSymbols_ta = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 1E4:{other:"00 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 1E5:{other:"000 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 
1E6:{other:"0 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E7:{other:"00 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E8:{other:"000 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E9:{other:"0 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E10:{other:"00 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E11:{other:"000 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E12:{other:"0 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 
1E13:{other:"00 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E14:{other:"000 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}}};
goog.i18n.CompactNumberFormatSymbols_ta_IN = goog.i18n.CompactNumberFormatSymbols_ta;
goog.i18n.CompactNumberFormatSymbols_te = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0c35\u0c47\u0c32\u0c41"}, 1E4:{other:"00 \u0c35\u0c47\u0c32\u0c41"}, 1E5:{other:"000 \u0c35\u0c47\u0c32\u0c41"}, 1E6:{other:"0 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}, 
1E7:{other:"00 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}, 1E8:{other:"000 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}, 1E9:{other:"0 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}, 1E10:{other:"00 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}, 1E11:{other:"000 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}, 1E12:{other:"0 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}, 1E13:{other:"00 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}, 1E14:{other:"000 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d"}}};
goog.i18n.CompactNumberFormatSymbols_te_IN = goog.i18n.CompactNumberFormatSymbols_te;
goog.i18n.CompactNumberFormatSymbols_th = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0e1e."}, 1E4:{other:"0\u00a0\u0e21."}, 1E5:{other:"0\u00a0\u0e2a."}, 1E6:{other:"0\u00a0\u0e25."}, 1E7:{other:"00\u00a0\u0e25."}, 1E8:{other:"000\u00a0\u0e25."}, 1E9:{other:"0\u00a0\u0e1e.\u0e25."}, 1E10:{other:"0\u00a0\u0e21.\u0e25."}, 1E11:{other:"0\u00a0\u0e2a.\u0e25."}, 1E12:{other:"0\u00a0\u0e25.\u0e25."}, 1E13:{other:"00\u00a0\u0e25.\u0e25."}, 1E14:{other:"000\u00a0\u0e25.\u0e25."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0e1e\u0e31\u0e19"}, 
1E4:{other:"0 \u0e2b\u0e21\u0e37\u0e48\u0e19"}, 1E5:{other:"0 \u0e41\u0e2a\u0e19"}, 1E6:{other:"0 \u0e25\u0e49\u0e32\u0e19"}, 1E7:{other:"00 \u0e25\u0e49\u0e32\u0e19"}, 1E8:{other:"000 \u0e25\u0e49\u0e32\u0e19"}, 1E9:{other:"0 \u0e1e\u0e31\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E10:{other:"0 \u0e2b\u0e21\u0e37\u0e48\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E11:{other:"0 \u0e41\u0e2a\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E12:{other:"0 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E13:{other:"00 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}, 
1E14:{other:"000 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}}};
goog.i18n.CompactNumberFormatSymbols_th_TH = goog.i18n.CompactNumberFormatSymbols_th;
goog.i18n.CompactNumberFormatSymbols_tl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 (na) libo"}, 1E4:{other:"00 (na) libo"}, 1E5:{other:"000 (na) libo"}, 1E6:{other:"0 (na) milyon"}, 1E7:{other:"00 (na) milyon"}, 1E8:{other:"000 (na) milyon"}, 
1E9:{other:"0 (na) bilyon"}, 1E10:{other:"00 (na) bilyon"}, 1E11:{other:"000 (na) bilyon"}, 1E12:{other:"0 (na) trilyon"}, 1E13:{other:"00 (na) trilyon"}, 1E14:{other:"000 (na) trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_tr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00\u00a0B"}, 1E5:{other:"000\u00a0B"}, 1E6:{other:"0\u00a0Mn"}, 1E7:{other:"00\u00a0Mn"}, 1E8:{other:"000\u00a0Mn"}, 1E9:{other:"0\u00a0Mr"}, 1E10:{other:"00\u00a0Mr"}, 1E11:{other:"000\u00a0Mr"}, 1E12:{other:"0\u00a0Tn"}, 1E13:{other:"00\u00a0Tn"}, 1E14:{other:"000\u00a0Tn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 bin"}, 1E4:{other:"00 bin"}, 1E5:{other:"000 bin"}, 1E6:{other:"0 milyon"}, 
1E7:{other:"00 milyon"}, 1E8:{other:"000 milyon"}, 1E9:{other:"0 milyar"}, 1E10:{other:"00 milyar"}, 1E11:{other:"000 milyar"}, 1E12:{other:"0 trilyon"}, 1E13:{other:"00 trilyon"}, 1E14:{other:"000 trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_tr_TR = goog.i18n.CompactNumberFormatSymbols_tr;
goog.i18n.CompactNumberFormatSymbols_uk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0442\u0438\u0441"}, 1E4:{other:"00\u00a0\u0442\u0438\u0441"}, 1E5:{other:"000\u00a0\u0442\u0438\u0441"}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E4:{other:"00 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E5:{other:"000 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E6:{other:"0 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_uk_UA = goog.i18n.CompactNumberFormatSymbols_uk;
goog.i18n.CompactNumberFormatSymbols_ur = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u06c1\u0632\u0627\u0631"}, 1E4:{other:"00\u00a0\u06c1\u0632\u0627\u0631"}, 1E5:{other:"0\u00a0\u0644\u0627\u06a9\u06be"}, 1E6:{other:"00\u00a0\u0644\u0627\u06a9\u06be"}, 1E7:{other:"0\u00a0\u06a9\u0631\u0648\u0691"}, 1E8:{other:"00\u00a0\u06a9\u0631\u0648\u0691"}, 1E9:{other:"0\u00a0\u0627\u0631\u0628"}, 1E10:{other:"00\u00a0\u0627\u0631\u0628"}, 1E11:{other:"0\u00a0\u06a9\u06be\u0631\u0628"}, 1E12:{other:"00\u00a0\u06a9\u06be\u0631\u0628"}, 
1E13:{other:"000\u00a0\u06a9\u06be\u0631\u0628"}, 1E14:{other:"0000\u00a0\u06a9\u06be\u0631\u0628"}}};
goog.i18n.CompactNumberFormatSymbols_ur_PK = goog.i18n.CompactNumberFormatSymbols_ur;
goog.i18n.CompactNumberFormatSymbols_vi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0N"}, 1E4:{other:"00\u00a0N"}, 1E5:{other:"000\u00a0N"}, 1E6:{other:"0\u00a0Tr"}, 1E7:{other:"00\u00a0Tr"}, 1E8:{other:"000\u00a0Tr"}, 1E9:{other:"0\u00a0T"}, 1E10:{other:"00\u00a0T"}, 1E11:{other:"000\u00a0T"}, 1E12:{other:"0\u00a0NT"}, 1E13:{other:"00\u00a0NT"}, 1E14:{other:"000\u00a0NT"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ngh\u00ecn"}, 1E4:{other:"00 ngh\u00ecn"}, 1E5:{other:"000 ngh\u00ecn"}, 
1E6:{other:"0 tri\u1ec7u"}, 1E7:{other:"00 tri\u1ec7u"}, 1E8:{other:"000 tri\u1ec7u"}, 1E9:{other:"0 t\u1ef7"}, 1E10:{other:"00 t\u1ef7"}, 1E11:{other:"000 t\u1ef7"}, 1E12:{other:"0 ngh\u00ecn t\u1ef7"}, 1E13:{other:"00 ngh\u00ecn t\u1ef7"}, 1E14:{other:"000 ngh\u00ecn t\u1ef7"}}};
goog.i18n.CompactNumberFormatSymbols_vi_VN = goog.i18n.CompactNumberFormatSymbols_vi;
goog.i18n.CompactNumberFormatSymbols_zh = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 1E8:{other:"0\u4ebf"}, 1E9:{other:"00\u4ebf"}, 1E10:{other:"000\u4ebf"}, 1E11:{other:"0000\u4ebf"}, 1E12:{other:"0\u4e07\u4ebf"}, 1E13:{other:"00\u4e07\u4ebf"}, 1E14:{other:"000\u4e07\u4ebf"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 
1E7:{other:"0000\u4e07"}, 1E8:{other:"0\u4ebf"}, 1E9:{other:"00\u4ebf"}, 1E10:{other:"000\u4ebf"}, 1E11:{other:"0000\u4ebf"}, 1E12:{other:"0\u4e07\u4ebf"}, 1E13:{other:"00\u4e07\u4ebf"}, 1E14:{other:"000\u4e07\u4ebf"}}};
goog.i18n.CompactNumberFormatSymbols_zh_CN = goog.i18n.CompactNumberFormatSymbols_zh;
goog.i18n.CompactNumberFormatSymbols_zh_HK = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u842c"}, 1E5:{other:"00\u842c"}, 1E6:{other:"000\u842c"}, 1E7:{other:"0000\u842c"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 
1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_zh_Hans_CN = goog.i18n.CompactNumberFormatSymbols_zh;
goog.i18n.CompactNumberFormatSymbols_zh_TW = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u842c"}, 1E5:{other:"00\u842c"}, 1E6:{other:"000\u842c"}, 1E7:{other:"0000\u842c"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 
1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_zu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 inkulungwane"}, 1E4:{other:"00 inkulungwane"}, 1E5:{other:"000 inkulungwane"}, 1E6:{other:"0 isigidi"}, 1E7:{other:"00 isigidi"}, 1E8:{other:"000 isigidi"}, 
1E9:{other:"0 isigidi sezigidi"}, 1E10:{other:"00 isigidi sezigidi"}, 1E11:{other:"000 isigidi sezigidi"}, 1E12:{other:"0 isigidintathu"}, 1E13:{other:"00 isigidintathu"}, 1E14:{other:"000 isigidintathu"}}};
goog.i18n.CompactNumberFormatSymbols_zu_ZA = goog.i18n.CompactNumberFormatSymbols_zu;
goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
"af" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_af);
if("af_ZA" == goog.LOCALE || "af-ZA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_af
}
"am" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_am);
if("am_ET" == goog.LOCALE || "am-ET" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_am
}
"ar" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar);
if("ar_001" == goog.LOCALE || "ar-001" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar
}
if("ar_EG" == goog.LOCALE || "ar-EG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar
}
"bg" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bg);
if("bg_BG" == goog.LOCALE || "bg-BG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bg
}
"bn" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bn);
if("bn_BD" == goog.LOCALE || "bn-BD" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bn
}
"br" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_br);
if("br_FR" == goog.LOCALE || "br-FR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_br
}
"ca" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca);
if("ca_AD" == goog.LOCALE || "ca-AD" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca
}
if("ca_ES" == goog.LOCALE || "ca-ES" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca
}
"chr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_chr);
if("chr_US" == goog.LOCALE || "chr-US" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_chr
}
"cs" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cs);
if("cs_CZ" == goog.LOCALE || "cs-CZ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cs
}
"cy" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cy);
if("cy_GB" == goog.LOCALE || "cy-GB" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cy
}
"da" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_da);
if("da_DK" == goog.LOCALE || "da-DK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_da
}
"de" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de);
if("de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de_AT
}
if("de_BE" == goog.LOCALE || "de-BE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de
}
if("de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de_CH
}
if("de_DE" == goog.LOCALE || "de-DE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de
}
if("de_LU" == goog.LOCALE || "de-LU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de
}
"el" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_el);
if("el_GR" == goog.LOCALE || "el-GR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_el
}
"en" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en);
if("en_AS" == goog.LOCALE || "en-AS" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_AU
}
if("en_Dsrt_US" == goog.LOCALE || "en-Dsrt-US" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_FM" == goog.LOCALE || "en-FM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_GB
}
if("en_GU" == goog.LOCALE || "en-GU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_IE
}
if("en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_IN
}
if("en_MH" == goog.LOCALE || "en-MH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_MP" == goog.LOCALE || "en-MP" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_PR" == goog.LOCALE || "en-PR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_PW" == goog.LOCALE || "en-PW" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_SG
}
if("en_TC" == goog.LOCALE || "en-TC" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_UM" == goog.LOCALE || "en-UM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_US" == goog.LOCALE || "en-US" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_VG" == goog.LOCALE || "en-VG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_VI" == goog.LOCALE || "en-VI" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en
}
if("en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_ZA
}
"es" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es);
if("es_419" == goog.LOCALE || "es-419" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es_419
}
if("es_EA" == goog.LOCALE || "es-EA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es
}
if("es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es
}
if("es_IC" == goog.LOCALE || "es-IC" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es
}
"et" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_et);
if("et_EE" == goog.LOCALE || "et-EE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_et
}
"eu" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_eu);
if("eu_ES" == goog.LOCALE || "eu-ES" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_eu
}
"fa" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fa);
if("fa_IR" == goog.LOCALE || "fa-IR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fa
}
"fi" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fi);
if("fi_FI" == goog.LOCALE || "fi-FI" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fi
}
"fil" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fil);
if("fil_PH" == goog.LOCALE || "fil-PH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fil
}
"fr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr);
if("fr_BL" == goog.LOCALE || "fr-BL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
if("fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr_CA
}
if("fr_FR" == goog.LOCALE || "fr-FR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
if("fr_GF" == goog.LOCALE || "fr-GF" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
if("fr_GP" == goog.LOCALE || "fr-GP" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
if("fr_MC" == goog.LOCALE || "fr-MC" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
if("fr_MF" == goog.LOCALE || "fr-MF" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
if("fr_MQ" == goog.LOCALE || "fr-MQ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
if("fr_RE" == goog.LOCALE || "fr-RE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
if("fr_YT" == goog.LOCALE || "fr-YT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr
}
"gl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gl);
if("gl_ES" == goog.LOCALE || "gl-ES" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gl
}
"gsw" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gsw);
if("gsw_CH" == goog.LOCALE || "gsw-CH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gsw
}
"gu" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gu);
if("gu_IN" == goog.LOCALE || "gu-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gu
}
"haw" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_haw);
if("haw_US" == goog.LOCALE || "haw-US" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_haw
}
"he" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_he);
if("he_IL" == goog.LOCALE || "he-IL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_he
}
"hi" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hi);
if("hi_IN" == goog.LOCALE || "hi-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hi
}
"hr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hr);
if("hr_HR" == goog.LOCALE || "hr-HR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hr
}
"hu" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hu);
if("hu_HU" == goog.LOCALE || "hu-HU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hu
}
"id" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_id);
if("id_ID" == goog.LOCALE || "id-ID" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_id
}
"in" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_in);
"is" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_is);
if("is_IS" == goog.LOCALE || "is-IS" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_is
}
"it" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_it);
if("it_IT" == goog.LOCALE || "it-IT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_it
}
if("it_SM" == goog.LOCALE || "it-SM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_it
}
"iw" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_iw);
"ja" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ja);
if("ja_JP" == goog.LOCALE || "ja-JP" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ja
}
"kn" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_kn);
if("kn_IN" == goog.LOCALE || "kn-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_kn
}
"ko" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ko);
if("ko_KR" == goog.LOCALE || "ko-KR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ko
}
"ln" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ln);
if("ln_CD" == goog.LOCALE || "ln-CD" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ln
}
"lt" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lt);
if("lt_LT" == goog.LOCALE || "lt-LT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lt
}
"lv" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lv);
if("lv_LV" == goog.LOCALE || "lv-LV" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lv
}
"ml" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ml);
if("ml_IN" == goog.LOCALE || "ml-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ml
}
"mr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mr);
if("mr_IN" == goog.LOCALE || "mr-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mr
}
"ms" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ms);
if("ms_Latn_MY" == goog.LOCALE || "ms-Latn-MY" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ms
}
"mt" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mt);
if("mt_MT" == goog.LOCALE || "mt-MT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mt
}
"nb" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nb);
if("nb_NO" == goog.LOCALE || "nb-NO" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nb
}
"nl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nl);
if("nl_NL" == goog.LOCALE || "nl-NL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nl
}
"no" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_no);
"or" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_or);
if("or_IN" == goog.LOCALE || "or-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_or
}
"pl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pl);
if("pl_PL" == goog.LOCALE || "pl-PL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pl
}
"pt" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt);
if("pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt
}
if("pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt_PT
}
"ro" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ro);
if("ro_RO" == goog.LOCALE || "ro-RO" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ro
}
"ru" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ru);
if("ru_RU" == goog.LOCALE || "ru-RU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ru
}
"sk" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sk);
if("sk_SK" == goog.LOCALE || "sk-SK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sk
}
"sl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sl);
if("sl_SI" == goog.LOCALE || "sl-SI" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sl
}
"sq" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sq);
if("sq_AL" == goog.LOCALE || "sq-AL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sq
}
"sr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr);
if("sr_Cyrl_RS" == goog.LOCALE || "sr-Cyrl-RS" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr
}
"sv" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sv);
if("sv_SE" == goog.LOCALE || "sv-SE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sv
}
"sw" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sw);
if("sw_TZ" == goog.LOCALE || "sw-TZ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sw
}
"ta" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ta);
if("ta_IN" == goog.LOCALE || "ta-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ta
}
"te" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_te);
if("te_IN" == goog.LOCALE || "te-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_te
}
"th" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_th);
if("th_TH" == goog.LOCALE || "th-TH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_th
}
"tl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_tl);
"tr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_tr);
if("tr_TR" == goog.LOCALE || "tr-TR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_tr
}
"uk" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uk);
if("uk_UA" == goog.LOCALE || "uk-UA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uk
}
"ur" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ur);
if("ur_PK" == goog.LOCALE || "ur-PK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ur
}
"vi" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_vi);
if("vi_VN" == goog.LOCALE || "vi-VN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_vi
}
"zh" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh);
if("zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh
}
if("zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh_HK
}
if("zh_Hans_CN" == goog.LOCALE || "zh-Hans-CN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh
}
if("zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh_TW
}
"zu" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zu);
if("zu_ZA" == goog.LOCALE || "zu-ZA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zu
}
;
// Input 62
goog.i18n.currency = {};
goog.i18n.currency.PRECISION_MASK_ = 7;
goog.i18n.currency.POSITION_FLAG_ = 16;
goog.i18n.currency.SPACE_FLAG_ = 32;
goog.i18n.currency.tier2Enabled_ = !1;
goog.i18n.currency.addTier2Support = function() {
  if(!goog.i18n.currency.tier2Enabled_) {
    for(var key in goog.i18n.currency.CurrencyInfoTier2) {
      goog.i18n.currency.CurrencyInfo[key] = goog.i18n.currency.CurrencyInfoTier2[key]
    }
    goog.i18n.currency.tier2Enabled_ = !0
  }
};
goog.i18n.currency.getGlobalCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode], patternNum = info[0];
  return currencyCode == info[1] ? goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]) : currencyCode + " " + goog.i18n.currency.getCurrencyPattern_(patternNum, info[1])
};
goog.i18n.currency.getGlobalCurrencySign = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return currencyCode == info[1] ? currencyCode : currencyCode + " " + info[1]
};
goog.i18n.currency.getLocalCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return goog.i18n.currency.getCurrencyPattern_(info[0], info[1])
};
goog.i18n.currency.getLocalCurrencySign = function(currencyCode) {
  return goog.i18n.currency.CurrencyInfo[currencyCode][1]
};
goog.i18n.currency.getPortableCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return goog.i18n.currency.getCurrencyPattern_(info[0], info[2])
};
goog.i18n.currency.getPortableCurrencySign = function(currencyCode) {
  return goog.i18n.currency.CurrencyInfo[currencyCode][2]
};
goog.i18n.currency.isPrefixSignPosition = function(currencyCode) {
  return 0 == (goog.i18n.currency.CurrencyInfo[currencyCode][0] & goog.i18n.currency.POSITION_FLAG_)
};
goog.i18n.currency.getCurrencyPattern_ = function(patternNum, sign) {
  var strParts = ["#,##0"], precision = patternNum & goog.i18n.currency.PRECISION_MASK_;
  if(0 < precision) {
    strParts.push(".");
    for(var i = 0;i < precision;i++) {
      strParts.push("0")
    }
  }
  0 == (patternNum & goog.i18n.currency.POSITION_FLAG_) ? (strParts.unshift(patternNum & goog.i18n.currency.SPACE_FLAG_ ? "' " : "'"), strParts.unshift(sign), strParts.unshift("'")) : strParts.push(patternNum & goog.i18n.currency.SPACE_FLAG_ ? " '" : "'", sign, "'");
  return strParts.join("")
};
goog.i18n.currency.adjustPrecision = function(pattern, currencyCode) {
  var strParts = ["0"], info = goog.i18n.currency.CurrencyInfo[currencyCode], precision = info[0] & goog.i18n.currency.PRECISION_MASK_;
  if(0 < precision) {
    strParts.push(".");
    for(var i = 0;i < precision;i++) {
      strParts.push("0")
    }
  }
  return pattern.replace(/0.00/g, strParts.join(""))
};
goog.i18n.currency.CurrencyInfo = {AED:[2, "dh", "\u062f.\u0625.", "DH"], ALL:[0, "Lek", "Lek"], AUD:[2, "$", "AU$"], BDT:[2, "\u09f3", "Tk"], BGN:[2, "lev", "lev"], BRL:[2, "R$", "R$"], CAD:[2, "$", "C$"], CDF:[2, "FrCD", "CDF"], CHF:[2, "CHF", "CHF"], CLP:[0, "$", "CL$"], CNY:[2, "\u00a5", "RMB\u00a5"], COP:[0, "$", "COL$"], CRC:[0, "\u20a1", "CR\u20a1"], CZK:[50, "K\u010d", "K\u010d"], DKK:[18, "kr", "kr"], DOP:[2, "$", "RD$"], EGP:[2, "\u00a3", "LE"], ETB:[2, "Birr", "Birr"], EUR:[2, "\u20ac", 
"\u20ac"], GBP:[2, "\u00a3", "GB\u00a3"], HKD:[2, "$", "HK$"], HRK:[2, "kn", "kn"], HUF:[0, "Ft", "Ft"], IDR:[0, "Rp", "Rp"], ILS:[2, "\u20aa", "IL\u20aa"], INR:[2, "\u20b9", "Rs"], IRR:[0, "Rial", "IRR"], ISK:[0, "kr", "kr"], JMD:[2, "$", "JA$"], JPY:[0, "\u00a5", "JP\u00a5"], KRW:[0, "\u20a9", "KR\u20a9"], LKR:[2, "Rs", "SLRs"], LTL:[2, "Lt", "Lt"], LVL:[2, "Ls", "Ls"], MNT:[0, "\u20ae", "MN\u20ae"], MXN:[2, "$", "Mex$"], MYR:[2, "RM", "RM"], NOK:[50, "kr", "NOkr"], PAB:[2, "B/.", "B/."], PEN:[2, 
"S/.", "S/."], PHP:[2, "\u20b1", "Php"], PKR:[0, "Rs", "PKRs."], PLN:[50, "z\u0142", "z\u0142"], RON:[2, "RON", "RON"], RSD:[0, "din", "RSD"], RUB:[50, "\u0440\u0443\u0431.", "\u0440\u0443\u0431."], SAR:[2, "Rial", "Rial"], SEK:[2, "kr", "kr"], SGD:[2, "$", "S$"], THB:[2, "\u0e3f", "THB"], TRY:[2, "TL", "YTL"], TWD:[2, "NT$", "NT$"], TZS:[0, "TSh", "TSh"], UAH:[2, "\u20b4", "UAH"], USD:[2, "$", "US$"], UYU:[2, "$", "$U"], VND:[0, "\u20ab", "VN\u20ab"], YER:[0, "Rial", "Rial"], ZAR:[2, "R", "ZAR"]};
goog.i18n.currency.CurrencyInfoTier2 = {AFN:[48, "Af.", "AFN"], AMD:[0, "Dram", "dram"], AOA:[2, "Kz", "Kz"], ARS:[2, "$", "AR$"], AWG:[2, "Afl.", "Afl."], AZN:[2, "man.", "man."], BAM:[2, "KM", "KM"], BBD:[2, "$", "Bds$"], BHD:[3, "din", "din"], BIF:[0, "FBu", "FBu"], BMD:[2, "$", "BD$"], BND:[2, "$", "B$"], BOB:[2, "Bs", "Bs"], BSD:[2, "$", "BS$"], BTN:[2, "Nu.", "Nu."], BWP:[2, "P", "pula"], BYR:[0, "BYR", "BYR"], BZD:[2, "$", "BZ$"], CUC:[1, "$", "CUC$"], CUP:[2, "$", "CU$"], CVE:[2, "CVE", "Esc"], 
DJF:[0, "Fdj", "Fdj"], DZD:[2, "din", "din"], ERN:[2, "Nfk", "Nfk"], FJD:[2, "$", "FJ$"], FKP:[2, "\u00a3", "FK\u00a3"], GEL:[2, "GEL", "GEL"], GHS:[2, "GHS", "GHS"], GIP:[2, "\u00a3", "GI\u00a3"], GMD:[2, "GMD", "GMD"], GNF:[0, "FG", "FG"], GTQ:[2, "Q", "GTQ"], GYD:[0, "$", "GY$"], HNL:[2, "L", "HNL"], HTG:[2, "HTG", "HTG"], IQD:[0, "din", "IQD"], JOD:[3, "din", "JOD"], KES:[2, "Ksh", "Ksh"], KGS:[2, "KGS", "KGS"], KHR:[2, "Riel", "KHR"], KMF:[0, "CF", "KMF"], KPW:[0, "\u20a9KP", "KPW"], KWD:[3, 
"din", "KWD"], KYD:[2, "$", "KY$"], KZT:[2, "\u20b8", "KZT"], LAK:[0, "\u20ad", "\u20ad"], LBP:[0, "L\u00a3", "LBP"], LRD:[2, "$", "L$"], LSL:[2, "LSL", "LSL"], LYD:[3, "din", "LD"], MAD:[2, "dh", "MAD"], MDL:[2, "MDL", "MDL"], MGA:[0, "Ar", "MGA"], MKD:[2, "din", "MKD"], MMK:[0, "K", "MMK"], MOP:[2, "MOP", "MOP$"], MRO:[0, "MRO", "MRO"], MUR:[0, "MURs", "MURs"], MWK:[2, "MWK", "MWK"], MZN:[2, "MTn", "MTn"], NAD:[2, "$", "N$"], NGN:[2, "\u20a6", "NG\u20a6"], NIO:[2, "C$", "C$"], NPR:[2, "Rs", "NPRs"], 
NZD:[2, "$", "NZ$"], OMR:[3, "Rial", "OMR"], PGK:[2, "PGK", "PGK"], PYG:[0, "Gs", "PYG"], QAR:[2, "Rial", "QR"], RWF:[0, "RF", "RF"], SBD:[2, "$", "SI$"], SCR:[2, "SCR", "SCR"], SDG:[2, "SDG", "SDG"], SHP:[2, "\u00a3", "SH\u00a3"], SLL:[0, "SLL", "SLL"], SOS:[0, "SOS", "SOS"], SRD:[2, "$", "SR$"], STD:[0, "Db", "Db"], SYP:[0, "\u00a3", "SY\u00a3"], SZL:[2, "SZL", "SZL"], TJS:[2, "Som", "TJS"], TND:[3, "din", "DT"], TOP:[2, "T$", "T$"], TTD:[2, "$", "TT$"], UGX:[0, "UGX", "UGX"], UZS:[0, "so\u02bcm", 
"UZS"], VEF:[2, "Bs", "Bs"], VUV:[0, "VUV", "VUV"], WST:[2, "WST", "WST"], XAF:[0, "FCFA", "FCFA"], XCD:[2, "$", "EC$"], XOF:[0, "CFA", "CFA"], XPF:[0, "FCFP", "FCFP"], ZMK:[0, "ZMK", "ZMK"]};
// Input 63
goog.i18n.NumberFormatSymbols_af = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_af_ZA = goog.i18n.NumberFormatSymbols_af;
goog.i18n.NumberFormatSymbols_am = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ETB"};
goog.i18n.NumberFormatSymbols_am_ET = goog.i18n.NumberFormatSymbols_am;
goog.i18n.NumberFormatSymbols_ar = {DECIMAL_SEP:"\u066b", GROUP_SEP:"\u066c", PERCENT:"\u066a", ZERO_DIGIT:"\u0660", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"\u0627\u0633", PERMILL:"\u0609", INFINITY:"\u221e", NAN:"\u0644\u064a\u0633\u00a0\u0631\u0642\u0645", DECIMAL_PATTERN:"#0.###;#0.###-", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#0.00;\u00a4\u00a0#0.00-", DEF_CURRENCY_CODE:"EGP"};
goog.i18n.NumberFormatSymbols_ar_001 = goog.i18n.NumberFormatSymbols_ar;
goog.i18n.NumberFormatSymbols_ar_EG = goog.i18n.NumberFormatSymbols_ar;
goog.i18n.NumberFormatSymbols_bg = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"BGN"};
goog.i18n.NumberFormatSymbols_bg_BG = goog.i18n.NumberFormatSymbols_bg;
goog.i18n.NumberFormatSymbols_bn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u09e6", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u09b8\u0982\u0996\u09cd\u09af\u09be\u00a0\u09a8\u09be", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"#,##,##0.00\u00a4;(#,##,##0.00\u00a4)", DEF_CURRENCY_CODE:"BDT"};
goog.i18n.NumberFormatSymbols_bn_BD = goog.i18n.NumberFormatSymbols_bn;
goog.i18n.NumberFormatSymbols_br = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_br_FR = goog.i18n.NumberFormatSymbols_br;
goog.i18n.NumberFormatSymbols_ca = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_ca_AD = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_ca_ES = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_chr = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_chr_US = goog.i18n.NumberFormatSymbols_chr;
goog.i18n.NumberFormatSymbols_cs = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CZK"};
goog.i18n.NumberFormatSymbols_cs_CZ = goog.i18n.NumberFormatSymbols_cs;
goog.i18n.NumberFormatSymbols_cy = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"GBP"};
goog.i18n.NumberFormatSymbols_cy_GB = goog.i18n.NumberFormatSymbols_cy;
goog.i18n.NumberFormatSymbols_da = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"DKK"};
goog.i18n.NumberFormatSymbols_da_DK = goog.i18n.NumberFormatSymbols_da;
goog.i18n.NumberFormatSymbols_de = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_de_AT = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_de_BE = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_de_CH = {DECIMAL_SEP:".", GROUP_SEP:"'", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00;\u00a4-#,##0.00", DEF_CURRENCY_CODE:"CHF"};
goog.i18n.NumberFormatSymbols_de_DE = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_de_LU = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_el = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_el_GR = goog.i18n.NumberFormatSymbols_el;
goog.i18n.NumberFormatSymbols_en = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_en_AS = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_AU = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"AUD"};
goog.i18n.NumberFormatSymbols_en_Dsrt_US = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_FM = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_GB = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"GBP"};
goog.i18n.NumberFormatSymbols_en_GU = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_IE = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_en_IN = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_en_MH = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_MP = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_PR = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_PW = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_SG = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"SGD"};
goog.i18n.NumberFormatSymbols_en_TC = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_UM = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_US = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_VG = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_VI = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_ZA = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_es = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_es_419 = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"MXN"};
goog.i18n.NumberFormatSymbols_es_EA = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_es_ES = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_es_IC = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_et = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_et_EE = goog.i18n.NumberFormatSymbols_et;
goog.i18n.NumberFormatSymbols_eu = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%\u00a0#,##0", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_eu_ES = goog.i18n.NumberFormatSymbols_eu;
goog.i18n.NumberFormatSymbols_fa = {DECIMAL_SEP:"\u066b", GROUP_SEP:"\u066c", PERCENT:"\u066a", ZERO_DIGIT:"\u06f0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d7\u06f1\u06f0^", PERMILL:"\u0609", INFINITY:"\u221e", NAN:"\u0646\u0627\u0639\u062f\u062f", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u200e\u00a4#,##0.00;\u200e(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"IRR"};
goog.i18n.NumberFormatSymbols_fa_IR = goog.i18n.NumberFormatSymbols_fa;
goog.i18n.NumberFormatSymbols_fi = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"ep\u00e4luku", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fi_FI = goog.i18n.NumberFormatSymbols_fi;
goog.i18n.NumberFormatSymbols_fil = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"PHP"};
goog.i18n.NumberFormatSymbols_fil_PH = goog.i18n.NumberFormatSymbols_fil;
goog.i18n.NumberFormatSymbols_fr = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fr_BL = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_CA = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"CAD"};
goog.i18n.NumberFormatSymbols_fr_FR = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_GF = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_GP = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MC = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MF = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MQ = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_RE = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_YT = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_gl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_gl_ES = goog.i18n.NumberFormatSymbols_gl;
goog.i18n.NumberFormatSymbols_gsw = {DECIMAL_SEP:".", GROUP_SEP:"\u2019", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CHF"};
goog.i18n.NumberFormatSymbols_gsw_CH = goog.i18n.NumberFormatSymbols_gsw;
goog.i18n.NumberFormatSymbols_gu = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_gu_IN = goog.i18n.NumberFormatSymbols_gu;
goog.i18n.NumberFormatSymbols_haw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_haw_US = goog.i18n.NumberFormatSymbols_haw;
goog.i18n.NumberFormatSymbols_he = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ILS"};
goog.i18n.NumberFormatSymbols_he_IL = goog.i18n.NumberFormatSymbols_he;
goog.i18n.NumberFormatSymbols_hi = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_hi_IN = goog.i18n.NumberFormatSymbols_hi;
goog.i18n.NumberFormatSymbols_hr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"HRK"};
goog.i18n.NumberFormatSymbols_hr_HR = goog.i18n.NumberFormatSymbols_hr;
goog.i18n.NumberFormatSymbols_hu = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"HUF"};
goog.i18n.NumberFormatSymbols_hu_HU = goog.i18n.NumberFormatSymbols_hu;
goog.i18n.NumberFormatSymbols_id = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"IDR"};
goog.i18n.NumberFormatSymbols_id_ID = goog.i18n.NumberFormatSymbols_id;
goog.i18n.NumberFormatSymbols_in = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"IDR"};
goog.i18n.NumberFormatSymbols_is = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ISK"};
goog.i18n.NumberFormatSymbols_is_IS = goog.i18n.NumberFormatSymbols_is;
goog.i18n.NumberFormatSymbols_it = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_it_IT = goog.i18n.NumberFormatSymbols_it;
goog.i18n.NumberFormatSymbols_it_SM = goog.i18n.NumberFormatSymbols_it;
goog.i18n.NumberFormatSymbols_iw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ILS"};
goog.i18n.NumberFormatSymbols_ja = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"JPY"};
goog.i18n.NumberFormatSymbols_ja_JP = goog.i18n.NumberFormatSymbols_ja;
goog.i18n.NumberFormatSymbols_kn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"\u0c88", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_kn_IN = goog.i18n.NumberFormatSymbols_kn;
goog.i18n.NumberFormatSymbols_ko = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"KRW"};
goog.i18n.NumberFormatSymbols_ko_KR = goog.i18n.NumberFormatSymbols_ko;
goog.i18n.NumberFormatSymbols_ln = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CDF"};
goog.i18n.NumberFormatSymbols_ln_CD = goog.i18n.NumberFormatSymbols_ln;
goog.i18n.NumberFormatSymbols_lt = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2013", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"LTL"};
goog.i18n.NumberFormatSymbols_lt_LT = goog.i18n.NumberFormatSymbols_lt;
goog.i18n.NumberFormatSymbols_lv = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"nav\u00a0skaitlis", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"LVL"};
goog.i18n.NumberFormatSymbols_lv_LV = goog.i18n.NumberFormatSymbols_lv;
goog.i18n.NumberFormatSymbols_ml = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"#,##,##0.00\u00a4", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_ml_IN = goog.i18n.NumberFormatSymbols_ml;
goog.i18n.NumberFormatSymbols_mr = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u0966", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_mr_IN = goog.i18n.NumberFormatSymbols_mr;
goog.i18n.NumberFormatSymbols_ms = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"MYR"};
goog.i18n.NumberFormatSymbols_ms_Latn_MY = goog.i18n.NumberFormatSymbols_ms;
goog.i18n.NumberFormatSymbols_mt = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_mt_MT = goog.i18n.NumberFormatSymbols_mt;
goog.i18n.NumberFormatSymbols_nb = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NOK"};
goog.i18n.NumberFormatSymbols_nb_NO = goog.i18n.NumberFormatSymbols_nb;
goog.i18n.NumberFormatSymbols_nl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00;\u00a4\u00a0#,##0.00-", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_nl_NL = goog.i18n.NumberFormatSymbols_nl;
goog.i18n.NumberFormatSymbols_no = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NOK"};
goog.i18n.NumberFormatSymbols_or = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_or_IN = goog.i18n.NumberFormatSymbols_or;
goog.i18n.NumberFormatSymbols_pl = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"PLN"};
goog.i18n.NumberFormatSymbols_pl_PL = goog.i18n.NumberFormatSymbols_pl;
goog.i18n.NumberFormatSymbols_pt = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"BRL"};
goog.i18n.NumberFormatSymbols_pt_BR = goog.i18n.NumberFormatSymbols_pt;
goog.i18n.NumberFormatSymbols_pt_PT = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_ro = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RON"};
goog.i18n.NumberFormatSymbols_ro_RO = goog.i18n.NumberFormatSymbols_ro;
goog.i18n.NumberFormatSymbols_ru = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u043d\u0435\u00a0\u0447\u0438\u0441\u043b\u043e", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RUB"};
goog.i18n.NumberFormatSymbols_ru_RU = goog.i18n.NumberFormatSymbols_ru;
goog.i18n.NumberFormatSymbols_sk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_sk_SK = goog.i18n.NumberFormatSymbols_sk;
goog.i18n.NumberFormatSymbols_sl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_sl_SI = goog.i18n.NumberFormatSymbols_sl;
goog.i18n.NumberFormatSymbols_sq = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ALL"};
goog.i18n.NumberFormatSymbols_sq_AL = goog.i18n.NumberFormatSymbols_sq;
goog.i18n.NumberFormatSymbols_sr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RSD"};
goog.i18n.NumberFormatSymbols_sr_Cyrl_RS = goog.i18n.NumberFormatSymbols_sr;
goog.i18n.NumberFormatSymbols_sv = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d710^", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u00a4\u00a4\u00a4", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"SEK"};
goog.i18n.NumberFormatSymbols_sv_SE = goog.i18n.NumberFormatSymbols_sv;
goog.i18n.NumberFormatSymbols_sw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"TZS"};
goog.i18n.NumberFormatSymbols_sw_TZ = goog.i18n.NumberFormatSymbols_sw;
goog.i18n.NumberFormatSymbols_ta = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_ta_IN = goog.i18n.NumberFormatSymbols_ta;
goog.i18n.NumberFormatSymbols_te = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_te_IN = goog.i18n.NumberFormatSymbols_te;
goog.i18n.NumberFormatSymbols_th = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"THB"};
goog.i18n.NumberFormatSymbols_th_TH = goog.i18n.NumberFormatSymbols_th;
goog.i18n.NumberFormatSymbols_tl = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"PHP"};
goog.i18n.NumberFormatSymbols_tr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%#,##0", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"TRY"};
goog.i18n.NumberFormatSymbols_tr_TR = goog.i18n.NumberFormatSymbols_tr;
goog.i18n.NumberFormatSymbols_uk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"\u0415", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u041d\u0435\u00a0\u0447\u0438\u0441\u043b\u043e", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"UAH"};
goog.i18n.NumberFormatSymbols_uk_UA = goog.i18n.NumberFormatSymbols_uk;
goog.i18n.NumberFormatSymbols_ur = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"PKR"};
goog.i18n.NumberFormatSymbols_ur_PK = goog.i18n.NumberFormatSymbols_ur;
goog.i18n.NumberFormatSymbols_vi = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"VND"};
goog.i18n.NumberFormatSymbols_vi_VN = goog.i18n.NumberFormatSymbols_vi;
goog.i18n.NumberFormatSymbols_zh = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"CNY"};
goog.i18n.NumberFormatSymbols_zh_CN = goog.i18n.NumberFormatSymbols_zh;
goog.i18n.NumberFormatSymbols_zh_HK = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u975e\u6578\u503c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"HKD"};
goog.i18n.NumberFormatSymbols_zh_Hans_CN = goog.i18n.NumberFormatSymbols_zh;
goog.i18n.NumberFormatSymbols_zh_TW = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u975e\u6578\u503c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"TWD"};
goog.i18n.NumberFormatSymbols_zu = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"I-NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_zu_ZA = goog.i18n.NumberFormatSymbols_zu;
goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
"af" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_af);
if("af_ZA" == goog.LOCALE || "af-ZA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_af
}
"am" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_am);
if("am_ET" == goog.LOCALE || "am-ET" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_am
}
"ar" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar);
if("ar_001" == goog.LOCALE || "ar-001" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar
}
if("ar_EG" == goog.LOCALE || "ar-EG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar
}
"bg" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bg);
if("bg_BG" == goog.LOCALE || "bg-BG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bg
}
"bn" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bn);
if("bn_BD" == goog.LOCALE || "bn-BD" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bn
}
"br" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_br);
if("br_FR" == goog.LOCALE || "br-FR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_br
}
"ca" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca);
if("ca_AD" == goog.LOCALE || "ca-AD" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca
}
if("ca_ES" == goog.LOCALE || "ca-ES" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca
}
"chr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_chr);
if("chr_US" == goog.LOCALE || "chr-US" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_chr
}
"cs" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cs);
if("cs_CZ" == goog.LOCALE || "cs-CZ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cs
}
"cy" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cy);
if("cy_GB" == goog.LOCALE || "cy-GB" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cy
}
"da" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_da);
if("da_DK" == goog.LOCALE || "da-DK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_da
}
"de" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de);
if("de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de_AT
}
if("de_BE" == goog.LOCALE || "de-BE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de
}
if("de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de_CH
}
if("de_DE" == goog.LOCALE || "de-DE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de
}
if("de_LU" == goog.LOCALE || "de-LU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de
}
"el" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_el);
if("el_GR" == goog.LOCALE || "el-GR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_el
}
"en" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en);
if("en_AS" == goog.LOCALE || "en-AS" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_AU
}
if("en_Dsrt_US" == goog.LOCALE || "en-Dsrt-US" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_FM" == goog.LOCALE || "en-FM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_GB
}
if("en_GU" == goog.LOCALE || "en-GU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_IE
}
if("en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_IN
}
if("en_MH" == goog.LOCALE || "en-MH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_MP" == goog.LOCALE || "en-MP" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_PR" == goog.LOCALE || "en-PR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_PW" == goog.LOCALE || "en-PW" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_SG
}
if("en_TC" == goog.LOCALE || "en-TC" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_UM" == goog.LOCALE || "en-UM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_US" == goog.LOCALE || "en-US" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_VG" == goog.LOCALE || "en-VG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_VI" == goog.LOCALE || "en-VI" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en
}
if("en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_ZA
}
"es" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es);
if("es_419" == goog.LOCALE || "es-419" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_419
}
if("es_EA" == goog.LOCALE || "es-EA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es
}
if("es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es
}
if("es_IC" == goog.LOCALE || "es-IC" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es
}
"et" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_et);
if("et_EE" == goog.LOCALE || "et-EE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_et
}
"eu" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_eu);
if("eu_ES" == goog.LOCALE || "eu-ES" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_eu
}
"fa" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fa);
if("fa_IR" == goog.LOCALE || "fa-IR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fa
}
"fi" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fi);
if("fi_FI" == goog.LOCALE || "fi-FI" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fi
}
"fil" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fil);
if("fil_PH" == goog.LOCALE || "fil-PH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fil
}
"fr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr);
if("fr_BL" == goog.LOCALE || "fr-BL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
if("fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr_CA
}
if("fr_FR" == goog.LOCALE || "fr-FR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
if("fr_GF" == goog.LOCALE || "fr-GF" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
if("fr_GP" == goog.LOCALE || "fr-GP" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
if("fr_MC" == goog.LOCALE || "fr-MC" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
if("fr_MF" == goog.LOCALE || "fr-MF" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
if("fr_MQ" == goog.LOCALE || "fr-MQ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
if("fr_RE" == goog.LOCALE || "fr-RE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
if("fr_YT" == goog.LOCALE || "fr-YT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr
}
"gl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gl);
if("gl_ES" == goog.LOCALE || "gl-ES" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gl
}
"gsw" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gsw);
if("gsw_CH" == goog.LOCALE || "gsw-CH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gsw
}
"gu" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gu);
if("gu_IN" == goog.LOCALE || "gu-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gu
}
"haw" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_haw);
if("haw_US" == goog.LOCALE || "haw-US" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_haw
}
"he" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_he);
if("he_IL" == goog.LOCALE || "he-IL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_he
}
"hi" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hi);
if("hi_IN" == goog.LOCALE || "hi-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hi
}
"hr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hr);
if("hr_HR" == goog.LOCALE || "hr-HR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hr
}
"hu" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hu);
if("hu_HU" == goog.LOCALE || "hu-HU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hu
}
"id" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_id);
if("id_ID" == goog.LOCALE || "id-ID" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_id
}
"in" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_in);
"is" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_is);
if("is_IS" == goog.LOCALE || "is-IS" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_is
}
"it" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it);
if("it_IT" == goog.LOCALE || "it-IT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it
}
if("it_SM" == goog.LOCALE || "it-SM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it
}
"iw" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_iw);
"ja" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ja);
if("ja_JP" == goog.LOCALE || "ja-JP" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ja
}
"kn" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kn);
if("kn_IN" == goog.LOCALE || "kn-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kn
}
"ko" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ko);
if("ko_KR" == goog.LOCALE || "ko-KR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ko
}
"ln" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ln);
if("ln_CD" == goog.LOCALE || "ln-CD" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ln
}
"lt" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lt);
if("lt_LT" == goog.LOCALE || "lt-LT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lt
}
"lv" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lv);
if("lv_LV" == goog.LOCALE || "lv-LV" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lv
}
"ml" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ml);
if("ml_IN" == goog.LOCALE || "ml-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ml
}
"mr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mr);
if("mr_IN" == goog.LOCALE || "mr-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mr
}
"ms" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ms);
if("ms_Latn_MY" == goog.LOCALE || "ms-Latn-MY" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ms
}
"mt" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mt);
if("mt_MT" == goog.LOCALE || "mt-MT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mt
}
"nb" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nb);
if("nb_NO" == goog.LOCALE || "nb-NO" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nb
}
"nl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl);
if("nl_NL" == goog.LOCALE || "nl-NL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl
}
"no" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_no);
"or" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_or);
if("or_IN" == goog.LOCALE || "or-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_or
}
"pl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pl);
if("pl_PL" == goog.LOCALE || "pl-PL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pl
}
"pt" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt);
if("pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt
}
if("pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt_PT
}
"ro" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ro);
if("ro_RO" == goog.LOCALE || "ro-RO" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ro
}
"ru" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ru);
if("ru_RU" == goog.LOCALE || "ru-RU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ru
}
"sk" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sk);
if("sk_SK" == goog.LOCALE || "sk-SK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sk
}
"sl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sl);
if("sl_SI" == goog.LOCALE || "sl-SI" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sl
}
"sq" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sq);
if("sq_AL" == goog.LOCALE || "sq-AL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sq
}
"sr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr);
if("sr_Cyrl_RS" == goog.LOCALE || "sr-Cyrl-RS" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr
}
"sv" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sv);
if("sv_SE" == goog.LOCALE || "sv-SE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sv
}
"sw" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sw);
if("sw_TZ" == goog.LOCALE || "sw-TZ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sw
}
"ta" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ta);
if("ta_IN" == goog.LOCALE || "ta-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ta
}
"te" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_te);
if("te_IN" == goog.LOCALE || "te-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_te
}
"th" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_th);
if("th_TH" == goog.LOCALE || "th-TH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_th
}
"tl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tl);
"tr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tr);
if("tr_TR" == goog.LOCALE || "tr-TR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tr
}
"uk" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uk);
if("uk_UA" == goog.LOCALE || "uk-UA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uk
}
"ur" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ur);
if("ur_PK" == goog.LOCALE || "ur-PK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ur
}
"vi" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_vi);
if("vi_VN" == goog.LOCALE || "vi-VN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_vi
}
"zh" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh);
if("zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh
}
if("zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_HK
}
if("zh_Hans_CN" == goog.LOCALE || "zh-Hans-CN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh
}
if("zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_TW
}
"zu" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zu);
if("zu_ZA" == goog.LOCALE || "zu-ZA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zu
}
;
// Input 64
goog.i18n.NumberFormat = function(pattern, opt_currency, opt_currencyStyle) {
  this.intlCurrencyCode_ = opt_currency || goog.i18n.NumberFormatSymbols.DEF_CURRENCY_CODE;
  this.currencyStyle_ = opt_currencyStyle || goog.i18n.NumberFormat.CurrencyStyle.LOCAL;
  this.maximumIntegerDigits_ = 40;
  this.minimumIntegerDigits_ = 1;
  this.significantDigits_ = 0;
  this.maximumFractionDigits_ = 3;
  this.minExponentDigits_ = this.minimumFractionDigits_ = 0;
  this.showTrailingZeros_ = this.useSignForPositiveExponent_ = !1;
  this.positiveSuffix_ = this.positivePrefix_ = "";
  this.negativePrefix_ = "-";
  this.negativeSuffix_ = "";
  this.multiplier_ = 1;
  this.groupingSize_ = 3;
  this.useExponentialNotation_ = this.decimalSeparatorAlwaysShown_ = !1;
  this.compactStyle_ = goog.i18n.NumberFormat.CompactStyle.NONE;
  this.baseFormattingNumber_ = null;
  "number" == typeof pattern ? this.applyStandardPattern_(pattern) : this.applyPattern_(pattern)
};
goog.i18n.NumberFormat.Format = {DECIMAL:1, SCIENTIFIC:2, PERCENT:3, CURRENCY:4, COMPACT_SHORT:5, COMPACT_LONG:6};
goog.i18n.NumberFormat.CurrencyStyle = {LOCAL:0, PORTABLE:1, GLOBAL:2};
goog.i18n.NumberFormat.CompactStyle = {NONE:0, SHORT:1, LONG:2};
goog.i18n.NumberFormat.enforceAsciiDigits_ = !1;
goog.i18n.NumberFormat.setEnforceAsciiDigits = function(doEnforce) {
  goog.i18n.NumberFormat.enforceAsciiDigits_ = doEnforce
};
goog.i18n.NumberFormat.isEnforceAsciiDigits = function() {
  return goog.i18n.NumberFormat.enforceAsciiDigits_
};
goog.i18n.NumberFormat.prototype.setMinimumFractionDigits = function(min) {
  if(min > this.maximumFractionDigits_) {
    throw Error("Min value must be less than max value");
  }
  if(0 < this.significantDigits_ && 0 < min) {
    throw Error("Can't combine significant digits and minimum fraction digits");
  }
  this.minimumFractionDigits_ = min
};
goog.i18n.NumberFormat.prototype.setMaximumFractionDigits = function(max) {
  if(this.minimumFractionDigits_ > max) {
    throw Error("Min value must be less than max value");
  }
  this.maximumFractionDigits_ = max
};
goog.i18n.NumberFormat.prototype.setSignificantDigits = function(number) {
  if(0 < this.minimumFractionDigits_ && 0 <= number) {
    throw Error("Can't combine significant digits and minimum fraction digits");
  }
  this.significantDigits_ = number
};
goog.i18n.NumberFormat.prototype.applyPattern_ = function(pattern) {
  this.pattern_ = pattern.replace(/ /g, "\u00a0");
  var pos = [0];
  this.positivePrefix_ = this.parseAffix_(pattern, pos);
  var trunkStart = pos[0];
  this.parseTrunk_(pattern, pos);
  var trunkLen = pos[0] - trunkStart;
  this.positiveSuffix_ = this.parseAffix_(pattern, pos);
  pos[0] < pattern.length && pattern.charAt(pos[0]) == goog.i18n.NumberFormat.PATTERN_SEPARATOR_ ? (pos[0]++, this.negativePrefix_ = this.parseAffix_(pattern, pos), pos[0] += trunkLen, this.negativeSuffix_ = this.parseAffix_(pattern, pos)) : (this.negativePrefix_ = this.positivePrefix_ + this.negativePrefix_, this.negativeSuffix_ += this.positiveSuffix_)
};
goog.i18n.NumberFormat.prototype.applyStandardPattern_ = function(patternType) {
  switch(patternType) {
    case goog.i18n.NumberFormat.Format.DECIMAL:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.DECIMAL_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.SCIENTIFIC:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.SCIENTIFIC_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.PERCENT:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.PERCENT_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.CURRENCY:
      this.applyPattern_(goog.i18n.currency.adjustPrecision(goog.i18n.NumberFormatSymbols.CURRENCY_PATTERN, this.intlCurrencyCode_));
      break;
    case goog.i18n.NumberFormat.Format.COMPACT_SHORT:
      this.applyCompactStyle_(goog.i18n.NumberFormat.CompactStyle.SHORT);
      break;
    case goog.i18n.NumberFormat.Format.COMPACT_LONG:
      this.applyCompactStyle_(goog.i18n.NumberFormat.CompactStyle.LONG);
      break;
    default:
      throw Error("Unsupported pattern type.");
  }
};
goog.i18n.NumberFormat.prototype.applyCompactStyle_ = function(style) {
  this.compactStyle_ = style;
  this.applyPattern_(goog.i18n.NumberFormatSymbols.DECIMAL_PATTERN);
  this.setMinimumFractionDigits(0);
  this.setMaximumFractionDigits(2);
  this.setSignificantDigits(2)
};
goog.i18n.NumberFormat.prototype.parse = function(text, opt_pos) {
  var pos = opt_pos || [0];
  if(this.compactStyle_ != goog.i18n.NumberFormat.CompactStyle.NONE) {
    throw Error("Parsing of compact numbers is unimplemented");
  }
  var ret = NaN;
  text = text.replace(/ /g, "\u00a0");
  var gotPositive = text.indexOf(this.positivePrefix_, pos[0]) == pos[0], gotNegative = text.indexOf(this.negativePrefix_, pos[0]) == pos[0];
  gotPositive && gotNegative && (this.positivePrefix_.length > this.negativePrefix_.length ? gotNegative = !1 : this.positivePrefix_.length < this.negativePrefix_.length && (gotPositive = !1));
  gotPositive ? pos[0] += this.positivePrefix_.length : gotNegative && (pos[0] += this.negativePrefix_.length);
  text.indexOf(goog.i18n.NumberFormatSymbols.INFINITY, pos[0]) == pos[0] ? (pos[0] += goog.i18n.NumberFormatSymbols.INFINITY.length, ret = Infinity) : ret = this.parseNumber_(text, pos);
  if(gotPositive) {
    if(text.indexOf(this.positiveSuffix_, pos[0]) != pos[0]) {
      return NaN
    }
    pos[0] += this.positiveSuffix_.length
  }else {
    if(gotNegative) {
      if(text.indexOf(this.negativeSuffix_, pos[0]) != pos[0]) {
        return NaN
      }
      pos[0] += this.negativeSuffix_.length
    }
  }
  return gotNegative ? -ret : ret
};
goog.i18n.NumberFormat.prototype.parseNumber_ = function(text, pos) {
  var sawDecimal = !1, sawExponent = !1, sawDigit = !1, scale = 1, decimal = goog.i18n.NumberFormatSymbols.DECIMAL_SEP, grouping = goog.i18n.NumberFormatSymbols.GROUP_SEP, exponentChar = goog.i18n.NumberFormatSymbols.EXP_SYMBOL;
  if(this.compactStyle_ != goog.i18n.NumberFormat.CompactStyle.NONE) {
    throw Error("Parsing of compact style numbers is not implemented");
  }
  for(var normalizedText = "";pos[0] < text.length;pos[0]++) {
    var ch = text.charAt(pos[0]), digit = this.getDigit_(ch);
    if(0 <= digit && 9 >= digit) {
      normalizedText += digit, sawDigit = !0
    }else {
      if(ch == decimal.charAt(0)) {
        if(sawDecimal || sawExponent) {
          break
        }
        normalizedText += ".";
        sawDecimal = !0
      }else {
        if(ch == grouping.charAt(0) && ("\u00a0" != grouping.charAt(0) || pos[0] + 1 < text.length && 0 <= this.getDigit_(text.charAt(pos[0] + 1)))) {
          if(sawDecimal || sawExponent) {
            break
          }
        }else {
          if(ch == exponentChar.charAt(0)) {
            if(sawExponent) {
              break
            }
            normalizedText += "E";
            sawExponent = !0
          }else {
            if("+" == ch || "-" == ch) {
              normalizedText += ch
            }else {
              if(ch == goog.i18n.NumberFormatSymbols.PERCENT.charAt(0)) {
                if(1 != scale) {
                  break
                }
                scale = 100;
                if(sawDigit) {
                  pos[0]++;
                  break
                }
              }else {
                if(ch == goog.i18n.NumberFormatSymbols.PERMILL.charAt(0)) {
                  if(1 != scale) {
                    break
                  }
                  scale = 1E3;
                  if(sawDigit) {
                    pos[0]++;
                    break
                  }
                }else {
                  break
                }
              }
            }
          }
        }
      }
    }
  }
  return parseFloat(normalizedText) / scale
};
goog.i18n.NumberFormat.prototype.format = function(number) {
  if(isNaN(number)) {
    return goog.i18n.NumberFormatSymbols.NAN
  }
  var parts = [], baseFormattingNumber = goog.isNull(this.baseFormattingNumber_) ? number : this.baseFormattingNumber_, unit = this.getUnitAfterRounding_(baseFormattingNumber, number);
  number /= Math.pow(10, unit.divisorBase);
  parts.push(unit.prefix);
  var isNegative = 0 > number || 0 == number && 0 > 1 / number;
  parts.push(isNegative ? this.negativePrefix_ : this.positivePrefix_);
  isFinite(number) ? (number *= isNegative ? -1 : 1, number *= this.multiplier_, this.useExponentialNotation_ ? this.subformatExponential_(number, parts) : this.subformatFixed_(number, this.minimumIntegerDigits_, parts)) : parts.push(goog.i18n.NumberFormatSymbols.INFINITY);
  parts.push(isNegative ? this.negativeSuffix_ : this.positiveSuffix_);
  parts.push(unit.suffix);
  return parts.join("")
};
goog.i18n.NumberFormat.prototype.roundNumber_ = function(number) {
  var power = Math.pow(10, this.maximumFractionDigits_), shiftedNumber = 0 >= this.significantDigits_ ? Math.round(number * power) : Math.floor(this.roundToSignificantDigits_(number * power, this.significantDigits_, this.maximumFractionDigits_)), intValue, fracValue;
  isFinite(shiftedNumber) ? (intValue = Math.floor(shiftedNumber / power), fracValue = Math.floor(shiftedNumber - intValue * power)) : (intValue = number, fracValue = 0);
  return{intValue:intValue, fracValue:fracValue}
};
goog.i18n.NumberFormat.prototype.subformatFixed_ = function(number, minIntDigits, parts) {
  var rounded = this.roundNumber_(number), power = Math.pow(10, this.maximumFractionDigits_), intValue = rounded.intValue, fracValue = rounded.fracValue, numIntDigits = 0 == intValue ? 0 : this.intLog10_(intValue) + 1, fractionPresent = 0 < this.minimumFractionDigits_ || 0 < fracValue || this.showTrailingZeros_ && numIntDigits < this.significantDigits_, minimumFractionDigits = this.minimumFractionDigits_;
  fractionPresent && (minimumFractionDigits = this.showTrailingZeros_ && 0 < this.significantDigits_ ? this.significantDigits_ - numIntDigits : this.minimumFractionDigits_);
  for(var intPart = "", translatableInt = intValue;1E20 < translatableInt;) {
    intPart = "0" + intPart, translatableInt = Math.round(translatableInt / 10)
  }
  var intPart = translatableInt + intPart, decimal = goog.i18n.NumberFormatSymbols.DECIMAL_SEP, grouping = goog.i18n.NumberFormatSymbols.GROUP_SEP, zeroCode = goog.i18n.NumberFormat.enforceAsciiDigits_ ? 48 : goog.i18n.NumberFormatSymbols.ZERO_DIGIT.charCodeAt(0), digitLen = intPart.length;
  if(0 < intValue || 0 < minIntDigits) {
    for(var i = digitLen;i < minIntDigits;i++) {
      parts.push(String.fromCharCode(zeroCode))
    }
    for(i = 0;i < digitLen;i++) {
      parts.push(String.fromCharCode(zeroCode + 1 * intPart.charAt(i))), 1 < digitLen - i && 0 < this.groupingSize_ && 1 == (digitLen - i) % this.groupingSize_ && parts.push(grouping)
    }
  }else {
    fractionPresent || parts.push(String.fromCharCode(zeroCode))
  }
  (this.decimalSeparatorAlwaysShown_ || fractionPresent) && parts.push(decimal);
  for(var fracPart = "" + (fracValue + power), fracLen = fracPart.length;"0" == fracPart.charAt(fracLen - 1) && fracLen > minimumFractionDigits + 1;) {
    fracLen--
  }
  for(i = 1;i < fracLen;i++) {
    parts.push(String.fromCharCode(zeroCode + 1 * fracPart.charAt(i)))
  }
};
goog.i18n.NumberFormat.prototype.addExponentPart_ = function(exponent, parts) {
  parts.push(goog.i18n.NumberFormatSymbols.EXP_SYMBOL);
  0 > exponent ? (exponent = -exponent, parts.push(goog.i18n.NumberFormatSymbols.MINUS_SIGN)) : this.useSignForPositiveExponent_ && parts.push(goog.i18n.NumberFormatSymbols.PLUS_SIGN);
  for(var exponentDigits = "" + exponent, zeroChar = goog.i18n.NumberFormat.enforceAsciiDigits_ ? "0" : goog.i18n.NumberFormatSymbols.ZERO_DIGIT, i = exponentDigits.length;i < this.minExponentDigits_;i++) {
    parts.push(zeroChar)
  }
  parts.push(exponentDigits)
};
goog.i18n.NumberFormat.prototype.subformatExponential_ = function(number, parts) {
  if(0 == number) {
    this.subformatFixed_(number, this.minimumIntegerDigits_, parts), this.addExponentPart_(0, parts)
  }else {
    var exponent = goog.math.safeFloor(Math.log(number) / Math.log(10));
    number /= Math.pow(10, exponent);
    var minIntDigits = this.minimumIntegerDigits_;
    if(1 < this.maximumIntegerDigits_ && this.maximumIntegerDigits_ > this.minimumIntegerDigits_) {
      for(;0 != exponent % this.maximumIntegerDigits_;) {
        number *= 10, exponent--
      }
      minIntDigits = 1
    }else {
      1 > this.minimumIntegerDigits_ ? (exponent++, number /= 10) : (exponent -= this.minimumIntegerDigits_ - 1, number *= Math.pow(10, this.minimumIntegerDigits_ - 1))
    }
    this.subformatFixed_(number, minIntDigits, parts);
    this.addExponentPart_(exponent, parts)
  }
};
goog.i18n.NumberFormat.prototype.getDigit_ = function(ch) {
  var code = ch.charCodeAt(0);
  if(48 <= code && 58 > code) {
    return code - 48
  }
  var zeroCode = goog.i18n.NumberFormatSymbols.ZERO_DIGIT.charCodeAt(0);
  return zeroCode <= code && code < zeroCode + 10 ? code - zeroCode : -1
};
goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_ = "0";
goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_ = ",";
goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_ = ".";
goog.i18n.NumberFormat.PATTERN_PER_MILLE_ = "\u2030";
goog.i18n.NumberFormat.PATTERN_PERCENT_ = "%";
goog.i18n.NumberFormat.PATTERN_DIGIT_ = "#";
goog.i18n.NumberFormat.PATTERN_SEPARATOR_ = ";";
goog.i18n.NumberFormat.PATTERN_EXPONENT_ = "E";
goog.i18n.NumberFormat.PATTERN_PLUS_ = "+";
goog.i18n.NumberFormat.PATTERN_MINUS_ = "-";
goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_ = "\u00a4";
goog.i18n.NumberFormat.QUOTE_ = "'";
goog.i18n.NumberFormat.prototype.parseAffix_ = function(pattern, pos) {
  for(var affix = "", inQuote = !1, len = pattern.length;pos[0] < len;pos[0]++) {
    var ch = pattern.charAt(pos[0]);
    if(ch == goog.i18n.NumberFormat.QUOTE_) {
      pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.QUOTE_ ? (pos[0]++, affix += "'") : inQuote = !inQuote
    }else {
      if(inQuote) {
        affix += ch
      }else {
        switch(ch) {
          case goog.i18n.NumberFormat.PATTERN_DIGIT_:
          ;
          case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:
          ;
          case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:
          ;
          case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:
          ;
          case goog.i18n.NumberFormat.PATTERN_SEPARATOR_:
            return affix;
          case goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_:
            if(pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_) {
              pos[0]++, affix += this.intlCurrencyCode_
            }else {
              switch(this.currencyStyle_) {
                case goog.i18n.NumberFormat.CurrencyStyle.LOCAL:
                  affix += goog.i18n.currency.getLocalCurrencySign(this.intlCurrencyCode_);
                  break;
                case goog.i18n.NumberFormat.CurrencyStyle.GLOBAL:
                  affix += goog.i18n.currency.getGlobalCurrencySign(this.intlCurrencyCode_);
                  break;
                case goog.i18n.NumberFormat.CurrencyStyle.PORTABLE:
                  affix += goog.i18n.currency.getPortableCurrencySign(this.intlCurrencyCode_)
              }
            }
            break;
          case goog.i18n.NumberFormat.PATTERN_PERCENT_:
            if(1 != this.multiplier_) {
              throw Error("Too many percent/permill");
            }
            this.multiplier_ = 100;
            affix += goog.i18n.NumberFormatSymbols.PERCENT;
            break;
          case goog.i18n.NumberFormat.PATTERN_PER_MILLE_:
            if(1 != this.multiplier_) {
              throw Error("Too many percent/permill");
            }
            this.multiplier_ = 1E3;
            affix += goog.i18n.NumberFormatSymbols.PERMILL;
            break;
          default:
            affix += ch
        }
      }
    }
  }
  return affix
};
goog.i18n.NumberFormat.prototype.parseTrunk_ = function(pattern, pos) {
  for(var decimalPos = -1, digitLeftCount = 0, zeroDigitCount = 0, digitRightCount = 0, groupingCount = -1, len = pattern.length, loop = !0;pos[0] < len && loop;pos[0]++) {
    var ch = pattern.charAt(pos[0]);
    switch(ch) {
      case goog.i18n.NumberFormat.PATTERN_DIGIT_:
        0 < zeroDigitCount ? digitRightCount++ : digitLeftCount++;
        0 <= groupingCount && 0 > decimalPos && groupingCount++;
        break;
      case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:
        if(0 < digitRightCount) {
          throw Error('Unexpected "0" in pattern "' + pattern + '"');
        }
        zeroDigitCount++;
        0 <= groupingCount && 0 > decimalPos && groupingCount++;
        break;
      case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:
        groupingCount = 0;
        break;
      case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:
        if(0 <= decimalPos) {
          throw Error('Multiple decimal separators in pattern "' + pattern + '"');
        }
        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;
        break;
      case goog.i18n.NumberFormat.PATTERN_EXPONENT_:
        if(this.useExponentialNotation_) {
          throw Error('Multiple exponential symbols in pattern "' + pattern + '"');
        }
        this.useExponentialNotation_ = !0;
        this.minExponentDigits_ = 0;
        pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_PLUS_ && (pos[0]++, this.useSignForPositiveExponent_ = !0);
        for(;pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_;) {
          pos[0]++, this.minExponentDigits_++
        }
        if(1 > digitLeftCount + zeroDigitCount || 1 > this.minExponentDigits_) {
          throw Error('Malformed exponential pattern "' + pattern + '"');
        }
        loop = !1;
        break;
      default:
        pos[0]--, loop = !1
    }
  }
  if(0 == zeroDigitCount && 0 < digitLeftCount && 0 <= decimalPos) {
    var n = decimalPos;
    0 == n && n++;
    digitRightCount = digitLeftCount - n;
    digitLeftCount = n - 1;
    zeroDigitCount = 1
  }
  if(0 > decimalPos && 0 < digitRightCount || 0 <= decimalPos && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || 0 == groupingCount) {
    throw Error('Malformed pattern "' + pattern + '"');
  }
  var totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;
  this.maximumFractionDigits_ = 0 <= decimalPos ? totalDigits - decimalPos : 0;
  0 <= decimalPos && (this.minimumFractionDigits_ = digitLeftCount + zeroDigitCount - decimalPos, 0 > this.minimumFractionDigits_ && (this.minimumFractionDigits_ = 0));
  var effectiveDecimalPos = 0 <= decimalPos ? decimalPos : totalDigits;
  this.minimumIntegerDigits_ = effectiveDecimalPos - digitLeftCount;
  this.useExponentialNotation_ && (this.maximumIntegerDigits_ = digitLeftCount + this.minimumIntegerDigits_, 0 == this.maximumFractionDigits_ && 0 == this.minimumIntegerDigits_ && (this.minimumIntegerDigits_ = 1));
  this.groupingSize_ = Math.max(0, groupingCount);
  this.decimalSeparatorAlwaysShown_ = 0 == decimalPos || decimalPos == totalDigits
};
goog.i18n.NumberFormat.NULL_UNIT_ = {prefix:"", suffix:"", divisorBase:0};
goog.i18n.NumberFormat.prototype.getUnitFor_ = function(base, plurality) {
  var table = this.compactStyle_ == goog.i18n.NumberFormat.CompactStyle.SHORT ? goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_SHORT_PATTERN : goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_LONG_PATTERN;
  if(3 > base) {
    return goog.i18n.NumberFormat.NULL_UNIT_
  }
  base = Math.min(14, base);
  var patterns = table[Math.pow(10, base)];
  if(!patterns) {
    return goog.i18n.NumberFormat.NULL_UNIT_
  }
  var pattern = patterns[plurality];
  if(!pattern || "0" == pattern) {
    return goog.i18n.NumberFormat.NULL_UNIT_
  }
  var parts = /([^0]*)(0+)(.*)/.exec(pattern);
  return parts ? {prefix:parts[1], suffix:parts[3], divisorBase:base - (parts[2].length - 1)} : goog.i18n.NumberFormat.NULL_UNIT_
};
goog.i18n.NumberFormat.prototype.getUnitAfterRounding_ = function(formattingNumber, pluralityNumber) {
  if(this.compactStyle_ == goog.i18n.NumberFormat.CompactStyle.NONE) {
    return goog.i18n.NumberFormat.NULL_UNIT_
  }
  formattingNumber = Math.abs(formattingNumber);
  pluralityNumber = Math.abs(pluralityNumber);
  var initialPlurality = this.pluralForm_(formattingNumber), base = 1 >= formattingNumber ? 0 : this.intLog10_(formattingNumber), initialDivisor = this.getUnitFor_(base, initialPlurality).divisorBase, pluralityAttempt = pluralityNumber / Math.pow(10, initialDivisor), pluralityRounded = this.roundNumber_(pluralityAttempt), formattingAttempt = formattingNumber / Math.pow(10, initialDivisor), formattingRounded = this.roundNumber_(formattingAttempt), finalPlurality = this.pluralForm_(pluralityRounded.intValue + 
  pluralityRounded.fracValue);
  return this.getUnitFor_(initialDivisor + this.intLog10_(formattingRounded.intValue), finalPlurality)
};
goog.i18n.NumberFormat.prototype.intLog10_ = function(number) {
  for(var i = 0;1 <= (number /= 10);) {
    i++
  }
  return i
};
goog.i18n.NumberFormat.prototype.roundToSignificantDigits_ = function(number, significantDigits, scale) {
  if(!number) {
    return number
  }
  var digits = this.intLog10_(number), magnitude = significantDigits - digits - 1;
  if(magnitude < -scale) {
    var point = Math.pow(10, scale);
    return Math.round(number / point) * point
  }
  var power = Math.pow(10, magnitude), shifted = Math.round(number * power);
  return shifted / power
};
goog.i18n.NumberFormat.prototype.pluralForm_ = function() {
  return"other"
};
// Input 65
google.visualization.NumberFormat = function(opt_options) {
  var defaults = {decimalSymbol:google.visualization.NumberFormat.DECIMAL_SEP, groupingSymbol:google.visualization.NumberFormat.GROUP_SEP, fractionDigits:2, negativeParens:!1, prefix:"", suffix:"", scaleFactor:1}, options = new gviz.Options([opt_options || {}, defaults]);
  this.fractionDigits_ = options.inferNonNegativeNumberValue("fractionDigits");
  opt_options && goog.isNumber(opt_options.fractionDigits) && isNaN(opt_options.fractionDigits) && (this.fractionDigits_ = NaN);
  this.decimalSymbol_ = options.inferStringValue("decimalSymbol");
  this.groupingSymbol_ = options.inferStringValue("groupingSymbol");
  this.prefix_ = options.inferStringValue("prefix");
  this.suffix_ = options.inferStringValue("suffix");
  this.negativeColor_ = options.inferOptionalColorValue("negativeColor");
  this.negativeParens_ = options.inferBooleanValue("negativeParens");
  this.pattern_ = options.inferOptionalStringValue("pattern");
  this.scaleFactor_ = options.inferNumberValue("scaleFactor");
  if(0 >= this.scaleFactor_) {
    throw Error("Scale factor must be a positive number.");
  }
  google.visualization.NumberFormat.overrideAutomaticNumeralsSet_ || "ar" != goog.LOCALE || goog.i18n.NumberFormat.setEnforceAsciiDigits(!0)
};
google.visualization.NumberFormat.overrideAutomaticNumeralsSet_ = !1;
google.visualization.NumberFormat.useNativeCharactersIfAvailable = function(flag) {
  google.visualization.NumberFormat.overrideAutomaticNumeralsSet_ = !0;
  goog.i18n.NumberFormat.setEnforceAsciiDigits(!flag)
};
google.visualization.NumberFormat.DECIMAL_SEP = goog.i18n.NumberFormatSymbols.DECIMAL_SEP;
google.visualization.NumberFormat.GROUP_SEP = goog.i18n.NumberFormatSymbols.GROUP_SEP;
google.visualization.NumberFormat.DECIMAL_PATTERN = goog.i18n.NumberFormatSymbols.DECIMAL_PATTERN;
google.visualization.NumberFormat.prototype.format = function(dataTable, columnIndex) {
  if("number" == dataTable.getColumnType(columnIndex)) {
    for(var row = 0;row < dataTable.getNumberOfRows();row++) {
      var value = dataTable.getValue(row, columnIndex);
      if(null != value) {
        var formattedValue = this.formatValue(value);
        dataTable.setFormattedValue(row, columnIndex, formattedValue);
        !goog.string.isEmptySafe(this.negativeColor_) && 0 > value && dataTable.setProperty(row, columnIndex, "style", "color:" + this.negativeColor_ + ";")
      }
    }
  }
};
google.visualization.NumberFormat.prototype.formatValue = function(value) {
  var formattedValue = null, scaledValue = value / this.scaleFactor_;
  if(goog.isNull(this.pattern_)) {
    if(isNaN(this.fractionDigits_)) {
      return String(value)
    }
    var valueToFormat = scaledValue;
    this.negativeParens_ && (valueToFormat = Math.abs(valueToFormat));
    formattedValue = this.formatValue_(valueToFormat);
    formattedValue = this.prefix_ + formattedValue + this.suffix_;
    this.negativeParens_ && 0 > value && (formattedValue = "(" + formattedValue + ")")
  }else {
    var numFormat = new goog.i18n.NumberFormat(this.pattern_), formattedValue = numFormat.format(scaledValue)
  }
  return formattedValue
};
google.visualization.NumberFormat.prototype.formatValue_ = function(value) {
  0 == this.fractionDigits_ && (value = Math.round(value));
  var formattedValue = [];
  0 > value && (value = -value, formattedValue.push("-"));
  var multiplier = Math.pow(10, this.fractionDigits_), intValue = Math.round(value * multiplier), whole = String(Math.floor(intValue / multiplier)), decimal = String(intValue % multiplier);
  if(3 < whole.length && this.groupingSymbol_) {
    var l = whole.length % 3;
    0 < l && (formattedValue.push(whole.substring(0, l), this.groupingSymbol_), whole = whole.substring(l));
    for(;3 < whole.length;) {
      formattedValue.push(whole.substring(0, 3), this.groupingSymbol_), whole = whole.substring(3)
    }
  }
  formattedValue.push(whole);
  0 < this.fractionDigits_ && (formattedValue.push(this.decimalSymbol_), decimal.length < this.fractionDigits_ && (decimal = "0000000000000000" + decimal), formattedValue.push(decimal.substring(decimal.length - this.fractionDigits_)));
  return formattedValue.join("")
};
google.visualization.NumberFormat.overrideFormatValue = function(cb) {
  google.visualization.NumberFormat.prototype.formatValue = cb
};
// Input 66
google.visualization.datautils = {};
google.visualization.datautils.parseCell = function(cell) {
  var result = {};
  if("object" != goog.typeOf(cell) || goog.isDateLike(cell)) {
    result.v = goog.isDefAndNotNull(cell) ? cell : null, result.f = null
  }else {
    result.v = "undefined" == typeof cell.v ? null : cell.v;
    var t = typeof cell.f;
    if("undefined" == t || "null" == t) {
      result.f = null
    }else {
      if("string" == t) {
        result.f = cell.f
      }else {
        throw Error("Formatted value ('f'), if specified, must be a string.");
      }
    }
    t = typeof cell.p;
    if("object" == t) {
      result.p = cell.p
    }else {
      if("null" != t && "undefined" != t) {
        throw Error("Properties ('p'), if specified, must be an Object.");
      }
    }
  }
  return{v:result.v, f:result.f, p:result.p}
};
google.visualization.datautils.validateColumnFilters = function(data, columnFilters) {
  if(!goog.isFunction(columnFilters)) {
    if(!goog.isArrayLike(columnFilters) || 0 == columnFilters.length) {
      throw Error("columnFilters must be a non-empty array");
    }
    for(var tmpIndexMap = {}, i = 0;i < columnFilters.length;i++) {
      if("object" != typeof columnFilters[i] || !("column" in columnFilters[i])) {
        if(!("value" in columnFilters[i] || "minValue" in columnFilters[i] || "maxValue" in columnFilters[i])) {
          throw Error("columnFilters[" + i + '] must have properties "column" and "value", "minValue"or "maxValue"');
        }
        if("value" in columnFilters[i] && ("minValue" in columnFilters[i] || "maxValue" in columnFilters[i])) {
          throw Error("columnFilters[" + i + '] must specify either "value" or range properties ("minValue" and/or "maxValue"');
        }
      }
      var colIndex = columnFilters[i].column;
      if(colIndex in tmpIndexMap) {
        throw Error("Column index " + colIndex + " is duplicate in columnFilters.");
      }
      google.visualization.datautils.validateColumnIndex(data, colIndex);
      google.visualization.datautils.validateTypeMatch(data, colIndex, columnFilters[i].value);
      tmpIndexMap[colIndex] = !0
    }
  }
};
google.visualization.datautils.validateColumnSet = function(data, calcFunctionNames, columns) {
  for(var i = 0;i < columns.length;i++) {
    var col = columns[i];
    if(goog.isNumber(col)) {
      google.visualization.datautils.validateColumnIndex(data, col)
    }else {
      if(goog.isObject(col)) {
        var sourceColumn = col.sourceColumn, calc = col.calc;
        if(goog.isString(calc)) {
          if(!calcFunctionNames || calcFunctionNames && !goog.array.contains(calcFunctionNames, calc)) {
            throw Error('Unknown function "' + calc + '"');
          }
          goog.isDefAndNotNull(sourceColumn) && google.visualization.datautils.validateColumnIndex(data, sourceColumn)
        }
      }else {
        throw Error("Invalid column input, expected either a number or an object.");
      }
    }
  }
};
google.visualization.datautils.validateSingleSortColumnsObject_ = function(data, sortColumnsObject, title) {
  if("object" == typeof sortColumnsObject && "column" in sortColumnsObject) {
    if("desc" in sortColumnsObject && "boolean" != typeof sortColumnsObject.desc) {
      throw Error('Property "desc" in ' + title + " must be boolean.");
    }
    if("compare" in sortColumnsObject && !goog.isFunction(sortColumnsObject.compare)) {
      throw Error('Property "compare" in ' + title + " must be a function.");
    }
  }else {
    throw Error(title + ' must be an object with a "column" property.');
  }
  google.visualization.datautils.validateColumnIndex(data, sortColumnsObject.column)
};
google.visualization.datautils.standardizeSortColumns = function(data, getValue, sortColumns) {
  var comparisonFunction = function(i1, i2) {
    for(var colIndex = 0;colIndex < sortColumns.length;colIndex++) {
      var sortColumn = sortColumns[colIndex], col = sortColumn.column, v1 = getValue(i1, col), v2 = getValue(i2, col), cmp;
      cmp = sortColumn.compare ? null === v1 ? null === v2 ? 0 : -1 : null === v2 ? 1 : sortColumn.compare(v1, v2) : google.visualization.datautils.compareValues(data.getColumnType(col), v1, v2);
      if(0 != cmp) {
        var order = sortColumn.desc ? -1 : 1;
        return cmp * order
      }
    }
    return 0
  };
  if(goog.isFunction(sortColumns)) {
    comparisonFunction = sortColumns
  }else {
    if("number" == typeof sortColumns) {
      google.visualization.datautils.validateColumnIndex(data, sortColumns), sortColumns = [{column:sortColumns}]
    }else {
      if("object" == typeof sortColumns) {
        if(goog.isArrayLike(sortColumns)) {
          if(1 > sortColumns.length) {
            throw Error("sortColumns is an empty array. Must have at least one element.");
          }
          for(var tmpIndexMap = {}, standardizedSortColumns = [], i = 0;i < sortColumns.length;i++) {
            var colIndex$$0, sortColumn = sortColumns[i];
            if("number" == typeof sortColumns[i]) {
              colIndex$$0 = sortColumns[i], google.visualization.datautils.validateColumnIndex(data, colIndex$$0), sortColumn = {column:sortColumns[i]}
            }else {
              if("object" == typeof sortColumns[i]) {
                colIndex$$0 = sortColumns[i].column, google.visualization.datautils.validateSingleSortColumnsObject_(data, sortColumns[i], "sortColumns[" + i + "]")
              }else {
                throw Error("sortColumns is an array, but not composed of only objects or numbers.");
              }
            }
            if(colIndex$$0 in tmpIndexMap) {
              throw Error("Column index " + colIndex$$0 + " is duplicated in sortColumns.");
            }
            tmpIndexMap[colIndex$$0] = !0;
            standardizedSortColumns.push(sortColumn)
          }
          sortColumns = standardizedSortColumns
        }else {
          google.visualization.datautils.validateSingleSortColumnsObject_(data, sortColumns, "sortColumns"), sortColumns = [sortColumns]
        }
      }
    }
  }
  return comparisonFunction
};
google.visualization.datautils.forEachCell = function(data, handler) {
  var rows = data.getNumberOfRows();
  google.visualization.datautils.forEachColumn(data, function(column) {
    for(var row = 0;row < rows;row++) {
      handler(row, column)
    }
  })
};
google.visualization.datautils.forEachColumn = function(data, handler) {
  for(var columns = data.getNumberOfColumns(), column = 0;column < columns;column++) {
    handler(column)
  }
};
google.visualization.datautils.validateRowIndex = function(data, rowIndex) {
  var numRows = data.getNumberOfRows();
  if(0 < numRows) {
    if(Math.floor(rowIndex) !== rowIndex || 0 > rowIndex || rowIndex >= numRows) {
      throw Error("Invalid row index " + rowIndex + ". Should be in the range [0-" + (numRows - 1) + "].");
    }
  }else {
    throw Error("Table has no rows.");
  }
};
google.visualization.datautils.validateColumnIndex = function(data, columnIndex) {
  var numCols = data.getNumberOfColumns();
  if(0 < numCols) {
    if(Math.floor(columnIndex) !== columnIndex || 0 > columnIndex || columnIndex >= numCols) {
      throw Error("Invalid column index " + columnIndex + ". Should be an integer in the range [0-" + (numCols - 1) + "].");
    }
  }else {
    throw Error("Table has no columns.");
  }
};
google.visualization.datautils.validateTypeMatch = function(data, columnIndex, value) {
  var columnType = data.getColumnType(columnIndex), res = google.visualization.datautils.checkValueType(value, columnType);
  if(!res) {
    throw Error("Type mismatch. Value " + value + " does not match type " + columnType + " in column index " + columnIndex);
  }
};
google.visualization.datautils.checkValueType = function(value, columnType) {
  if(null == value) {
    return!0
  }
  var valueType = typeof value;
  switch(columnType) {
    case google.visualization.DataTable.COLUMN_TYPES.NUMBER:
      if("number" == valueType) {
        return!0
      }
      break;
    case google.visualization.DataTable.COLUMN_TYPES.STRING:
      if("string" == valueType) {
        return!0
      }
      break;
    case google.visualization.DataTable.COLUMN_TYPES.BOOLEAN:
      if("boolean" == valueType) {
        return!0
      }
      break;
    case google.visualization.DataTable.COLUMN_TYPES.DATE:
    ;
    case google.visualization.DataTable.COLUMN_TYPES.DATETIME:
      if(goog.isDateLike(value)) {
        return!0
      }
      break;
    case google.visualization.DataTable.COLUMN_TYPES.TIMEOFDAY:
      if(goog.isArrayLike(value) && 2 < value.length && 5 > value.length) {
        for(var isGood = !0, i = 0;i < value.length;i++) {
          var part = value[i];
          if("number" != typeof part || part != Math.floor(part)) {
            isGood = !1;
            break
          }
        }
        if(0 > value[0] || 0 > value[1] || 59 < value[1] || 0 > value[2] || 59 < value[2]) {
          isGood = !1
        }
        4 == value.length && (0 > value[3] || 999 < value[3]) && (isGood = !1);
        if(isGood) {
          return!0
        }
      }
  }
  return!1
};
google.visualization.datautils.compareValues = function(type, val1, val2) {
  if(null == val1) {
    return null == val2 ? 0 : -1
  }
  if(null == val2) {
    return 1
  }
  switch(type) {
    case google.visualization.DataTable.COLUMN_TYPES.TIMEOFDAY:
      for(var i = 0;3 > i;i++) {
        if(val1[i] < val2[i]) {
          return-1
        }
        if(val2[i] < val1[i]) {
          return 1
        }
      }
      var milli1 = 4 > val1.length ? 0 : val1[3], milli2 = 4 > val2.length ? 0 : val2[3];
      return milli1 < milli2 ? -1 : milli2 < milli1 ? 1 : 0;
    default:
      return val1 < val2 ? -1 : val2 < val1 ? 1 : 0
  }
};
google.visualization.datautils.getColumnRange = function(data, columnIndex) {
  google.visualization.datautils.validateColumnIndex(data, columnIndex);
  var columnType = data.getColumnType(columnIndex), min = null, max = null, rowIndex, val, numRows = data.getNumberOfRows();
  for(rowIndex = 0;rowIndex < numRows;rowIndex++) {
    if(val = data.getValue(rowIndex, columnIndex), goog.isDefAndNotNull(val)) {
      max = min = val;
      break
    }
  }
  if(null == min) {
    return{min:null, max:null}
  }
  for(rowIndex++;rowIndex < numRows;rowIndex++) {
    val = data.getValue(rowIndex, columnIndex), goog.isDefAndNotNull(val) && (0 > google.visualization.datautils.compareValues(columnType, val, min) ? min = val : 0 > google.visualization.datautils.compareValues(columnType, max, val) && (max = val))
  }
  return{min:min, max:max}
};
google.visualization.datautils.getSortedRows = function(data, sortColumns) {
  for(var getValue = function(rowIndex, colIndex) {
    return data.getValue(rowIndex, colIndex)
  }, comparisonFunction = google.visualization.datautils.standardizeSortColumns(data, getValue, sortColumns), indicesArray = [], numRows = data.getNumberOfRows(), i = 0;i < numRows;i++) {
    indicesArray.push(i)
  }
  goog.array.stableSort(indicesArray, comparisonFunction);
  return indicesArray
};
google.visualization.datautils.getDistinctValues = function(data, column) {
  google.visualization.datautils.validateColumnIndex(data, column);
  var nr = data.getNumberOfRows();
  if(0 == nr) {
    return[]
  }
  for(var values = [], i = 0;i < nr;++i) {
    values.push(data.getValue(i, column))
  }
  var columnType = data.getColumnType(column);
  goog.array.stableSort(values, function(val1, val2) {
    return google.visualization.datautils.compareValues(columnType, val1, val2)
  });
  var prevVal = values[0], result = [];
  result.push(prevVal);
  for(i = 1;i < values.length;i++) {
    var curVal = values[i];
    0 != google.visualization.datautils.compareValues(columnType, curVal, prevVal) && result.push(curVal);
    prevVal = curVal
  }
  return result
};
google.visualization.datautils.isFilterMatch = function(data, columnFilters, rowIndex) {
  if(goog.isFunction(columnFilters)) {
    return columnFilters(data, rowIndex)
  }
  for(var i = 0;i < columnFilters.length;i++) {
    var columnFilter = columnFilters[i], columnIndex = columnFilter.column, cellValue = data.getValue(rowIndex, columnIndex), columnType = data.getColumnType(columnIndex);
    if("value" in columnFilter) {
      if(0 !== google.visualization.datautils.compareValues(columnType, cellValue, columnFilter.value)) {
        return!1
      }
    }else {
      if(goog.isDefAndNotNull(columnFilter.minValue) || goog.isDefAndNotNull(columnFilter.maxValue)) {
        if(null == cellValue || goog.isDefAndNotNull(columnFilter.minValue) && 0 > google.visualization.datautils.compareValues(columnType, cellValue, columnFilter.minValue) || goog.isDefAndNotNull(columnFilter.maxValue) && 0 < google.visualization.datautils.compareValues(columnType, cellValue, columnFilter.maxValue)) {
          return!1
        }
      }
    }
    if(goog.isFunction(columnFilter.test) && !columnFilter.test(cellValue, rowIndex, columnIndex, data)) {
      return!1
    }
  }
  return!0
};
google.visualization.datautils.getFilteredRows = function(data, columnFilters) {
  google.visualization.datautils.validateColumnFilters(data, columnFilters);
  for(var filteredIndices = [], numRows = data.getNumberOfRows(), i = 0;i < numRows;i++) {
    google.visualization.datautils.isFilterMatch(data, columnFilters, i) && filteredIndices.push(i)
  }
  return filteredIndices
};
google.visualization.datautils.getDefaultFormattedValue = function(value, type) {
  var formattedValue, formatter;
  if("timeofday" == type) {
    var timeOfDay = [], timeParts = value;
    timeOfDay.push(timeParts[0]);
    var min = (10 > timeParts[1] ? "0" : "") + timeParts[1];
    timeOfDay.push(min);
    var sec = (10 > timeParts[2] ? "0" : "") + timeParts[2];
    timeOfDay.push(sec);
    formattedValue = timeOfDay.join(":");
    3 < timeParts.length && 0 < timeParts[3] && (formattedValue += "." + (10 > timeParts[3] ? "00" : 100 > timeParts[3] ? "0" : "") + timeParts[3])
  }else {
    "date" == type ? (formatter = new google.visualization.DateFormat({formatType:"medium", valueType:"date"}), formattedValue = formatter.formatValue(value)) : "datetime" == type ? (formatter = new google.visualization.DateFormat({formatType:"medium", valueType:"datetime"}), formattedValue = formatter.formatValue(value)) : "number" == type ? (formatter = new google.visualization.NumberFormat({fractionDigits:NaN}), formattedValue = formatter.formatValue(value)) : formattedValue = goog.isDefAndNotNull(value) ? 
    String(value) : ""
  }
  return formattedValue
};
google.visualization.datautils.arrayToDataTableJSON = function(array, opt_noHeaders) {
  var tableSpec = {};
  if(!goog.isArray(array)) {
    throw Error("Not an array");
  }
  if(0 < array.length) {
    var hasHeaders = !opt_noHeaders, columns, columnCount;
    if(hasHeaders) {
      columns = goog.array.map(array[0], function(header) {
        if(goog.isString(header)) {
          return{label:header}
        }
        if(goog.isObject(header)) {
          return goog.object.clone(header)
        }
        throw Error("Unknown header type: " + header);
      })
    }else {
      columns = [];
      columnCount = 0;
      goog.isArray(array[0]) ? columnCount = array[0].length : goog.isObject(array[0]) && goog.object.containsKey(array[0], "c") && goog.isArray(array[0].c) && (columnCount = array[0].c.length);
      for(var i = 0;i < columnCount;i++) {
        columns.push({type:void 0})
      }
    }
    tableSpec.cols = columns;
    tableSpec.rows = [];
    columnCount = columns.length;
    for(var columnTypes = goog.array.repeat(void 0, columns.length), rows = hasHeaders ? goog.array.slice(array, 1) : array, rowIndex = 0;rowIndex < rows.length;rowIndex++) {
      var row = rows[rowIndex];
      if(goog.isArray(row)) {
        row = {c:row}
      }else {
        if(!goog.isObject(row) || !goog.object.containsKey(row, "c")) {
          throw Error("Invalid row type for row " + rowIndex);
        }
      }
      if(row.c.length !== columns.length) {
        throw Error("Row " + rowIndex + " has " + row.c.length + " columns, but must have " + columns.length);
      }
      row.c = goog.array.clone(row.c);
      tableSpec.rows.push(row);
      for(var columnIndex = 0;columnIndex < columnCount;columnIndex++) {
        var type = "string", value = row.c[columnIndex];
        goog.isObject(value) && (goog.object.containsKey(value, "v") || goog.object.containsKey(value, "f")) ? value = value.v : row.c[columnIndex] = {v:value};
        if(!(goog.isDefAndNotNull(columns[columnIndex].type) || goog.isDefAndNotNull(columnTypes[columnIndex]) && "date" !== columnTypes[columnIndex]) && goog.isDefAndNotNull(value)) {
          if(goog.isString(value)) {
            type = "string"
          }else {
            if(goog.isNumber(value)) {
              type = "number"
            }else {
              if(goog.isArray(value)) {
                type = "timeofday"
              }else {
                if(goog.isBoolean(value)) {
                  type = "boolean"
                }else {
                  if(goog.isDateLike(value)) {
                    var newValue = new Date(value), offset = newValue.getHours() + newValue.getMinutes() + newValue.getSeconds() + newValue.getMilliseconds(), type = 0 !== offset ? "datetime" : "date"
                  }else {
                    throw Error("Unknown type of value in " + rowIndex + "," + columnIndex);
                  }
                }
              }
            }
          }
          columnTypes[columnIndex] = type
        }
      }
    }
    goog.array.forEach(tableSpec.cols, function(column, index) {
      goog.isDefAndNotNull(column.type) || (column.type = columnTypes[index] || "string")
    })
  }
  return tableSpec
};
google.visualization.datautils.arrayToDataTable = function(array, opt_noHeaders) {
  return new google.visualization.DataTable(google.visualization.datautils.arrayToDataTableJSON(array, opt_noHeaders))
};
google.visualization.arrayToDataTable = google.visualization.datautils.arrayToDataTable;
google.visualization.datautils.dataTableToCsv = function(dataTable) {
  for(var result = "", row = 0;row < dataTable.getNumberOfRows();row++) {
    for(var column = 0;column < dataTable.getNumberOfColumns();column++) {
      0 < column && (result += ",");
      var value = dataTable.getFormattedValue(row, column), value = value.replace(RegExp('"', "g"), '""'), hasComma = -1 != value.indexOf(","), hasNewline = -1 != value.indexOf("\n"), hasQuote = -1 != value.indexOf('"');
      if(hasComma || hasNewline || hasQuote) {
        value = '"' + value + '"'
      }
      result += value
    }
    result += "\n"
  }
  return result
};
google.visualization.datautils.findNonNullValueInColumn = function(data, rowIndex, columnIndex, isAbove) {
  for(var value = null, numberOfRows = data.getNumberOfRows(), ind = rowIndex;(isAbove ? 0 <= ind : ind < numberOfRows) && goog.isNull(value);) {
    value = data.getValue(ind, columnIndex), ind += isAbove ? -1 : 1
  }
  return value
};
// Input 67
google.visualization.Guard = !0;
// Input 68
google.visualization.ResponseVersion = {VERSION_0_5:"0.5", VERSION_0_6:"0.6"};
// Input 69
google.visualization.DataTable = function(opt_data, opt_version) {
  this.version_ = opt_version === google.visualization.ResponseVersion.VERSION_0_5 ? google.visualization.ResponseVersion.VERSION_0_5 : google.visualization.ResponseVersion.VERSION_0_6;
  opt_data ? (goog.isString(opt_data) ? opt_data = gviz.json.deserialize(opt_data) : google.visualization.DataTable.normalizeDates_(opt_data), this.dataCols_ = [], this.dataRows_ = [], this.tableProperties_ = opt_data.p || null, goog.isDefAndNotNull(opt_data.cols) && goog.array.forEach(opt_data.cols, goog.bind(function(column) {
    this.addColumn(column)
  }, this)), goog.isDefAndNotNull(opt_data.rows) && (this.dataRows_ = opt_data.rows)) : (this.dataCols_ = [], this.dataRows_ = [], this.tableProperties_ = null);
  this.cache_ = []
};
google.visualization.DataTable.COLUMN_TYPES = {BOOLEAN:"boolean", NUMBER:"number", STRING:"string", DATE:"date", TIMEOFDAY:"timeofday", DATETIME:"datetime"};
google.visualization.DataTable.normalizeDates_ = function(data) {
  for(var columns = data.cols || [], rows = data.rows || [], numberOfColumns = columns.length, column = 0;column < numberOfColumns;column++) {
    var type = columns[column].type;
    if(type == google.visualization.DataTable.COLUMN_TYPES.DATE || type == google.visualization.DataTable.COLUMN_TYPES.DATETIME) {
      for(var numberOfRows = rows.length, row = 0;row < numberOfRows;row++) {
        var cell = rows[row].c[column];
        if(cell) {
          var value = cell.v;
          if(goog.isDateLike(value)) {
            return
          }
          goog.isString(value) && (cell = gviz.json.serialize(cell), cell = gviz.json.deserialize(cell), rows[row].c[column] = cell)
        }
      }
    }
  }
};
google.visualization.DataTable.prototype.dataCols_ = null;
google.visualization.DataTable.prototype.version_ = null;
google.visualization.DataTable.prototype.dataRows_ = null;
google.visualization.DataTable.prototype.tableProperties_ = null;
google.visualization.DataTable.prototype.cache_ = null;
google.visualization.DataTable.prototype.getNumberOfRows = function() {
  return this.dataRows_.length
};
google.visualization.DataTable.prototype.getNumberOfColumns = function() {
  return this.dataCols_.length
};
google.visualization.DataTable.prototype.getColumnId = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  return this.dataCols_[columnIndex].id || ""
};
google.visualization.DataTable.prototype.getColumnIndex = function(columnId) {
  for(var cols = this.dataCols_, i = 0;i < cols.length;i++) {
    if(cols[i].id == columnId) {
      return i
    }
  }
  return-1
};
google.visualization.DataTable.prototype.getColumnLabel = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  return this.dataCols_[columnIndex].label || ""
};
google.visualization.DataTable.prototype.getColumnPattern = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  return this.dataCols_[columnIndex].pattern
};
google.visualization.DataTable.prototype.getColumnRole = function(columnIndex) {
  var role = this.getColumnProperty(columnIndex, "role");
  return role = goog.isString(role) ? role : ""
};
google.visualization.DataTable.prototype.getColumnType = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var colType = this.dataCols_[columnIndex].type;
  return colType
};
google.visualization.DataTable.prototype.getValue = function(rowIndex, columnIndex) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var cell = this.getCell_(rowIndex, columnIndex), result = null;
  cell && (result = cell.v, result = goog.isDef(result) ? result : null);
  return result
};
google.visualization.DataTable.prototype.getCell_ = function(rowIndex, columnIndex) {
  return this.dataRows_[rowIndex].c[columnIndex]
};
google.visualization.DataTable.prototype.getCellCache_ = function(rowIndex, columnIndex) {
  this.cache_[rowIndex] = this.cache_[rowIndex] || [];
  var rowCache = this.cache_[rowIndex], cellCache = rowCache[columnIndex] || {};
  return rowCache[columnIndex] = cellCache
};
google.visualization.DataTable.prototype.invalidateCellCache_ = function(rowIndex, columnIndex) {
  var rowCache = this.cache_[rowIndex];
  rowCache && rowCache[columnIndex] && (rowCache[columnIndex] = {})
};
google.visualization.DataTable.prototype.getFormattedValue = function(rowIndex, columnIndex) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var cell = this.getCell_(rowIndex, columnIndex), formattedValue = "";
  if(cell) {
    if("undefined" != typeof cell.f && null != cell.f) {
      formattedValue = cell.f
    }else {
      var cellCache = this.getCellCache_(rowIndex, columnIndex);
      if(goog.isDef(cellCache.formattedValue)) {
        formattedValue = cellCache.formattedValue
      }else {
        var value = this.getValue(rowIndex, columnIndex);
        goog.isNull(value) || (formattedValue = google.visualization.datautils.getDefaultFormattedValue(value, this.getColumnType(columnIndex)));
        cellCache.formattedValue = formattedValue
      }
    }
  }
  return formattedValue
};
google.visualization.DataTable.prototype.getProperty = function(rowIndex, columnIndex, property) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var cell = this.getCell_(rowIndex, columnIndex), properties = cell && cell.p;
  return properties && property in properties ? properties[property] : null
};
google.visualization.DataTable.prototype.getProperties = function(rowIndex, columnIndex) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var cell = this.getCell_(rowIndex, columnIndex);
  cell || (cell = {v:null, f:null}, this.dataRows_[rowIndex].c[columnIndex] = cell);
  cell.p || (cell.p = {});
  return cell.p
};
google.visualization.DataTable.prototype.getTableProperties = function() {
  return this.tableProperties_
};
google.visualization.DataTable.prototype.getTableProperty = function(property) {
  var properties = this.tableProperties_;
  return properties && property in properties ? properties[property] : null
};
google.visualization.DataTable.prototype.setTableProperties = function(properties) {
  this.tableProperties_ = properties
};
google.visualization.DataTable.prototype.setTableProperty = function(property, value) {
  this.tableProperties_ || (this.tableProperties_ = {});
  this.tableProperties_[property] = value
};
google.visualization.DataTable.prototype.setValue = function(rowIndex, columnIndex, value) {
  this.setCell(rowIndex, columnIndex, value, void 0, void 0)
};
google.visualization.DataTable.prototype.setFormattedValue = function(rowIndex, columnIndex, formattedValue) {
  this.setCell(rowIndex, columnIndex, void 0, formattedValue, void 0)
};
google.visualization.DataTable.prototype.setProperties = function(rowIndex, columnIndex, properties) {
  this.setCell(rowIndex, columnIndex, void 0, void 0, properties)
};
google.visualization.DataTable.prototype.setProperty = function(rowIndex, columnIndex, property, value) {
  var properties = this.getProperties(rowIndex, columnIndex);
  properties[property] = value
};
google.visualization.DataTable.prototype.setCell = function(rowIndex, columnIndex, opt_value, opt_formattedValue, opt_properties) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  this.invalidateCellCache_(rowIndex, columnIndex);
  var cell = this.getCell_(rowIndex, columnIndex);
  cell || (cell = {}, this.dataRows_[rowIndex].c[columnIndex] = cell);
  "undefined" != typeof opt_value && (google.visualization.datautils.validateTypeMatch(this, columnIndex, opt_value), cell.v = opt_value);
  "undefined" != typeof opt_formattedValue && (cell.f = opt_formattedValue);
  goog.isDef(opt_properties) && (cell.p = goog.isObject(opt_properties) ? opt_properties : {})
};
google.visualization.DataTable.prototype.setRowProperties = function(rowIndex, properties) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  var row = this.dataRows_[rowIndex];
  row.p = properties
};
google.visualization.DataTable.prototype.setRowProperty = function(rowIndex, property, value) {
  var properties = this.getRowProperties(rowIndex);
  properties[property] = value
};
google.visualization.DataTable.prototype.getRowProperty = function(rowIndex, property) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  var row = this.dataRows_[rowIndex], properties = row && row.p;
  return properties && property in properties ? properties[property] : null
};
google.visualization.DataTable.prototype.getRowProperties = function(rowIndex) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  var row = this.dataRows_[rowIndex];
  row.p || (row.p = {});
  return row.p
};
google.visualization.DataTable.prototype.setColumnLabel = function(columnIndex, newLabel) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var column = this.dataCols_[columnIndex];
  column.label = newLabel
};
google.visualization.DataTable.prototype.setColumnProperties = function(columnIndex, properties) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var column = this.dataCols_[columnIndex];
  column.p = properties
};
google.visualization.DataTable.prototype.setColumnProperty = function(columnIndex, property, value) {
  var properties = this.getColumnProperties(columnIndex);
  properties[property] = value
};
google.visualization.DataTable.prototype.getColumnProperty = function(columnIndex, property) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var column = this.dataCols_[columnIndex], properties = column && column.p;
  return properties && property in properties ? properties[property] : null
};
google.visualization.DataTable.prototype.getColumnProperties = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var column = this.dataCols_[columnIndex];
  column.p || (column.p = {});
  return column.p
};
google.visualization.DataTable.prototype.insertColumn = function(atColIndex, specification, opt_label, opt_id) {
  atColIndex !== this.dataCols_.length && (this.cache_ = [], google.visualization.datautils.validateColumnIndex(this, atColIndex));
  if(!goog.isObject(specification)) {
    var label = opt_label || "", id = opt_id || "";
    specification = {id:id, label:label, pattern:"", type:specification}
  }
  var type = specification.type;
  if(!goog.object.contains(google.visualization.DataTable.COLUMN_TYPES, type)) {
    throw Error("Invalid type: " + type + ".");
  }
  var role = specification.role;
  if(specification.role) {
    var properties = specification.p || {};
    goog.isDefAndNotNull(properties.role) || (properties.role = role, specification.p = properties)
  }
  this.dataCols_.splice(atColIndex, 0, specification);
  for(var i = 0;i < this.dataRows_.length;i++) {
    this.dataRows_[i].c.splice(atColIndex, 0, {v:null, f:null})
  }
};
google.visualization.DataTable.prototype.addColumn = function(specification, opt_label, opt_id) {
  this.insertColumn(this.dataCols_.length, specification, opt_label, opt_id);
  return this.dataCols_.length - 1
};
google.visualization.DataTable.prototype.parseCell_ = function(columnIndex, cell) {
  var result = google.visualization.datautils.parseCell(cell);
  google.visualization.datautils.validateTypeMatch(this, columnIndex, result.v);
  return result
};
google.visualization.DataTable.MAX_NUMBER_OF_ROWS_TO_INSERT_AT_ONCE_ = 1E4;
google.visualization.DataTable.prototype.insertRows = function(atRowIndex, numOrArray) {
  atRowIndex !== this.dataRows_.length && (this.cache_ = [], google.visualization.datautils.validateRowIndex(this, atRowIndex));
  var rowsToAdd;
  if(goog.isArray(numOrArray)) {
    rowsToAdd = numOrArray
  }else {
    if("number" == typeof numOrArray) {
      if(numOrArray != Math.floor(numOrArray) || 0 > numOrArray) {
        throw Error("Invalid value for numOrArray: " + numOrArray + ". If numOrArray is a number it should be a nonnegative integer.");
      }
      rowsToAdd = goog.array.repeat(null, numOrArray)
    }else {
      throw Error("Invalid value for numOrArray. Should be a number or an array of arrays of cells.");
    }
  }
  for(var newRows = [], i = 0;i < rowsToAdd.length;i++) {
    var row = rowsToAdd[i], newRowContent = [];
    if(null === row) {
      for(var col = 0;col < this.dataCols_.length;col++) {
        newRowContent.push({v:null, f:null})
      }
    }else {
      if(goog.isArray(row)) {
        if(row.length != this.dataCols_.length) {
          throw Error("Row given with size different than " + this.dataCols_.length + " (the number of columns in the table).");
        }
        for(var j = 0;j < row.length;j++) {
          newRowContent.push(this.parseCell_(j, row[j]))
        }
      }else {
        throw Error("Every row given must be either null or an array.");
      }
    }
    var newRow = {};
    newRow.c = newRowContent;
    newRows.push(newRow);
    newRows.length == google.visualization.DataTable.MAX_NUMBER_OF_ROWS_TO_INSERT_AT_ONCE_ && (goog.array.insertArrayAt(this.dataRows_, newRows, atRowIndex), atRowIndex += newRows.length, newRows = [])
  }
  goog.array.insertArrayAt(this.dataRows_, newRows, atRowIndex);
  return atRowIndex + newRows.length - 1
};
google.visualization.DataTable.prototype.addRows = function(numOrArray) {
  if("number" == typeof numOrArray || goog.isArray(numOrArray)) {
    return this.insertRows(this.dataRows_.length, numOrArray)
  }
  throw Error("Argument given to addRows must be either a number or an array");
};
google.visualization.DataTable.prototype.addRow = function(opt_cellArray) {
  var cellArray = opt_cellArray;
  if(goog.isArray(cellArray)) {
    return this.addRows([cellArray])
  }
  if(goog.isDefAndNotNull(cellArray)) {
    throw Error("If argument is given to addRow, it must be an array, or null");
  }
  return this.addRows(1)
};
google.visualization.DataTable.prototype.getColumnRange = function(columnIndex) {
  return google.visualization.datautils.getColumnRange(this, columnIndex)
};
google.visualization.DataTable.prototype.getSortedRows = function(sortColumns) {
  return google.visualization.datautils.getSortedRows(this, sortColumns)
};
google.visualization.DataTable.prototype.sort = function(sortColumns) {
  this.cache_ = [];
  var getValue = function(row, colIndex) {
    var cell = row.c[colIndex], value = cell ? cell.v : null;
    return value
  }, comparisonFunction = google.visualization.datautils.standardizeSortColumns(this, getValue, sortColumns);
  goog.array.stableSort(this.dataRows_, comparisonFunction)
};
google.visualization.DataTable.prototype.getUnderlyingTableColumnIndex = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  return columnIndex
};
google.visualization.DataTable.prototype.getUnderlyingTableRowIndex = function(rowIndex) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  return rowIndex
};
google.visualization.DataTable.prototype.clone = function() {
  return new google.visualization.DataTable(this.toPOJO())
};
google.visualization.DataTable.prototype.toPOJO = function() {
  var obj = {cols:this.dataCols_, rows:this.dataRows_, p:this.tableProperties_}, data = gviz.json.clone(obj);
  return data
};
google.visualization.DataTable.prototype.toJSON = function() {
  return goog.json.serialize(this.toPOJO())
};
google.visualization.DataTable.prototype.getDistinctValues = function(column) {
  return google.visualization.datautils.getDistinctValues(this, column)
};
google.visualization.DataTable.prototype.getFilteredRows = function(columnFilters) {
  return google.visualization.datautils.getFilteredRows(this, columnFilters)
};
google.visualization.DataTable.prototype.removeRows = function(fromRowIndex, numRows) {
  0 >= numRows || (this.cache_ = [], google.visualization.datautils.validateRowIndex(this, fromRowIndex), fromRowIndex + numRows > this.dataRows_.length && (numRows = this.dataRows_.length - fromRowIndex), this.dataRows_.splice(fromRowIndex, numRows))
};
google.visualization.DataTable.prototype.removeRow = function(rowIndex) {
  this.removeRows(rowIndex, 1)
};
google.visualization.DataTable.prototype.removeColumns = function(fromColIndex, numCols) {
  if(!(0 >= numCols)) {
    this.cache_ = [];
    google.visualization.datautils.validateColumnIndex(this, fromColIndex);
    fromColIndex + numCols > this.dataCols_.length && (numCols = this.dataCols_.length - fromColIndex);
    this.dataCols_.splice(fromColIndex, numCols);
    for(var i = 0;i < this.dataRows_.length;i++) {
      this.dataRows_[i].c.splice(fromColIndex, numCols)
    }
  }
};
google.visualization.DataTable.prototype.removeColumn = function(colIndex) {
  this.removeColumns(colIndex, 1)
};
// Input 70
google.visualization.BarFormat = function(opt_options) {
  this.options_ = opt_options || {};
  google.visualization.BarFormat.imagePathPrefix_ || (google.visualization.BarFormat.imagePathPrefix_ = gviz.util.VisCommon.getModulePath() + "/util/bar_")
};
google.visualization.BarFormat.DEFAULT_BAR_WIDTH_ = 100;
google.visualization.BarFormat.CUSTOM_PROPERTY_KEY_ = "_bar_format_old_value";
google.visualization.BarFormat.imagePathPrefix_ = null;
google.visualization.BarFormat.ImageType_ = {BORDER:"s", GREEN:"g", BLUE:"b", RED:"r", WHITE:"w", ZERO:"z"};
google.visualization.BarFormat.colorTypeByName_ = {red:google.visualization.BarFormat.ImageType_.RED, blue:google.visualization.BarFormat.ImageType_.BLUE, green:google.visualization.BarFormat.ImageType_.GREEN};
google.visualization.BarFormat.addBar_ = function(type, width, html) {
  0 < width && html.push('<img style="padding: 0" src="', google.visualization.BarFormat.imagePathPrefix_, type, '.png" height="12" width="', width, '" />')
};
google.visualization.BarFormat.prototype.format = function(dataTable, columnIndex) {
  if("number" == dataTable.getColumnType(columnIndex)) {
    var options = this.options_, min = options.min, max = options.max, range = null;
    if(null == min || null == max) {
      range = dataTable.getColumnRange(columnIndex), null == max && (max = range.max), null == min && (min = Math.min(0, range.min))
    }
    min >= max && (range = range || dataTable.getColumnRange(columnIndex), max = range.max, min = range.min);
    min == max && (0 == min ? max = 1 : 0 < min ? min = 0 : max = 0);
    var range = max - min, base = options.base || 0, base = Math.max(min, Math.min(max, base)), width = options.width || google.visualization.BarFormat.DEFAULT_BAR_WIDTH_, showValue = options.showValue;
    null == showValue && (showValue = !0);
    for(var negativeWidth = Math.round((base - min) / range * width), positiveWidth = width - negativeWidth, row = 0;row < dataTable.getNumberOfRows();row++) {
      var value = dataTable.getValue(row, columnIndex), html = [], clippedValue = Math.max(min, Math.min(max, value)), offset = Math.ceil((clippedValue - min) / range * width);
      html.push('<span style="padding: 0; float: left; white-space: nowrap;">');
      google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.BORDER, 1, html);
      var imageTypePositive = google.visualization.BarFormat.getTypeByColor_(options.colorPositive, google.visualization.BarFormat.ImageType_.BLUE), imageTypeNegative = google.visualization.BarFormat.getTypeByColor_(options.colorNegative, google.visualization.BarFormat.ImageType_.RED), zeroLineWidth = options.drawZeroLine ? 1 : 0;
      0 < negativeWidth ? clippedValue < base ? (google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.WHITE, offset, html), google.visualization.BarFormat.addBar_(imageTypeNegative, negativeWidth - offset, html), 0 < zeroLineWidth && google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.ZERO, zeroLineWidth, html), google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.WHITE, positiveWidth, html)) : (google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.WHITE, 
      negativeWidth, html), 0 < zeroLineWidth && google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.ZERO, zeroLineWidth, html), google.visualization.BarFormat.addBar_(imageTypePositive, offset - negativeWidth, html), google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.WHITE, width - offset, html)) : (google.visualization.BarFormat.addBar_(imageTypePositive, offset, html), google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.WHITE, 
      width - offset, html));
      google.visualization.BarFormat.addBar_(google.visualization.BarFormat.ImageType_.BORDER, 1, html);
      var originalFormattedValue = dataTable.getProperty(row, columnIndex, google.visualization.BarFormat.CUSTOM_PROPERTY_KEY_);
      null == originalFormattedValue && (originalFormattedValue = dataTable.getFormattedValue(row, columnIndex), dataTable.setProperty(row, columnIndex, google.visualization.BarFormat.CUSTOM_PROPERTY_KEY_, originalFormattedValue));
      showValue && (html.push("\u00a0"), html.push(originalFormattedValue));
      html.push("</span>\u00a0");
      dataTable.setFormattedValue(row, columnIndex, html.join(""))
    }
  }
};
google.visualization.BarFormat.getTypeByColor_ = function(color, defaultType) {
  color = (color || "").toLowerCase();
  return google.visualization.BarFormat.colorTypeByName_[color] || defaultType
};
// Input 71
gviz.format.ColorRange = function(from, to, color, bgcolor) {
  goog.isDateLike(from) && (from = from.getTime());
  goog.isDateLike(to) && (to = to.getTime());
  goog.isArray(from) && (from = google.visualization.ColorFormat.getTimeOfDayMillis(from));
  goog.isArray(to) && (to = google.visualization.ColorFormat.getTimeOfDayMillis(to));
  this.from_ = from;
  this.to_ = to;
  this.color_ = color;
  this.bgcolor_ = bgcolor
};
gviz.format.ColorRange.prototype.contains = function(value) {
  var from = this.from_, to = this.to_;
  if(null == value) {
    return null == from && null == to
  }
  goog.isDateLike(value) ? value = value.getTime() : goog.isArray(value) && (value = google.visualization.ColorFormat.getTimeOfDayMillis(value));
  return(null == from || value >= from) && (null == to || value < to)
};
gviz.format.ColorRange.prototype.getColor = function() {
  return this.color_
};
gviz.format.ColorRange.prototype.getBackgroundColor = function() {
  return this.bgcolor_
};
gviz.format.ColorRange.prototype.getFrom = function() {
  return this.from_
};
gviz.format.GradientColorRange = function(from, to, color, fromBgColor, toBgColor) {
  gviz.format.ColorRange.call(this, from, to, color, "");
  this.rangeSize_ = to - from;
  0 >= this.rangeSize_ && (this.rangeSize_ = 1);
  this.fromColor_ = goog.color.hexToRgb(goog.color.parse(fromBgColor).hex);
  this.toColor_ = goog.color.hexToRgb(goog.color.parse(toBgColor).hex)
};
goog.inherits(gviz.format.GradientColorRange, gviz.format.ColorRange);
gviz.format.GradientColorRange.prototype.getBackgroundColor = function(value) {
  if(!goog.isNumber(value)) {
    return""
  }
  var factor = 1 - (value - this.getFrom()) / this.rangeSize_, rgb = goog.color.blend(this.fromColor_, this.toColor_, factor);
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
google.visualization.ColorFormat = function() {
  this.ranges_ = []
};
google.visualization.ColorFormat.prototype.addRange = function(from, to, color, bgcolor) {
  this.ranges_.push(new gviz.format.ColorRange(from, to, color, bgcolor))
};
google.visualization.ColorFormat.prototype.addGradientRange = function(from, to, color, fromBgColor, toBgColor) {
  this.ranges_.push(new gviz.format.GradientColorRange(from, to, color, fromBgColor, toBgColor))
};
google.visualization.ColorFormat.prototype.format = function(dataTable, columnIndex) {
  var type = dataTable.getColumnType(columnIndex);
  if("number" == type || "string" == type || "date" == type || "datetime" == type || "timeofday" == type) {
    for(var row = 0;row < dataTable.getNumberOfRows();row++) {
      for(var value = dataTable.getValue(row, columnIndex), styles = "", i = 0;i < this.ranges_.length;i++) {
        var range = this.ranges_[i];
        if(range.contains(value)) {
          var color = range.getColor(), bgcolor = range.getBackgroundColor(value);
          color && (styles += "color:" + color + ";");
          bgcolor && (styles += "background-color:" + bgcolor + ";");
          break
        }
      }
      dataTable.setProperty(row, columnIndex, "style", styles)
    }
  }
};
google.visualization.ColorFormat.getTimeOfDayMillis = function(value) {
  return 36E5 * value[0] + 6E4 * value[1] + 1E3 * value[2] + (4 == value.length ? value[3] : 0)
};
// Input 72
google.visualization.TablePatternFormat = function(pattern) {
  this.pattern_ = pattern || ""
};
google.visualization.TablePatternFormat.replacer_ = function(rowIndex, dataTable, srcColumnIndices, matchStr, idxStr, offset, pattern) {
  return 0 < offset && "\\" == pattern[offset - 1] ? matchStr : dataTable.getFormattedValue(rowIndex, srcColumnIndices[parseInt(idxStr, 10)])
};
google.visualization.TablePatternFormat.prototype.format = function(dataTable, srcColumnIndices, opt_dstColumnIndex, opt_propertyName) {
  var dstColumnIdx = srcColumnIndices[0];
  null != opt_dstColumnIndex && "number" == goog.typeOf(opt_dstColumnIndex) && (dstColumnIdx = opt_dstColumnIndex);
  for(var propertyName = opt_propertyName || null, r = 0;r < dataTable.getNumberOfRows();r++) {
    var formattedValue = this.pattern_.replace(/{(\d+)}/g, goog.partial(google.visualization.TablePatternFormat.replacer_, r, dataTable, srcColumnIndices)), formattedValue = formattedValue.replace(/\\(.)/g, "$1");
    propertyName ? dataTable.setProperty(r, dstColumnIdx, propertyName, formattedValue) : dataTable.setFormattedValue(r, dstColumnIdx, formattedValue)
  }
};
// Input 73
goog.exportSymbol("google.visualization.NumberFormat", google.visualization.NumberFormat);
goog.exportProperty(google.visualization.NumberFormat.prototype, "format", google.visualization.NumberFormat.prototype.format);
goog.exportProperty(google.visualization.NumberFormat.prototype, "formatValue", google.visualization.NumberFormat.prototype.formatValue);
goog.exportSymbol("google.visualization.NumberFormat.useNativeCharactersIfAvailable", google.visualization.NumberFormat.useNativeCharactersIfAvailable);
goog.exportSymbol("google.visualization.__overridedatefv__", google.visualization.DateFormat.overrideFormatValue);
goog.exportSymbol("google.visualization.__overridenumfv__", google.visualization.NumberFormat.overrideFormatValue);
goog.exportSymbol("google.visualization.NumberFormat.DECIMAL_SEP", google.visualization.NumberFormat.DECIMAL_SEP);
goog.exportSymbol("google.visualization.NumberFormat.GROUP_SEP", google.visualization.NumberFormat.GROUP_SEP);
goog.exportSymbol("google.visualization.NumberFormat.DECIMAL_PATTERN", google.visualization.NumberFormat.DECIMAL_PATTERN);
goog.exportSymbol("google.visualization.ColorFormat", google.visualization.ColorFormat);
goog.exportProperty(google.visualization.ColorFormat.prototype, "format", google.visualization.ColorFormat.prototype.format);
goog.exportProperty(google.visualization.ColorFormat.prototype, "addRange", google.visualization.ColorFormat.prototype.addRange);
goog.exportProperty(google.visualization.ColorFormat.prototype, "addGradientRange", google.visualization.ColorFormat.prototype.addGradientRange);
goog.exportSymbol("google.visualization.BarFormat", google.visualization.BarFormat);
goog.exportProperty(google.visualization.BarFormat.prototype, "format", google.visualization.BarFormat.prototype.format);
goog.exportSymbol("google.visualization.ArrowFormat", google.visualization.TableArrowFormat);
goog.exportProperty(google.visualization.TableArrowFormat.prototype, "format", google.visualization.TableArrowFormat.prototype.format);
goog.exportSymbol("google.visualization.PatternFormat", google.visualization.TablePatternFormat);
goog.exportProperty(google.visualization.TablePatternFormat.prototype, "format", google.visualization.TablePatternFormat.prototype.format);
goog.exportSymbol("google.visualization.DateFormat", google.visualization.DateFormat);
goog.exportProperty(google.visualization.DateFormat.dontLocalizeDigits, "dontLocalizeDigits", google.visualization.DateFormat.dontLocalizeDigits);
goog.exportProperty(google.visualization.DateFormat.prototype, "format", google.visualization.DateFormat.prototype.format);
goog.exportProperty(google.visualization.DateFormat.prototype, "formatValue", google.visualization.DateFormat.prototype.formatValue);
goog.exportSymbol("google.visualization.NumberFormat", google.visualization.NumberFormat);
goog.exportProperty(google.visualization.NumberFormat.prototype, "format", google.visualization.NumberFormat.prototype.format);
goog.exportSymbol("google.visualization.TableColorFormat", google.visualization.ColorFormat);
goog.exportSymbol("google.visualization.TableBarFormat", google.visualization.BarFormat);
goog.exportProperty(google.visualization.BarFormat.prototype, "format", google.visualization.BarFormat.prototype.format);
goog.exportSymbol("google.visualization.TableArrowFormat", google.visualization.TableArrowFormat);
goog.exportProperty(google.visualization.TableArrowFormat.prototype, "format", google.visualization.TableArrowFormat.prototype.format);
goog.exportSymbol("google.visualization.TablePatternFormat", google.visualization.TablePatternFormat);
goog.exportProperty(google.visualization.TablePatternFormat.prototype, "format", google.visualization.TablePatternFormat.prototype.format);
goog.exportSymbol("google.visualization.TableDateFormat", google.visualization.DateFormat);


// Input 0
google.visualization.QueryResponse = function(responseObj) {
  this.responseVersion_ = google.visualization.QueryResponse.getVersionFromResponse(responseObj);
  this.executionStatus_ = responseObj.status;
  this.errors_ = [];
  this.warnings_ = [];
  this.warnings_ = responseObj.warnings || [];
  this.errors_ = responseObj.errors || [];
  google.visualization.QueryResponse.sanitizeMessages_(this.warnings_);
  google.visualization.QueryResponse.sanitizeMessages_(this.errors_);
  this.executionStatus_ != google.visualization.QueryResponse.ExecutionStatus.ERROR && (this.signature_ = responseObj.sig, this.dataTable_ = new google.visualization.DataTable(responseObj.table, this.responseVersion_))
};
google.visualization.QueryResponse.sanitizeMessages_ = function(messages) {
  for(var i = 0;i < messages.length;i++) {
    var detailed_message = messages[i].detailed_message;
    detailed_message && (messages[i].detailed_message = google.visualization.QueryResponse.escapeDetailedMessage_(detailed_message))
  }
};
google.visualization.QueryResponse.generateSimpleWarningsErrorsArray_ = function(responseObj) {
  return[{reason:responseObj.reason, message:responseObj.message, detailed_message:google.visualization.QueryResponse.escapeDetailedMessage_(responseObj.detailed_message)}]
};
google.visualization.QueryResponse.DETAILED_MESSAGE_A_TAG_REGEXP_ = /^[^<]*(<a(( )+target=('_blank')?("_blank")?)?( )+(href=('[^']*')?("[^"]*")?)>[^<]*<\/a>[^<]*)*$/;
google.visualization.QueryResponse.BAD_JAVASCRIPT_REGEXP_ = /javascript((s)?( )?)*:/;
google.visualization.QueryResponse.escapeDetailedMessage_ = function(message) {
  return message ? message.match(google.visualization.QueryResponse.DETAILED_MESSAGE_A_TAG_REGEXP_) && !message.match(google.visualization.QueryResponse.BAD_JAVASCRIPT_REGEXP_) ? message : message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\"/g, "&quot;") : ""
};
google.visualization.QueryResponse.getVersionFromResponse = function(responseObj) {
  var responseVersion = responseObj.version || google.visualization.ResponseVersion.VERSION_0_6;
  return goog.object.contains(google.visualization.ResponseVersion, responseVersion) ? responseVersion : google.visualization.ResponseVersion.VERSION_0_6
};
google.visualization.QueryResponse.ExecutionStatus = {OK:"ok", WARNING:"warning", ERROR:"error"};
google.visualization.QueryResponse.prototype.signature_ = null;
google.visualization.QueryResponse.prototype.dataTable_ = null;
google.visualization.QueryResponse.prototype.isError = function() {
  return this.executionStatus_ == google.visualization.QueryResponse.ExecutionStatus.ERROR
};
google.visualization.QueryResponse.prototype.hasWarning = function() {
  return this.executionStatus_ == google.visualization.QueryResponse.ExecutionStatus.WARNING
};
google.visualization.QueryResponse.prototype.containsReason = function(reason) {
  for(var i = 0;i < this.errors_.length;i++) {
    if(this.errors_[i].reason == reason) {
      return!0
    }
  }
  for(i = 0;i < this.warnings_.length;i++) {
    if(this.warnings_[i].reason == reason) {
      return!0
    }
  }
  return!1
};
google.visualization.QueryResponse.prototype.getDataSignature = function() {
  return this.signature_
};
google.visualization.QueryResponse.prototype.getDataTable = function() {
  return this.dataTable_
};
google.visualization.QueryResponse.prototype.getErrorsOrWarningsProperties_ = function(property) {
  return this.isError() && this.errors_ && this.errors_[0] && this.errors_[0][property] ? this.errors_[0][property] : this.hasWarning() && this.warnings_ && this.warnings_[0] && this.warnings_[0][property] ? this.warnings_[0][property] : null
};
google.visualization.QueryResponse.prototype.getReasons = function() {
  var reason = this.getErrorsOrWarningsProperties_("reason");
  return goog.isDefAndNotNull(reason) && "" != reason ? [reason] : []
};
google.visualization.QueryResponse.prototype.getMessage = function() {
  return this.getErrorsOrWarningsProperties_("message") || ""
};
google.visualization.QueryResponse.prototype.getDetailedMessage = function() {
  return this.getErrorsOrWarningsProperties_("detailed_message") || ""
};
// Input 1
google.visualization.errors = {};
google.visualization.errors.EXTERNAL_CLASS_NAME_ = "google-visualization-errors";
google.visualization.errors.ERROR_ID_PREFIX_ = google.visualization.errors.EXTERNAL_CLASS_NAME_ + "-";
google.visualization.errors.INTERNAL_ERROR_MSG_PREFIX_ = google.visualization.errors.EXTERNAL_CLASS_NAME_ + ":";
google.visualization.errors.ALL_ERRORS_DIV_ID_PREFIX_ = google.visualization.errors.EXTERNAL_CLASS_NAME_ + "-all-";
google.visualization.errors.CONTAINER_NULL_MSG_ = google.visualization.errors.INTERNAL_ERROR_MSG_PREFIX_ + " container is null";
google.visualization.errors.ERROR_STYLE_ = "background-color: #c00000; color: white; padding: 2px;";
google.visualization.errors.WARNING_STYLE_ = "background-color: #fff4c2; color: black; white-space: nowrap; padding: 2px; border: 1px solid black;";
google.visualization.errors.WRAPPER_STYLE_ = "font: normal 0.8em arial,sans-serif; margin-bottom: 5px;";
google.visualization.errors.REMOVE_ELEMENT_STYLE_ = "font-size: 1.1em; color: #0000cc; font-weight: bold; cursor: pointer; padding-left: 10px; color: black;text-align: right; vertical-align: top;";
google.visualization.errors.errorsCounterId_ = 0;
google.visualization.errors.addError = function(container, message, opt_detailedMessage, opt_options) {
  if(!google.visualization.errors.validateContainer_(container)) {
    throw Error(google.visualization.errors.CONTAINER_NULL_MSG_ + ". message: " + message);
  }
  var params = google.visualization.errors.initUserParams_(message, opt_detailedMessage, opt_options), errorMessage = params.errorMessage, detailedMessage = params.detailedMessage, options = params.options, showInTooltip = goog.isDefAndNotNull(options.showInTooltip) ? !!options.showInTooltip : !0, type = "warning" == options.type ? "warning" : "error", style = "error" == type ? google.visualization.errors.ERROR_STYLE_ : google.visualization.errors.WARNING_STYLE_, style = style + (options.style ? 
  options.style : ""), removable = !!options.removable, dom = goog.dom.getDomHelper(), errorDiv = dom.createDom("span", {style:style}, dom.createTextNode(errorMessage)), elementId = google.visualization.errors.ERROR_ID_PREFIX_ + google.visualization.errors.errorsCounterId_++, errorWrapperDiv = dom.createDom("div", {id:elementId, style:google.visualization.errors.WRAPPER_STYLE_}, errorDiv);
  if(detailedMessage) {
    if(showInTooltip) {
      errorDiv.title = detailedMessage
    }else {
      var details = document.createElement("span");
      details.innerHTML = detailedMessage;
      dom.appendChild(errorWrapperDiv, dom.createDom("div", {style:"padding: 2px"}, details))
    }
  }
  if(removable) {
    var removeSpan = dom.createDom("span", {style:google.visualization.errors.REMOVE_ELEMENT_STYLE_}, dom.createTextNode("\u00d7"));
    removeSpan.onclick = goog.partial(google.visualization.errors.handleRemove_, errorWrapperDiv);
    dom.appendChild(errorDiv, removeSpan)
  }
  google.visualization.errors.addElement_(container, errorWrapperDiv);
  options.removeDuplicates && google.visualization.errors.removeDuplicates_(container, errorWrapperDiv);
  return elementId
};
google.visualization.errors.removeAll = function(container) {
  if(!google.visualization.errors.validateContainer_(container)) {
    throw Error(google.visualization.errors.CONTAINER_NULL_MSG_);
  }
  var errorsDiv = google.visualization.errors.getErrorsDivFromContainer_(container, !1);
  errorsDiv && (errorsDiv.style.display = "none", goog.dom.removeChildren(errorsDiv))
};
google.visualization.errors.addErrorFromQueryResponse = function(container, response) {
  if(!google.visualization.errors.validateContainer_(container)) {
    throw Error(google.visualization.errors.CONTAINER_NULL_MSG_);
  }
  if(!response) {
    var msg = google.visualization.errors.INTERNAL_ERROR_MSG_PREFIX_ + " response is null";
    throw Error(msg);
  }
  if(!response.isError() && !response.hasWarning()) {
    return null
  }
  var reasons = response.getReasons(), showInTooltip = !0;
  response.isError() && (showInTooltip = !(goog.array.contains(reasons, "user_not_authenticated") || goog.array.contains(reasons, "invalid_query")));
  var message = response.getMessage(), detailedMessage = response.getDetailedMessage(), options = {showInTooltip:showInTooltip};
  options.type = response.isError() ? "error" : "warning";
  options.removeDuplicates = !0;
  return google.visualization.errors.addError(container, message, detailedMessage, options)
};
google.visualization.errors.removeError = function(id) {
  var element = document.getElementById(id);
  return google.visualization.errors.validateErrorElement_(element) ? (google.visualization.errors.handleRemove_(element), !0) : !1
};
google.visualization.errors.getContainer = function(errorId) {
  var element = document.getElementById(errorId);
  return google.visualization.errors.validateErrorElement_(element) ? element.parentNode.parentNode : null
};
google.visualization.errors.createProtectedCallback = function(callback, handler) {
  return function() {
    if(goog.DEBUG) {
      callback.apply(null, arguments)
    }else {
      try {
        callback.apply(null, arguments)
      }catch(x) {
        goog.isFunction(handler) ? handler(x) : google.visualization.errors.addError(handler, x.message)
      }
    }
  }
};
google.visualization.errors.handleRemove_ = function(element) {
  var allErrorsDiv = element.parentNode;
  goog.dom.removeNode(element);
  0 == allErrorsDiv.childNodes.length && (allErrorsDiv.style.display = "none")
};
google.visualization.errors.validateErrorElement_ = function(element) {
  if(goog.dom.isNodeLike(element) && element.id && goog.string.startsWith(element.id, google.visualization.errors.ERROR_ID_PREFIX_)) {
    var allErrorsDiv = element.parentNode;
    if(allErrorsDiv && allErrorsDiv.id && goog.string.startsWith(allErrorsDiv.id, google.visualization.errors.ALL_ERRORS_DIV_ID_PREFIX_) && allErrorsDiv.parentNode) {
      return!0
    }
  }
  return!1
};
google.visualization.errors.initUserParams_ = function(message, opt_detailedMessage, opt_options) {
  var errorMessage = goog.isDefAndNotNull(message) && message ? message : "error", detailedMessage = "", options = {}, numArgs = arguments.length;
  2 == numArgs ? opt_detailedMessage && "object" == goog.typeOf(opt_detailedMessage) ? options = opt_detailedMessage : detailedMessage = goog.isDefAndNotNull(opt_detailedMessage) ? opt_detailedMessage : detailedMessage : 3 == numArgs && (detailedMessage = goog.isDefAndNotNull(opt_detailedMessage) ? opt_detailedMessage : detailedMessage, options = opt_options || {});
  errorMessage = goog.string.trim(errorMessage);
  detailedMessage = goog.string.trim(detailedMessage);
  return{errorMessage:errorMessage, detailedMessage:detailedMessage, options:options}
};
google.visualization.errors.validateContainer_ = function(container) {
  return goog.isDefAndNotNull(container) && goog.dom.isNodeLike(container)
};
google.visualization.errors.getErrorsDivFromContainer_ = function(container, createNew) {
  for(var childs = container.childNodes, errorsDiv = null, dom = goog.dom.getDomHelper(), i = 0;i < childs.length;i++) {
    if(childs[i].id && goog.string.startsWith(childs[i].id, google.visualization.errors.ALL_ERRORS_DIV_ID_PREFIX_)) {
      errorsDiv = childs[i];
      dom.removeNode(errorsDiv);
      break
    }
  }
  if(!errorsDiv && createNew) {
    var id = google.visualization.errors.ALL_ERRORS_DIV_ID_PREFIX_ + google.visualization.errors.errorsCounterId_++, errorsDiv = goog.dom.createDom("div", {id:id, style:"display: none; padding-top: 2px"}, null)
  }
  if(errorsDiv) {
    var firstChild = container.firstChild;
    firstChild ? dom.insertSiblingBefore(errorsDiv, firstChild) : dom.appendChild(container, errorsDiv)
  }
  return errorsDiv
};
google.visualization.errors.addElement_ = function(container, domElement) {
  var errorsDiv = google.visualization.errors.getErrorsDivFromContainer_(container, !0);
  errorsDiv.style.display = "block";
  goog.dom.appendChild(errorsDiv, domElement)
};
google.visualization.errors.forEachErrorElement_ = function(container, handler) {
  var errorsDiv = google.visualization.errors.getErrorsDivFromContainer_(container, !0), errors = errorsDiv && errorsDiv.childNodes;
  goog.array.forEach(errors, function(errorDiv) {
    google.visualization.errors.validateErrorElement_(errorDiv) && handler(errorDiv)
  })
};
google.visualization.errors.removeDuplicates_ = function(container, errorDiv) {
  var idRegExp = /id="?google-visualization-errors-[0-9]*"?/, errorDivOuterHtml = goog.dom.getOuterHtml(errorDiv), errorDivOuterHtml = errorDivOuterHtml.replace(idRegExp, ""), elementsToRemove = [];
  google.visualization.errors.forEachErrorElement_(container, function(el) {
    if(el != errorDiv) {
      var elOuterHtml = goog.dom.getOuterHtml(el), elOuterHtml = elOuterHtml.replace(idRegExp, "");
      elOuterHtml == errorDivOuterHtml && elementsToRemove.push(el)
    }
  });
  goog.array.forEach(elementsToRemove, google.visualization.errors.handleRemove_);
  return elementsToRemove.length
};
// Input 2
gviz.coreutils = {};
gviz.coreutils.getHead = function() {
  if(0 == document.getElementsByTagName("head").length) {
    var htmlElement = document.getElementsByTagName("html")[0], bodyElement = document.getElementsByTagName("body")[0], headElement = document.createElement("head");
    htmlElement.insertBefore(headElement, bodyElement)
  }
  return document.getElementsByTagName("head")[0]
};
gviz.coreutils.appendScript = function(url) {
  var head = gviz.coreutils.getHead(), script = document.createElement("script");
  script.type = "text/javascript";
  script.src = url;
  head.appendChild(script)
};
gviz.coreutils.removeUriParams = function(uri) {
  var question = uri.indexOf("?");
  0 < question && (uri = uri.substring(0, question));
  var hash = uri.indexOf("#");
  0 < hash && (uri = uri.substring(0, hash));
  return uri
};
gviz.coreutils.getDefaultResponseValidator = function(container) {
  return function(response) {
    google.visualization.errors.removeAll(container);
    var isError = response.isError();
    isError && google.visualization.errors.addErrorFromQueryResponse(container, response);
    return!isError
  }
};
// Input 3
goog.debug.entryPointRegistry = {};
goog.debug.EntryPointMonitor = function() {
};
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = !1;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    for(var monitors = goog.debug.entryPointRegistry.monitors_, i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = !0;
  for(var transformer = goog.bind(monitor.wrap, monitor), i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  for(var transformer = goog.bind(monitor.unwrap, monitor), i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
// Input 4
goog.disposable = {};
goog.disposable.IDisposable = function() {
};
// Input 5
goog.Disposable = function() {
  goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF && (goog.Disposable.instances_[goog.getUid(this)] = this)
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.INCLUDE_STACK_ON_CREATION = !0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [], id;
  for(id in goog.Disposable.instances_) {
    goog.Disposable.instances_.hasOwnProperty(id) && ret.push(goog.Disposable.instances_[Number(id)])
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = !1;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_ && (this.disposed_ = !0, this.disposeInternal(), goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF)) {
    var uid = goog.getUid(this);
    if(goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
      throw Error(this + " did not call the goog.Disposable base constructor or was disposed of after a clearUndisposedObjects call");
    }
    delete goog.Disposable.instances_[uid]
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable))
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  this.onDisposeCallbacks_ || (this.onDisposeCallbacks_ = []);
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope))
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.onDisposeCallbacks_) {
    for(;this.onDisposeCallbacks_.length;) {
      this.onDisposeCallbacks_.shift()()
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  return obj && "function" == typeof obj.isDisposed ? obj.isDisposed() : !1
};
goog.dispose = function(obj) {
  obj && "function" == typeof obj.dispose && obj.dispose()
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    goog.isArrayLike(disposable) ? goog.disposeAll.apply(null, disposable) : goog.dispose(disposable)
  }
};
// Input 6
goog.events = {};
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.currentTarget = this.target = opt_target
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = !1;
goog.events.Event.prototype.defaultPrevented = !1;
goog.events.Event.prototype.returnValue_ = !0;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = !0
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = !0;
  this.returnValue_ = !1
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
// Input 7
goog.reflect = {};
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    return goog.reflect.sinkValue(obj[prop]), !0
  }catch(e) {
  }
  return!1
};
// Input 8
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global.document && document.documentElement && "ontouchstart" in document.documentElement) || !(!goog.global.navigator || 
!goog.global.navigator.msMaxTouchPoints)};
// Input 9
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase()
};
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", 
RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), 
TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", 
MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive"};
// Input 10
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  opt_e && this.init(opt_e, opt_currentTarget)
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = !1;
goog.events.BrowserEvent.prototype.altKey = !1;
goog.events.BrowserEvent.prototype.shiftKey = !1;
goog.events.BrowserEvent.prototype.metaKey = !1;
goog.events.BrowserEvent.prototype.platformModifierKey = !1;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  relatedTarget ? goog.userAgent.GECKO && (goog.reflect.canAccessProperty(relatedTarget, "nodeName") || (relatedTarget = null)) : type == goog.events.EventType.MOUSEOVER ? relatedTarget = e.fromElement : type == goog.events.EventType.MOUSEOUT && (relatedTarget = e.toElement);
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || void 0 !== e.offsetX ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || void 0 !== e.offsetY ? e.offsetY : e.layerY;
  this.clientX = void 0 !== e.clientX ? e.clientX : e.pageX;
  this.clientY = void 0 !== e.clientY ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || ("keypress" == type ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  e.defaultPrevented && this.preventDefault();
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  return goog.events.BrowserFeature.HAS_W3C_BUTTON ? this.event_.button == button : "click" == this.type ? button == goog.events.BrowserEvent.MouseButton.LEFT : !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  this.event_.stopPropagation ? this.event_.stopPropagation() : this.event_.cancelBubble = !0
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(be.preventDefault) {
    be.preventDefault()
  }else {
    if(be.returnValue = !1, goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        if(be.ctrlKey || 112 <= be.keyCode && 123 >= be.keyCode) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
// Input 11
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (1E6 * Math.random() | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = !0
};
goog.events.Listenable.isImplementedBy = function(obj) {
  try {
    return!(!obj || !obj[goog.events.Listenable.IMPLEMENTED_BY_PROP])
  }catch(e) {
    return!1
  }
};
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_
};
// Input 12
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = this.callOnce = !1
};
goog.events.Listener.ENABLE_MONITORING = !1;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = !0;
  this.handler = this.src = this.proxy = this.listener = null
};
// Input 13
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var listenerArray = this.listeners[type];
  listenerArray || (listenerArray = this.listeners[type] = [], this.typeCount_++);
  var listenerObj, index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  -1 < index ? (listenerObj = listenerArray[index], callOnce || (listenerObj.callOnce = !1)) : (listenerObj = new goog.events.Listener(listener, null, this.src, type, !!opt_useCapture, opt_listenerScope), listenerObj.callOnce = callOnce, listenerArray.push(listenerObj));
  return listenerObj
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  if(!(type in this.listeners)) {
    return!1
  }
  var listenerArray = this.listeners[type], index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if(-1 < index) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    0 == listenerArray.length && (delete this.listeners[type], this.typeCount_--);
    return!0
  }
  return!1
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if(!(type in this.listeners)) {
    return!1
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  removed && (listener.markAsRemoved(), 0 == this.listeners[type].length && (delete this.listeners[type], this.typeCount_--));
  return removed
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var count = 0, type;
  for(type in this.listeners) {
    if(!opt_type || type == opt_type) {
      for(var listenerArray = this.listeners[type], i = 0;i < listenerArray.length;i++) {
        ++count, listenerArray[i].markAsRemoved()
      }
      delete this.listeners[type];
      this.typeCount_--
    }
  }
  return count
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type], rv = [];
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      listenerObj.capture == capture && rv.push(listenerObj)
    }
  }
  return rv
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type], i = -1;
  listenerArray && (i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope));
  return-1 < i ? listenerArray[i] : null
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type), hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray) {
    for(var i = 0;i < listenerArray.length;++i) {
      if(!(hasType && listenerArray[i].type != opt_type || hasCapture && listenerArray[i].capture != opt_capture)) {
        return!0
      }
    }
    return!1
  })
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for(var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if(!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i
    }
  }
  return-1
};
// Input 14
goog.events.listeners_ = {};
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (1E6 * Math.random() | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.events.CAPTURE_SIMULATION_MODE = 2;
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  listener = goog.events.wrapListener_(listener);
  return goog.events.Listenable.isImplementedBy(src) ? src.listen(type, listener, opt_capt, opt_handler) : goog.events.listen_(src, type, listener, !1, opt_capt, opt_handler)
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if(capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if(goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      return goog.asserts.fail("Can not register capture listener in IE8-."), null
    }
    if(goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
      return null
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  listenerMap || (src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src));
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if(listenerObj.proxy) {
    return listenerObj
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  src.addEventListener ? src.addEventListener(type, proxy, capture) : src.attachEvent(goog.events.getOnString_(type), proxy);
  goog.events.listenerCountEstimate_++;
  return listenerObj
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_, f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  listener = goog.events.wrapListener_(listener);
  return goog.events.Listenable.isImplementedBy(src) ? src.listenOnce(type, listener, opt_capt, opt_handler) : goog.events.listen_(src, type, listener, !0, opt_capt, opt_handler)
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  listener = goog.events.wrapListener_(listener);
  if(goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten(type, listener, opt_capt, opt_handler)
  }
  if(!src) {
    return!1
  }
  var capture = !!opt_capt, listenerMap = goog.events.getListenerMap_(src);
  if(listenerMap) {
    var listenerObj = listenerMap.getListener(type, listener, capture, opt_handler);
    if(listenerObj) {
      return goog.events.unlistenByKey(listenerObj)
    }
  }
  return!1
};
goog.events.unlistenByKey = function(key) {
  if(goog.isNumber(key)) {
    return!1
  }
  var listener = key;
  if(!listener || listener.removed) {
    return!1
  }
  var src = listener.src;
  if(goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener)
  }
  var type = listener.type, proxy = listener.proxy;
  src.removeEventListener ? src.removeEventListener(type, proxy, listener.capture) : src.detachEvent && src.detachEvent(goog.events.getOnString_(type), proxy);
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_(src);
  listenerMap ? (listenerMap.removeByKey(listener), 0 == listenerMap.getTypeCount() && (listenerMap.src = null, src[goog.events.LISTENER_MAP_PROP_] = null)) : listener.markAsRemoved();
  return!0
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.removeAll = function(opt_obj, opt_type) {
  if(!opt_obj) {
    return 0
  }
  if(goog.events.Listenable.isImplementedBy(opt_obj)) {
    return opt_obj.removeAllListeners(opt_type)
  }
  var listenerMap = goog.events.getListenerMap_(opt_obj);
  if(!listenerMap) {
    return 0
  }
  var count = 0, type;
  for(type in listenerMap.listeners) {
    if(!opt_type || type == opt_type) {
      for(var listeners = goog.array.clone(listenerMap.listeners[type]), i = 0;i < listeners.length;++i) {
        goog.events.unlistenByKey(listeners[i]) && ++count
      }
    }
  }
  return count
};
goog.events.removeAllNativeListeners = function() {
  return goog.events.listenerCountEstimate_ = 0
};
goog.events.getListeners = function(obj, type, capture) {
  if(goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture)
  }
  if(!obj) {
    return[]
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  return listenerMap ? listenerMap.getListeners(type, capture) : []
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  listener = goog.events.wrapListener_(listener);
  var capture = !!opt_capt;
  if(goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler)
  }
  if(!src) {
    return null
  }
  var listenerMap = goog.events.getListenerMap_(src);
  return listenerMap ? listenerMap.getListener(type, listener, capture, opt_handler) : null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if(goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture)
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture)
};
goog.events.expose = function(e) {
  var str = [], key;
  for(key in e) {
    e[key] && e[key].id ? str.push(key + " = " + e[key] + " (" + e[key].id + ")") : str.push(key + " = " + e[key])
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  return type in goog.events.onStringMap_ ? goog.events.onStringMap_[type] : goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  return goog.events.Listenable.isImplementedBy(obj) ? obj.fireListeners(type, capture, eventObject) : goog.events.fireListeners_(obj, type, capture, eventObject)
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1, listenerMap = goog.events.getListenerMap_(obj);
  if(listenerMap) {
    var listenerArray = listenerMap.listeners[type];
    if(listenerArray) {
      for(var listenerArray = goog.array.clone(listenerArray), i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        listener && listener.capture == capture && !listener.removed && (retval &= !1 !== goog.events.fireListener(listener, eventObject))
      }
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener, listenerHandler = listener.handler || listener.src;
  listener.callOnce && goog.events.unlistenByKey(listener);
  return listenerFn.call(listenerHandler, eventObject)
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with non-goog.events.Listenable instance.");
  return src.dispatchEvent(e)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if(listener.removed) {
    return!0
  }
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event"), evt = new goog.events.BrowserEvent(ieEvent, this), retval = !0;
    if(goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if(!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        for(var ancestors = [], parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        for(var type = listener.type, i = ancestors.length - 1;!evt.propagationStopped_ && 0 <= i;i--) {
          evt.currentTarget = ancestors[i], retval &= goog.events.fireListeners_(ancestors[i], type, !0, evt)
        }
        for(i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i], retval &= goog.events.fireListeners_(ancestors[i], type, !1, evt)
        }
      }
    }else {
      retval = goog.events.fireListener(listener, evt)
    }
    return retval
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this))
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = !1;
  if(0 == e.keyCode) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = !0
    }
  }
  if(useReturnValue || void 0 == e.returnValue) {
    e.returnValue = !0
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return 0 > e.keyCode || void 0 != e.returnValue
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);
goog.events.wrapListener_ = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if(goog.isFunction(listener)) {
    return listener
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e)
  })
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
// Input 15
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if(ancestor) {
    ancestorsTree = [];
    for(var ancestorCount = 1;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor), goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop")
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(type, listener, !1, opt_useCapture, opt_listenerScope)
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(type, listener, !0, opt_useCapture, opt_listenerScope)
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(type, listener, opt_useCapture, opt_listenerScope)
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key)
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  return this.eventTargetListeners_ ? this.eventTargetListeners_.removeAll(opt_type) : 0
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[type];
  if(!listenerArray) {
    return!0
  }
  for(var listenerArray = goog.array.clone(listenerArray), rv = !0, i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if(listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener, listenerHandler = listener.handler || listener.src;
      listener.callOnce && this.unlistenByKey(listener);
      rv = !1 !== listenerFn.call(listenerHandler, eventObject) && rv
    }
  }
  return rv && !1 != eventObject.returnValue_
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(type, capture)
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(type, listener, capture, opt_listenerScope)
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  return this.eventTargetListeners_.hasListener(opt_type, opt_capture)
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?")
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || e;
  if(goog.isString(e)) {
    e = new goog.events.Event(e, target)
  }else {
    if(e instanceof goog.events.Event) {
      e.target = e.target || target
    }else {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent)
    }
  }
  var rv = !0, currentTarget;
  if(opt_ancestorsTree) {
    for(var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && 0 <= i;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i], rv = currentTarget.fireListeners(type, !0, e) && rv
    }
  }
  e.propagationStopped_ || (currentTarget = e.currentTarget = target, rv = currentTarget.fireListeners(type, !0, e) && rv, e.propagationStopped_ || (rv = currentTarget.fireListeners(type, !1, e) && rv));
  if(opt_ancestorsTree) {
    for(i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i], rv = currentTarget.fireListeners(type, !1, e) && rv
    }
  }
  return rv
};
// Input 16
goog.log = {};
goog.log.ENABLED = goog.debug.LOGGING_ENABLED;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if(goog.log.ENABLED) {
    var logger = goog.debug.Logger.getLogger(name);
    opt_level && logger && logger.setLevel(opt_level);
    return logger
  }
  return null
};
goog.log.addHandler = function(logger, handler) {
  goog.log.ENABLED && logger && logger.addHandler(handler)
};
goog.log.removeHandler = function(logger, handler) {
  return goog.log.ENABLED && logger ? logger.removeHandler(handler) : !1
};
goog.log.log = function(logger, level, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.log(level, msg, opt_exception)
};
goog.log.error = function(logger, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.severe(msg, opt_exception)
};
goog.log.warning = function(logger, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.warning(msg, opt_exception)
};
goog.log.info = function(logger, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.info(msg, opt_exception)
};
goog.log.fine = function(logger, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.fine(msg, opt_exception)
};
// Input 17
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = !1;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  this.timer_ && this.enabled ? (this.stop(), this.start()) : this.timer_ && this.stop()
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    0 < elapsed && elapsed < this.interval_ * goog.Timer.intervalScale ? this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed) : (this.timer_ && (this.timerObject_.clearTimeout(this.timer_), this.timer_ = null), this.dispatchTick(), this.enabled && (this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_), this.last_ = goog.now()))
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = !0;
  this.timer_ || (this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_), this.last_ = goog.now())
};
goog.Timer.prototype.stop = function() {
  this.enabled = !1;
  this.timer_ && (this.timerObject_.clearTimeout(this.timer_), this.timer_ = null)
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    opt_handler && (listener = goog.bind(listener, opt_handler))
  }else {
    if(listener && "function" == typeof listener.handleEvent) {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  return opt_delay > goog.Timer.MAX_TIMEOUT_ ? -1 : goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
// Input 18
goog.net = {};
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
// Input 19
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
// Input 20
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return!0;
    default:
      return!1
  }
};
// Input 21
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
// Input 22
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
// Input 23
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = !1;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  return progId ? new ActiveXObject(progId) : new XMLHttpRequest
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_(), options = {};
  progId && (options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = !0, options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = !0);
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return""
  }
  if(!this.ieProgId_ && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
    for(var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        return new ActiveXObject(candidate), this.ieProgId_ = candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
// Input 24
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = !1;
  this.xhrOptions_ = this.xhr_ = null;
  this.lastError_ = this.lastMethod_ = this.lastUri_ = "";
  this.inAbort_ = this.inOpen_ = this.inSend_ = this.errorDispatched_ = !1;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.useXhr2Timeout_ = this.withCredentials_ = !1
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  opt_callback && x.listen(goog.net.EventType.COMPLETE, opt_callback);
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  opt_timeoutInterval && x.setTimeoutInterval(opt_timeoutInterval);
  opt_withCredentials && x.setWithCredentials(opt_withCredentials);
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  for(var instances = goog.net.XhrIo.sendInstances_;instances.length;) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this)
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request=" + this.lastUri_ + "; newUri=" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastMethod_ = method;
  this.errorDispatched_ = !1;
  this.active_ = !0;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr")), this.inOpen_ = !0, this.xhr_.open(method, url, !0), this.inOpen_ = !1
  }catch(err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "", headers = this.headers.clone();
  opt_headers && goog.structs.forEach(opt_headers, function(value, key) {
    headers.set(key, value)
  });
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_), contentIsFormData = goog.global.FormData && content instanceof goog.global.FormData;
  !goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) || contentTypeKey || contentIsFormData || headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  this.responseType_ && (this.xhr_.responseType = this.responseType_);
  goog.object.containsKey(this.xhr_, "withCredentials") && (this.xhr_.withCredentials = this.withCredentials_);
  try {
    this.cleanUpTimeoutTimer_(), 0 < this.timeoutInterval_ && (this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_), goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_)), this.useXhr2Timeout_ ? (this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_, this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this)) : this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, 
    this)), goog.log.fine(this.logger_, this.formatMsg_("Sending request")), this.inSend_ = !0, this.xhr_.send(content), this.inSend_ = !1
  }catch(err$$0) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err$$0.message)), this.error_(goog.net.ErrorCode.EXCEPTION, err$$0)
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_])
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header)
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.timeout_ = function() {
  "undefined" != typeof goog && this.xhr_ && (this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting", goog.log.fine(this.logger_, this.formatMsg_(this.lastError_)), this.dispatchEvent(goog.net.EventType.TIMEOUT), this.abort(goog.net.ErrorCode.TIMEOUT))
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = !1;
  this.xhr_ && (this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1);
  this.lastError_ = err;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  this.errorDispatched_ || (this.errorDispatched_ = !0, this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.ERROR))
};
goog.net.XhrIo.prototype.abort = function() {
  this.xhr_ && this.active_ && (goog.log.fine(this.logger_, this.formatMsg_("Aborting")), this.active_ = !1, this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1, this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.ABORT), this.cleanUpXhr_())
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  this.xhr_ && (this.active_ && (this.active_ = !1, this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1), this.cleanUpXhr_(!0));
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.isDisposed()) {
    if(this.inOpen_ || this.inSend_ || this.inAbort_) {
      this.onReadyStateChangeHelper_()
    }else {
      this.onReadyStateChangeEntryPoint_()
    }
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(this.active_ && "undefined" != typeof goog) {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && 2 == this.getStatus()) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this)
      }else {
        if(this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE), this.isComplete()) {
          goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
          this.active_ = !1;
          try {
            this.isSuccess() ? (this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.SUCCESS)) : (this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]", this.dispatchErrors_())
          }finally {
            this.cleanUpXhr_()
          }
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_, clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhrOptions_ = this.xhr_ = null;
    opt_fromDispose || this.dispatchEvent(goog.net.EventType.READY);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  this.xhr_ && this.useXhr2Timeout_ && (this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null);
  goog.isNumber(this.timeoutId_) && (goog.Timer.clear(this.timeoutId_), this.timeoutId_ = null)
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || 0 === status && !this.isLastUriEffectiveSchemeHttp_()
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme)
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    return goog.log.warning(this.logger_, "Can not get status: " + e.message), -1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    return goog.log.fine(this.logger_, "Can not get status: " + e.message), ""
  }
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    return goog.log.fine(this.logger_, "Can not get responseText: " + e.message), ""
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : void 0
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
// Input 25
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  opt_uri instanceof goog.Uri ? (this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase(), this.setScheme(opt_uri.getScheme()), this.setUserInfo(opt_uri.getUserInfo()), this.setDomain(opt_uri.getDomain()), this.setPort(opt_uri.getPort()), this.setPath(opt_uri.getPath()), this.setQueryData(opt_uri.getQueryData().clone()), this.setFragment(opt_uri.getFragment())) : opt_uri && (m = goog.uri.utils.split(String(opt_uri))) ? (this.ignoreCase_ = !!opt_ignoreCase, this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || 
  "", !0), this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", !0), this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", !0), this.setPort(m[goog.uri.utils.ComponentIndex.PORT]), this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", !0), this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", !0), this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", !0)) : (this.ignoreCase_ = !!opt_ignoreCase, this.queryData_ = new goog.Uri.QueryData(null, null, 
  this.ignoreCase_))
};
goog.Uri.preserveParameterTypesCompatibilityFlag = !1;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = !1;
goog.Uri.prototype.ignoreCase_ = !1;
goog.Uri.prototype.toString = function() {
  var out = [], scheme = this.getScheme();
  scheme && out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  var domain = this.getDomain();
  if(domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    userInfo && out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    null != port && out.push(":", String(port))
  }
  var path = this.getPath();
  path && (this.hasDomain() && "/" != path.charAt(0) && out.push("/"), out.push(goog.Uri.encodeSpecialChars_(path, "/" == path.charAt(0) ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_)));
  var query = this.getEncodedQuery();
  query && out.push("?", query);
  var fragment = this.getFragment();
  fragment && out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  return out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone(), overridden = relativeUri.hasScheme();
  overridden ? absoluteUri.setScheme(relativeUri.getScheme()) : overridden = relativeUri.hasUserInfo();
  overridden ? absoluteUri.setUserInfo(relativeUri.getUserInfo()) : overridden = relativeUri.hasDomain();
  overridden ? absoluteUri.setDomain(relativeUri.getDomain()) : overridden = relativeUri.hasPort();
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    if(overridden = relativeUri.hasPath()) {
      if("/" != path.charAt(0)) {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          -1 != lastSlashIndex && (path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path)
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  overridden ? absoluteUri.setPath(path) : overridden = relativeUri.hasQuery();
  overridden ? absoluteUri.setQueryData(relativeUri.getDecodedQuery()) : overridden = relativeUri.hasFragment();
  overridden && absoluteUri.setFragment(relativeUri.getFragment());
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  if(this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || 0 > newPort) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return null != this.port_
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return"" !== this.queryData_.toString()
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  queryData instanceof goog.Uri.QueryData ? (this.queryData_ = queryData, this.queryData_.setIgnoreCase(this.ignoreCase_)) : (opt_decode || (queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)), this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_));
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  goog.isArray(values) || (values = [String(values)]);
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  this.queryData_ && this.queryData_.setIgnoreCase(ignoreCase);
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  base instanceof goog.Uri || (base = goog.Uri.parse(base));
  rel instanceof goog.Uri || (rel = goog.Uri.parse(rel));
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(".." == path || "." == path) {
    return""
  }
  if(goog.string.contains(path, "./") || goog.string.contains(path, "/.")) {
    for(var leadingSlash = goog.string.startsWith(path, "/"), segments = path.split("/"), out = [], pos = 0;pos < segments.length;) {
      var segment = segments[pos++];
      "." == segment ? leadingSlash && pos == segments.length && out.push("") : ".." == segment ? ((1 < out.length || 1 == out.length && "" != out[0]) && out.pop(), leadingSlash && pos == segments.length && out.push("")) : (out.push(segment), leadingSlash = !0)
    }
    return out.join("/")
  }
  return path
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  return goog.isString(unescapedPart) ? encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_) : null
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String), pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_ && (this.keyMap_ = new goog.structs.Map, this.count_ = 0, this.encodedQuery_)) {
    for(var pairs = this.encodedQuery_.split("&"), i = 0;i < pairs.length;i++) {
      var indexOfEquals = pairs[i].indexOf("="), name = null, value = null;
      0 <= indexOfEquals ? (name = pairs[i].substring(0, indexOfEquals), value = pairs[i].substring(indexOfEquals + 1)) : name = pairs[i];
      name = goog.string.urlDecode(name);
      name = this.getKeyName_(name);
      this.add(name, value ? goog.string.urlDecode(value) : "")
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if("undefined" == typeof keys) {
    throw Error("Keys are undefined");
  }
  for(var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase), values = goog.structs.getValues(map), i = 0;i < keys.length;i++) {
    var key = keys[i], value = values[i];
    goog.isArray(value) ? queryData.setValues(key, value) : queryData.add(key, value)
  }
  return queryData
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  for(var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase), i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  values || this.keyMap_.set(key, values = []);
  values.push(value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key) ? (this.invalidateCache_(), this.count_ -= this.keyMap_.get(key).length, this.keyMap_.remove(key)) : !1
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return 0 == this.count_
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  for(var vals = this.keyMap_.getValues(), keys = this.keyMap_.getKeys(), rv = [], i = 0;i < keys.length;i++) {
    for(var val = vals[i], j = 0;j < val.length;j++) {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if(goog.isString(opt_key)) {
    this.containsKey(opt_key) && (rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key))))
  }else {
    for(var values = this.keyMap_.getValues(), i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  this.containsKey(key) && (this.count_ -= this.keyMap_.get(key).length);
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  return goog.Uri.preserveParameterTypesCompatibilityFlag ? 0 < values.length ? values[0] : opt_default : 0 < values.length ? String(values[0]) : opt_default
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  0 < values.length && (this.invalidateCache_(), this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values)), this.count_ += values.length)
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  for(var sb = [], keys = this.keyMap_.getKeys(), i = 0;i < keys.length;i++) {
    for(var key = keys[i], encodedKey = goog.string.urlEncode(key), val = this.getValues(key), j = 0;j < val.length;j++) {
      var param = encodedKey;
      "" !== val[j] && (param += "=" + goog.string.urlEncode(val[j]));
      sb.push(param)
    }
  }
  return this.encodedQuery_ = sb.join("&")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString())
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  this.keyMap_ && (rv.keyMap_ = this.keyMap_.clone(), rv.count_ = this.count_);
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  this.ignoreCase_ && (keyName = keyName.toLowerCase());
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  resetKeys && (this.ensureKeyMapInitialized_(), this.invalidateCache_(), goog.structs.forEach(this.keyMap_, function(value, key) {
    var lowerCase = key.toLowerCase();
    key != lowerCase && (this.remove(key), this.setValues(lowerCase, value))
  }, this));
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
// Input 26
gviz.trixUtils = {};
gviz.trixUtils.TRIX_PATH_REG_ = {PREFIX:/\/spreadsheet/, SUFFIX:/\/(ccc|tq|pub)$/};
gviz.trixUtils.TRIX_DOMAIN_REG_ = {OLD:/^spreadsheets?[0-9]?\.google\.com$/, NEW:/^docs\.google\.com*$/, TEST:/^(trix|spreadsheets|docs|webdrive)(-[a-z]+)?\.(corp|sandbox)\.google\.com/, LOCAL:/^(\w*\.){1,2}corp\.google\.com$/};
gviz.trixUtils.RITZ_PATH_REG_ = {PREFIX:/\/spreadsheets(\/d\/[^/]+)?/, SUFFIX:/\/(edit|gviz\/tq|)$/};
gviz.trixUtils.RITZ_DOMAIN_REG_ = {PROD:/^docs\.google\.com*$/, TEST:/^docs\.sandbox\.google\.com*$/, LOCAL:/^(\w*\.){1,2}corp\.google\.com$/};
gviz.trixUtils.DASHER_DOMAIN_REG_ = {DASHER:/^\/a\/([\w-]+\.)+\w+/, OPT_DASHER:/^(\/a\/([\w-]+\.)+\w+)?/};
gviz.trixUtils.HEADERS_PARAM_KEYWORD_ = "headers";
gviz.trixUtils.QUERY_PARAM_KEYWORD_ = "tq";
gviz.trixUtils.RANGE_PARAM_KEYWORD_ = "range";
gviz.trixUtils.RANGE_MATCH_REG_ = /^[a-z]+\d+\:[a-z]+\d+$/i;
gviz.trixUtils.CELL_MATCH_REG_ = /^[a-z]+\d+$/i;
gviz.trixUtils.generateA1String = function(left, top, width, height) {
  var a = left, one = top, b = a + width - 1, two = one + height - 1;
  goog.asserts.assert(26 >= b, "Columns > Z not supported.");
  a = String.fromCharCode(64 + a);
  b = String.fromCharCode(64 + b);
  return a + one + ":" + b + two
};
gviz.trixUtils.isTrixUrl = function(url) {
  var domain = goog.uri.utils.getDomain(url), domainReg = gviz.trixUtils.TRIX_DOMAIN_REG_, isOldDomain = domainReg.OLD.test(domain), isTestDomain = domainReg.TEST.test(domain), isLocalDomain = domainReg.LOCAL.test(domain), isNewDomain = domainReg.NEW.test(domain), path = goog.uri.utils.getPath(url), pathReg = gviz.trixUtils.TRIX_PATH_REG_, oldPathReg = RegExp(gviz.trixUtils.DASHER_DOMAIN_REG_.OPT_DASHER.source + pathReg.SUFFIX.source), newPathReg = RegExp(gviz.trixUtils.DASHER_DOMAIN_REG_.OPT_DASHER.source + 
  pathReg.PREFIX.source + pathReg.SUFFIX.source), isNewPath = newPathReg.test(path), isMixedPath = isNewPath || oldPathReg.test(path);
  return isNewDomain && isNewPath || (isTestDomain || isLocalDomain || isOldDomain) && isMixedPath
};
gviz.trixUtils.isRitzUrl = function(url) {
  var domain = goog.uri.utils.getDomain(url), domainReg = gviz.trixUtils.RITZ_DOMAIN_REG_, isTestDomain = domainReg.TEST.test(domain), isLocalDomain = domainReg.LOCAL.test(domain), isProdDomain = domainReg.PROD.test(domain), path = goog.uri.utils.getPath(url), pathReg = gviz.trixUtils.RITZ_PATH_REG_, fullPathReg = RegExp(gviz.trixUtils.DASHER_DOMAIN_REG_.OPT_DASHER.source + pathReg.PREFIX.source + pathReg.SUFFIX.source), isRitzPath = fullPathReg.test(path);
  return(isProdDomain || isTestDomain || isLocalDomain) && isRitzPath
};
gviz.trixUtils.isTrixLocalMachineUrl = function(url) {
  var domain = goog.uri.utils.getDomain(url), hasPort = null != goog.uri.utils.getPort(url), domainReg = gviz.trixUtils.TRIX_DOMAIN_REG_, isTestDomain = domainReg.TEST.test(domain), isLocalDomain = domainReg.LOCAL.test(domain);
  return isLocalDomain && !isTestDomain && hasPort
};
gviz.trixUtils.isRitzLocalMachineUrl = function(url) {
  var domain = goog.uri.utils.getDomain(url), hasPort = !goog.isNull(goog.uri.utils.getPort(url)), domainReg = gviz.trixUtils.RITZ_DOMAIN_REG_, isLocalDomain = domainReg.LOCAL.test(domain);
  return isLocalDomain && hasPort
};
gviz.trixUtils.isTrixDasherUrl = function(url) {
  var isTrixUrl = gviz.trixUtils.isTrixUrl(url), path = goog.uri.utils.getPath(url), isDasher = gviz.trixUtils.DASHER_DOMAIN_REG_.DASHER.test(path);
  return isTrixUrl && isDasher
};
gviz.trixUtils.isRitzDasherUrl = function(url) {
  var isRitzUrl = gviz.trixUtils.isRitzUrl(url), path = goog.uri.utils.getPath(url), isDasher = gviz.trixUtils.DASHER_DOMAIN_REG_.DASHER.test(path);
  return isRitzUrl && isDasher
};
gviz.trixUtils.getHeadersFromUrl = function(url) {
  return goog.uri.utils.getParamValue(url, gviz.trixUtils.HEADERS_PARAM_KEYWORD_)
};
gviz.trixUtils.setHeadersInUrl = function(url, value) {
  return goog.uri.utils.setParam(url, gviz.trixUtils.HEADERS_PARAM_KEYWORD_, value)
};
gviz.trixUtils.getQueryFromUrl = function(url) {
  return goog.uri.utils.getParamValue(url, gviz.trixUtils.QUERY_PARAM_KEYWORD_)
};
gviz.trixUtils.getRangeFromUrl = function(url) {
  return goog.uri.utils.getParamValue(url, gviz.trixUtils.RANGE_PARAM_KEYWORD_)
};
gviz.trixUtils.colStringToIndex_ = function(colString) {
  for(var col = 0, magnitude = 1, i = colString.length - 1;0 <= i;i--) {
    var charCode = colString.charCodeAt(i), col = col + magnitude * (charCode - 64), magnitude = 26 * magnitude
  }
  return col
};
gviz.trixUtils.a1ToCellPos_ = function(a1CellStr) {
  if(!gviz.trixUtils.CELL_MATCH_REG_.test(a1CellStr)) {
    return null
  }
  a1CellStr = a1CellStr.toUpperCase();
  for(var rowString, colString = "", i = 0;i < a1CellStr.length;i++) {
    var charCode = a1CellStr.charCodeAt(i);
    if(65 > charCode || 90 < charCode) {
      colString = a1CellStr.substring(0, i);
      rowString = a1CellStr.substring(i);
      break
    }
  }
  var col = gviz.trixUtils.colStringToIndex_(colString), row = parseInt(rowString, 10);
  return isNaN(row) || 0 >= row || 0 > col ? null : new goog.math.Coordinate(col, row)
};
gviz.trixUtils.a1RangeToSize = function(rangeString) {
  if(!gviz.trixUtils.RANGE_MATCH_REG_.test(rangeString)) {
    return null
  }
  rangeString = rangeString.toUpperCase();
  var splittedRange = rangeString.split(":"), rangeFirst = splittedRange[0], rangeSecond = splittedRange[1], firstCoor = gviz.trixUtils.a1ToCellPos_(rangeFirst), secondCoor = gviz.trixUtils.a1ToCellPos_(rangeSecond);
  return new goog.math.Size(Math.abs(secondCoor.x - firstCoor.x) + 1, Math.abs(secondCoor.y - firstCoor.y) + 1)
};
// Input 27
var vis = {csv:{}};
vis.csv.ParserOptions = {};
vis.csv.defaultOptions_ = {firstLineIsHeader:!1};
vis.csv.ParseError = function(message, text, lineno, col) {
  var lines = text.split(/\r?\n/), line = lines[lineno];
  this.message = message + " at line " + (lineno + 1) + ":\n" + line;
  var blanks = -1 == col ? line.length : col;
  this.message += "\n" + goog.string.repeat(" ", blanks) + "^"
};
goog.inherits(vis.csv.ParseError, Error);
goog.exportSymbol("vis.csv.ParseError", vis.csv.ParseError);
vis.csv.ParseError.prototype.name = "ParseError";
vis.csv.Parser = function(opt_options) {
  this.options_ = opt_options || {};
  goog.object.forEach(vis.csv.defaultOptions_, function(v, k) {
    goog.object.setIfUndefined(this.options_, k, v)
  }, this)
};
goog.exportSymbol("vis.csv.Parser", vis.csv.Parser);
vis.csv.Parser.prototype.parse = function(text) {
  function pushBack(c) {
    "<CRLF>" == c && (line--, col = lastcol);
    pbToken = c
  }
  function nextToken() {
    lastcol = col;
    if(null != pbToken) {
      var c = pbToken;
      "<CRLF>" == c && (line++, col = 0);
      pbToken = null;
      return c
    }
    if(n >= len) {
      return"<EOF>"
    }
    c = text.charAt(n++);
    col++;
    var iscrlf = !1;
    "\n" == c ? iscrlf = !0 : "\r" == c && (n < len && "\n" == text.charAt(n) && n++, iscrlf = !0);
    return iscrlf ? (line++, col = 0, "<CRLF>") : c
  }
  function readQuotedField() {
    for(var start = n, end = null, t = nextToken();"<EOF>" != t;t = nextToken()) {
      if('"' == t) {
        if(end = n - 1, t = nextToken(), '"' == t) {
          end = null
        }else {
          if("," == t || "<EOF>" == t || "<CRLF>" == t) {
            "<CRLF>" == t && pushBack(t);
            break
          }
          throw new vis.csv.ParseError('Unexpected character "' + t + '" after quote mark', text, line, col - 1);
        }
      }
    }
    if(null == end) {
      throw new vis.csv.ParseError("Unexpected end of text after open quote", text, line, col);
    }
    return text.substring(start, end).replace(/""/g, '"')
  }
  function readField() {
    var start = n, didSeeComma = sawComma;
    sawComma = !1;
    var t = nextToken();
    if("<EMPTY>" == t) {
      return"<EOR>"
    }
    if("<EOF>" == t || "<CRLF>" == t) {
      return didSeeComma ? (pushBack("<EMPTY>"), "") : "<EOR>"
    }
    if('"' == t) {
      return readQuotedField()
    }
    for(;"<EOF>" != t && "," != t && "<CRLF>" != t;t = nextToken()) {
      if('"' == t) {
        throw new vis.csv.ParseError("Unexpected quote mark", text, line, col - 1);
      }
    }
    "," == t && (sawComma = !0);
    "<EOF>" != t && "<CRLF>" != t || pushBack(t);
    return text.substring(start, "<EOF>" == t ? n : n - 1).replace(/[\r\n]+/g, "")
  }
  function readRecord() {
    if(n >= len) {
      return"<EOF>"
    }
    for(var record = [], field = readField();"<EOR>" != field;field = readField()) {
      record.push(field)
    }
    return record
  }
  var useObjects = this.options_.firstLineIsHeader, len = text.length, n = 0, line = 0, col = 0, lastcol = 0, pbToken = null, sawComma = !1, headers = [], result = [], expectedFieldCount = null;
  useObjects && (headers = readRecord(), expectedFieldCount = headers.length);
  for(var record$$0 = readRecord();"<EOF>" != record$$0;record$$0 = readRecord()) {
    null == expectedFieldCount && (expectedFieldCount = record$$0.length);
    if(record$$0.length != expectedFieldCount) {
      throw new vis.csv.ParseError("Record has " + record$$0.length + " field" + (1 == record$$0.length ? "" : "s") + ", but expected " + expectedFieldCount, text, line - 1, -1);
    }
    if(useObjects) {
      for(var obj = {}, i = 0;i < record$$0.length;i++) {
        obj[headers[i]] = record$$0[i]
      }
      result.push(obj)
    }else {
      result.push(record$$0)
    }
  }
  return result
};
goog.exportProperty(vis.csv.Parser.prototype, "parse", vis.csv.Parser.prototype.parse);
// Input 28
gviz.CsvToDataTable = function(csvText, colTypes, opt_colHeader) {
  this.parser_ = new vis.csv.Parser;
  this.hasHeader_ = goog.isDefAndNotNull(opt_colHeader) ? opt_colHeader : !1;
  this.csvText_ = csvText;
  this.validateTypes_(colTypes);
  this.types_ = colTypes;
  this.columns_ = []
};
gviz.CsvToDataTable.prototype.createDataTable = function() {
  var csvRows = this.parser_.parse(this.csvText_), dataTable = new google.visualization.DataTable;
  csvRows && 0 < csvRows.length && (this.createColumns_(csvRows, dataTable), this.createRows_(csvRows, dataTable));
  return dataTable
};
gviz.CsvToDataTable.prototype.createColumns_ = function(csvRows, dataTable) {
  for(var cols = [], types = this.types_, t = 0, len = types.length;t < len;t++) {
    cols.push({type:types[t], label:[]})
  }
  if(this.hasHeader_) {
    for(var r = 0, c = 0, len = cols.length;c < len;c++) {
      cols[c].label.push(csvRows[r][c])
    }
  }
  for(var i = 0, len = cols.length;i < len;i++) {
    var col = cols[i];
    dataTable.addColumn(col.type, col.label.join(" "))
  }
  this.columns_ = cols
};
gviz.CsvToDataTable.prototype.createRows_ = function(csvRows, dataTable) {
  for(var cols = this.columns_, startRow = this.hasHeader_ ? 1 : 0, r = startRow, numRows = csvRows.length;r < numRows;r++) {
    dataTable.addRow();
    for(var c = 0, len = cols.length;c < len;c++) {
      var value = csvRows[r][c], type = cols[c].type;
      dataTable.setCell(r - startRow, c, this.getTypedValue_(value, type))
    }
  }
};
gviz.CsvToDataTable.prototype.validateTypes_ = function(types) {
  for(var t = 0;t < types.length;t++) {
    var type = types[t];
    if(!gviz.CsvToDataTable.SupportedTypes_[type]) {
      throw Error("Unsupported type: " + type);
    }
  }
};
gviz.CsvToDataTable.prototype.getTypedValue_ = function(value, type) {
  return gviz.CsvToDataTable.SupportedTypes_[type](value)
};
gviz.CsvToDataTable.SupportedTypes_ = {number:function(value) {
  return gviz.CsvToDataTable.convertToNumber_(value)
}, string:function(value) {
  return value
}, "boolean":function(value) {
  return"true" === value.toLowerCase()
}, date:function(value) {
  return new Date(value)
}, datetime:function(value) {
  return new Date(value)
}, timeofday:function(value) {
  return value.split(",")
}};
gviz.CsvToDataTable.convertToNumber_ = function(val) {
  var num = parseFloat(val);
  if(isNaN(num)) {
    throw Error("Not a number " + val);
  }
  return num
};
// Input 29
gviz.AbstractQuery = function() {
};
// Input 30
google.visualization.Query = function(dataSourceUrl, opt_options) {
  var options = opt_options || {};
  this.parseCsv_ = goog.isDef(options.csvColumns);
  this.columnSpec_ = options.csvColumns;
  this.hasHeader_ = !!options.csvHasHeader;
  this.sendMethod_ = options.sendMethod || google.visualization.Query.SEND_METHOD_.AUTO;
  this.xhrWithCredentials_ = !!options.xhrWithCredentials;
  if(!goog.object.contains(google.visualization.Query.SEND_METHOD_, this.sendMethod_)) {
    throw Error("Send method not supported: " + this.sendMethod_);
  }
  this.makeRequestParams_ = options.makeRequestParams_ || {};
  gviz.trixUtils.isRitzUrl(dataSourceUrl) ? dataSourceUrl = this.normalizeRitzUrl_(dataSourceUrl) : gviz.trixUtils.isTrixUrl(dataSourceUrl) && (dataSourceUrl = this.normalizeTrixUrl_(dataSourceUrl));
  this.isDasherUrl_ = gviz.trixUtils.isTrixDasherUrl(dataSourceUrl) || gviz.trixUtils.isRitzDasherUrl(dataSourceUrl);
  this.dataSourceUrl = dataSourceUrl;
  this.requestId = google.visualization.Query.nextId_++;
  google.visualization.Query.allQueries_.push(this)
};
google.visualization.Query.SEND_METHOD_ = {XHR:"xhr", XHRPOST:"xhrpost", SCRIPT_INJECTION:"scriptInjection", MAKE_REQUEST:"makeRequest", AUTO:"auto"};
google.visualization.Query.AUTH_HEADER_MAP_ = new goog.structs.Map({"X-DataSource-Auth":"a"});
google.visualization.Query.nextId_ = 0;
google.visualization.Query.pendingRequests_ = {};
google.visualization.Query.REQUIRE_GAIA_PARAM_ = "requireauth";
google.visualization.Query.prototype.timeoutSeconds_ = 30;
google.visualization.Query.allQueries_ = [];
google.visualization.Query.gadgets_ = goog.global.gadgets;
google.visualization.Query.refreshAllQueries = function() {
  for(var i = 0;i < google.visualization.Query.allQueries_.length;i++) {
    var q = google.visualization.Query.allQueries_[i];
    q.refreshable_ && q.sendQuery_()
  }
};
google.visualization.Query.prototype.normalizeTrixUrl_ = function(url) {
  var uri = new goog.Uri(url);
  433 == uri.getPort() && uri.setPort(null);
  var path = uri.getPath(), path = path.replace(/\/ccc$/, "/tq");
  /\/pub$/.test(path) && (path = path.replace(/\/pub$/, "/tq"), uri.setParameterValue("pub", "1"));
  uri.setPath(path);
  var isLocalMachineTrix = gviz.trixUtils.isTrixLocalMachineUrl(url);
  uri.setScheme(isLocalMachineTrix ? "http" : "https");
  return uri.toString()
};
google.visualization.Query.prototype.normalizeRitzUrl_ = function(url) {
  var uri = new goog.Uri(url);
  433 == uri.getPort() && uri.setPort(null);
  var path = uri.getPath(), path = path.replace(/\/edit$/, "/gviz/tq");
  uri.setPath(path);
  var isLocalMachineRitz = gviz.trixUtils.isRitzLocalMachineUrl(url);
  uri.setScheme(isLocalMachineRitz ? "http" : "https");
  return uri.toString()
};
google.visualization.Query.storePendingRequest = function(reqId, query) {
  google.visualization.Query.pendingRequests_[reqId] = query
};
google.visualization.Query.overrideUrlParameters = function(url, newParameters) {
  var hashSignIndex = url.indexOf("#");
  -1 != hashSignIndex && (url = url.substring(0, hashSignIndex));
  var questionMarkIndex = url.indexOf("?"), urlPrefix = "", urlParams = "", originalParameters = [];
  -1 == questionMarkIndex ? urlPrefix = url : (urlPrefix = url.substring(0, questionMarkIndex), urlParams = url.substring(questionMarkIndex + 1), originalParameters = urlParams.split("&"));
  var i, parameterList = [];
  for(i = 0;i < originalParameters.length;i++) {
    var nameAndValuePair = originalParameters[i].split("="), param = {};
    param.name = nameAndValuePair[0];
    param.originalParamText = originalParameters[i];
    parameterList.push(param)
  }
  for(var name in newParameters) {
    var value = newParameters[name], found = !1;
    for(i = 0;i < parameterList.length;i++) {
      if(parameterList[i].name == name) {
        parameterList[i].originalParamText = name + "=" + encodeURIComponent(value);
        found = !0;
        break
      }
    }
    if(!found) {
      var newParam = {};
      newParam.name = name;
      newParam.originalParamText = name + "=" + encodeURIComponent(value);
      parameterList.push(newParam)
    }
  }
  var newUrl = urlPrefix;
  if(0 < parameterList.length) {
    var newUrl = newUrl + "?", paramStringsArray = [];
    for(i = 0;i < parameterList.length;i++) {
      paramStringsArray.push(parameterList[i].originalParamText)
    }
    newUrl += paramStringsArray.join("&")
  }
  return newUrl
};
google.visualization.Query.prototype.interpretCsv_ = function(responseText) {
  var converter = new gviz.CsvToDataTable(responseText, this.columnSpec_, this.hasHeader_);
  return converter.createDataTable()
};
google.visualization.Query.prototype.setXhrResponse = function(requestId, e) {
  if(e.target.isSuccess()) {
    var responseText = goog.string.trim(e.target.getResponseText()), response;
    if(this.parseCsv_) {
      var table = this.interpretCsv_(responseText), responseObj = {};
      responseObj.table = table.toJSON();
      responseObj.version = google.visualization.QueryResponse.getVersionFromResponse(responseObj);
      responseObj.reqId = requestId;
      google.visualization.Query.setResponse(responseObj)
    }else {
      responseText.match(/^({.*})$/) ? (response = gviz.json.unsafeDeserialize(responseText), google.visualization.Query.setResponse(response)) : gviz.json.globalEval(responseText)
    }
  }else {
    if(this.responseHandler) {
      this.setErrorResponse("google.visualization.Query", e.target.getLastError())
    }else {
      throw Error("google.visualization.Query: " + e.target.getLastError());
    }
  }
};
google.visualization.Query.setResponse = function(response) {
  google.visualization.QueryResponse.getVersionFromResponse(response);
  var requestId = response.reqId, query = google.visualization.Query.pendingRequests_[requestId];
  if(query) {
    google.visualization.Query.pendingRequests_[requestId] = null, query.handleResponse_(response)
  }else {
    throw Error("Missing query for request id: " + requestId);
  }
};
google.visualization.Query.prototype.responseHandler = null;
google.visualization.Query.prototype.refreshTimerId_ = null;
google.visualization.Query.prototype.timeoutTimerId_ = null;
google.visualization.Query.prototype.query_ = null;
google.visualization.Query.prototype.handlerType_ = null;
google.visualization.Query.prototype.handlerParameters_ = null;
google.visualization.Query.prototype.refreshable_ = !0;
google.visualization.Query.prototype.refreshInterval_ = 0;
google.visualization.Query.prototype.lastSignature_ = null;
google.visualization.Query.prototype.isActive = !1;
google.visualization.Query.prototype.setRefreshInterval = function(intervalSeconds) {
  if("number" != typeof intervalSeconds || 0 > intervalSeconds) {
    throw Error("Refresh interval must be a non-negative number");
  }
  this.refreshInterval_ = intervalSeconds;
  this.resetRefreshTimer_()
};
google.visualization.Query.prototype.clearTimeoutTimer_ = function() {
  this.timeoutTimerId_ && (window.clearTimeout(this.timeoutTimerId_), this.timeoutTimerId_ = null)
};
google.visualization.Query.prototype.timeoutReached_ = function() {
  var reason = "timeout", errorMessage = "Request timed out";
  this.setErrorResponse(reason, errorMessage)
};
google.visualization.Query.prototype.setErrorResponse = function(reason, errorMessage, opt_detailedMessage) {
  var response = {version:google.visualization.ResponseVersion.VERSION_0_6, status:google.visualization.QueryResponse.ExecutionStatus.ERROR, errors:[{reason:reason, message:errorMessage, detailed_message:opt_detailedMessage}]};
  this.handleResponse_(response)
};
google.visualization.Query.prototype.addModifiersToUrl = function(url) {
  var parametersToAdd = {};
  this.query_ && (parametersToAdd.tq = String(this.query_));
  var additionalParameters = "reqId:" + String(this.requestId), signature = this.lastSignature_;
  signature && (additionalParameters += ";sig:" + signature);
  this.handlerType_ && (additionalParameters += ";type:" + this.handlerType_);
  parametersToAdd.tqx = additionalParameters;
  if(this.handlerParameters_) {
    var paramStringsArray = [], p;
    for(p in this.handlerParameters_) {
      paramStringsArray.push(p + ":" + this.handlerParameters_[p])
    }
    parametersToAdd.tqh = paramStringsArray.join(";")
  }
  url = google.visualization.Query.overrideUrlParameters(url, parametersToAdd);
  if(this.refreshInterval_) {
    var uri = new goog.Uri(url);
    goog.userAgent.WEBKIT && uri.makeUnique();
    url = uri.toString()
  }
  return url
};
google.visualization.Query.prototype.sendQuery_ = function() {
  var url = this.addModifiersToUrl(this.dataSourceUrl), sendMethodOptions = {};
  google.visualization.Query.pendingRequests_[String(this.requestId)] = this;
  var sendMethod = this.sendMethod_, xhrHttpMethod = "GET";
  "xhrpost" == sendMethod && (sendMethod = "xhr", xhrHttpMethod = "POST");
  if("auto" == sendMethod) {
    var sendMethodAndOpts = google.visualization.Query.extractSendMethodAndOptsFromUrl_(url), sendMethod = sendMethodAndOpts.sendMethod, sendMethodOptions = sendMethodAndOpts.options
  }
  if("makeRequest" == sendMethod) {
    if(google.visualization.Query.isMakeRequestDefined_()) {
      this.sendMakeRequestQuery_(url, this.makeRequestParams_)
    }else {
      throw Error("gadgets.io.makeRequest is not defined.");
    }
  }else {
    if("xhr" == sendMethod || "auto" == sendMethod && google.visualization.Query.isSameDomainUrl_(goog.global.location.href, url)) {
      var postContent = void 0, httpUrl = url;
      if("POST" == xhrHttpMethod) {
        var a = url.split("?");
        1 <= a.length && (httpUrl = a[0]);
        2 <= a.length && (postContent = a[1])
      }
      goog.net.XhrIo.send(httpUrl, goog.bind(goog.partial(this.setXhrResponse, this.requestId), this), xhrHttpMethod, postContent, google.visualization.Query.AUTH_HEADER_MAP_, void 0, this.xhrWithCredentials_ || !!sendMethodOptions.xhrWithCredentials)
    }else {
      if(this.parseCsv_) {
        throw Error("CSV files on other domains are not supported. Please use sendMethod: 'xhr' or 'auto' and serve your .csv file from the same domain as this page.");
      }
      var body = document.getElementsByTagName("body")[0], isFreshQuery = goog.isNull(this.lastSignature_);
      if(this.isDasherUrl_ && isFreshQuery) {
        var img = document.createElement("img");
        this.prepareAuthImg_(img, url);
        goog.dom.appendChild(body, img)
      }else {
        this.appendScript_(url)
      }
    }
  }
};
google.visualization.Query.prototype.prepareAuthImg_ = function(img, url) {
  var self = this;
  img.onerror = function() {
    self.appendScript_(url)
  };
  img.onload = function() {
    self.appendScript_(url)
  };
  img.style.display = "none";
  var imgUrl = url + "&" + google.visualization.Query.REQUIRE_GAIA_PARAM_ + "=1&" + (new Date).getTime();
  img.src = imgUrl
};
google.visualization.Query.extractSendMethodAndOptsFromUrl_ = function(url) {
  var userSendMethod, options = {};
  if(/[?&]alt=gviz(&[^&]*)*$/.test(url)) {
    userSendMethod = google.visualization.Query.SEND_METHOD_.MAKE_REQUEST
  }else {
    var userSendMethodAndOpts = goog.uri.utils.getParamValue(url, "tqrt") || google.visualization.Query.SEND_METHOD_.AUTO, userSendMethodAndOpts = userSendMethodAndOpts.split(":");
    userSendMethod = userSendMethodAndOpts[0];
    "xhr" !== userSendMethod && "xhrpost" !== userSendMethod || !goog.array.contains(userSendMethodAndOpts, "withCredentials") || (options.xhrWithCredentials = !0);
    goog.object.contains(google.visualization.Query.SEND_METHOD_, userSendMethod) || (userSendMethod = google.visualization.Query.SEND_METHOD_.AUTO)
  }
  return{sendMethod:userSendMethod, options:options}
};
google.visualization.Query.isMakeRequestDefined_ = function() {
  return!!goog.getObjectByName("gadgets.io.makeRequest")
};
google.visualization.Query.isSameDomainUrl_ = function(location, url) {
  return goog.uri.utils.haveSameDomain(location, (new goog.Uri(location)).resolve(new goog.Uri(url)).toString())
};
google.visualization.Query.prototype.sendMakeRequestQuery_ = function(url, params) {
  var gadgets = google.visualization.Query.gadgets_;
  null == params[gadgets.io.RequestParameters.CONTENT_TYPE] && (params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.TEXT);
  null == params[gadgets.io.RequestParameters.AUTHORIZATION] && (params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.SIGNED);
  null == params.OAUTH_ENABLE_PRIVATE_NETWORK && (params.OAUTH_ENABLE_PRIVATE_NETWORK = !0);
  null == params.OAUTH_ADD_EMAIL && (params.OAUTH_ADD_EMAIL = !0);
  gadgets.io.makeRequest(url, goog.bind(this.handleMakeRequestResponse_, this), params);
  this.startCountDown()
};
google.visualization.Query.prototype.handleMakeRequestResponse_ = function(makeRequestResponse) {
  if(null != makeRequestResponse && makeRequestResponse.data) {
    gviz.json.globalEval(makeRequestResponse.data)
  }else {
    var reason = "make_request_failed", errorMessage = "gadgets.io.makeRequest failed", detailedMessage = "";
    if(makeRequestResponse && makeRequestResponse.errors) {
      var errors = makeRequestResponse.errors, detailedMessage = errors.join(" ")
    }
    this.setErrorResponse(reason, errorMessage, detailedMessage)
  }
};
google.visualization.Query.prototype.appendScript_ = function(url) {
  this.startCountDown();
  gviz.coreutils.appendScript(url);
  this.resetRefreshTimer_()
};
google.visualization.Query.prototype.startCountDown = function() {
  var self = this;
  this.clearTimeoutTimer_();
  this.timeoutTimerId_ = window.setTimeout(function() {
    self.timeoutReached_()
  }, 1E3 * this.timeoutSeconds_)
};
google.visualization.Query.prototype.stopRefreshTimer_ = function() {
  this.refreshTimerId_ && (window.clearTimeout(this.refreshTimerId_), this.refreshTimerId_ = null)
};
google.visualization.Query.prototype.resetRefreshTimer_ = function() {
  this.stopRefreshTimer_();
  if(0 != this.refreshInterval_ && this.refreshable_ && this.isActive) {
    var self = this;
    this.refreshTimerId_ = window.setTimeout(function() {
      self.sendQuery_()
    }, 1E3 * this.refreshInterval_)
  }
};
google.visualization.Query.prototype.send = function(responseHandler) {
  this.isActive = !0;
  this.responseHandler = responseHandler;
  this.sendQuery_()
};
google.visualization.Query.prototype.makeRequest = function(responseHandler, opt_params) {
  this.isActive = !0;
  this.responseHandler = responseHandler;
  this.sendMethod = "makeRequest";
  this.makeRequestParams_ = opt_params || {};
  this.sendQuery_()
};
google.visualization.Query.prototype.abort = function() {
  this.isActive = !1;
  this.clearTimeoutTimer_();
  this.stopRefreshTimer_()
};
google.visualization.Query.prototype.handleResponse_ = function(responseObj) {
  this.clearTimeoutTimer_();
  var queryResponse = new google.visualization.QueryResponse(responseObj);
  if(!queryResponse.containsReason("not_modified")) {
    this.lastSignature_ = queryResponse.isError() ? null : queryResponse.getDataSignature();
    var responseHandler = this.responseHandler;
    responseHandler.call(responseHandler, queryResponse)
  }
};
google.visualization.Query.prototype.setTimeout = function(timeoutSeconds) {
  if("number" != typeof timeoutSeconds || isNaN(timeoutSeconds) || 0 >= timeoutSeconds) {
    throw Error("Timeout must be a positive number");
  }
  this.timeoutSeconds_ = timeoutSeconds
};
google.visualization.Query.prototype.setRefreshable = function(refreshable) {
  if("boolean" != typeof refreshable) {
    throw Error("Refreshable must be a boolean");
  }
  return this.refreshable_ = refreshable
};
google.visualization.Query.prototype.setQuery = function(queryString) {
  if("string" != typeof queryString) {
    throw Error("queryString must be a string");
  }
  this.query_ = queryString
};
google.visualization.Query.prototype.setHandlerType = function(handlerType) {
  this.handlerType_ = handlerType;
  null != handlerType && this.setHandlerParameter("type", handlerType)
};
google.visualization.Query.prototype.setHandlerParameter = function(name, value) {
  name = name.replace(/\\/g, "\\\\");
  value = value.replace(/\\/g, "\\\\");
  name = name.replace(/:/g, "\\c");
  value = value.replace(/:/g, "\\c");
  name = name.replace(/;/g, "\\s");
  value = value.replace(/;/g, "\\s");
  this.handlerParameters_ || (this.handlerParameters_ = {});
  this.handlerParameters_[name] = value
};
// Input 31
google.visualization.GadgetHelper = function() {
  google.visualization.GadgetHelper.initialized_ || (google.visualization.GadgetHelper.initialized_ = !0, goog.global.IDIModule && goog.global.IDIModule.registerListener(google.visualization.Query.refreshAllQueries, {pollingInterval:google.visualization.GadgetHelper.POLLING_INTERVAL_}), goog.global.gadgets && (google.visualization.GadgetHelper.verifyRelayUrl_(google.visualization.GadgetHelper.DEFAULT_RELAY_PATH_), this.registerRpcPoll_()));
  var body = goog.dom.getElementsByTagNameAndClass("body")[0];
  this.responseValidator = gviz.coreutils.getDefaultResponseValidator(body)
};
google.visualization.GadgetHelper.PREF_NAME_SOURCE_URL_ = "_table_query_url";
google.visualization.GadgetHelper.DEFAULT_RELAY_PATH_ = "..";
google.visualization.GadgetHelper.PREF_NAME_REFRESH_INTERVAL_ = "_table_query_refresh_interval";
google.visualization.GadgetHelper.initialized_ = !1;
google.visualization.GadgetHelper.prototype.pollLimit_ = 200;
google.visualization.GadgetHelper.POLLING_INTERVAL_ = 100;
google.visualization.GadgetHelper.RPC_JS_URL_ = "http://www.gmodules.com/gadgets/rpc/rpc.v.js";
google.visualization.GadgetHelper.rpcLoaded_ = function() {
  return!!goog.global.gadgets && !!goog.global.gadgets.rpc
};
google.visualization.GadgetHelper.prototype.registerRpcPoll_ = function() {
  if(google.visualization.GadgetHelper.rpcLoaded_()) {
    var gadgets = goog.global.gadgets;
    goog.isFunction(gadgets.rpc.register) && gadgets.rpc.register("refresh", google.visualization.Query.refreshAllQueries)
  }else {
    0 < this.pollLimit_ && (this.pollLimit_--, window.setTimeout(goog.bind(this.registerRpcPoll_, this), google.visualization.GadgetHelper.POLLING_INTERVAL_))
  }
};
google.visualization.GadgetHelper.prototype.createQueryFromPrefs = function(prefs) {
  var url = prefs.getString(google.visualization.GadgetHelper.PREF_NAME_SOURCE_URL_), lowercaseUrl = url.toLowerCase();
  if(0 == lowercaseUrl.indexOf("http%") || 0 == lowercaseUrl.indexOf("https%")) {
    url = decodeURIComponent(url)
  }
  var query = new google.visualization.Query(url), interval = prefs.getInt(google.visualization.GadgetHelper.PREF_NAME_REFRESH_INTERVAL_);
  query.setRefreshInterval(interval);
  return query
};
google.visualization.GadgetHelper.prototype.validateResponse = function(response) {
  return this.responseValidator(response)
};
google.visualization.GadgetHelper.verifyRelayUrl_ = function(path) {
  if(google.visualization.GadgetHelper.rpcLoaded_()) {
    var gadgets = goog.global.gadgets;
    try {
      gadgets.rpc.getRelayUrl(path) || gadgets.rpc.setRelayUrl(path, "http://dummy.com")
    }catch(err) {
      goog.isFunction(gadgets.rpc.setRelayUrl) && gadgets.rpc.setRelayUrl(path, "http://dummy.com")
    }
  }
};
goog.global.gadgets && !google.visualization.GadgetHelper.rpcLoaded_() && gviz.coreutils.appendScript(google.visualization.GadgetHelper.RPC_JS_URL_);
google.visualization.GadgetHelper.verifyRelayUrl_(google.visualization.GadgetHelper.DEFAULT_RELAY_PATH_);
// Input 32
google.visualization.events = {};
google.visualization.events.addListener = goog.global.__gvizguard__ ? goog.getObjectByName("google.visualization.events.addListener") : function(eventSource, eventName, eventHandler) {
  var eventTarget = google.visualization.events.getEventTarget_(eventSource), key = goog.events.listen(eventTarget, eventName, google.visualization.events.createEventHandler_(eventHandler));
  return new google.visualization.events.EventListener_(key)
};
google.visualization.events.addOneTimeListener = goog.global.__gvizguard__ ? goog.getObjectByName("google.visualization.events.addOneTimeListener") : function(eventSource, eventName, eventHandler) {
  var eventTarget = google.visualization.events.getEventTarget_(eventSource), listenFunction = goog.events.listenOnce, key = listenFunction(eventTarget, eventName, google.visualization.events.createEventHandler_(eventHandler));
  return new google.visualization.events.EventListener_(key)
};
google.visualization.events.trigger = goog.global.__gvizguard__ ? goog.getObjectByName("google.visualization.events.trigger") : function(eventSource, eventName, eventDetails) {
  var eventTarget = google.visualization.events.getEventTarget_(eventSource), event = new google.visualization.events.Event_(eventName, eventDetails);
  goog.events.dispatchEvent(eventTarget, event)
};
google.visualization.events.removeListener = goog.global.__gvizguard__ ? goog.getObjectByName("google.visualization.events.removeListener") : function(listener) {
  var key = listener && goog.isFunction(listener.getKey) && listener.getKey();
  return key ? goog.events.unlistenByKey(key) : !1
};
google.visualization.events.removeAllListeners = goog.global.__gvizguard__ ? goog.getObjectByName("google.visualization.events.removeAllListeners") : function(eventSource) {
  var eventTarget = google.visualization.events.getEventTarget_(eventSource), numListners = goog.events.removeAll(eventTarget);
  google.visualization.events.clearEventTarget_(eventSource);
  return numListners
};
google.visualization.events.EVENT_TARGET_KEY_ = "__eventTarget";
google.visualization.events.getEventTarget_ = function(eventSource) {
  var eventTarget = eventSource[google.visualization.events.EVENT_TARGET_KEY_];
  return goog.isDefAndNotNull(eventTarget) ? eventTarget : google.visualization.events.createEventTarget_(eventSource)
};
google.visualization.events.createEventTarget_ = function(eventSource) {
  var eventTarget = new goog.events.EventTarget;
  return eventSource[google.visualization.events.EVENT_TARGET_KEY_] = eventTarget
};
google.visualization.events.clearEventTarget_ = function(eventSource) {
  goog.dispose(eventSource[google.visualization.events.EVENT_TARGET_KEY_]);
  eventSource[google.visualization.events.EVENT_TARGET_KEY_] = void 0
};
google.visualization.events.createEventHandler_ = function(eventHandler) {
  return function(e) {
    e && e.getEventProperties ? eventHandler(e.getEventProperties()) : eventHandler()
  }
};
google.visualization.events.EventListener_ = function(key) {
  this.key_ = key
};
google.visualization.events.EventListener_.prototype.getKey = function() {
  return this.key_
};
google.visualization.events.Event_ = function(type, properties) {
  goog.events.Event.call(this, type);
  this.properties_ = properties
};
goog.inherits(google.visualization.events.Event_, goog.events.Event);
google.visualization.events.Event_.prototype.getEventProperties = function() {
  return this.properties_
};
google.visualization.events.EventDebugger = function(level) {
  if(level !== goog.debug.Logger.Level.OFF) {
    var logger = gviz.util.VisCommon.createLogger("EventDebugger");
    logger.setLevel(level);
    var orig_listen = goog.events.listen, orig_unlistenByKey = goog.events.unlistenByKey, allListeners = [];
    goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
      if(goog.isArray(type)) {
        for(var i = 0;i < type.length;i++) {
          goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
        }
        return null
      }
      var key = orig_listen(src, type, listener, opt_capt, opt_handler);
      key.proxy && (allListeners.push(key), logger.info("listen: " + allListeners.length + " " + key.type + " " + key.src));
      return key
    };
    goog.events.unlistenByKey = function(key) {
      goog.array.remove(allListeners, key);
      key.proxy && logger.info("unlisten:" + allListeners.length + " " + key.type + " " + key.src);
      return orig_unlistenByKey(key)
    }
  }
};
goog.DEBUG && google.visualization.events.EventDebugger(goog.debug.Logger.Level.OFF);
// Input 33
gviz.predefined = {};
gviz.predefined.emptyString = function() {
  return""
};
gviz.predefined.error = function(data, row, options) {
  var column = options.sourceColumn, error = options.magnitude;
  if(!goog.isNumber(column) || !goog.isNumber(error)) {
    return null
  }
  var value = data.getValue(row, column);
  return goog.isNumber(value) ? "percent" == options.errorType ? value + value * (error / 100) : value + error : null
};
gviz.predefined.stringify = function(data, row, options) {
  var column = options.sourceColumn;
  return goog.isNumber(column) ? data.getFormattedValue(row, column) : ""
};
gviz.predefined.fillFromTop = function(data, row, options) {
  var column = options.sourceColumn;
  return goog.isNumber(column) ? google.visualization.datautils.findNonNullValueInColumn(data, row, column, !0) : null
};
gviz.predefined.fillFromBottom = function(data, row, options) {
  var column = options.sourceColumn;
  return goog.isNumber(column) ? google.visualization.datautils.findNonNullValueInColumn(data, row, column, !1) : null
};
gviz.predefined.identity = function(data, row, options) {
  var column = options.sourceColumn;
  return goog.isNumber(column) ? data.getValue(row, column) : null
};
// Input 34
google.visualization.DataView = function(dataTable) {
  this.dataTable_ = dataTable;
  for(var colIndices = [], numCols = dataTable.getNumberOfColumns(), c = 0;c < numCols;c++) {
    colIndices.push(c)
  }
  this.columns_ = colIndices;
  this.isAllRows_ = !0;
  this.rowIndices_ = null;
  this.calcColumnsCache_ = [];
  this.cacheIsDirty_ = !0
};
google.visualization.DataView.normalizeColumns_ = function(data, columns) {
  for(var i = 0;i < columns.length;i++) {
    var column = columns[i];
    if(goog.isObject(column)) {
      var role = column.role;
      if(role) {
        var properties = column.properties || {};
        properties.role = role;
        column.properties = properties
      }
      var sourceColumn = column.sourceColumn;
      goog.isNumber(sourceColumn) && (google.visualization.datautils.validateColumnIndex(data, sourceColumn), column.calc = column.calc || "identity", column.type = column.type || data.getColumnType(sourceColumn))
    }
  }
};
google.visualization.DataView.prototype.resetCalcColumnsCache_ = function() {
  for(var i = 0;i < this.columns_.length;i++) {
    var col = this.columns_[i];
    goog.isObject(col) && (this.calcColumnsCache_[i] = [])
  }
  this.cacheIsDirty_ = !1
};
google.visualization.DataView.prototype.invalidateCalcColumnsCache_ = function() {
  this.cacheIsDirty_ = !0
};
google.visualization.DataView.prototype.initRowIndices_ = function() {
  for(var rowIndices = [], numRows = this.dataTable_.getNumberOfRows(), r = 0;r < numRows;r++) {
    rowIndices.push(r)
  }
  this.rowIndices_ = rowIndices;
  this.invalidateCalcColumnsCache_()
};
google.visualization.DataView.prototype.setColumns = function(columns) {
  google.visualization.datautils.validateColumnSet(this.dataTable_, goog.object.getKeys(google.visualization.DataView.FUNCTIONS_), columns);
  this.columns_ = goog.object.unsafeClone(columns);
  google.visualization.DataView.normalizeColumns_(this.dataTable_, this.columns_);
  this.invalidateCalcColumnsCache_()
};
google.visualization.DataView.prototype.standardizeRowIndices_ = function(arg0, opt_arg1) {
  if(goog.isArray(arg0)) {
    if(goog.isDef(opt_arg1)) {
      throw Error("If the first parameter is an array, no second parameter is expected");
    }
    for(var i = 0;i < arg0.length;i++) {
      google.visualization.datautils.validateRowIndex(this.dataTable_, arg0[i])
    }
    return goog.array.clone(arg0)
  }
  if("number" == goog.typeOf(arg0)) {
    if("number" == !goog.typeOf(opt_arg1)) {
      throw Error("If first parameter is a number, second parameter must be specified and be a number.");
    }
    if(arg0 > opt_arg1) {
      throw Error("The first parameter (min) must be smaller than or equal to the second parameter (max).");
    }
    google.visualization.datautils.validateRowIndex(this.dataTable_, arg0);
    google.visualization.datautils.validateRowIndex(this.dataTable_, opt_arg1);
    for(var result = [], i = arg0;i <= opt_arg1;i++) {
      result.push(i)
    }
    return result
  }
  throw Error("First parameter must be a number or an array.");
};
google.visualization.DataView.prototype.setRows = function(arg0, opt_arg1) {
  this.rowIndices_ = this.standardizeRowIndices_(arg0, opt_arg1);
  this.isAllRows_ = !1;
  this.invalidateCalcColumnsCache_()
};
google.visualization.DataView.prototype.getViewColumns = function() {
  var cols = goog.object.unsafeClone(this.columns_);
  return cols
};
google.visualization.DataView.prototype.getViewRows = function() {
  if(this.isAllRows_) {
    for(var result = [], numRows = this.dataTable_.getNumberOfRows(), i = 0;i < numRows;i++) {
      result.push(i)
    }
    return result
  }
  return goog.array.clone(this.rowIndices_)
};
google.visualization.DataView.prototype.hideColumns = function(colIndices) {
  this.setColumns(goog.array.filter(this.columns_, function(e) {
    return!goog.array.contains(colIndices, e)
  }));
  this.invalidateCalcColumnsCache_()
};
google.visualization.DataView.prototype.hideRows = function(arg0, opt_arg1) {
  var rowIndices = this.standardizeRowIndices_(arg0, opt_arg1);
  this.isAllRows_ && (this.initRowIndices_(), this.isAllRows_ = !1);
  this.setRows(goog.array.filter(this.rowIndices_, function(e) {
    return!goog.array.contains(rowIndices, e)
  }));
  this.invalidateCalcColumnsCache_()
};
google.visualization.DataView.prototype.getViewColumnIndex = function(tableColumnIndex) {
  for(var i = 0;i < this.columns_.length;i++) {
    var column = this.columns_[i];
    if(column == tableColumnIndex || goog.isObject(column) && column.sourceColumn == tableColumnIndex) {
      return i
    }
  }
  return-1
};
google.visualization.DataView.prototype.getViewRowIndex = function(tableRowIndex) {
  return this.isAllRows_ ? 0 > tableRowIndex || tableRowIndex >= this.dataTable_.getNumberOfRows() ? -1 : tableRowIndex : goog.array.indexOf(this.rowIndices_, tableRowIndex)
};
google.visualization.DataView.prototype.getTableColumnIndex = function(viewColumnIndex) {
  google.visualization.datautils.validateColumnIndex(this, viewColumnIndex);
  var col = this.columns_[viewColumnIndex];
  return goog.isNumber(col) ? col : goog.isObject(col) && goog.isNumber(col.sourceColumn) ? col.sourceColumn : -1
};
google.visualization.DataView.prototype.getUnderlyingTableColumnIndex = function(viewColumnIndex) {
  var columnIndex = this.getTableColumnIndex(viewColumnIndex);
  return-1 == columnIndex ? columnIndex : columnIndex = this.dataTable_.getUnderlyingTableColumnIndex(columnIndex)
};
google.visualization.DataView.prototype.getTableRowIndex = function(viewRowIndex) {
  google.visualization.datautils.validateRowIndex(this, viewRowIndex);
  return this.isAllRows_ ? viewRowIndex : this.rowIndices_[viewRowIndex]
};
google.visualization.DataView.prototype.getUnderlyingTableRowIndex = function(viewRowIndex) {
  var rowIndex = this.getTableRowIndex(viewRowIndex);
  return rowIndex = this.dataTable_.getUnderlyingTableRowIndex(rowIndex)
};
google.visualization.DataView.prototype.getNumberOfRows = function() {
  return this.isAllRows_ ? this.dataTable_.getNumberOfRows() : this.rowIndices_.length
};
google.visualization.DataView.prototype.getNumberOfColumns = function() {
  return this.columns_.length
};
google.visualization.DataView.prototype.getColumnId = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var col = this.columns_[columnIndex];
  return goog.isNumber(col) ? this.dataTable_.getColumnId(col) : col.id || ""
};
google.visualization.DataView.prototype.getColumnIndex = function(columnId) {
  for(var i = 0;i < this.columns_.length;i++) {
    var col = this.columns_[i];
    if(goog.isObject(col) && col.id == columnId) {
      return i
    }
  }
  var dtColIdx = this.dataTable_.getColumnIndex(columnId);
  return this.getViewColumnIndex(dtColIdx)
};
google.visualization.DataView.prototype.getColumnLabel = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var col = this.columns_[columnIndex];
  return goog.isNumber(col) ? this.dataTable_.getColumnLabel(col) : col.label || ""
};
google.visualization.DataView.prototype.getColumnPattern = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var col = this.columns_[columnIndex];
  return goog.isNumber(col) ? this.dataTable_.getColumnPattern(col) : null
};
google.visualization.DataView.prototype.getColumnRole = function(columnIndex) {
  var role = this.getColumnProperty(columnIndex, "role");
  return role = goog.isString(role) ? role : ""
};
google.visualization.DataView.prototype.getColumnType = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var col = this.columns_[columnIndex];
  return goog.isNumber(col) ? this.dataTable_.getColumnType(col) : col.type
};
google.visualization.DataView.prototype.calcCell_ = function(innerRowIndex, columnIndex) {
  this.cacheIsDirty_ && this.resetCalcColumnsCache_();
  var cachedCell = this.calcColumnsCache_[columnIndex][innerRowIndex];
  if(goog.isDef(cachedCell)) {
    return cachedCell
  }
  var retCell = null, col = this.columns_[columnIndex], calc = col.calc;
  goog.isString(calc) ? (calc = google.visualization.DataView.FUNCTIONS_[calc], retCell = calc(this.dataTable_, innerRowIndex, col)) : goog.isFunction(calc) && (retCell = calc.call(null, this.dataTable_, innerRowIndex));
  retCell = google.visualization.datautils.parseCell(retCell);
  this.validateCellType_(retCell, col.type);
  return this.calcColumnsCache_[columnIndex][innerRowIndex] = retCell
};
google.visualization.DataView.prototype.validateCellType_ = function(cell, columnType) {
  var value = cell.v;
  if(goog.string.isEmptySafe(columnType)) {
    throw Error('"type" must be specified');
  }
  if(!google.visualization.datautils.checkValueType(value, columnType)) {
    throw Error("Type mismatch. Value " + value + " does not match type " + columnType);
  }
};
google.visualization.DataView.prototype.getCell_ = function(rowIndex, columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var col = this.columns_[columnIndex], cell = null, innerRowIndex = this.getTableRowIndex(rowIndex);
  if(goog.isObject(col)) {
    cell = this.calcCell_(innerRowIndex, columnIndex), cell.p = goog.isObject(cell.p) ? cell.p : {}
  }else {
    if(goog.isNumber(col)) {
      cell = {v:this.dataTable_.getValue(innerRowIndex, col), f:null, p:null}
    }else {
      throw Error("Invalid column definition: " + cell);
    }
  }
  return cell
};
google.visualization.DataView.prototype.getValue = function(rowIndex, columnIndex) {
  return this.getCell_(rowIndex, columnIndex).v
};
google.visualization.DataView.prototype.getFormattedValue = function(rowIndex, columnIndex) {
  var cell = this.getCell_(rowIndex, columnIndex);
  if(!goog.isDefAndNotNull(cell.f)) {
    var col = this.columns_[columnIndex];
    if(goog.isObject(col)) {
      var type = this.getColumnType(columnIndex);
      cell.f = null != cell.v ? google.visualization.datautils.getDefaultFormattedValue(cell.v, type) : ""
    }else {
      if(goog.isNumber(col)) {
        var innerRowIndex = this.getTableRowIndex(rowIndex);
        cell.f = this.dataTable_.getFormattedValue(innerRowIndex, col)
      }
    }
  }
  return cell.f
};
google.visualization.DataView.prototype.getProperty = function(rowIndex, columnIndex, property) {
  var res = this.getProperties(rowIndex, columnIndex)[property];
  return goog.isDef(res) ? res : null
};
google.visualization.DataView.prototype.getProperties = function(rowIndex, columnIndex) {
  var cell = this.getCell_(rowIndex, columnIndex);
  if(!cell.p) {
    var innerRowIndex = this.getTableRowIndex(rowIndex), innerColIndex = this.getTableColumnIndex(columnIndex);
    return this.dataTable_.getProperties(innerRowIndex, innerColIndex)
  }
  return cell.p
};
google.visualization.DataView.prototype.getColumnProperty = function(columnIndex, property) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var col = this.columns_[columnIndex];
  return goog.isNumber(col) ? this.dataTable_.getColumnProperty(col, property) : this.getColumnProperties(columnIndex)[property] || null
};
google.visualization.DataView.prototype.getColumnProperties = function(columnIndex) {
  google.visualization.datautils.validateColumnIndex(this, columnIndex);
  var col = this.columns_[columnIndex];
  return goog.isNumber(col) ? this.dataTable_.getColumnProperties(col) : col.properties || {}
};
google.visualization.DataView.prototype.getTableProperty = function(property) {
  return this.dataTable_.getTableProperty(property)
};
google.visualization.DataView.prototype.getTableProperties = function() {
  return this.dataTable_.getTableProperties()
};
google.visualization.DataView.prototype.getRowProperty = function(rowIndex, property) {
  var innerRowIndex = this.getTableRowIndex(rowIndex);
  return this.dataTable_.getRowProperty(innerRowIndex, property)
};
google.visualization.DataView.prototype.getRowProperties = function(rowIndex) {
  google.visualization.datautils.validateRowIndex(this, rowIndex);
  var innerRowIndex = this.getTableRowIndex(rowIndex);
  return this.dataTable_.getRowProperties(innerRowIndex)
};
google.visualization.DataView.prototype.getColumnRange = function(columnIndex) {
  return google.visualization.datautils.getColumnRange(this, columnIndex)
};
google.visualization.DataView.prototype.getDistinctValues = function(columnIndex) {
  return google.visualization.datautils.getDistinctValues(this, columnIndex)
};
google.visualization.DataView.prototype.getSortedRows = function(sortColumns) {
  return google.visualization.datautils.getSortedRows(this, sortColumns)
};
google.visualization.DataView.prototype.getFilteredRows = function(columnFilters) {
  return google.visualization.datautils.getFilteredRows(this, columnFilters)
};
google.visualization.DataView.prototype.toDataTable = function() {
  var dataTable = this.dataTable_;
  goog.isFunction(dataTable.toDataTable) && (dataTable = dataTable.toDataTable());
  var result = dataTable.toPOJO(), numberOfColumns = this.getNumberOfColumns(), numberOfRows = this.getNumberOfRows(), toColumnIndex, toRowIndex, viewColumn, columns = [], rows = [];
  for(toColumnIndex = 0;toColumnIndex < numberOfColumns;toColumnIndex++) {
    viewColumn = this.columns_[toColumnIndex];
    var columnSpecification;
    if(goog.isObject(viewColumn)) {
      columnSpecification = goog.object.clone(viewColumn), delete columnSpecification.calc, delete columnSpecification.sourceColumn
    }else {
      if(goog.isNumber(viewColumn)) {
        columnSpecification = result.cols[viewColumn]
      }else {
        throw Error("Invalid DataView column type.");
      }
    }
    columns.push(columnSpecification)
  }
  for(toRowIndex = 0;toRowIndex < numberOfRows;toRowIndex++) {
    var fromRowIndex = this.isAllRows_ ? toRowIndex : this.rowIndices_[toRowIndex], row = result.rows[fromRowIndex], cells = [];
    for(toColumnIndex = 0;toColumnIndex < numberOfColumns;toColumnIndex++) {
      viewColumn = this.columns_[toColumnIndex];
      var cell;
      if(goog.isObject(viewColumn)) {
        cell = {v:this.getValue(toRowIndex, toColumnIndex)}
      }else {
        if(goog.isNumber(viewColumn)) {
          cell = row.c[this.columns_[toColumnIndex]]
        }else {
          throw Error("Invalid DataView column type.");
        }
      }
      cells.push(cell)
    }
    row.c = cells;
    rows.push(row)
  }
  result.cols = columns;
  result.rows = rows;
  return result = new google.visualization.DataTable(result)
};
google.visualization.DataView.prototype.toPOJO = function() {
  for(var ret = {}, cols = [], i = 0;i < this.columns_.length;i++) {
    var col = this.columns_[i];
    goog.isObject(col) && !goog.isString(col.calc) || cols.push(col)
  }
  goog.array.isEmpty(cols) || (ret.columns = cols);
  this.isAllRows_ || (ret.rows = goog.array.clone(this.rowIndices_));
  return ret
};
google.visualization.DataView.prototype.toJSON = function() {
  return gviz.json.serialize(this.toPOJO())
};
google.visualization.DataView.fromJSON = function(data, viewAsJson) {
  goog.isString(viewAsJson) && (viewAsJson = gviz.json.deserialize(viewAsJson));
  var view = new google.visualization.DataView(data), columns = viewAsJson.columns, rows = viewAsJson.rows;
  goog.isDefAndNotNull(columns) && view.setColumns(columns);
  goog.isDefAndNotNull(rows) && view.setRows(rows);
  return view
};
google.visualization.DataView.FUNCTIONS_ = {emptyString:gviz.predefined.emptyString, error:gviz.predefined.error, stringify:gviz.predefined.stringify, fillFromTop:gviz.predefined.fillFromTop, fillFromBottom:gviz.predefined.fillFromBottom, identity:gviz.predefined.identity};
// Input 35
gviz.ErrorHandler = function(visualization, container, opt_createFloatingDiv) {
  this.visualization_ = visualization;
  this.container_ = container;
  var computedPosition = goog.style.getComputedPosition(container);
  "" != computedPosition && "static" != computedPosition || goog.style.setStyle(container, "position", "relative");
  this.errorDiv_ = null;
  var createFloatingDiv = !!opt_createFloatingDiv;
  createFloatingDiv && (this.errorDiv_ = goog.dom.createDom("div", {style:"position: absolute; top: 0; left: 0; z-index: 1;"}))
};
gviz.ErrorHandler.prototype.getTargetElement_ = function() {
  return this.errorDiv_ ? (this.errorDiv_.parentNode != this.container_ && goog.dom.appendChild(this.container_, this.errorDiv_), this.errorDiv_) : this.container_
};
gviz.ErrorHandler.prototype.addError = function(message) {
  this.addMessage_(message, "error")
};
gviz.ErrorHandler.prototype.addWarning = function(message) {
  this.addMessage_(message, "warning")
};
gviz.ErrorHandler.prototype.addMessage_ = function(message, type) {
  var element = this.getTargetElement_(), errorOptions = {removable:!0, type:type}, id = google.visualization.errors.addError(element, message, null, errorOptions), eventOptions = {id:id, message:message, detailedMessage:"", options:errorOptions};
  google.visualization.events.trigger(this.visualization_, "error", eventOptions)
};
gviz.ErrorHandler.prototype.removeAll = function() {
  var element = this.getTargetElement_();
  google.visualization.errors.removeAll(element)
};
gviz.ErrorHandler.prototype.safeExecute = function(func, opt_obj) {
  if(goog.DEBUG) {
    return func.call(opt_obj)
  }
  try {
    return func.call(opt_obj)
  }catch(e) {
    this.addError(e.message)
  }
};
// Input 36
gviz.AsyncHelper = function(errorHandler) {
  this.errorHandler_ = errorHandler;
  this.isCanceled_ = !1
};
gviz.AsyncHelper.prototype.wrapCallback = function(func, opt_obj) {
  return goog.bind(function() {
    if(!this.isCanceled_) {
      var args = arguments;
      this.errorHandler_.safeExecute(function() {
        func.apply(opt_obj, args)
      })
    }
  }, this)
};
gviz.AsyncHelper.prototype.cancelPendingCallbacks = function() {
  this.isCanceled_ = !0
};
// Input 37
google.visualization.AbstractVisualization = function(container) {
  goog.Disposable.call(this);
  this.container = gviz.util.VisCommon.validateContainer(container);
  this.errorHandler = new gviz.ErrorHandler(this, this.container);
  this.asyncHelper_ = null
};
goog.inherits(google.visualization.AbstractVisualization, goog.Disposable);
google.visualization.AbstractVisualization.prototype.getContainer = function() {
  return this.container
};
google.visualization.AbstractVisualization.prototype.draw = function(dataTable, opt_options, opt_state) {
  this.errorHandler.safeExecute(goog.bind(function() {
    this.draw_(dataTable, opt_options, opt_state)
  }, this))
};
google.visualization.AbstractVisualization.prototype.draw_ = function(dataTable, opt_options, opt_state) {
  if(!dataTable) {
    throw Error("Data table is not defined.");
  }
  this.asyncHelper_ && this.asyncHelper_.cancelPendingCallbacks();
  this.asyncHelper_ = new gviz.AsyncHelper(this.errorHandler);
  var asyncWrapper = goog.bind(this.asyncHelper_.wrapCallback, this.asyncHelper_);
  this.drawInternal(asyncWrapper, dataTable, opt_options, opt_state)
};
google.visualization.AbstractVisualization.prototype.clearChart = function() {
  this.asyncHelper_ && (this.asyncHelper_.cancelPendingCallbacks(), this.asyncHelper_ = null);
  this.clearInternal()
};
// Input 38
google.visualization.QueryWrapper = function(query, abstractVisualization, options, container) {
  this.query_ = query;
  this.visualization_ = abstractVisualization;
  this.options_ = options || {};
  this.container_ = container;
  this.errorHandler_ = null;
  container && (this.errorHandler_ = this.defaultErrorHandler_ = gviz.coreutils.getDefaultResponseValidator(container));
  if(!(abstractVisualization && "draw" in abstractVisualization && "function" == typeof abstractVisualization.draw)) {
    throw Error("Visualization must have a draw method.");
  }
};
google.visualization.QueryWrapper.prototype.defaultErrorHandler_ = null;
google.visualization.QueryWrapper.prototype.customResponseHandler_ = null;
google.visualization.QueryWrapper.prototype.customPostResponseHandler_ = null;
google.visualization.QueryWrapper.prototype.dataTable_ = null;
google.visualization.QueryWrapper.prototype.setOptions = function(options) {
  this.options_ = options || {}
};
google.visualization.QueryWrapper.prototype.draw = function() {
  this.dataTable_ && this.visualization_.draw(this.dataTable_, this.options_)
};
google.visualization.QueryWrapper.prototype.setCustomErrorHandler = function(customErrorHandler) {
  var container = this.container_;
  this.errorHandler_ = customErrorHandler ? customErrorHandler : container ? this.errorHandler_ = this.defaultErrorHandler_ : null
};
google.visualization.QueryWrapper.prototype.sendAndDraw = function() {
  if(!this.errorHandler_) {
    throw Error("If no container was supplied, a custom error handler must be supplied instead.");
  }
  var query = this.query_, self = this;
  query.send(function(response) {
    var customResponseHandler = self.customResponseHandler_;
    customResponseHandler && customResponseHandler(response);
    self.handleResponse_(response);
    var customPostResponseHandler = self.customPostResponseHandler_;
    customPostResponseHandler && customPostResponseHandler(response)
  })
};
google.visualization.QueryWrapper.prototype.handleResponse_ = function(response) {
  var nonNullErrorHandler = this.errorHandler_;
  nonNullErrorHandler(response) && (this.dataTable_ = response.getDataTable(), this.visualization_.draw(this.dataTable_, this.options_))
};
google.visualization.QueryWrapper.prototype.setCustomResponseHandler = function(handler) {
  if(null != handler) {
    if("function" != typeof handler) {
      throw Error("Custom response handler must be a function.");
    }
    this.customResponseHandler_ = handler
  }
};
google.visualization.QueryWrapper.prototype.setCustomPostResponseHandler = function(handler) {
  if(null != handler) {
    if("function" != typeof handler) {
      throw Error("Custom post response handler must be a function.");
    }
    this.customPostResponseHandler_ = handler
  }
};
google.visualization.QueryWrapper.prototype.abort = function() {
  this.query_.abort()
};
// Input 39
google.visualization.CustomQuery = function(requestHandler, dataSourceUrl) {
  this.dataSourceUrl_ = dataSourceUrl;
  this.requestHandler_ = requestHandler
};
google.visualization.CustomQuery.prototype.send = function(responseHandler) {
  this.responseHandler = responseHandler;
  this.sendQuery_()
};
google.visualization.CustomQuery.prototype.addModifiersToUrl_ = function(url) {
  var parametersToAdd = {}, additionalParameters, signature = this.lastSignature_;
  signature && (additionalParameters = "sig:" + signature);
  additionalParameters && (parametersToAdd.tqx = additionalParameters, url = google.visualization.Query.overrideUrlParameters(url, parametersToAdd));
  return url
};
google.visualization.CustomQuery.prototype.sendQuery_ = function() {
  var url = this.addModifiersToUrl_(this.dataSourceUrl_);
  this.requestHandler_.call(this, goog.bind(this.handleResponse_, this), url)
};
google.visualization.CustomQuery.prototype.handleResponse_ = function(responseObj) {
  var queryResponse = new google.visualization.QueryResponse(responseObj);
  if(!queryResponse.containsReason("not_modified")) {
    this.lastSignature_ = queryResponse.isError() ? null : queryResponse.getDataSignature();
    var responseHandler = this.responseHandler;
    responseHandler.call(responseHandler, queryResponse)
  }
};
// Input 40
gviz.ParsedQuery = function(parsedQueryObj) {
  this.table_ = parsedQueryObj.table || null;
  this.selection_ = parsedQueryObj.selection || null;
  this.group_ = parsedQueryObj.group || null;
  this.options_ = parsedQueryObj.options || null;
  this.labels_ = parsedQueryObj.labels || null;
  this.format_ = parsedQueryObj.format || null
};
gviz.ParsedQuery.Column = function(columnObj) {
  this.columnId_ = columnObj.columnId
};
gviz.ParsedQuery.Column.AggregationType = {SUM:"sum", COUNT:"count", MIN:"min", MAX:"max", AVG:"avg"};
gviz.ParsedQuery.Column.prototype.getColumnId = function() {
  return this.columnId_
};
gviz.ParsedQuery.prototype.getTable = function() {
  return this.table_
};
gviz.ParsedQuery.prototype.getSelection = function() {
  return this.selection_
};
gviz.ParsedQuery.prototype.getOptions = function() {
  return this.options_
};
gviz.ParsedQuery.prototype.getFormat = function() {
  return this.format_
};
// Input 41
// Input 42
goog.structs.Queue = function() {
  this.tail_ = this.head_ = 0;
  this.elements_ = []
};
goog.structs.Queue.prototype.enqueue = function(element) {
  this.elements_[this.tail_++] = element
};
goog.structs.Queue.prototype.dequeue = function() {
  if(this.head_ != this.tail_) {
    var result = this.elements_[this.head_];
    delete this.elements_[this.head_];
    this.head_++;
    return result
  }
};
goog.structs.Queue.prototype.peek = function() {
  return this.head_ == this.tail_ ? void 0 : this.elements_[this.head_]
};
goog.structs.Queue.prototype.getCount = function() {
  return this.tail_ - this.head_
};
goog.structs.Queue.prototype.isEmpty = function() {
  return 0 == this.tail_ - this.head_
};
goog.structs.Queue.prototype.clear = function() {
  this.tail_ = this.head_ = this.elements_.length = 0
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.elements_, obj)
};
goog.structs.Queue.prototype.remove = function(obj) {
  var index = goog.array.indexOf(this.elements_, obj);
  if(0 > index) {
    return!1
  }
  index == this.head_ ? this.dequeue() : (goog.array.removeAt(this.elements_, index), this.tail_--);
  return!0
};
goog.structs.Queue.prototype.getValues = function() {
  return this.elements_.slice(this.head_, this.tail_)
};
// Input 43
gviz.util.BatchGeocoder = function() {
  this.logger_ = goog.debug.Logger.getLogger("gviz.util.BatchGeocoder");
  this.logger_.setLevel(goog.debug.Logger.Level.ALL);
  if(!goog.getObjectByName("google.maps.Geocoder")) {
    throw Error("your page is missing the google maps API");
  }
  this.geocoder_ = new google.maps.Geocoder;
  this.cache_ = {};
  this.cache_[goog.json.serialize({address:""})] = {response:[], status:google.maps.GeocoderStatus.ZERO_RESULTS};
  this.activeRequests_ = new goog.structs.Set;
  this.requestHandlerMap_ = new goog.structs.Map;
  this.pendingRequests_ = new goog.structs.Queue
};
goog.addSingletonGetter(gviz.util.BatchGeocoder);
gviz.util.BatchGeocoder.MAX_REQUESTS = 400;
gviz.util.BatchGeocoder.BatchRequest = function(requests, callback, opt_batchSize) {
  this.requests_ = requests || [];
  this.requestPointer_ = 0;
  this.callback_ = callback;
  this.cancelled_ = !1;
  this.responses_ = new goog.structs.Map;
  this.batchSize_ = opt_batchSize || this.requests_.length
};
gviz.util.BatchGeocoder.BatchRequest.prototype.getRequests = function() {
  return this.requests_
};
gviz.util.BatchGeocoder.BatchRequest.prototype.isCancelled = function() {
  return this.cancelled_
};
gviz.util.BatchGeocoder.BatchRequest.prototype.cancel = function() {
  this.cancelled_ = !0
};
gviz.util.BatchGeocoder.BatchRequest.prototype.finish = function(request, response) {
  var serializedRequest = goog.json.serialize(request);
  this.responses_.containsKey(serializedRequest) || this.responses_.set(serializedRequest, response);
  var batchedResponses = [];
  if(!this.cancelled_) {
    for(var size = Math.min(this.requestPointer_ + this.batchSize_, this.requests_.length), i = this.requestPointer_;i < size;i++) {
      var addr = goog.json.serialize(this.requests_[i]);
      if(!this.responses_.containsKey(addr)) {
        return
      }
      var res = this.responses_.get(addr);
      goog.isDefAndNotNull(res) && (res = res.response);
      batchedResponses.push(res)
    }
    this.requestPointer_ += batchedResponses.length;
    this.callback_(batchedResponses);
    this.requestPointer_ >= this.requests_.length && this.cancel()
  }
};
gviz.util.BatchGeocoder.RequestGroup = function() {
  this.requests_ = [];
  this.geocoder_ = null
};
gviz.util.BatchGeocoder.RequestGroup.prototype.add = function(request) {
  this.requests_.push(request)
};
gviz.util.BatchGeocoder.RequestGroup.prototype.create = function(requests, callback, opt_batchSize) {
  if(goog.isDefAndNotNull(this.geocoder_)) {
    var request = new gviz.util.BatchGeocoder.BatchRequest(requests, callback, opt_batchSize);
    this.add(request);
    this.geocoder_.geocode(request)
  }else {
    gviz.util.VisCommon.loadMapsApi(goog.bind(function() {
      goog.isDefAndNotNull(this.geocoder_) || (this.geocoder_ = gviz.util.BatchGeocoder.getInstance());
      this.create(requests, callback, opt_batchSize)
    }, this))
  }
};
gviz.util.BatchGeocoder.RequestGroup.prototype.cancel = function() {
  goog.array.forEach(this.requests_, function(request) {
    request.cancel()
  });
  this.requests_ = []
};
gviz.util.BatchGeocoder.prototype.geocode = function(request) {
  var addresses = request.getRequests();
  goog.array.forEach(addresses, goog.bind(function(address) {
    var serializedAddress = goog.json.serialize(address);
    if(serializedAddress in this.cache_) {
      var response = this.cache_[serializedAddress];
      request.finish(address, response)
    }else {
      this.requestHandlerMap_.containsKey(serializedAddress) || (this.pendingRequests_.enqueue(address), this.requestHandlerMap_.set(serializedAddress, [])), this.requestHandlerMap_.get(serializedAddress).push(request)
    }
  }, this));
  this.geocodeNextRequest_()
};
gviz.util.BatchGeocoder.prototype.geocodeNextRequest_ = function() {
  if(0 !== this.pendingRequests_.getCount() || 0 !== this.activeRequests_.getCount()) {
    var address = 0 < this.activeRequests_.getCount() ? goog.json.parse(this.activeRequests_.getValues()[0]) : this.pendingRequests_.peek(), serializedAddress = goog.json.serialize(address);
    if(serializedAddress in this.cache_) {
      var requests = this.requestHandlerMap_.get(serializedAddress), response = this.cache_[serializedAddress];
      this.pendingRequests_.dequeue();
      this.handleRequestResolved_(address, response.response, response.status);
      this.requestHandlerMap_.remove(serializedAddress)
    }else {
      0 === this.activeRequests_.getCount() && 0 < this.pendingRequests_.getCount() ? (this.pendingRequests_.dequeue(), requests = this.requestHandlerMap_.get(serializedAddress), goog.array.every(requests, function(request) {
        return request.isCancelled()
      }) ? this.handleRequestResolved_(address, null, null) : (this.activeRequests_.add(serializedAddress), this.doGeocode_(address, goog.bind(this.handleRequestResolved_, this, address)))) : 0 < this.activeRequests_.getCount() && this.doGeocode_(address, goog.bind(this.handleRequestResolved_, this, address))
    }
  }
};
gviz.util.BatchGeocoder.prototype.doGeocode_ = function(address, callback) {
  if(goog.isObject(address) && (address = goog.object.unsafeClone(address), address.bounds)) {
    var bounds = address.bounds;
    address.bounds = new google.maps.LatLngBounds(new google.maps.LatLng(bounds.lo.lat, bounds.lo.lng), new google.maps.LatLng(bounds.hi.lat, bounds.hi.lng))
  }
  this.geocoder_.geocode(address, callback)
};
gviz.util.BatchGeocoder.prototype.completeRequest_ = function(request, response) {
  var serializedRequest = goog.json.serialize(request), requests = this.requestHandlerMap_.get(serializedRequest);
  goog.isDefAndNotNull(requests) && goog.array.forEach(requests, function(req) {
    req.isCancelled() || req.finish(request, response)
  });
  this.activeRequests_.remove(serializedRequest);
  this.requestHandlerMap_.remove(serializedRequest)
};
gviz.util.BatchGeocoder.prototype.handleRequestResolved_ = function(request, response, status) {
  var delay = 0, requestType = request.latLng ? "latLng" : "address", requestString = request[requestType];
  if(status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {
    this.logger_.info("query refused, retrying: " + requestString), delay = 520
  }else {
    if(status == google.maps.GeocoderStatus.OK) {
      var serializedRequest = goog.json.serialize(request);
      this.logger_.info("Added " + serializedRequest + " to the cache.");
      var responseObject = {response:response, status:status};
      this.cache_[serializedRequest] = responseObject;
      var responseString = "address" == requestType ? response[0].geometry.location.toString() : response[0].formatted_address;
      this.logger_.info("geocoding response for " + requestString + ": " + responseString);
      this.completeRequest_(request, responseObject)
    }else {
      this.logger_.warning("error " + status + " in geocoding " + requestString), this.completeRequest_(request, null)
    }
  }
  this.isCanceled_ = !1;
  goog.Timer.callOnce(goog.bind(this.geocodeNextRequest_, this), delay, this)
};
// Input 44
gviz.DataFormat = function() {
};
gviz.DataFormat.MAX_ROWS_FOR_DETECTION = 20;
gviz.DataFormat.MAX_ROWS_FOR_GEO_DETECTION = 10;
gviz.DataFormat.prototype.validateDataTable = function(dataTable) {
  if(!(goog.isObject(dataTable) && goog.isFunction(dataTable.getNumberOfColumns) && goog.isFunction(dataTable.getNumberOfRows))) {
    throw Error("Invalid data table.");
  }
};
gviz.DataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? Fitness.MEDIUM : Fitness.NONE
};
gviz.DataFormat.prototype.isEnumLike = function(dataTable, column) {
  if(!this.matchType(dataTable, column, "string")) {
    return!1
  }
  for(var set = {}, countDistinct = 0, n = Math.min(dataTable.getNumberOfRows(), gviz.DataFormat.MAX_ROWS_FOR_DETECTION), row = 0;row < n;row++) {
    var value = dataTable.getValue(row, column);
    set[value] || countDistinct++;
    set[value] = !0
  }
  return 10 > countDistinct
};
gviz.DataFormat.prototype.matchType = function(dataTable, index, type) {
  return dataTable.getNumberOfColumns() > index && type == dataTable.getColumnType(index)
};
gviz.DataFormat.prototype.matchTypes = function(dataTable, index, types) {
  for(var i = 0;i < types.length;i++) {
    if(this.matchType(dataTable, index, types[i])) {
      return!0
    }
  }
  return!1
};
gviz.DataFormat.prototype.indexOf = function(dataTable, type) {
  for(var i = 0;i < dataTable.getNumberOfColumns();i++) {
    if(dataTable.getColumnType(i) == type) {
      return i
    }
  }
  return-1
};
gviz.DataFormat.prototype.columnsTypesMatch = function(dataTable, columnNumbers, columnTypes) {
  goog.asserts.assert(columnNumbers.length == columnTypes.length);
  for(var i = 0;i < columnNumbers.length;++i) {
    var columnNumber = columnNumbers[i];
    if(columnNumber >= dataTable.getNumberOfColumns() || dataTable.getColumnType(columnNumber) != columnTypes[i]) {
      return!1
    }
  }
  return!0
};
gviz.DataFormat.prototype.checkPositiveColumn = function(dataTable, index) {
  return this.matchType(dataTable, index, "number") ? this.checkColumn(dataTable, index, function(value) {
    return 0 <= value
  }) : !1
};
gviz.DataFormat.prototype.checkColumn = function(dataTable, index, checkValue) {
  for(var numRows = Math.min(dataTable.getNumberOfRows(), gviz.DataFormat.MAX_ROWS_FOR_DETECTION), i = 0;i < numRows;i++) {
    var value = dataTable.getValue(i, index);
    if(null != value && !checkValue(value)) {
      return!1
    }
  }
  return!0
};
gviz.DataFormat.prototype.checkLatLng = function(dataTable, index, index2) {
  if(!this.matchType(dataTable, index, "number") || !this.matchType(dataTable, index2, "number")) {
    return!1
  }
  var lat = goog.bind(this.checkLatValue_, this), lng = goog.bind(this.checkLngValue_, this);
  return this.checkColumn(dataTable, index, lat) && this.checkColumn(dataTable, index2, lng)
};
gviz.DataFormat.prototype.checkLatValue_ = function(value) {
  var markerRange = new goog.math.Range(-90, 90);
  return goog.math.Range.containsPoint(markerRange, value) && !goog.math.isInt(value)
};
gviz.DataFormat.prototype.checkLngValue_ = function(value) {
  var markerRange = new goog.math.Range(-180, 180);
  return goog.math.Range.containsPoint(markerRange, value) && !goog.math.isInt(value)
};
gviz.DataFormat.prototype.forEachColumn = function(view, handler) {
  for(var n = view.getNumberOfColumns(), i = 0;i < n;i++) {
    handler(i)
  }
};
gviz.DataFormat.prototype.hasParents = function(dataTable) {
  for(var nodes = dataTable.getDistinctValues(0), numRows = Math.min(dataTable.getNumberOfRows(), gviz.DataFormat.MAX_ROWS_FOR_DETECTION), parents = 0, i = 0;i < numRows;i++) {
    var value = dataTable.getValue(i, 1);
    value && !goog.array.contains(nodes, value) || parents++
  }
  return 0.6 < parents / numRows
};
gviz.DataFormat.Fitness = {HIGH:3, MEDIUM:2, LOW:1, NONE:0};
// Input 45
gviz.nightingale = {};
gviz.nightingale.BarDataFormat = function() {
};
goog.inherits(gviz.nightingale.BarDataFormat, gviz.DataFormat);
gviz.nightingale.BarDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.nightingale.BarDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(2 > numCols) {
    throw Error("Invalid data table format: must have at least 2 columns.");
  }
  for(var first = !0, roles = [], i = 0;i < numCols;i++) {
    var role = dataTable.getColumnRole(i);
    goog.string.isEmpty(role) && (first ? (role = "domain", first = !1) : role = "data");
    roles.push(role)
  }
  if("domain" !== roles[0]) {
    throw Error("Invalid data format: first column must be domain.");
  }
  var domainGroups = this.groupColumns(roles, ["domain", "data"]);
  return{roles:domainGroups.roles, domains:goog.array.map(domainGroups.groups, function(domainGroup) {
    return{domainColumn:domainGroup.column, roles:domainGroup.roles, series:goog.array.map(domainGroup.groups, function(dataGroup) {
      return{dataColumn:dataGroup.column, roles:dataGroup.roles}
    })}
  })}
};
gviz.nightingale.BarDataFormat.prototype.groupColumns = function(roles, hierarchyRoles) {
  for(var output = {groups:[], roles:{}}, path = [output], roleIndex = -1, columnIndex = 0;columnIndex < roles.length;columnIndex++) {
    var columnRole = roles[columnIndex], hierarchyRoleIndex = hierarchyRoles.indexOf(columnRole), newGroup = null;
    0 <= hierarchyRoleIndex && (newGroup = {column:columnIndex, role:columnRole, groups:[], roles:{}});
    if(0 <= hierarchyRoleIndex && hierarchyRoleIndex < roleIndex) {
      for(var indexDifference = roleIndex - hierarchyRoleIndex, j = 0;j <= indexDifference;j++) {
        path.pop()
      }
      var roleIndex = hierarchyRoleIndex, lastPathItem = path[path.length - 1];
      path.push(newGroup);
      lastPathItem.groups.push(newGroup)
    }else {
      0 <= roleIndex && columnRole === hierarchyRoles[roleIndex] ? (path.pop(), lastPathItem = path[path.length - 1], path.push(newGroup), lastPathItem.groups.push(newGroup)) : roleIndex + 1 < hierarchyRoles.length && columnRole === hierarchyRoles[roleIndex + 1] ? (lastPathItem = path[path.length - 1], roleIndex++, path.push(newGroup), lastPathItem.groups.push(newGroup)) : (lastPathItem = path[path.length - 1], columnRole in lastPathItem.roles || (lastPathItem.roles[columnRole] = []), lastPathItem.roles[columnRole].push(columnIndex))
    }
  }
  return output
};
// Input 46
gviz.AnnotatedTimeLineDataFormat = function() {
};
goog.inherits(gviz.AnnotatedTimeLineDataFormat, gviz.DataFormat);
gviz.AnnotatedTimeLineDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var n = dataTable.getNumberOfColumns();
  if(2 > n) {
    return!1
  }
  var first = dataTable.getColumnType(0);
  if("date" != first && "datetime" != first) {
    return!1
  }
  var second = dataTable.getColumnType(1);
  if("number" != second) {
    return!1
  }
  for(var consecutiveStringColumns = 0, i = 1;i < n;i++) {
    var type = dataTable.getColumnType(i);
    if("number" == type) {
      consecutiveStringColumns = 0
    }else {
      if("string" == type) {
        if(consecutiveStringColumns++, 2 < consecutiveStringColumns) {
          return!1
        }
      }else {
        return!1
      }
    }
  }
  return!0
};
gviz.AnnotatedTimeLineDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  if(!this.exactMatch(dataTable)) {
    return Fitness.NONE
  }
  var goodDistribution = !1, hasAnnotations = 0 < this.indexOf(dataTable, "string"), numRows = dataTable.getNumberOfRows(), rowIndex = dataTable.getSortedRows(0);
  if(50 < numRows) {
    goodDistribution = !0
  }else {
    for(var minDistance = Number.MAX_VALUE, maxDistance = Number.MIN_VALUE, i = 1;i < numRows;i++) {
      var dist = Math.abs(dataTable.getValue(rowIndex[i - 1], 0) - dataTable.getValue(rowIndex[i], 0)), minDistance = 0 < dist && dist < minDistance ? dist : minDistance, maxDistance = dist > maxDistance ? dist : maxDistance
    }
    goodDistribution = 0 != minDistance && 50 < maxDistance / minDistance ? !0 : !1
  }
  return hasAnnotations && goodDistribution ? Fitness.HIGH : hasAnnotations || goodDistribution ? Fitness.MEDIUM : Fitness.LOW
};
// Input 47
gviz.CoreChartDataFormat = function(opt_dataFormatOptions) {
  var dataFormatOptions = opt_dataFormatOptions || {};
  this.annotate_ = !!dataFormatOptions.annotate
};
goog.inherits(gviz.CoreChartDataFormat, gviz.DataFormat);
gviz.CoreChartDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var i = 0, n = dataTable.getNumberOfColumns();
  if(1 > n) {
    return!1
  }
  if(!this.matchType(dataTable, 0, "number") && (i++, this.annotate_)) {
    for(;i < n && this.matchType(dataTable, i, "string");) {
      i++
    }
  }
  for(var series = null;i < n;) {
    var type = dataTable.getColumnType(i);
    if("number" == type) {
      series = {}
    }else {
      if(this.annotate_ && "string" == type) {
        if(!series) {
          return!1
        }
      }else {
        if("boolean" == type) {
          if(!series || series.certainty) {
            return!1
          }
          series.certainty = i
        }else {
          return!1
        }
      }
    }
    i++
  }
  return!goog.isNull(series)
};
// Input 48
gviz.AreaChartDataFormat = function(opt_dataFormatOptions) {
  this.isStacked_ = opt_dataFormatOptions && opt_dataFormatOptions.isStacked || !1;
  gviz.CoreChartDataFormat.call(this, opt_dataFormatOptions)
};
goog.inherits(gviz.AreaChartDataFormat, gviz.CoreChartDataFormat);
gviz.AreaChartDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  if(!gviz.AreaChartDataFormat.superClass_.exactMatch.call(this, dataTable)) {
    return!1
  }
  var numCols = dataTable.getNumberOfColumns();
  if(this.isStacked_) {
    for(var i = 1;i < numCols;i++) {
      if(this.matchType(dataTable, i, "number") && !this.checkPositiveColumn(dataTable, i)) {
        return!1
      }
    }
  }
  return!0
};
gviz.AreaChartDataFormat.prototype.calculateFitness = function(dataTable) {
  for(var Fitness = gviz.DataFormat.Fitness, numCols = dataTable.getNumberOfColumns(), numRows = dataTable.getNumberOfRows(), numNumericCols = 0, hasNegativeValue = !1, i = 0;i < numCols;i++) {
    this.matchType(dataTable, i, "number") && (numNumericCols++, this.checkPositiveColumn(dataTable, i) || (hasNegativeValue = !0))
  }
  return this.exactMatch(dataTable) ? 1 == numRows || hasNegativeValue || this.matchType(dataTable, 0, "string") ? Fitness.LOW : 2 < numNumericCols && this.isStacked_ ? Fitness.HIGH : 1 != numNumericCols || this.isStacked_ ? Fitness.LOW : Fitness.MEDIUM : Fitness.NONE
};
// Input 49
gviz.BubbleChartDataFormat = function() {
};
goog.inherits(gviz.BubbleChartDataFormat, gviz.DataFormat);
gviz.BubbleChartDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  return 3 > numCols || 5 < numCols || !this.matchType(dataTable, 0, "string") || !this.matchType(dataTable, 1, "number") || !this.matchType(dataTable, 2, "number") || 3 < numCols && !this.matchType(dataTable, 3, "string") || 4 < numCols && !this.matchType(dataTable, 4, "number") ? !1 : !0
};
gviz.BubbleChartDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? this.isEnumLike(dataTable, 3) ? Fitness.HIGH : this.matchType(dataTable, 3, "string") ? Fitness.LOW : Fitness.MEDIUM : Fitness.NONE
};
// Input 50
gviz.BubblesDataFormat = function() {
};
goog.inherits(gviz.BubblesDataFormat, gviz.DataFormat);
gviz.BubblesDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.BubblesDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(2 !== numCols && 3 !== numCols) {
    throw Error("Invalid data table format: must have 2 or 3 columns.");
  }
  var categoryCol = 0, nameCol = 1, valueCol = 2;
  2 === numCols && (nameCol--, valueCol--);
  this.verifyType_(dataTable, categoryCol, "string");
  this.verifyType_(dataTable, nameCol, "string");
  this.verifyType_(dataTable, valueCol, "number");
  return{nameCol:nameCol, categoryCol:categoryCol, valueCol:valueCol}
};
gviz.BubblesDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  if(!this.matchType(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 51
gviz.CalendarDataFormat = function() {
};
goog.inherits(gviz.CalendarDataFormat, gviz.DataFormat);
gviz.CalendarDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.CalendarDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(2 != numCols) {
    throw Error("Invalid data table format: must have 2 columns.");
  }
  var dateCol = 0, valueCol = 1;
  this.verifyType_(dataTable, dateCol, "date");
  this.verifyType_(dataTable, valueCol, "number");
  return{dateCol:dateCol, valueCol:valueCol}
};
gviz.CalendarDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  if(!this.matchType(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 52
gviz.CandlestickDataFormat = function() {
};
goog.inherits(gviz.CandlestickDataFormat, gviz.DataFormat);
gviz.CandlestickDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(5 > numCols || 6 < numCols) {
    return!1
  }
  var typesMatch = this.matchType(dataTable, 0, "string") && this.matchType(dataTable, 1, "number") && this.matchType(dataTable, 2, "number") && this.matchType(dataTable, 3, "number") && this.matchType(dataTable, 4, "number");
  if(!typesMatch || 6 == numCols && !this.matchType(dataTable, 5, "string")) {
    return!1
  }
  for(var numRows = Math.min(dataTable.getNumberOfRows(), gviz.DataFormat.MAX_ROWS_FOR_DETECTION), i = 0;i < numRows;i++) {
    var low = dataTable.getValue(i, 1), open = dataTable.getValue(i, 2), close = dataTable.getValue(i, 3), high = dataTable.getValue(i, 4);
    if(low != Math.min(low, open, close, high) || high != Math.max(low, open, close, high)) {
      return!1
    }
  }
  return!0
};
gviz.CandlestickDataFormat.prototype.calculateFitness = function(dataTable) {
  return this.exactMatch(dataTable) ? gviz.DataFormat.Fitness.HIGH : gviz.DataFormat.Fitness.NONE
};
// Input 53
gviz.CirclesDataFormat = function() {
};
goog.inherits(gviz.CirclesDataFormat, gviz.DataFormat);
gviz.CirclesDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.CirclesDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(3 != numCols) {
    throw Error("Invalid data table format: must have 3 columns.");
  }
  var nameCol = 0, valueCol = 1, parentCol = 2;
  this.verifyType_(dataTable, nameCol, "string");
  this.verifyType_(dataTable, valueCol, "number");
  this.verifyType_(dataTable, parentCol, "string");
  return{nameCol:nameCol, parentCol:parentCol, valueCol:valueCol}
};
gviz.CirclesDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  if(!this.matchType(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 54
gviz.ComboChartDataFormat = function() {
  gviz.CoreChartDataFormat.call(this)
};
goog.inherits(gviz.ComboChartDataFormat, gviz.CoreChartDataFormat);
gviz.ComboChartDataFormat.prototype.calculateFitness = function(dataTable) {
  var hasStringLabels = this.matchType(dataTable, 0, "number"), numberOfNumericColumns = dataTable.getNumberOfColumns();
  hasStringLabels || numberOfNumericColumns--;
  return this.exactMatch(dataTable) ? 2 > numberOfNumericColumns ? gviz.DataFormat.Fitness.LOW : gviz.DataFormat.Fitness.MEDIUM : gviz.DataFormat.Fitness.NONE
};
// Input 55
gviz.GaugeDataFormat = function() {
};
goog.inherits(gviz.GaugeDataFormat, gviz.DataFormat);
gviz.GaugeDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  return this.exactMatchColumnGauge_(dataTable) || this.exactMatchRowGauge_(dataTable)
};
gviz.GaugeDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? 1 < dataTable.getNumberOfRows() ? Fitness.MEDIUM : Fitness.HIGH : Fitness.NONE
};
gviz.GaugeDataFormat.prototype.exactMatchColumnGauge_ = function(dataTable) {
  var numCols = dataTable.getNumberOfColumns();
  if(1 > numCols || 2 < numCols) {
    return!1
  }
  var match = !0;
  2 == numCols && (match = match && this.matchType(dataTable, 0, "string"));
  var valuesColumn = numCols - 1;
  return match = match && this.checkPositiveColumn(dataTable, valuesColumn)
};
gviz.GaugeDataFormat.prototype.exactMatchRowGauge_ = function(dataTable) {
  var numCols = dataTable.getNumberOfColumns(), numRows = dataTable.getNumberOfRows();
  if(0 == numCols || 1 != numRows) {
    return!1
  }
  for(var match = !0, i = 0;i < numCols;i++) {
    if(!this.matchType(dataTable, i, "number")) {
      match = !1;
      break
    }
  }
  return match
};
// Input 56
gviz.GeoChartDataFormat = function() {
};
goog.inherits(gviz.GeoChartDataFormat, gviz.DataFormat);
gviz.GeoChartDataFormat.AddressType = {LATLNG:"latlng", REGIONCODE:"regioncode", ADDRESS:"address"};
gviz.GeoChartDataFormat.DisplayMode = {REGIONS:"regions", MARKERS:"markers", TEXT:"text", AUTO:"auto"};
gviz.GeoChartDataFormat.prototype.exactMatch = function(dataTable) {
  var numCols = dataTable.getNumberOfColumns();
  if(1 > numCols || 2 < numCols) {
    return!1
  }
  var match = this.matchType(dataTable, 0, "string");
  2 == numCols && (match = match && this.matchType(dataTable, 1, "number"));
  return match
};
gviz.GeoChartDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? Fitness.LOW : Fitness.NONE
};
gviz.GeoChartDataFormat.prototype.analyzeTable = function(dataTable, opt_displayMode, opt_errorHandler) {
  try {
    return this.analyzeTable_(dataTable, opt_displayMode)
  }catch(e) {
    return opt_errorHandler && opt_errorHandler.addError("Incompatible data table: " + e), null
  }
};
gviz.GeoChartDataFormat.prototype.analyzeTable_ = function(dataTable, opt_displayMode) {
  var displayMode = opt_displayMode || gviz.GeoChartDataFormat.DisplayMode.AUTO, nextColumn = 0, addressType, regionColumn = -1, addressColumn = -1, latColumn = -1, lngColumn = -1, hasLatLng = this.columnsTypesMatch(dataTable, [nextColumn, nextColumn + 1], ["number", "number"]);
  if(hasLatLng) {
    addressType = gviz.GeoChartDataFormat.AddressType.LATLNG;
    latColumn = nextColumn;
    lngColumn = nextColumn + 1;
    nextColumn += 2;
    if(displayMode === gviz.GeoChartDataFormat.DisplayMode.REGIONS) {
      throw Error("displayMode must be set to Markers when using lat/long addresses.");
    }
    displayMode === gviz.GeoChartDataFormat.DisplayMode.AUTO && (displayMode = gviz.GeoChartDataFormat.DisplayMode.MARKERS)
  }else {
    if(this.columnsTypesMatch(dataTable, [nextColumn], ["string"])) {
      switch(displayMode) {
        case gviz.GeoChartDataFormat.DisplayMode.AUTO:
          this.guessIsAddress_(dataTable, nextColumn) ? (addressType = gviz.GeoChartDataFormat.AddressType.ADDRESS, displayMode = gviz.GeoChartDataFormat.DisplayMode.MARKERS, addressColumn = nextColumn) : (addressType = gviz.GeoChartDataFormat.AddressType.REGIONCODE, displayMode = gviz.GeoChartDataFormat.DisplayMode.REGIONS, regionColumn = nextColumn);
          break;
        case gviz.GeoChartDataFormat.DisplayMode.REGIONS:
          addressType = gviz.GeoChartDataFormat.AddressType.REGIONCODE;
          regionColumn = nextColumn;
          break;
        case gviz.GeoChartDataFormat.DisplayMode.MARKERS:
        ;
        case gviz.GeoChartDataFormat.DisplayMode.TEXT:
          addressType = gviz.GeoChartDataFormat.AddressType.ADDRESS;
          addressColumn = nextColumn;
          break;
        default:
          throw Error("Unknown displayMode: " + displayMode);
      }
      nextColumn += 1
    }else {
      throw Error("Unknown address type.");
    }
  }
  var locationNameColumn = null;
  this.columnsTypesMatch(dataTable, [nextColumn], ["string"]) && "tooltip" != dataTable.getColumnProperty(nextColumn, "role") && (locationNameColumn = nextColumn++);
  var colorMetricsColumn = null, sizeMetricsColumn = null;
  this.columnsTypesMatch(dataTable, [nextColumn], ["number"]) && (colorMetricsColumn = nextColumn++, this.columnsTypesMatch(dataTable, [nextColumn], ["number"]) && (sizeMetricsColumn = nextColumn++));
  var tooltipColumn = null;
  this.columnsTypesMatch(dataTable, [nextColumn], ["string"]) && "tooltip" == dataTable.getColumnProperty(nextColumn, "role") && (tooltipColumn = nextColumn++);
  addressType != gviz.GeoChartDataFormat.AddressType.REGIONCODE && null != colorMetricsColumn && null == sizeMetricsColumn && (sizeMetricsColumn = colorMetricsColumn);
  if(dataTable.getNumberOfColumns() != nextColumn) {
    throw Error("Table contains more columns than expected (Expecting " + nextColumn + " columns)");
  }
  return{addressType:addressType, displayMode:displayMode, regionColumn:regionColumn, addressColumn:addressColumn, latColumn:latColumn, lngColumn:lngColumn, locationNameColumn:locationNameColumn, colorMetricsColumn:colorMetricsColumn, sizeMetricsColumn:sizeMetricsColumn, tooltipColumn:tooltipColumn}
};
gviz.GeoChartDataFormat.prototype.guessIsAddress_ = function() {
  return!1
};
// Input 57
gviz.HelloWorldDataFormat = function() {
};
goog.inherits(gviz.HelloWorldDataFormat, gviz.DataFormat);
gviz.HelloWorldDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.HelloWorldDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(5 != numCols) {
    throw Error("Invalid data table format: must have 5 columns.");
  }
  this.verifyType_(dataTable, 0, "number");
  this.verifyType_(dataTable, 1, "number");
  this.verifyType_(dataTable, 2, "number");
  this.verifyType_(dataTable, 3, "number");
  this.verifyType_(dataTable, 4, "string");
  return{xColumn:0, yColumn:1, sizeColumn:2, angleColumn:3, colorColumn:4}
};
gviz.HelloWorldDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  if(!this.matchType(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 58
gviz.HistogramDataFormat = function(opt_dataFormatOptions) {
  gviz.CoreChartDataFormat.call(this, opt_dataFormatOptions)
};
goog.inherits(gviz.HistogramDataFormat, gviz.CoreChartDataFormat);
gviz.HistogramDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  if(!gviz.HistogramDataFormat.superClass_.exactMatch.call(this, dataTable)) {
    return!1
  }
  var numCols = dataTable.getNumberOfColumns();
  if(this.isStacked_) {
    for(var i = 1;i < numCols;i++) {
      if(this.matchType(dataTable, i, "number") && !this.checkPositiveColumn(dataTable, i)) {
        return!1
      }
    }
  }
  return!0
};
gviz.HistogramDataFormat.prototype.calculateFitness = function(dataTable) {
  for(var Fitness = gviz.DataFormat.Fitness, numCols = dataTable.getNumberOfColumns(), numRows = dataTable.getNumberOfRows(), numNumericCols = 0, numDateCols = 0, i = 0;i < numCols;i++) {
    this.matchType(dataTable, i, "number") ? numNumericCols++ : this.matchType(dataTable, i, "date") && numDateCols++
  }
  return this.exactMatch(dataTable) ? 10 > numRows ? Fitness.LOW : 2 > numNumericCols && 0 == numDateCols ? Fitness.HIGH : Fitness.MEDIUM : Fitness.NONE
};
// Input 59
gviz.MapDataFormat = function() {
};
goog.inherits(gviz.MapDataFormat, gviz.DataFormat);
gviz.MapDataFormat.prototype.exactMatch = function(dataTable) {
  return this.exactMatchLatLng(dataTable) || this.exactMatchAddress(dataTable)
};
gviz.MapDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness, latMatch = this.exactMatchLatLng(dataTable), addressMatch = this.exactMatchAddress(dataTable);
  return latMatch || addressMatch ? addressMatch ? Fitness.LOW : Fitness.HIGH : Fitness.NONE
};
gviz.MapDataFormat.prototype.exactMatchLatLng = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(2 > numCols || 3 < numCols) {
    return!1
  }
  var match = this.matchType(dataTable, 0, "number"), match = match && this.matchType(dataTable, 1, "number");
  3 == numCols && (match = match && this.matchType(dataTable, 2, "string"));
  return match && this.checkLatLng(dataTable, 0, 1)
};
gviz.MapDataFormat.prototype.exactMatchAddress = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  return 1 > numCols || 2 < numCols || !this.matchType(dataTable, 0, "string") || 2 == numCols && !this.matchType(dataTable, 1, "string") ? !1 : !0
};
// Input 60
gviz.MotionChartDataFormat = function() {
};
goog.inherits(gviz.MotionChartDataFormat, gviz.DataFormat);
gviz.MotionChartDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var n = dataTable.getNumberOfColumns();
  if(3 > n) {
    return!1
  }
  var first = dataTable.getColumnType(0);
  if("string" != first) {
    return!1
  }
  var second = dataTable.getColumnType(1);
  if("number" != second && "date" != second && "string" != second || "string" == second && !this.checkWeekColumn_(dataTable, 1) && !this.checkQuarterColumn_(dataTable, 1) || "number" == second && !this.checkColumn(dataTable, 1, function(value) {
    return goog.math.isInt(value)
  })) {
    return!1
  }
  for(var i = 2;i < n;i++) {
    var type = dataTable.getColumnType(i);
    if("number" != type && "string" != type) {
      return!1
    }
  }
  return!0
};
gviz.MotionChartDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? this.matchType(dataTable, 1, "number") && !this.checkYearColumn_(dataTable, 1) ? Fitness.LOW : Fitness.HIGH : Fitness.NONE
};
gviz.MotionChartDataFormat.prototype.checkYearColumn_ = function(dataTable, index) {
  return this.checkColumn(dataTable, index, function(value) {
    return 1900 < value && 2100 > value
  })
};
gviz.MotionChartDataFormat.prototype.checkWeekColumn_ = function(dataTable, index) {
  return this.checkColumn(dataTable, index, function(value) {
    if(7 != value.length) {
      return!1
    }
    var year = value.substring(0, 3);
    if(isNaN(year) || "W" != value.charAt(4)) {
      return!1
    }
    var week = value.substring(6, 7);
    return isNaN(week) ? !1 : !0
  })
};
gviz.MotionChartDataFormat.prototype.checkQuarterColumn_ = function(dataTable, index) {
  return this.checkColumn(dataTable, index, function(value) {
    if(6 != value.length) {
      return!1
    }
    var year = value.substring(0, 3);
    if(isNaN(year) || "Q" != value.charAt(4)) {
      return!1
    }
    var quarter = value.charAt(5);
    return isNaN(quarter) ? !1 : !0
  })
};
// Input 61
gviz.OrgChartDataFormat = function() {
};
goog.inherits(gviz.OrgChartDataFormat, gviz.DataFormat);
gviz.OrgChartDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(2 > numCols || 3 < numCols) {
    return!1
  }
  var match = this.matchType(dataTable, 0, "string") && this.matchType(dataTable, 1, "string");
  3 == numCols && (match = match && this.matchType(dataTable, 2, "string"));
  return match && this.hasParents(dataTable)
};
gviz.OrgChartDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? Fitness.HIGH : Fitness.NONE
};
// Input 62
gviz.PieChartDataFormat = function() {
};
goog.inherits(gviz.PieChartDataFormat, gviz.DataFormat);
gviz.PieChartDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(1 > numCols || 2 < numCols) {
    return!1
  }
  var match = this.matchType(dataTable, numCols - 1, "number");
  return match = match && this.checkPositiveColumn(dataTable, numCols - 1)
};
gviz.PieChartDataFormat.prototype.addsToWhole_ = function(dataTable) {
  for(var total = 0, i = 0;i < dataTable.getNumberOfRows();i++) {
    total += dataTable.getValue(i, 1)
  }
  return 97 < total && 103 > total || 0.97 < total && 1.03 > total ? !0 : !1
};
gviz.PieChartDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? 1 == dataTable.getNumberOfRows() ? Fitness.LOW : !this.matchType(dataTable, 0, "string") || 25 < dataTable.getNumberOfRows() || !this.addsToWhole_(dataTable) ? Fitness.MEDIUM : Fitness.HIGH : Fitness.NONE
};
// Input 63
gviz.RadarChartDataFormat = function() {
};
goog.inherits(gviz.RadarChartDataFormat, gviz.DataFormat);
gviz.RadarChartDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(0 == numCols) {
    return!1
  }
  for(var startIndex = this.matchType(dataTable, 0, "string") ? 1 : 0, match = numCols > startIndex, i = startIndex;i < numCols;i++) {
    if(!this.matchType(dataTable, i, "number")) {
      match = !1;
      break
    }
  }
  return match
};
// Input 64
gviz.SankeyDataFormat = function() {
};
goog.inherits(gviz.SankeyDataFormat, gviz.DataFormat);
gviz.SankeyDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.SankeyDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(3 !== numCols) {
    throw Error("Invalid data table format: must have 3 columns.");
  }
  this.verifyType_(dataTable, 0, "string");
  this.verifyType_(dataTable, 1, "string");
  this.verifyType_(dataTable, 2, "number");
  return{fromCol:0, toCol:1, valueCol:2}
};
gviz.SankeyDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  if(!this.matchType(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 65
gviz.ScatterChartDataFormat = function() {
};
goog.inherits(gviz.ScatterChartDataFormat, gviz.DataFormat);
gviz.ScatterChartDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var n = dataTable.getNumberOfColumns();
  if(2 > n || this.matchType(dataTable, 0, "boolean") || this.matchType(dataTable, 0, "string")) {
    return!1
  }
  for(var i = 1, numberOfDataSeries = 0, numberOfConsecutiveBooleanColumns = 0;i < n;) {
    var type = dataTable.getColumnType(i);
    if("number" == type) {
      numberOfDataSeries++, numberOfConsecutiveBooleanColumns = 0
    }else {
      if("boolean" == type) {
        if(numberOfConsecutiveBooleanColumns++, 0 == numberOfDataSeries || 1 < numberOfConsecutiveBooleanColumns) {
          return!1
        }
      }else {
        return!1
      }
    }
    i++
  }
  return 0 < numberOfDataSeries
};
// Input 66
gviz.SparkLineDataFormat = function() {
};
goog.inherits(gviz.SparkLineDataFormat, gviz.DataFormat);
gviz.SparkLineDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  for(var match = !0, numCols = dataTable.getNumberOfColumns(), i = 0;i < numCols;i++) {
    if(!this.matchType(dataTable, i, "number")) {
      match = !1;
      break
    }
  }
  return match
};
gviz.SparkLineDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? 2 > dataTable.getNumberOfColumns() ? Fitness.LOW : Fitness.MEDIUM : Fitness.NONE
};
// Input 67
gviz.StreamgraphDataFormat = function() {
};
goog.inherits(gviz.StreamgraphDataFormat, gviz.DataFormat);
gviz.StreamgraphDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.StreamgraphDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(1 > numCols) {
    throw Error("Invalid data table format: must have at least 1 column.");
  }
  var dateCol = 0;
  this.verifyType_(dataTable, dateCol, "date");
  for(var valueCols = [], i = 1;i < numCols;i++) {
    this.verifyType_(dataTable, i, "number"), valueCols.push(i)
  }
  return{dateCol:dateCol, valueCols:valueCols}
};
gviz.StreamgraphDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  if(!this.matchType(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 68
gviz.SunburstDataFormat = function() {
};
goog.inherits(gviz.SunburstDataFormat, gviz.DataFormat);
gviz.SunburstDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.SunburstDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(3 != numCols) {
    throw Error("Invalid data table format: must have 3 columns.");
  }
  var nameCol = 0, valueCol = 1, parentCol = 2;
  this.verifyType_(dataTable, nameCol, "string");
  this.verifyType_(dataTable, valueCol, "number");
  this.verifyType_(dataTable, parentCol, "string");
  return{nameCol:nameCol, parentCol:parentCol, valueCol:valueCol}
};
gviz.SunburstDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  if(!this.matchType(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 69
gviz.TableDataFormat = function() {
};
goog.inherits(gviz.TableDataFormat, gviz.DataFormat);
gviz.TableDataFormat.prototype.exactMatch = function() {
  return!0
};
// Input 70
gviz.TimelineDataFormat = function(options) {
  this.options_ = options
};
goog.inherits(gviz.TimelineDataFormat, gviz.DataFormat);
gviz.TimelineDataFormat.VALID_TYPES = ["date", "number", "datetime"];
gviz.TimelineDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.TimelineDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(3 !== numCols && 4 !== numCols) {
    throw Error("Invalid data table format: must have 3 or 4 columns.");
  }
  var hasLabelColumn = 4 == numCols;
  this.verifyType_(dataTable, 0, "string");
  hasLabelColumn && this.verifyType_(dataTable, 1, "string");
  this.verifyType_(dataTable, hasLabelColumn ? 2 : 1, gviz.TimelineDataFormat.VALID_TYPES);
  this.verifyType_(dataTable, hasLabelColumn ? 3 : 2, gviz.TimelineDataFormat.VALID_TYPES);
  if(4 === numCols) {
    var swap = !this.options_.inferBooleanValue("timeline.taskMajor", !0);
    return{nameColumn:swap ? 1 : 0, labelColumn:swap ? 0 : 1, startColumn:2, endColumn:3}
  }
  return{nameColumn:0, startColumn:1, endColumn:2}
};
gviz.TimelineDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  goog.isArray(type) || (type = [type]);
  if(!this.matchTypes(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 71
gviz.TimeTextDataFormat = function() {
};
goog.inherits(gviz.TimeTextDataFormat, gviz.DataFormat);
gviz.TimeTextDataFormat.prototype.exactMatch = function(dataTable) {
  try {
    this.analyzeTable(dataTable)
  }catch(e) {
    return!1
  }
  return!0
};
gviz.TimeTextDataFormat.prototype.analyzeTable = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(2 > numCols) {
    throw Error("Invalid data table format: must have 2 columns.");
  }
  this.verifyType_(dataTable, 0, "date");
  this.verifyType_(dataTable, 1, "number");
  return{depColumn:0, indepColumn:1}
};
gviz.TimeTextDataFormat.prototype.verifyType_ = function(dataTable, index, type) {
  goog.isArray(type) || (type = [type]);
  if(!this.matchTypes(dataTable, index, type)) {
    throw Error("Invalid data table format: column #" + index + " must be of type '" + type + "'.");
  }
};
// Input 72
gviz.TreeMapDataFormat = function() {
};
goog.inherits(gviz.TreeMapDataFormat, gviz.DataFormat);
gviz.TreeMapDataFormat.prototype.exactMatch = function(dataTable) {
  this.validateDataTable(dataTable);
  var numCols = dataTable.getNumberOfColumns();
  if(2 > numCols || 4 < numCols) {
    return!1
  }
  var match = this.matchType(dataTable, 0, "string") && this.matchType(dataTable, 1, "string");
  2 < numCols && (match = match && this.checkPositiveColumn(dataTable, 2)) && 3 < numCols && (match = match && this.matchType(dataTable, 3, "number"));
  return match && this.hasParents(dataTable)
};
gviz.TreeMapDataFormat.prototype.calculateFitness = function(dataTable) {
  var Fitness = gviz.DataFormat.Fitness;
  return this.exactMatch(dataTable) ? Fitness.HIGH : Fitness.NONE
};
// Input 73
gviz.ChartSelection = function(opt_chartTypes) {
  this.chartTypes_ = goog.isArray(opt_chartTypes) ? opt_chartTypes : goog.object.getValues(gviz.ChartSelection.ChartType)
};
gviz.ChartSelection.removeColumnsWithRoles = function(data) {
  for(var columns = [], i = 0;i < data.getNumberOfColumns();i++) {
    var role = data.getColumnProperty(i, "role");
    null != role && "" != role || columns.push(i)
  }
  if(columns.length == data.getNumberOfColumns()) {
    return data
  }
  var result = new google.visualization.DataView(data);
  result.setColumns(columns);
  return result
};
gviz.ChartSelection.prototype.calculateChartTypes = function(dataTable) {
  var scores = [];
  goog.object.forEach(this.chartTypes_, function(chartType) {
    var typeMetadata = gviz.ChartSelection.CHART_TYPES[chartType], format = typeMetadata && typeMetadata.format;
    if(format) {
      var fit = format.calculateFitness(dataTable);
      fit != gviz.DataFormat.Fitness.NONE && scores.push({type:chartType, fitness:fit, coolness:typeMetadata.coolness})
    }
  });
  gviz.ChartSelection.sortScores_(scores);
  return goog.array.map(scores, function(score) {
    return score.type
  })
};
gviz.ChartSelection.sortScores_ = function(scores) {
  goog.array.stableSort(scores, function(left, right) {
    var diff = left.fitness - right.fitness;
    0 == diff && (diff = left.coolness - right.coolness);
    return diff = -diff
  })
};
gviz.ChartSelection.Coolness = {HIGH:3, MEDIUM:2, LOW:1, TABLE:0};
gviz.ChartSelection.ChartType = {ANNOTATED_TIME_LINE:"AnnotatedTimeLine", AREA_CHART:"AreaChart", BAR_CHART:"BarChart", BUBBLE_CHART:"BubbleChart", CANDLESTICK_CHART:"CandlestickChart", COLUMN_CHART:"ColumnChart", COMBO_CHART:"ComboChart", GAUGE:"Gauge", GEOCHART:"GeoChart", HISTOGRAM:"Histogram", IMAGE_RADAR_CHART:"ImageRadarChart", IMAGE_SPARK_LINE:"ImageSparkLine", MOTION_CHART:"MotionChart", LINE_CHART:"LineChart", PIE_CHART:"PieChart", MAP:"Map", ORG_CHART:"OrgChart", SCATTER_CHART:"ScatterChart", 
STACKED_AREA_CHART:"AreaChart-stacked", STEPPED_AREA_CHART:"SteppedAreaChart", TABLE:"Table", TREE_MAP:"TreeMap", WORD_TREE:"WordTree"};
gviz.ChartSelection.CHART_TYPES = goog.object.create(gviz.ChartSelection.ChartType.ANNOTATED_TIME_LINE, {format:new gviz.AnnotatedTimeLineDataFormat, coolness:gviz.ChartSelection.Coolness.HIGH}, gviz.ChartSelection.ChartType.AREA_CHART, {format:new gviz.AreaChartDataFormat({annotate:!0}), coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.BAR_CHART, {format:new gviz.CoreChartDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.BUBBLE_CHART, 
{format:new gviz.BubbleChartDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.CANDLESTICK_CHART, {format:new gviz.CandlestickDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.COLUMN_CHART, {format:new gviz.CoreChartDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.COMBO_CHART, {format:new gviz.ComboChartDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.GAUGE, 
{format:new gviz.GaugeDataFormat, coolness:gviz.ChartSelection.Coolness.LOW}, gviz.ChartSelection.ChartType.GEOCHART, {format:new gviz.GeoChartDataFormat, coolness:gviz.ChartSelection.Coolness.HIGH}, gviz.ChartSelection.ChartType.HISTOGRAM, {format:new gviz.HistogramDataFormat, coolness:gviz.ChartSelection.Coolness.HIGH}, gviz.ChartSelection.ChartType.LINE_CHART, {format:new gviz.CoreChartDataFormat({annotate:!0}), coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.IMAGE_RADAR_CHART, 
{format:new gviz.RadarChartDataFormat, coolness:gviz.ChartSelection.Coolness.LOW}, gviz.ChartSelection.ChartType.IMAGE_SPARK_LINE, {format:new gviz.SparkLineDataFormat, coolness:gviz.ChartSelection.Coolness.LOW}, gviz.ChartSelection.ChartType.MAP, {format:new gviz.MapDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.MOTION_CHART, {format:new gviz.MotionChartDataFormat, coolness:gviz.ChartSelection.Coolness.HIGH}, gviz.ChartSelection.ChartType.ORG_CHART, {format:new gviz.OrgChartDataFormat, 
coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.PIE_CHART, {format:new gviz.PieChartDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.SCATTER_CHART, {format:new gviz.ScatterChartDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.STACKED_AREA_CHART, {format:new gviz.AreaChartDataFormat({isStacked:!0}), coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.STEPPED_AREA_CHART, 
{format:new gviz.AreaChartDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.TABLE, {format:new gviz.TableDataFormat, coolness:gviz.ChartSelection.Coolness.TABLE}, gviz.ChartSelection.ChartType.TREE_MAP, {format:new gviz.TreeMapDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM}, gviz.ChartSelection.ChartType.WORD_TREE, {format:new gviz.GeoChartDataFormat, coolness:gviz.ChartSelection.Coolness.MEDIUM});
// Input 74
goog.exportSymbol("google.visualization.ChartSelection", gviz.ChartSelection);
goog.exportProperty(gviz.ChartSelection.prototype, "calculateChartTypes", gviz.ChartSelection.prototype.calculateChartTypes);
// Input 75
gviz.packages = {};
gviz.packages.MAP = {AnnotatedTimeLine:"annotatedtimeline", AreaChart:"corechart", BarChart:"corechart", BubbleChart:"corechart", CandlestickChart:"corechart", ColumnChart:"corechart", ComboChart:"corechart", Gauge:"gauge", GeoChart:"geochart", GeoMap:"geomap", Histogram:"corechart", ImageAreaChart:"imageareachart", ImageBarChart:"imagebarchart", ImageCandlestickChart:"imagechart", ImageChart:"imagechart", ImageLineChart:"imagelinechart", ImagePieChart:"imagepiechart", ImageSparkLine:"imagesparkline", 
IntensityMap:"intensitymap", LineChart:"corechart", Map:"map", MotionChart:"motionchart", OrgChart:"orgchart", PieChart:"corechart", RangeSelector:"corechart", ScatterChart:"corechart", SparklineChart:"corechart", SteppedAreaChart:"corechart", Table:"table", Timeline:"timeline", TreeMap:"treemap", StringFilter:"controls", DateRangeFilter:"controls", NumberRangeFilter:"controls", CategoryFilter:"controls", ChartRangeFilter:"controls", NumberRangeSetter:"controls", ColumnSelector:"controls", Dashboard:"controls"};
gviz.packages.isCoreChart = function(type) {
  return"corechart" == gviz.packages.getPackage(type)
};
gviz.packages.getPackage = function(type) {
  return gviz.packages.MAP[type] || null
};
// Input 76
gviz.patterns = {};
gviz.patterns.applyPatternOptions = function(type, data, options) {
  if(gviz.patterns.canApplyPatterns(options)) {
    if("BubbleChart" == type) {
      gviz.patterns.applyBubbleChartPatternOptions_(data, options)
    }else {
      for(var vAxes = options.vAxes || [{}, {}], hAxis = options.hAxis || {}, vAxis = vAxes[0] || {}, rAxis = vAxes[1] || {}, vAxisPatterns = [], rAxisPatterns = [], cols = data && data.getNumberOfColumns() || 0, c = 0;c < cols;c++) {
        if("number" == data.getColumnType(c)) {
          var pattern = data.getColumnPattern(c), targetAxis = gviz.patterns.getTargetAxis_(c, type, data, options);
          switch(targetAxis) {
            case null:
              break;
            case 0:
              vAxisPatterns.push(pattern);
              break;
            case 1:
              rAxisPatterns.push(pattern);
              break;
            default:
              goog.asserts.assert(!1, "targetAxisIndex should be 0, 1 or null")
          }
        }
      }
      if("BarChart" == type) {
        var hAxisPatterns = vAxisPatterns;
        gviz.patterns.setAxisFormat(hAxis, hAxisPatterns)
      }else {
        gviz.patterns.setAxisFormat(vAxis, vAxisPatterns), gviz.patterns.setAxisFormat(rAxis, rAxisPatterns)
      }
      if(0 < cols && "string" != data.getColumnType(0)) {
        var domainAxis = "BarChart" == type ? vAxis : hAxis, pattern = data.getColumnPattern(0);
        gviz.patterns.setAxisFormat(domainAxis, [pattern])
      }
      vAxes[0] = vAxis;
      vAxes[1] = rAxis;
      options.vAxes = vAxes;
      options.hAxis = hAxis
    }
  }
};
gviz.patterns.canApplyPatterns = function(options) {
  var useFormatFromData = options.useFormatFromData;
  if(goog.isBoolean(useFormatFromData) && !useFormatFromData) {
    return!1
  }
  for(var axisNames = ["vAxis", "targetAxis", "targetAxes.0", "targetAxes.1", "domainAxis"], i = 0;i < axisNames.length;i++) {
    if(goog.getObjectByName(axisNames[i] + ".format", options)) {
      return!1
    }
  }
  return!0
};
gviz.patterns.setAxisFormat = function(axis, patterns) {
  var useFormatFromData = axis.useFormatFromData;
  if((!goog.isBoolean(useFormatFromData) || useFormatFromData) && goog.string.isEmptySafe(axis.format) && (patterns = goog.array.filter(patterns, function(pattern) {
    return!goog.string.isEmptySafe(pattern)
  }), goog.array.removeDuplicates(patterns), 1 == patterns.length)) {
    var pattern$$0 = gviz.patterns.normalizePattern_(patterns[0]);
    axis.format = pattern$$0
  }
};
gviz.patterns.applyBubbleChartPatternOptions_ = function(data, options) {
  if(!(3 > data.getNumberOfColumns())) {
    var xPattern = data.getColumnPattern(1), hAxis = options.hAxis || {};
    gviz.patterns.setAxisFormat(hAxis, [xPattern]);
    options.hAxis = hAxis;
    var yPattern = data.getColumnPattern(2), vAxes = options.vAxes || {}, vAxis = vAxes[0] || {};
    gviz.patterns.setAxisFormat(vAxis, [yPattern]);
    vAxes[0] = vAxis;
    options.vAxes = vAxes
  }
};
gviz.patterns.getTargetAxis_ = function(i, chartType, dataTable, drawOptions) {
  if(0 == i) {
    return null
  }
  i--;
  var series = drawOptions.series || {}, serie = series[i] || {};
  return serie.targetAxisIndex || 0
};
gviz.patterns.normalizePattern_ = function(pattern) {
  goog.string.isEmptySafe(pattern) || (pattern = pattern.replace(/\d/g, "0"), pattern = pattern.replace(/#{10,}/, goog.string.repeat("#", 10)));
  return pattern
};
// Input 77
gviz.trendlines = {};
gviz.trendlines.applyTrendLineOption = function(wrapper) {
  if(wrapper.getOption("addTrendLine")) {
    var dataTable = wrapper.getDataTable();
    if("ScatterChart" == wrapper.getType() && 2 == dataTable.getNumberOfColumns()) {
      var view = gviz.trendlines.createTrendView_(dataTable);
      wrapper.setDataTable(view);
      wrapper.setOption("series.1.lineWidth", 2);
      wrapper.setOption("series.1.pointSize", 0);
      wrapper.setOption("series.1.visibleInLegend", !1)
    }
    wrapper.setOption("addTrendLine", null)
  }
};
gviz.trendlines.createTrendView_ = function(dataTable) {
  var trendline = gviz.trendlines.computeSlopeAndIntercept_(dataTable), view = new google.visualization.DataView(dataTable);
  view.setColumns([0, 1, {type:"number", calc:function(data, row) {
    var coordinate = gviz.trendlines.getCoordinate_(dataTable, row);
    return null != coordinate ? trendline.slope * coordinate.x + trendline.intercept : null
  }}]);
  return view
};
gviz.trendlines.computeMean_ = function(dataTable) {
  for(var n = dataTable.getNumberOfRows(), sum = new goog.math.Coordinate, i = 0;i < n;i++) {
    var value = gviz.trendlines.getCoordinate_(dataTable, i);
    null != value && (sum.x += value.x, sum.y += value.y)
  }
  return new goog.math.Coordinate(sum.x / n, sum.y / n)
};
gviz.trendlines.computeSlopeAndIntercept_ = function(dataTable) {
  for(var mean = gviz.trendlines.computeMean_(dataTable), numerator = 0, denominator = 0, i = 0;i < dataTable.getNumberOfRows();i++) {
    var value = gviz.trendlines.getCoordinate_(dataTable, i);
    if(null != value) {
      var diff = new goog.math.Coordinate(value.x - mean.x, value.y - mean.y), numerator = numerator + diff.x * diff.y, denominator = denominator + diff.x * diff.x
    }
  }
  var result = {};
  result.slope = numerator / denominator || 1;
  result.intercept = mean.y - result.slope * mean.x;
  return result
};
gviz.trendlines.getCoordinate_ = function(data, row) {
  var x = data.getValue(row, 0), y = data.getValue(row, 1);
  return null == x || null == y ? null : new goog.math.Coordinate(x, y)
};
// Input 78
gviz.extensions = {};
gviz.extensions.applyPatternOptions = function(wrapper) {
  gviz.patterns.applyPatternOptions(wrapper.getType(), wrapper.getDataTable(), wrapper.getOptions())
};
gviz.extensions.applyTrendLineOption = function(wrapper) {
  gviz.trendlines.applyTrendLineOption(wrapper)
};
gviz.extensions.deserializeView = function(wrapper) {
  var dataTable = wrapper.getDataTable(), view = wrapper.getView();
  if(goog.isArray(view)) {
    for(var i = 0;i < view.length;i++) {
      dataTable = google.visualization.DataView.fromJSON(dataTable, view[i])
    }
  }else {
    goog.isDefAndNotNull(view) && (dataTable = google.visualization.DataView.fromJSON(dataTable, view))
  }
  wrapper.setView(null);
  wrapper.setDataTable(dataTable)
};
gviz.extensions.hackLabelsColumn = function(wrapper) {
  var type = wrapper.getType();
  if(gviz.packages.isCoreChart(type) && "ScatterChart" != type) {
    var data = wrapper.getDataTable(), hasLabelsColumn = wrapper.getOption("hasLabelsColumn");
    if(null != hasLabelsColumn) {
      for(var viewColumns = [{calc:hasLabelsColumn ? "stringify" : "emptyString", sourceColumn:0, type:"string"}], first = hasLabelsColumn ? 1 : 0, numberOfColumns = data.getNumberOfColumns(), i = first;i < numberOfColumns;i++) {
        viewColumns.push(i)
      }
      data = new google.visualization.DataView(data);
      data.setColumns(viewColumns);
      wrapper.setOption("hasLabelsColumn", null);
      wrapper.setDataTable(data)
    }
  }
};
// Input 79
gviz.Wrapper = function(wrapperKind, opt_specification) {
  goog.Disposable.call(this);
  var specification = opt_specification || {};
  goog.isString(specification) && (specification = gviz.json.deserialize(specification));
  this.containerId_ = specification.containerId || null;
  this.wrapperKind_ = wrapperKind;
  this.type_ = specification[wrapperKind + "Type"] || null;
  this.name_ = specification[wrapperKind + "Name"] || null;
  this.nextVisualization = this.visualization = this.loadingVisualization = null;
  this.dataSourceUrl_ = specification.dataSourceUrl || null;
  this.dataTable_ = null;
  this.setDataTable(specification.dataTable);
  this.options_ = specification.options || {};
  this.state_ = specification.state || {};
  var packages = specification.packages;
  this.packages_ = goog.isDef(packages) ? packages : null;
  this.query_ = specification.query || null;
  this.refreshInterval_ = specification.refreshInterval || null;
  this.view_ = specification.view || null;
  this.customRequestHandler_ = null;
  this.extensions_ = [gviz.extensions.deserializeView, gviz.extensions.hackLabelsColumn, gviz.extensions.applyPatternOptions, gviz.extensions.applyTrendLineOption];
  this.isDefaultVisualization_ = specification.isDefaultVisualization || !goog.isDef(specification.isDefaultVisualization)
};
goog.inherits(gviz.Wrapper, goog.Disposable);
gviz.Wrapper.Kind = {CHART:"chart", CONTROL:"control", DASHBOARD:"dashboard"};
gviz.Wrapper.prototype.recentDataTable_ = null;
gviz.Wrapper.prototype.visualizationEventListeners_ = null;
gviz.Wrapper.prototype.container_ = null;
gviz.Wrapper.isNullOrUndefined = function(value) {
  return!goog.isDefAndNotNull(value)
};
gviz.Wrapper.prototype.clone = function() {
  var wrapper = new this.constructor(this.toJSON());
  wrapper.customRequestHandler_ = this.customRequestHandler_;
  return wrapper
};
gviz.Wrapper.prototype.disposeInternal = function() {
  this.clear();
  gviz.Wrapper.superClass_.disposeInternal.call(this)
};
gviz.Wrapper.prototype.clear = function() {
  this.clearVisualization()
};
gviz.Wrapper.prototype.draw = function(opt_container) {
  var container = goog.dom.getElement(opt_container || "");
  if(!goog.dom.isNodeLike(container) && (container = goog.dom.getElement(this.getContainerId()), !goog.dom.isNodeLike(container))) {
    throw Error("The container is null or not defined.");
  }
  this.container_ = container;
  try {
    if(!goog.isDefAndNotNull(this.getType())) {
      throw Error("The " + this.wrapperKind_ + " type is not defined.");
    }
    if(gviz.util.VisCommon.resolveConstructor(this.getType())) {
      this.drawAfterApiLoad_(container)
    }else {
      var draw = goog.bind(this.drawAfterApiLoad_, this, container), draw = google.visualization.errors.createProtectedCallback(draw, goog.bind(this.handleError_, this, container));
      this.loadApi_(draw)
    }
  }catch(x) {
    this.handleError_(container, x)
  }
};
gviz.Wrapper.prototype.toJSON = function() {
  return gviz.json.serialize(this.internalToPOJO_(this.getDataTable()))
};
gviz.Wrapper.prototype.toPOJO = function() {
  return this.internalToPOJO_(this.recentDataTable_ || this.getDataTable())
};
gviz.Wrapper.prototype.internalToPOJO_ = function(dataTable) {
  var packages = this.getPackages(), dataTableObj = void 0;
  goog.isNull(dataTable) || (dataTableObj = goog.isFunction(dataTable.toDataTable) ? dataTable.toDataTable().toPOJO() : dataTable.toPOJO());
  var jsonObj = {containerId:this.getContainerId() || void 0, dataSourceUrl:this.getDataSourceUrl() || void 0, dataTable:dataTableObj, options:this.getOptions() || void 0, state:this.getState() || void 0, packages:goog.isNull(packages) ? void 0 : packages, refreshInterval:this.getRefreshInterval() || void 0, query:this.getQuery() || void 0, view:this.getView() || void 0, isDefaultVisualization:this.isDefaultVisualization()};
  jsonObj[this.wrapperKind_ + "Type"] = this.getType() || void 0;
  jsonObj[this.wrapperKind_ + "Name"] = this.getName() || void 0;
  this.addToJson(jsonObj);
  return jsonObj
};
gviz.Wrapper.prototype.addToJson = function() {
};
gviz.Wrapper.prototype.getDataSourceUrl = function() {
  return this.dataSourceUrl_
};
gviz.Wrapper.prototype.getDataTable = function() {
  return this.dataTable_
};
gviz.Wrapper.prototype.getType = function() {
  return this.type_
};
gviz.Wrapper.prototype.getName = function() {
  return this.name_
};
gviz.Wrapper.prototype.getVisualization = function() {
  return this.visualization
};
gviz.Wrapper.prototype.getContainerId = function() {
  return this.containerId_
};
gviz.Wrapper.prototype.getQuery = function() {
  return this.query_
};
gviz.Wrapper.prototype.getRefreshInterval = function() {
  return this.refreshInterval_
};
gviz.Wrapper.prototype.getOption = function(key, opt_default) {
  return gviz.Wrapper.getOption_(this.options_, key, opt_default)
};
gviz.Wrapper.getOption_ = function(options, key, opt_default) {
  var result = -1 == key.indexOf(".") ? options[key] : goog.getObjectByName(key, options);
  opt_default = goog.isDef(opt_default) ? opt_default : null;
  return result = goog.isDefAndNotNull(result) ? result : opt_default
};
gviz.Wrapper.prototype.getOptions = function() {
  return this.options_
};
gviz.Wrapper.prototype.getState = function() {
  return this.state_
};
gviz.Wrapper.prototype.isDefaultVisualization = function() {
  return this.isDefaultVisualization_
};
gviz.Wrapper.prototype.setDataSourceUrl = function(dataSourceUrl) {
  this.dataSourceUrl_ = dataSourceUrl
};
gviz.Wrapper.prototype.setCustomRequestHandler = function(requestHandler) {
  this.customRequestHandler_ = requestHandler
};
gviz.Wrapper.prototype.getCustomRequestHandler = function() {
  return this.customRequestHandler_
};
gviz.Wrapper.prototype.setDataTable = function(dataTable) {
  null == dataTable ? this.dataTable_ = null : goog.isFunction(dataTable.getTableProperties) ? this.dataTable_ = dataTable : goog.isArray(dataTable) ? this.dataTable_ = (0,google.visualization.datautils.arrayToDataTable)(dataTable) : this.dataTable_ = new google.visualization.DataTable(dataTable)
};
gviz.Wrapper.prototype.setType = function(type) {
  this.type_ = type
};
gviz.Wrapper.prototype.setName = function(name) {
  this.name_ = name
};
gviz.Wrapper.prototype.setContainerId = function(containerId) {
  this.containerId_ = containerId
};
gviz.Wrapper.prototype.setQuery = function(query) {
  this.query_ = query
};
gviz.Wrapper.prototype.setRefreshInterval = function(refreshInterval) {
  this.refreshInterval_ = refreshInterval
};
gviz.Wrapper.prototype.setOption = function(key, value) {
  gviz.Wrapper.setOption_(this.options_, key, value)
};
gviz.Wrapper.setOption_ = function(options, key, value) {
  if(null == value) {
    if(!goog.isNull(gviz.Wrapper.getOption_(options, key))) {
      var path = key.split(".");
      if(1 < path.length) {
        key = path.pop();
        var object = gviz.Wrapper.getOption_(options, path.join("."));
        goog.asserts.assert(goog.isObject(object));
        options = object
      }
      delete options[key]
    }
  }else {
    goog.exportSymbol(key, value, options)
  }
};
gviz.Wrapper.prototype.setOptions = function(options) {
  this.options_ = options || {}
};
gviz.Wrapper.prototype.getAccessors = function() {
  return gviz.Wrapper.propertyAccessors_
};
gviz.Wrapper.prototype.setProperty = function(key, value) {
  var path = key.split(".");
  if(0 < path.length) {
    var topKey = path.shift(), accessors = this.getAccessors(), accessor = accessors[topKey];
    if(accessor) {
      if(0 === path.length) {
        accessor.set.apply(this, value)
      }else {
        var obj = accessor.get.apply(this);
        gviz.Wrapper.setOption_(obj, path.join("."), value)
      }
    }
  }
};
gviz.Wrapper.prototype.setState = function(state) {
  this.state_ = state || {}
};
gviz.Wrapper.prototype.setPackages = function(packages) {
  this.packages_ = packages
};
gviz.Wrapper.prototype.setView = function(view) {
  this.view_ = view
};
gviz.Wrapper.prototype.setVisualization = function(visualization) {
  visualization != this.visualization && (this.nextVisualization = visualization)
};
gviz.Wrapper.prototype.setIsDefaultVisualization = function(isDefault) {
  this.isDefaultVisualization_ = isDefault
};
gviz.Wrapper.prototype.getSnapshot = function() {
  return new this.constructor(this.toPOJO())
};
gviz.Wrapper.prototype.getView = function() {
  return this.view_
};
gviz.Wrapper.prototype.getPackages = function() {
  return this.packages_
};
gviz.Wrapper.prototype.handleError_ = function(container, e) {
  var message = e && e.message || "error", id = google.visualization.errors.addError(container, message);
  google.visualization.events.trigger(this, "error", {id:id, message:message})
};
gviz.Wrapper.prototype.handleQueryResponseError_ = function(container, response) {
  var message = response.getMessage(), detailedMessage = response.getDetailedMessage(), id = google.visualization.errors.addErrorFromQueryResponse(container, response);
  google.visualization.events.trigger(this, "error", {id:id, message:message, detailedMessage:detailedMessage})
};
gviz.Wrapper.prototype.computePackages_ = function() {
  var result = this.getPackages();
  if(!goog.isDefAndNotNull(result)) {
    var type = this.getType(), type = type.replace("google.visualization.", ""), result = gviz.packages.getPackage(type);
    if(!goog.isDefAndNotNull(result)) {
      throw Error("Invalid visualization type: " + type);
    }
  }
  goog.isString(result) && (result = [result]);
  return result
};
gviz.Wrapper.prototype.drawFromDataTable = function(container, dataTable) {
  var constructor = gviz.util.VisCommon.resolveConstructor(this.getType());
  if(!constructor) {
    throw Error("Invalid " + this.wrapperKind_ + " type: " + this.getType());
  }
  this.nextVisualization && (this.clearVisualization(), this.visualization = this.nextVisualization, this.nextVisualization = null);
  var visualization;
  this.visualization && this.visualization.constructor == constructor && this.sameContainer_(container, this.visualization) ? visualization = this.visualization : (this.clearVisualization(), visualization = new constructor(container));
  this.loadingVisualization && this.loadingVisualization != visualization && goog.isFunction(this.loadingVisualization.clearChart) && this.loadingVisualization.clearChart();
  this.loadingVisualization = visualization;
  this.handleVisualizationEvents_(visualization);
  this.recentDataTable_ = dataTable;
  for(var clonedOptions = gviz.object.unsafeClone(this.getOptions()), delegate = new google.visualization.ChartWrapper({chartType:this.getType(), dataTable:dataTable, options:clonedOptions, view:this.getView()}), i = 0;i < this.extensions_.length;i++) {
    this.extensions_[i](delegate)
  }
  visualization.draw(delegate.getDataTable(), delegate.getOptions(), this.getState())
};
gviz.Wrapper.prototype.pushView = function(view) {
  goog.isArray(this.view_) ? this.view_.push(view) : goog.isNull(this.view_) ? this.view_ = [view] : this.view_ = [this.view_, view]
};
gviz.Wrapper.prototype.drawFromQueryResponse_ = function(container, response) {
  if(response.isError()) {
    this.handleQueryResponseError_(container, response)
  }else {
    var dataTable = response.getDataTable();
    this.drawFromDataTable(container, dataTable)
  }
};
gviz.Wrapper.prototype.handleVisualizationEvents_ = function(visualization) {
  var eventTypes = ["ready", "select", "error", "statechange"], self = this;
  this.clearVisualizationEventListeners_();
  var eventListeners = [];
  goog.array.forEach(eventTypes, function(eventType) {
    var listener = google.visualization.events.addListener(visualization, eventType, function(JSCompiler_OptimizeArgumentsArray_p0) {
      "ready" == eventType && (self.loadingVisualization = null, self.visualization = visualization);
      "ready" != eventType && "statechange" != eventType || !goog.isFunction(visualization.getState) || self.setState(visualization.getState.call(visualization));
      google.visualization.events.trigger(self, eventType, JSCompiler_OptimizeArgumentsArray_p0)
    });
    eventListeners.push(listener)
  });
  this.visualizationEventListeners_ = eventListeners
};
gviz.Wrapper.prototype.loadApi_ = function(onLoad) {
  var packages = this.computePackages_(), options = {packages:packages, callback:onLoad}, version = goog.getObjectByName("google.visualization.Version");
  goog.isNull(version) && (version = "1.0");
  gviz.util.VisCommon.loadApi("visualization", version, options)
};
gviz.Wrapper.prototype.drawAfterApiLoad_ = function(container) {
  var dataTable = this.getDataTable();
  if(dataTable) {
    this.drawFromDataTable(container, dataTable)
  }else {
    if(this.hasDataSourceUrl_()) {
      var callback = goog.bind(this.drawFromQueryResponse_, this, container), callback = google.visualization.errors.createProtectedCallback(callback, goog.bind(this.handleError_, this, container));
      this.sendQuery(callback, !0)
    }else {
      throw Error("Cannot draw chart: no data specified.");
    }
  }
};
gviz.Wrapper.prototype.hasDataSourceUrl_ = function() {
  return null != this.getDataSourceUrl()
};
gviz.Wrapper.prototype.sendQuery = function(callback, opt_enableRefresh) {
  var enableRefresh = goog.isBoolean(opt_enableRefresh) ? opt_enableRefresh : !1, url = this.getDataSourceUrl() || "", query = new google.visualization.Query(url), refreshInterval = this.getRefreshInterval();
  refreshInterval && enableRefresh && query.setRefreshInterval(refreshInterval);
  var selectStatement = this.getQuery();
  selectStatement && query.setQuery(selectStatement);
  query.send(callback)
};
gviz.Wrapper.prototype.clearVisualization = function() {
  this.visualization && goog.isFunction(this.visualization.clearChart) && this.visualization.clearChart();
  goog.dispose(this.visualization);
  this.visualization = null
};
gviz.Wrapper.prototype.clearVisualizationEventListeners_ = function() {
  goog.isArray(this.visualizationEventListeners_) && (goog.array.forEach(this.visualizationEventListeners_, function(listener) {
    google.visualization.events.removeListener(listener)
  }), this.visualizationEventListeners_ = null)
};
gviz.Wrapper.prototype.sameContainer_ = function(container, visualization) {
  return visualization && goog.isFunction(visualization.getContainer) ? visualization.getContainer() == container : !1
};
gviz.Wrapper.propertyAccessors_ = {name:{get:gviz.Wrapper.prototype.getName, set:gviz.Wrapper.prototype.setName}, type:{get:gviz.Wrapper.prototype.getType, set:gviz.Wrapper.prototype.setType}, containerId:{get:gviz.Wrapper.prototype.getContainerId, set:gviz.Wrapper.prototype.setContainerId}, options:{get:gviz.Wrapper.prototype.getOptions, set:gviz.Wrapper.prototype.setOptions}, state:{get:gviz.Wrapper.prototype.getState, set:gviz.Wrapper.prototype.setState}, dataSourceUrl:{get:gviz.Wrapper.prototype.getDataSourceUrl, 
set:gviz.Wrapper.prototype.setDataSourceUrl}, dataTable:{get:gviz.Wrapper.prototype.getDataTable, set:gviz.Wrapper.prototype.setDataTable}, refreshInterval:{get:gviz.Wrapper.prototype.getRefreshInterval, set:gviz.Wrapper.prototype.setRefreshInterval}, query:{get:gviz.Wrapper.prototype.getQuery, set:gviz.Wrapper.prototype.setQuery}, view:{get:gviz.Wrapper.prototype.getView, set:gviz.Wrapper.prototype.setView}};
google.visualization.ChartWrapper = function(opt_specification) {
  gviz.Wrapper.call(this, gviz.Wrapper.Kind.CHART, opt_specification)
};
goog.inherits(google.visualization.ChartWrapper, gviz.Wrapper);
google.visualization.ChartWrapper.prototype.getChart = gviz.Wrapper.prototype.getVisualization;
google.visualization.ChartWrapper.prototype.setChart = gviz.Wrapper.prototype.setVisualization;
google.visualization.ChartWrapper.prototype.setChartType = gviz.Wrapper.prototype.setType;
google.visualization.ChartWrapper.prototype.getChartType = gviz.Wrapper.prototype.getType;
google.visualization.ChartWrapper.prototype.setChartName = gviz.Wrapper.prototype.setName;
google.visualization.ChartWrapper.prototype.getChartName = gviz.Wrapper.prototype.getName;
google.visualization.ControlWrapper = function(opt_specification) {
  gviz.Wrapper.call(this, gviz.Wrapper.Kind.CONTROL, opt_specification)
};
goog.inherits(google.visualization.ControlWrapper, gviz.Wrapper);
google.visualization.ControlWrapper.prototype.getControl = gviz.Wrapper.prototype.getVisualization;
google.visualization.ControlWrapper.prototype.setControlType = gviz.Wrapper.prototype.setType;
google.visualization.ControlWrapper.prototype.getControlType = gviz.Wrapper.prototype.getType;
google.visualization.ControlWrapper.prototype.setControlName = gviz.Wrapper.prototype.setName;
google.visualization.ControlWrapper.prototype.getControlName = gviz.Wrapper.prototype.getName;
// Input 80
gviz.ChartWrapperType = {};
gviz.ControlWrapperType = {};
// Input 81
gviz.ChartEventType = {READY:"ready", ANIMATION_FRAME_FINISH:"animationframefinish", ANIMATION_FINISH:"animationfinish", SELECT:"select", CLICK:"click", RIGHT_CLICK:"rightclick", DBL_CLICK:"dblclick", SCROLL:"scroll", DRAG_START:"dragstart", DRAG:"drag", DRAG_END:"dragend", FOCUS_IN:"onmouseover", FOCUS_OUT:"onmouseout", MOUSE_UP:"onmouseup", MOUSE_DOWN:"onmousedown", MOUSE_OVER:"onmouseover", MOUSE_OUT:"onmouseout", MOUSE_MOVE:"onmousemove", REMOVE_SERIE:"removeserie", RANGE_CHANGE:"rangechange", 
ROLL_UP:"rollup"};
gviz.ControlEventType = {READY:"ready", ERROR:"error", UI_CHANGE:"uichange", STATE_CHANGE:"statechange"};
// Input 82
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = {}
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  goog.isArray(type) || (goog.events.EventHandler.typeArray_[0] = type, type = goog.events.EventHandler.typeArray_);
  for(var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this, opt_capture || !1, opt_handler || this.handler_ || this);
    if(!listenerObj) {
      break
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(!listenerObj) {
      return this
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    listener && (goog.events.unlistenByKey(listener), delete this.keys_[listener.key])
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {}
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function() {
  throw Error("EventHandler.handleEvent not implemented");
};
// Input 83
gviz.controls = {};
gviz.controls.ui = {};
gviz.controls.ui.ControlUi = function(container) {
  goog.Disposable.call(this);
  this.container_ = container;
  this.eventHandler_ = new goog.events.EventHandler(this)
};
goog.inherits(gviz.controls.ui.ControlUi, goog.Disposable);
gviz.controls.ui.ControlUi.prototype.disposeInternal = function() {
  this.clear();
  gviz.controls.ui.ControlUi.superClass_.disposeInternal.call(this)
};
gviz.controls.ui.ControlUi.prototype.clear = function() {
  this.eventHandler_.removeAll();
  goog.dispose(this.eventHandler_);
  goog.dom.removeChildren(this.container_)
};
gviz.controls.ui.ControlUi.prototype.getContainer = function() {
  return this.container_
};
gviz.controls.ui.ControlUi.prototype.addEventListener = function(src, type, callback, opt_capture, opt_handler) {
  this.eventHandler_.listen(src, type, callback, opt_capture, opt_handler)
};
gviz.controls.ui.ControlUi.prototype.draw = function() {
};
gviz.controls.ui.ControlUi.prototype.getState = function() {
  return{}
};
// Input 84
google.visualization.ControlUi = {};
google.visualization.Control = function(container) {
  goog.Disposable.call(this);
  this.container_ = gviz.util.VisCommon.validateContainer(container);
  this.errorHandler_ = new gviz.ErrorHandler(this, this.container_);
  this.dependencies_ = []
};
goog.inherits(google.visualization.Control, goog.Disposable);
google.visualization.Control.prototype.disposeInternal = function() {
  this.clear();
  google.visualization.Control.superClass_.disposeInternal.call(this)
};
google.visualization.Control.prototype.clear = function() {
  this.disposeUi_()
};
google.visualization.Control.prototype.data_ = null;
google.visualization.Control.prototype.userOptions_ = null;
google.visualization.Control.prototype.options_ = null;
google.visualization.Control.prototype.ui_ = null;
google.visualization.Control.prototype.uiListener_ = null;
google.visualization.Control.prototype.userState_ = null;
google.visualization.Control.prototype.state_ = null;
google.visualization.Control.prototype.initialState_ = null;
google.visualization.Control.prototype.getDataTable = function() {
  return this.data_
};
google.visualization.Control.prototype.getOptions = function() {
  return this.options_
};
google.visualization.Control.prototype.getDefaultOptions = function() {
  return{}
};
google.visualization.Control.prototype.getUiOptions = function(data, options) {
  return options.inferWholeObjectValue("ui", {})
};
google.visualization.Control.prototype.getDefaultUiClass = function() {
  return""
};
google.visualization.Control.prototype.setDependencies = function(dependencies) {
  this.dependencies_ = dependencies
};
google.visualization.Control.prototype.getDependencies = function() {
  return this.dependencies_
};
google.visualization.Control.prototype.prepareDraw = function() {
};
google.visualization.Control.prototype.getState = function() {
  return this.state_ ? gviz.json.deserialize(gviz.json.serialize(this.state_)) : null
};
google.visualization.Control.prototype.draw = function(data, options, state) {
  this.data_ = data;
  this.userOptions_ = options || {};
  this.userState_ = state || {};
  this.errorHandler_.safeExecute(this.drawInternal_, this)
};
google.visualization.Control.prototype.drawInternal_ = function() {
  this.data_ && (this.prepareState_(), this.prepareOptions_(), this.prepareDraw(this.data_, this.options_, this.state_), this.drawUi_(), google.visualization.events.trigger(this, gviz.ControlEventType.READY, null))
};
google.visualization.Control.prototype.prepareOptions_ = function() {
  this.options_ = new gviz.Options([this.userOptions_, this.getDefaultOptions() || {}])
};
google.visualization.Control.prototype.prepareState_ = function() {
  this.state_ = this.userState_ || {};
  if(!goog.isObject(this.state_)) {
    throw Error("Control state must be an object.");
  }
  this.initialState_ = this.initialState_ || this.state_
};
google.visualization.Control.prototype.drawUi_ = function() {
  this.disposeUi_();
  this.ui_ = this.createUiInstance_();
  if(!this.ui_) {
    throw Error("Invalid Ui instance.");
  }
  this.uiListener_ = google.visualization.events.addListener(this.ui_, gviz.ControlEventType.UI_CHANGE, goog.bind(this.uiChanged_, this));
  this.ui_.draw(this.state_, this.getUiOptions(this.data_, this.options_));
  this.state_ = this.ui_.getState()
};
google.visualization.Control.prototype.disposeUi_ = function() {
  this.uiListener_ && (google.visualization.events.removeListener(this.uiListener_), goog.dispose(this.uiListener_), this.uiListener_ = null);
  goog.dispose(this.ui_);
  this.ui_ = null;
  goog.dom.removeChildren(this.container_)
};
google.visualization.Control.prototype.createUiInstance_ = function() {
  var ctorName = this.options_.inferStringValue("ui.type", this.getDefaultUiClass()), ctorFunction = gviz.util.VisCommon.resolveConstructor(ctorName);
  return ctorFunction ? new ctorFunction(this.container_) : null
};
google.visualization.Control.prototype.uiChanged_ = function(evt) {
  this.state_ = this.ui_.getState();
  this.handleUiChangeEvent(this.state_, evt)
};
google.visualization.Control.prototype.handleUiChangeEvent = function(state, evt) {
  google.visualization.events.trigger(this, gviz.ControlEventType.STATE_CHANGE, evt)
};
google.visualization.Control.prototype.resetControl = function() {
  this.errorHandler_.safeExecute(this.resetControlInternal_, this)
};
google.visualization.Control.prototype.resetControlInternal_ = function() {
  this.initialState_ && (this.userState_ = this.initialState_, this.drawInternal_())
};
// Input 85
gviz.controls.DAG = function() {
  this.nodes_ = new goog.structs.Map;
  this.forwardEdges_ = new goog.structs.Map;
  this.backwardEdges_ = new goog.structs.Map
};
gviz.controls.DAG.prototype.addEdge = function(parentNode, childNode) {
  this.containsEdge(parentNode, childNode) || (this.addNode_(parentNode), this.addNode_(childNode), this.addEdgeInternal_(parentNode, childNode, this.forwardEdges_), this.addEdgeInternal_(childNode, parentNode, this.backwardEdges_))
};
gviz.controls.DAG.prototype.removeEdge = function(parentNode, childNode) {
  this.containsEdge(parentNode, childNode) && (this.removeEdgeInternal_(parentNode, childNode, this.forwardEdges_), this.removeEdgeInternal_(childNode, parentNode, this.backwardEdges_), this.isIsolated_(parentNode) && this.removeNode_(parentNode), this.isIsolated_(childNode) && this.removeNode_(childNode))
};
gviz.controls.DAG.prototype.clear = function() {
  this.nodes_.clear();
  this.forwardEdges_.clear();
  this.backwardEdges_.clear()
};
gviz.controls.DAG.prototype.isEmpty = function() {
  return this.nodes_.isEmpty()
};
gviz.controls.DAG.prototype.isValid = function() {
  try {
    return this.topologicalSort(), !0
  }catch(ex) {
    return!1
  }
};
gviz.controls.DAG.prototype.getCount = function() {
  return this.nodes_.getCount()
};
gviz.controls.DAG.prototype.getValues = function() {
  return this.nodes_.getValues()
};
gviz.controls.DAG.prototype.contains = function(node) {
  return this.nodes_.containsKey(this.getKey_(node))
};
gviz.controls.DAG.prototype.containsEdge = function(parentNode, childNode) {
  var parentNodeKey = this.getKey_(parentNode);
  return this.forwardEdges_.containsKey(parentNodeKey) && this.forwardEdges_.get(parentNodeKey).contains(this.getKey_(childNode))
};
gviz.controls.DAG.prototype.isRoot = function(node) {
  return this.contains(node) ? !this.backwardEdges_.containsKey(this.getKey_(node)) : !1
};
gviz.controls.DAG.prototype.getParents = function(node) {
  if(!this.contains(node)) {
    return null
  }
  var parentKeys = this.backwardEdges_.get(this.getKey_(node));
  return parentKeys ? goog.structs.map(parentKeys, function(parentKey) {
    return this.nodes_.get(parentKey)
  }, this) : null
};
gviz.controls.DAG.prototype.getChildren = function(node) {
  if(!this.contains(node)) {
    return null
  }
  var childKeys = this.forwardEdges_.get(this.getKey_(node));
  return childKeys ? goog.structs.map(childKeys, function(childKey) {
    return this.nodes_.get(childKey)
  }, this) : null
};
gviz.controls.DAG.prototype.getRoots = function() {
  if(this.nodes_.isEmpty()) {
    return[]
  }
  var roots = [];
  goog.structs.forEach(this.forwardEdges_, function(unused_value, key) {
    this.backwardEdges_.containsKey(key) || roots.push(this.nodes_.get(key))
  }, this);
  if(0 == roots.length) {
    throw Error("Invalid state: DAG has not root node(s).");
  }
  return roots
};
gviz.controls.DAG.prototype.topologicalSort = function() {
  for(var backwardEdges = this.deepClone_(this.backwardEdges_), topsort = [], keysToProcess = goog.array.map(this.getRoots(), function(root) {
    return this.getKey_(root)
  }, this);0 < keysToProcess.length;) {
    for(var newRoots = [], i = 0;i < keysToProcess.length;i++) {
      var key = keysToProcess[i];
      topsort.push(this.nodes_.get(key));
      var childrenKeys = this.forwardEdges_.get(key);
      childrenKeys && goog.structs.forEach(childrenKeys, function(childKey) {
        backwardEdges.get(childKey).remove(key);
        backwardEdges.get(childKey).isEmpty() && (backwardEdges.remove(childKey), newRoots.push(childKey))
      })
    }
    keysToProcess = newRoots
  }
  if(topsort.length != this.nodes_.getCount()) {
    throw Error("cycle detected");
  }
  return topsort
};
gviz.controls.DAG.prototype.clone = function() {
  return this.isEmpty() ? new gviz.controls.DAG : gviz.controls.DAG.prototype.extractSubgraph.apply(this, this.getRoots())
};
gviz.controls.DAG.prototype.extractSubgraph = function(var_args) {
  var subgraph = new gviz.controls.DAG;
  if(0 == arguments.length) {
    return subgraph
  }
  for(var i = 0;i < arguments.length;i++) {
    var parentNode = arguments[i];
    this.recursivelyBuildSubgraph_(parentNode, subgraph)
  }
  return subgraph
};
gviz.controls.DAG.prototype.recursivelyBuildSubgraph_ = function(node, graph) {
  var children = this.getChildren(node);
  children && goog.structs.forEach(children, function(childNode) {
    graph.addEdge(node, childNode);
    this.recursivelyBuildSubgraph_(childNode, graph)
  }, this)
};
gviz.controls.DAG.prototype.isSubgraphDetachable = function(node) {
  for(var subgraph = this.extractSubgraph(node), subgraphNodes = subgraph.getValues(), i = 0;i < subgraphNodes.length;i++) {
    var subgraphNode = subgraphNodes[i];
    if(subgraphNode != node && subgraph.getParents(subgraphNode).length != this.getParents(subgraphNode).length) {
      return!1
    }
  }
  return!0
};
gviz.controls.DAG.prototype.getKey_ = function(val) {
  var type = typeof val;
  return"object" == type && val || "function" == type ? "o" + goog.getUid(val) : type.substr(0, 1) + val
};
gviz.controls.DAG.prototype.addNode_ = function(node) {
  this.nodes_.set(this.getKey_(node), node)
};
gviz.controls.DAG.prototype.removeNode_ = function(node) {
  this.nodes_.remove(this.getKey_(node))
};
gviz.controls.DAG.prototype.addEdgeInternal_ = function(startNode, endNode, edgeMap) {
  var edgesFromStartNode = edgeMap.get(this.getKey_(startNode));
  edgesFromStartNode || (edgesFromStartNode = new goog.structs.Set, edgeMap.set(this.getKey_(startNode), edgesFromStartNode));
  edgesFromStartNode.add(this.getKey_(endNode))
};
gviz.controls.DAG.prototype.removeEdgeInternal_ = function(startNode, endNode, edgeMap) {
  goog.asserts.assert(edgeMap.containsKey(this.getKey_(startNode)));
  var edgesFromStartNode = edgeMap.get(this.getKey_(startNode));
  edgesFromStartNode.remove(this.getKey_(endNode));
  edgesFromStartNode.isEmpty() && edgeMap.remove(this.getKey_(startNode))
};
gviz.controls.DAG.prototype.isIsolated_ = function(node) {
  return!this.forwardEdges_.containsKey(this.getKey_(node)) && !this.backwardEdges_.containsKey(this.getKey_(node))
};
gviz.controls.DAG.prototype.deepClone_ = function(edgesMap) {
  var cloneMap = new goog.structs.Map;
  goog.structs.forEach(edgesMap, function(endNodeKeys, startNodekey) {
    cloneMap.set(startNodekey, endNodeKeys.clone())
  });
  return cloneMap
};
// Input 86
google.visualization.Choreographer = function(container) {
  goog.Disposable.call(this);
  this.participantsGraph_ = new gviz.controls.DAG;
  this.listeners_ = [];
  this.errorHandler_ = new gviz.ErrorHandler(this, container);
  this.drawIteration_ = null
};
goog.inherits(google.visualization.Choreographer, goog.Disposable);
google.visualization.Choreographer.prototype.disposeInternal = function() {
  this.clear();
  google.visualization.Choreographer.superClass_.disposeInternal.call(this)
};
google.visualization.Choreographer.prototype.clear = function() {
  goog.array.forEach(this.listeners_, function(listener) {
    google.visualization.events.removeListener(listener)
  });
  this.listeners_ = [];
  this.drawIteration_ = null;
  this.participantsGraph_.clear()
};
google.visualization.Choreographer.prototype.handleError_ = function(message) {
  if(goog.DEBUG) {
    throw Error(message);
  }
  this.errorHandler_.addError(message)
};
google.visualization.Choreographer.prototype.bind = function(control, participant) {
  if(google.visualization.Choreographer.looksLikeControl_(control)) {
    if(google.visualization.Choreographer.looksLikeParticipant_(participant)) {
      var controlUid = goog.getUid(control), participantUid = goog.getUid(participant);
      if(participantUid == controlUid) {
        this.handleError_("Cannot bind a control to itself.")
      }else {
        var newParticipants = [];
        this.participantsGraph_.contains(control) || newParticipants.push(control);
        this.participantsGraph_.contains(participant) || newParticipants.push(participant);
        this.participantsGraph_.addEdge(control, participant);
        if(this.areBindingsValid_()) {
          for(var i = 0;i < newParticipants.length;i++) {
            this.listeners_.push(google.visualization.events.addListener(newParticipants[i], gviz.ControlEventType.STATE_CHANGE, goog.bind(this.handleParticipantStateChange_, this, newParticipants[i]))), this.listeners_.push(google.visualization.events.addListener(newParticipants[i], gviz.ControlEventType.READY, goog.bind(this.handleParticipantReady_, this, newParticipants[i]))), this.listeners_.push(google.visualization.events.addListener(newParticipants[i], gviz.ControlEventType.ERROR, goog.bind(this.handleParticipantError_, 
            this, newParticipants[i])))
          }
        }else {
          this.participantsGraph_.removeEdge(control, participant)
        }
      }
    }else {
      this.handleError_(participant + " does not fit either the Control or Visualization specification.")
    }
  }else {
    this.handleError_(control + " does not fit the Control specification.")
  }
};
google.visualization.Choreographer.prototype.draw = function(dataTable) {
  if(dataTable && !this.participantsGraph_.isEmpty()) {
    this.drawIteration_ = new gviz.controls.DrawIteration_(this);
    for(var rootParticipants = this.participantsGraph_.getRoots(), i = 0;i < rootParticipants.length;i++) {
      rootParticipants[i].setDataTable(dataTable)
    }
    this.drawIteration_.start(rootParticipants)
  }
};
google.visualization.Choreographer.prototype.areBindingsValid_ = function() {
  return this.participantsGraph_.isValid() ? !0 : (this.handleError_("The requested control and participant cannot be bound together, as this would introduce a dependency cycle"), !1)
};
google.visualization.Choreographer.looksLikeParticipant_ = function(wrapper) {
  return goog.isObject(wrapper) && goog.isFunction(wrapper.draw) && goog.isFunction(wrapper.setDataTable)
};
google.visualization.Choreographer.looksLikeControl_ = function(wrapper) {
  return google.visualization.Choreographer.looksLikeParticipant_(wrapper) && goog.isFunction(wrapper.getControl)
};
google.visualization.Choreographer.prototype.isValidControl_ = function(wrapper) {
  var controlObj = wrapper.getControl();
  return goog.isObject(controlObj) ? goog.isFunction(controlObj.applyOperator) ? this.participantsGraph_.isSubgraphDetachable(wrapper) : goog.isFunction(controlObj.apply) ? !0 : !1 : !1
};
google.visualization.Choreographer.prototype.handleParticipantStateChange_ = function(participant) {
  goog.asserts.assert(this.participantsGraph_.contains(participant));
  this.drawIteration_ = this.drawIteration_ || new gviz.controls.DrawIteration_(this);
  this.drawIteration_.handleParticipantChanged(participant)
};
google.visualization.Choreographer.prototype.handleParticipantReady_ = function(participant) {
  goog.asserts.assert(this.participantsGraph_.contains(participant));
  google.visualization.Choreographer.looksLikeControl_(participant) && !this.isValidControl_(participant) ? this.handleError_(participant + " does not fit the Control specification while handling 'ready' event.") : (this.drawIteration_ = this.drawIteration_ || new gviz.controls.DrawIteration_(this), this.drawIteration_.handleParticipantChanged(participant))
};
google.visualization.Choreographer.prototype.handleParticipantError_ = function(participant) {
  goog.asserts.assert(this.participantsGraph_.contains(participant));
  this.drawIteration_ && this.drawIteration_.handleError(participant)
};
google.visualization.Choreographer.prototype.drawIterationCompleted_ = function(success) {
  goog.asserts.assert(this.drawIteration_);
  success ? google.visualization.events.trigger(this, gviz.ControlEventType.READY, null) : this.handleError_("One or more participants failed to draw()");
  this.drawIteration_ = null
};
google.visualization.Choreographer.mergeDataViews = function(dataviews) {
  goog.asserts.assert(0 < dataviews.length);
  if(1 == dataviews.length) {
    return dataviews[0]
  }
  var masterView = dataviews[0], otherViews = goog.array.slice(dataviews, 1), rowIntersection = google.visualization.Choreographer.computeRowIntersection_(masterView, otherViews), columnIntersection = google.visualization.Choreographer.computeColumnIntersection_(masterView, otherViews), outputView = new google.visualization.DataView(dataviews[0]);
  outputView.setRows(rowIntersection);
  outputView.setColumns(columnIntersection);
  return outputView
};
google.visualization.Choreographer.computeRowIntersection_ = function(masterDataview, dataviews) {
  goog.asserts.assert(0 < dataviews.length);
  for(var rowSet = new goog.structs.Set(google.visualization.Choreographer.getUnderlyingTableRowIndexes_(dataviews[0])), i = 1;i < dataviews.length && (rowSet = rowSet.intersection(google.visualization.Choreographer.getUnderlyingTableRowIndexes_(dataviews[i])), !rowSet.isEmpty());i++) {
  }
  for(var rowIntersection = [], r = 0;r < masterDataview.getNumberOfRows();r++) {
    rowSet.contains(masterDataview.getUnderlyingTableRowIndex(r)) && rowIntersection.push(r)
  }
  return rowIntersection
};
google.visualization.Choreographer.computeColumnIntersection_ = function(masterDataview, dataviews) {
  goog.asserts.assert(0 < dataviews.length);
  for(var columnSet = new goog.structs.Set(google.visualization.Choreographer.getUnderlyingTableColumnIndexes_(dataviews[0])), i = 1;i < dataviews.length && (columnSet = columnSet.intersection(google.visualization.Choreographer.getUnderlyingTableColumnIndexes_(dataviews[i])), !columnSet.isEmpty());i++) {
  }
  for(var columnIntersection = [], c = 0;c < masterDataview.getNumberOfColumns();c++) {
    columnSet.contains(masterDataview.getUnderlyingTableColumnIndex(c)) && columnIntersection.push(c)
  }
  return columnIntersection
};
google.visualization.Choreographer.getUnderlyingTableRowIndexes_ = function(dataview) {
  for(var indexes = [], i = 0;i < dataview.getNumberOfRows();i++) {
    indexes.push(dataview.getUnderlyingTableRowIndex(i))
  }
  return indexes
};
google.visualization.Choreographer.getUnderlyingTableColumnIndexes_ = function(dataview) {
  for(var indexes = [], i = 0;i < dataview.getNumberOfColumns();i++) {
    var underlyingColumnIndex = dataview.getUnderlyingTableColumnIndex(i);
    -1 != underlyingColumnIndex && indexes.push(underlyingColumnIndex)
  }
  return indexes
};
gviz.controls.DrawIteration_ = function(choreographer) {
  this.choreographer_ = choreographer;
  this.participantsGraph_ = choreographer.participantsGraph_.clone();
  this.stateMap_ = {};
  for(var allParticipants = this.participantsGraph_.getValues(), i = 0;i < allParticipants.length;i++) {
    this.transition_(allParticipants[i], gviz.controls.DrawIteration_.State.READY)
  }
};
gviz.controls.DrawIteration_.State = {PENDING:"pending", DRAWING:"drawing", READY:"ready", ERROR:"error"};
gviz.controls.DrawIteration_.prototype.start = function(roots) {
  gviz.controls.DrawIteration_.prototype.markAllDependenciesAsPending_.apply(this, roots);
  for(var i = 0;i < roots.length;i++) {
    this.draw_(roots[i])
  }
};
gviz.controls.DrawIteration_.prototype.handleParticipantChanged = function(participant) {
  if(this.participantsGraph_.contains(participant)) {
    switch(this.getState_(participant)) {
      case gviz.controls.DrawIteration_.State.PENDING:
        break;
      case gviz.controls.DrawIteration_.State.ERROR:
        break;
      case gviz.controls.DrawIteration_.State.DRAWING:
        this.transition_(participant, gviz.controls.DrawIteration_.State.READY);
        this.drawDependencies_(participant);
        break;
      case gviz.controls.DrawIteration_.State.READY:
        this.markAllDependenciesAsPending_(participant);
        this.drawDependencies_(participant);
        break;
      default:
        goog.asserts.fail("Invalid participant state: " + this.getState_(participant))
    }
    this.checkIfIterationFinished_()
  }
};
gviz.controls.DrawIteration_.prototype.handleError = function(participant) {
  if(this.participantsGraph_.contains(participant)) {
    switch(this.getState_(participant)) {
      case gviz.controls.DrawIteration_.State.PENDING:
      ;
      case gviz.controls.DrawIteration_.State.READY:
      ;
      case gviz.controls.DrawIteration_.State.ERROR:
        break;
      case gviz.controls.DrawIteration_.State.DRAWING:
        this.transition_(participant, gviz.controls.DrawIteration_.State.ERROR);
        this.abortAllDependencies_(participant);
        break;
      default:
        goog.asserts.fail("Invalid participant state:" + this.getState_(participant))
    }
    this.checkIfIterationFinished_()
  }
};
gviz.controls.DrawIteration_.prototype.checkIfIterationFinished_ = function() {
  var errorParticipants = 0, success = goog.object.every(this.stateMap_, function(state) {
    if(state == gviz.controls.DrawIteration_.State.ERROR) {
      errorParticipants++
    }else {
      if(state != gviz.controls.DrawIteration_.State.READY) {
        return!1
      }
    }
    return!0
  }, this);
  success && this.choreographer_.drawIterationCompleted_(0 == errorParticipants)
};
gviz.controls.DrawIteration_.prototype.getState_ = function(participant) {
  return this.stateMap_[goog.getUid(participant)]
};
gviz.controls.DrawIteration_.prototype.transition_ = function(participant, state) {
  this.stateMap_[goog.getUid(participant)] = state
};
gviz.controls.DrawIteration_.prototype.markAllDependenciesAsPending_ = function(var_args) {
  for(var subgraph = gviz.controls.DAG.prototype.extractSubgraph.apply(this.participantsGraph_, arguments), subgraphParticipants = subgraph.getValues(), i = 0;i < subgraphParticipants.length;i++) {
    subgraph.isRoot(subgraphParticipants[i]) || this.transition_(subgraphParticipants[i], gviz.controls.DrawIteration_.State.PENDING)
  }
};
gviz.controls.DrawIteration_.prototype.abortAllDependencies_ = function(participant) {
  for(var dependencies = this.participantsGraph_.extractSubgraph(participant).getValues(), i = 1;i < dependencies.length;i++) {
    this.transition_(dependencies[i], gviz.controls.DrawIteration_.State.ERROR)
  }
};
gviz.controls.DrawIteration_.prototype.draw_ = function(participant) {
  this.transition_(participant, gviz.controls.DrawIteration_.State.DRAWING);
  var protectedDraw = google.visualization.errors.createProtectedCallback(function() {
    participant.draw()
  }, goog.bind(this.handleError, this, participant));
  goog.Timer.callOnce(protectedDraw)
};
gviz.controls.DrawIteration_.prototype.drawDependencies_ = function(participant) {
  var childParticipants = this.participantsGraph_.getChildren(participant);
  if(childParticipants) {
    var control = participant.getControl();
    control.setDependencies && control.setDependencies(childParticipants);
    for(var i = 0;i < childParticipants.length;i++) {
      var child = childParticipants[i];
      if(this.allParentsAreReady_(child)) {
        var mergedData = this.computeMergedView_(child);
        child.setDataTable(mergedData);
        this.draw_(child)
      }
    }
  }
};
gviz.controls.DrawIteration_.prototype.allParentsAreReady_ = function(participant) {
  var parents = this.participantsGraph_.getParents(participant);
  if(!parents) {
    return!0
  }
  for(var i = 0;i < parents.length;i++) {
    if(this.getState_(parents[i]) != gviz.controls.DrawIteration_.State.READY) {
      return!1
    }
  }
  return!0
};
gviz.controls.DrawIteration_.prototype.computeMergedView_ = function(participant) {
  var affectingDataviews = goog.array.map(this.participantsGraph_.getParents(participant), function(parentParticipant) {
    var control = parentParticipant.getControl();
    if(goog.isFunction(control.apply)) {
      return control.apply.call(control)
    }
    goog.asserts.fail("Invalid Control in draw iteration: " + control)
  });
  return google.visualization.Choreographer.mergeDataViews(affectingDataviews)
};
// Input 87
google.visualization.Dashboard = function(container) {
  goog.Disposable.call(this);
  this.container_ = container;
  this.choreographer_ = new google.visualization.Choreographer(container);
  this.bindEvents_()
};
goog.inherits(google.visualization.Dashboard, goog.Disposable);
google.visualization.Dashboard.prototype.disposeInternal = function() {
  this.clear();
  goog.dispose(this.readyListener_);
  goog.dispose(this.errorListener_);
  goog.dispose(this.choreographer_);
  google.visualization.Dashboard.superClass_.disposeInternal.call(this)
};
google.visualization.Dashboard.prototype.clear = function() {
  google.visualization.events.removeListener(this.readyListener_);
  google.visualization.events.removeListener(this.errorListener_);
  this.choreographer_.clear()
};
google.visualization.Dashboard.prototype.bind = function(controls, participants) {
  goog.isArray(controls) || (controls = [controls]);
  goog.isArray(participants) || (participants = [participants]);
  for(var c = 0;c < controls.length;c++) {
    for(var p = 0;p < participants.length;p++) {
      this.choreographer_.bind(controls[c], participants[p])
    }
  }
  return this
};
google.visualization.Dashboard.prototype.draw = function(dataTable) {
  this.choreographer_.draw(dataTable)
};
google.visualization.Dashboard.prototype.getContainer = function() {
  return this.container_
};
google.visualization.Dashboard.prototype.bindEvents_ = function() {
  goog.dispose(this.readyListener_);
  this.readyListener_ = google.visualization.events.addListener(this.choreographer_, gviz.ControlEventType.READY, goog.bind(this.handleChoreographerEvent_, this, gviz.ControlEventType.READY));
  goog.dispose(this.errorListener_);
  this.errorListener_ = google.visualization.events.addListener(this.choreographer_, gviz.ControlEventType.ERROR, goog.bind(this.handleChoreographerEvent_, this, gviz.ControlEventType.ERROR))
};
google.visualization.Dashboard.prototype.handleChoreographerEvent_ = function(eventType, opt_payload) {
  google.visualization.events.trigger(this, eventType, opt_payload || null)
};
// Input 88
google.visualization.DashboardWrapper = function(opt_specification) {
  gviz.Wrapper.call(this, gviz.Wrapper.Kind.DASHBOARD, opt_specification);
  var spec = opt_specification || {};
  goog.isString(spec) && (spec = gviz.json.deserialize(spec));
  this.wrappers_ = spec.wrappers || null;
  this.bindings_ = spec.bindings || null;
  this.setType(spec.dashboardType || "Dashboard");
  this.initWrappersAndBindings_()
};
goog.inherits(google.visualization.DashboardWrapper, gviz.Wrapper);
google.visualization.DashboardWrapper.prototype.drawFromDataTable = function(container, dataTable) {
  goog.dispose(this.visualization);
  container = gviz.util.VisCommon.validateContainer(container);
  for(var dashboard = new google.visualization.Dashboard(container), bindings = this.bindings_ || [], wrappers = this.wrappers_, numBindings = bindings.length, getWrapper = function(index) {
    return wrappers[index]
  }, i = 0;i < numBindings;i++) {
    var controls = goog.array.map(bindings[i].controls, getWrapper), participants = goog.array.map(bindings[i].participants, getWrapper);
    dashboard.bind(controls, participants)
  }
  this.visualization = dashboard;
  google.visualization.DashboardWrapper.superClass_.drawFromDataTable.call(this, container, dataTable)
};
google.visualization.DashboardWrapper.prototype.addToJson = function(jsonObj) {
  jsonObj.wrappers = this.wrappers_ ? goog.array.map(this.wrappers_, function(wrapper) {
    return wrapper.toJSON()
  }) : void 0;
  jsonObj.bindings = this.bindings_ || void 0
};
google.visualization.DashboardWrapper.prototype.setWrappers = function(wrappers) {
  this.wrappers_ = wrappers || null;
  this.initWrappersAndBindings_()
};
google.visualization.DashboardWrapper.prototype.getWrappers = function() {
  return this.wrappers_
};
google.visualization.DashboardWrapper.prototype.setBindings = function(bindings) {
  this.bindings_ = bindings || null;
  this.initWrappersAndBindings_()
};
google.visualization.DashboardWrapper.prototype.getBindings = function() {
  return this.bindings_
};
google.visualization.DashboardWrapper.prototype.getDashboard = gviz.Wrapper.prototype.getVisualization;
google.visualization.DashboardWrapper.prototype.setDashboardName = gviz.Wrapper.prototype.setName;
google.visualization.DashboardWrapper.prototype.getDashboardName = gviz.Wrapper.prototype.getName;
google.visualization.DashboardWrapper.prototype.initWrappersAndBindings_ = function() {
  var wrappersSpec = this.wrappers_;
  if(!goog.isNull(wrappersSpec) && !goog.isArray(wrappersSpec)) {
    var wrappersArray = [];
    goog.object.forEach(wrappersSpec, function(wrapper, name) {
      this.isWrapperLike_(wrapper) || (wrapper = google.visualization.createWrapper(wrapper));
      wrapper.setName(name);
      wrappersArray.push(wrapper)
    }, this);
    wrappersSpec = wrappersArray
  }
  var bindingsSpec = this.bindings_;
  google.visualization.DashboardWrapper.isEmptyArraySafe_(wrappersSpec) && google.visualization.DashboardWrapper.isEmptyArraySafe_(bindingsSpec) || (this.wrappers_ = goog.array.map(wrappersSpec, this.normalizeWrapper_, this), this.bindings_ = goog.array.map(bindingsSpec, this.normalizeBinding_, this))
};
google.visualization.DashboardWrapper.prototype.normalizeWrapper_ = function(wrapper) {
  this.isWrapperLike_(wrapper) || (wrapper = google.visualization.createWrapper(wrapper));
  wrapper.setDataTable(null);
  wrapper.setDataSourceUrl(null);
  return wrapper
};
google.visualization.DashboardWrapper.prototype.normalizeBinding_ = function(binding) {
  var controls = binding.controls, participants = binding.participants;
  if(google.visualization.DashboardWrapper.isEmptyArraySafe_(controls) || google.visualization.DashboardWrapper.isEmptyArraySafe_(participants)) {
    throw Error("invalid binding: " + binding);
  }
  controls = goog.array.map(controls, this.findBindingWrapperIndex_, this);
  participants = goog.array.map(participants, this.findBindingWrapperIndex_, this);
  return{controls:controls, participants:participants}
};
google.visualization.DashboardWrapper.prototype.findBindingWrapperIndex_ = function(arg) {
  var wrapper = arg;
  if(this.isInputWrapperLike_(arg)) {
    return this.isWrapperLike_(wrapper) || (wrapper = google.visualization.createWrapper(wrapper)), this.wrappers_.push(wrapper), this.wrappers_.length - 1
  }
  var names = this.getWrappersNames_(), index = goog.string.isEmptySafe(wrapper) ? -1 : goog.array.indexOf(names, wrapper);
  if(-1 == index) {
    throw Error("Invalid wrapper name: " + wrapper);
  }
  return index
};
google.visualization.DashboardWrapper.prototype.isWrapperLike_ = function(wrapper) {
  return goog.isFunction(wrapper.toJSON)
};
google.visualization.DashboardWrapper.prototype.isInputWrapperLike_ = function(wrapper) {
  var objectLike = /^{.*}$/;
  return goog.isObject(wrapper) || goog.isString(wrapper) && objectLike.test(wrapper)
};
google.visualization.DashboardWrapper.prototype.getWrappersNames_ = function() {
  return goog.array.map(this.wrappers_, function(wrapper) {
    return wrapper.getName()
  })
};
google.visualization.DashboardWrapper.isEmptyArraySafe_ = function(arr) {
  return goog.isArray(arr) ? goog.array.isEmpty(arr) : !0
};
// Input 89
google.visualization.context = {};
gviz.context = {};
google.visualization.drawChart = function(specification, opt_container) {
  google.visualization.createWrapper(specification).draw(opt_container)
};
google.visualization.drawFromUrl = function(container, opt_url) {
  var url = new goog.Uri(opt_url || document.location.href), json = url.getParameterValue("json"), specification;
  goog.isDefAndNotNull(json) ? specification = json : (specification = {}, goog.array.forEach(url.getQueryData().getKeys(), function(key) {
    var value = url.getParameterValue(key);
    try {
      goog.isDefAndNotNull(value) && (value = gviz.json.deserialize(value))
    }catch(x) {
    }
    specification[key] = value
  }), specification.options = goog.object.unsafeClone(specification));
  google.visualization.drawChart(specification, container)
};
google.visualization.createUrl = function(specification, opt_pageUrl) {
  goog.isString(specification) && (specification = gviz.json.deserialize(specification));
  var result = [], value, key;
  for(key in specification) {
    if("options" == key) {
      var options = specification[key], option;
      for(option in options) {
        value = options[option], goog.isString(value) || (value = gviz.json.serialize(value)), result.push(option + "=" + goog.string.urlEncode(value))
      }
    }else {
      value = specification[key], goog.isString(value) || (value = goog.isFunction(value.toJSON) ? value.toJSON() : gviz.json.serialize(value)), result.push(key + "=" + goog.string.urlEncode(value))
    }
  }
  var chartHtmlPage = gviz.util.VisCommon.getModulePath() + "/chart.html", chartHtmlPage = gviz.context.removeProtocol_(chartHtmlPage), pageUrl = opt_pageUrl || chartHtmlPage, result = pageUrl + "?" + result.join("&"), result = result.replace(/'/g, "%27");
  return result = result.replace(/"/g, "%22")
};
google.visualization.createSnippet = function(specification) {
  var bootstrapUrl = gviz.util.VisCommon.getModulePath() + "/chart.js", bootstrapUrl = gviz.context.removeProtocol_(bootstrapUrl), res = '<script type="text/javascript" src="' + bootstrapUrl + '">\n', json = google.visualization.createWrapper(specification).toJSON(), json = json.replace(/</g, "&lt;"), json = json.replace(/>/g, "&gt;"), res = res + json;
  return res += "\n\x3c/script>"
};
google.visualization.createWrapper = function(specification) {
  specification = specification || {};
  goog.isString(specification) && (specification = gviz.json.deserialize(specification));
  return specification.controlType ? new google.visualization.ControlWrapper(specification) : specification.dashboardType ? new google.visualization.DashboardWrapper(specification) : new google.visualization.ChartWrapper(specification)
};
gviz.context.removeProtocol_ = function(url) {
  return url.replace(/^https?:/, "")
};
// Input 90
gviz.FeedToDataTable = function() {
  gviz.FeedToDataTable.prototype.namespaceMap_ = null;
  gviz.FeedToDataTable.prototype.defaultNamespacePrefix_ = null;
  this.columns_ = []
};
gviz.FeedToDataTable.getKnownFeedTypeNameFromXmlDoc = function(feed) {
  return gviz.FeedToDataTable.getKnownFeedTypeNameFromRunner_(new gviz.FeedToDataTable.DomFeedRunner_(feed))
};
gviz.FeedToDataTable.getKnownFeedTypeNameFromJson = function(feed) {
  return gviz.FeedToDataTable.getKnownFeedTypeNameFromRunner_(new gviz.FeedToDataTable.JsonFeedRunner_(feed))
};
gviz.FeedToDataTable.prototype.addColumn = function(path, type, opt_label, opt_id) {
  if(!gviz.FeedToDataTable.FeedRunner_.isValidColumnType(type)) {
    throw Error("Invalid type: " + type);
  }
  this.columns_.push(new gviz.FeedToDataTable.ColumnDefinition(path, type, opt_label, opt_id))
};
gviz.FeedToDataTable.getKnownFeedTypeNameFromRunner_ = function(runner) {
  var feedDefinition;
  try {
    feedDefinition = gviz.FeedToDataTable.getKnownFeedDefinitionFromRunner_(runner)
  }catch(e) {
    return null
  }
  return feedDefinition.getFeedTypeName()
};
gviz.FeedToDataTable.getKnownFeedDefinitionFromRunner_ = function(runner) {
  var feedUrl = runner.findFeedUrl();
  if(!feedUrl) {
    throw Error("Unable to determine feed type because it lacks a self link");
  }
  var feedDefinition = gviz.FeedToDataTable.KnownFeeds.findFeedDefinition(feedUrl);
  if(!feedDefinition) {
    throw Error("Not a known feed url: " + feedUrl);
  }
  return feedDefinition
};
gviz.FeedToDataTable.ColumnDefinition = function(path, type, opt_label, opt_id) {
  this.path_ = path;
  this.type_ = type;
  this.label_ = opt_label;
  this.id_ = opt_id
};
gviz.FeedToDataTable.ColumnDefinition.prototype.getPath = function() {
  return this.path_
};
gviz.FeedToDataTable.ColumnDefinition.prototype.getType = function() {
  return this.type_
};
gviz.FeedToDataTable.ColumnDefinition.prototype.getLabel = function() {
  return this.label_
};
gviz.FeedToDataTable.ColumnDefinition.prototype.getId = function() {
  return this.id_
};
gviz.FeedToDataTable.FeedDefinition = function(rowPath, columns) {
  this.columns_ = columns
};
gviz.FeedToDataTable.KnownFeedDefinition = function(feedTypeName, urlPattern, rowPath, columns) {
  gviz.FeedToDataTable.FeedDefinition.call(this, rowPath, columns);
  this.feedTypeName_ = feedTypeName;
  this.urlPattern_ = urlPattern
};
goog.inherits(gviz.FeedToDataTable.KnownFeedDefinition, gviz.FeedToDataTable.FeedDefinition);
gviz.FeedToDataTable.KnownFeedDefinition.prototype.getFeedTypeName = function() {
  return this.feedTypeName_
};
gviz.FeedToDataTable.KnownFeedDefinition.prototype.getUrlPattern = function() {
  return this.urlPattern_
};
gviz.FeedToDataTable.FeedRunner_ = function(feed) {
  this.feed_ = feed
};
gviz.FeedToDataTable.FeedRunner_.DEFAULT_NAMESPACE_PREFIX_ = "atom";
gviz.FeedToDataTable.FeedRunner_.isValidColumnType = function(columnType) {
  return null != gviz.FeedToDataTable.FeedRunner_.TYPE_CONVERTERS_[columnType]
};
gviz.FeedToDataTable.FeedRunner_.prototype.findFeedUrl = function() {
  this.feedUrl_ = null;
  this.visitXPath("atom:feed/atom:link/@rel", this.checkLink_);
  return this.feedUrl_
};
gviz.FeedToDataTable.FeedRunner_.prototype.checkLink_ = function(node) {
  if("self" != node.getValue()) {
    return!1
  }
  this.visitXPath("../@href", this.getLink_, node);
  return!0
};
gviz.FeedToDataTable.FeedRunner_.prototype.getLink_ = function(node) {
  this.feedUrl_ = node.getValue();
  return!0
};
gviz.FeedToDataTable.FeedRunner_.BOOLEAN_STRINGS_ = {"true":!0, "false":!1, t:!0, f:!1, yes:!0, no:!1, 1:!0, 0:!1};
gviz.FeedToDataTable.FeedRunner_.parseBoolean_ = function(s) {
  if(!s) {
    return null
  }
  var v = gviz.FeedToDataTable.FeedRunner_.BOOLEAN_STRINGS_[s.toLowerCase()];
  if(null == v) {
    throw Error("Invalid boolean value: " + s);
  }
  return v
};
gviz.FeedToDataTable.FeedRunner_.parseNumber_ = function(s) {
  if(!s) {
    return null
  }
  var v = parseFloat(s);
  if(isNaN(v)) {
    throw Error("Invalid number value: " + s);
  }
  return v
};
gviz.FeedToDataTable.FeedRunner_.parseString_ = function(s) {
  return s
};
gviz.FeedToDataTable.FeedRunner_.parseIsoDate_ = function(s) {
  if(!s) {
    return null
  }
  var closureDate = goog.date.fromIsoString(s);
  if(null == closureDate) {
    throw Error("Invalid datetime value: " + s);
  }
  var v = new Date;
  v.setTime(closureDate.getTime());
  return v
};
gviz.FeedToDataTable.FeedRunner_.TYPE_CONVERTERS_ = {"boolean":gviz.FeedToDataTable.FeedRunner_.parseBoolean_, number:gviz.FeedToDataTable.FeedRunner_.parseNumber_, string:gviz.FeedToDataTable.FeedRunner_.parseString_, date:gviz.FeedToDataTable.FeedRunner_.parseIsoDate_, datetime:gviz.FeedToDataTable.FeedRunner_.parseIsoDate_};
gviz.FeedToDataTable.DomFeedRunner_ = function(feed, opt_namespaceMap, opt_defaultNamespacePrefix) {
  if(null == feed) {
    throw Error("Null feed");
  }
  gviz.FeedToDataTable.FeedRunner_.call(this, new gviz.FeedToDataTable.DomFeedNode_(feed));
  this.feedDocument_ = feed;
  this.namespaceMap_ = opt_namespaceMap || {};
  if(!opt_namespaceMap) {
    var top = feed.documentElement;
    if(top) {
      var attributes = top.attributes;
      if(attributes) {
        for(var nAttributes = attributes.length, i = 0;i < nAttributes;i++) {
          var attribute = attributes.item(i), match = this.XMLNS_ATTRIBUTE_NAME_REGEXP_.exec(attribute.nodeName);
          if(match) {
            var prefix = match[1] || opt_defaultNamespacePrefix || gviz.FeedToDataTable.FeedRunner_.DEFAULT_NAMESPACE_PREFIX_, value = attribute.nodeValue, oldValue = this.namespaceMap_[prefix];
            if(null != oldValue && oldValue != value) {
              throw Error("namespace prefix " + prefix + " is overloaded to both " + oldValue + " and " + value);
            }
            this.namespaceMap_[prefix] = value
          }
        }
      }
    }
  }
  if("undefined" != typeof feed.selectNodes && "undefined" != typeof feed.setProperty) {
    this.selectNodes_ = this.selectNodesForIE_;
    feed.setProperty("SelectionLanguage", "XPath");
    var namespaceArray = [];
    for(prefix in this.namespaceMap_) {
      namespaceArray.push("xmlns:" + prefix + "='" + this.namespaceMap_[prefix] + "'")
    }
    var namespaceString = namespaceArray.join(" ");
    feed.setProperty("SelectionNamespaces", namespaceString)
  }else {
    if(feed.implementation.hasFeature("XPath", "3.0")) {
      this.selectNodes_ = this.selectNodesForNonIE_, this.resolveNamespace_ = gviz.FeedToDataTable.DomFeedRunner_.createResolver_(this.namespaceMap_)
    }else {
      throw Error("No browser support for XPath 3.0");
    }
  }
};
goog.inherits(gviz.FeedToDataTable.DomFeedRunner_, gviz.FeedToDataTable.FeedRunner_);
gviz.FeedToDataTable.DomFeedRunner_.prototype.XMLNS_ATTRIBUTE_NAME_REGEXP_ = /^xmlns(?::(.+))?$/i;
gviz.FeedToDataTable.DomFeedRunner_.prototype.visitXPath = function(path, handler, opt_contextNode) {
  for(var contextNode = opt_contextNode || this.feed_, nodes = this.selectNodes_(path, contextNode.getDomNode()), nNodes = nodes.length, i = 0;i < nNodes && !handler.call(this, new gviz.FeedToDataTable.DomFeedNode_(nodes[i]));i++) {
  }
};
gviz.FeedToDataTable.DomFeedRunner_.prototype.selectNodesForIE_ = function(path, contextNode) {
  return contextNode.selectNodes(path)
};
gviz.FeedToDataTable.DomFeedRunner_.prototype.selectNodesForNonIE_ = function(path, contextNode) {
  for(var nodes = this.feedDocument_.evaluate(path, contextNode, this.resolveNamespace_, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null), results = [], count = nodes.snapshotLength, i = 0;i < count;i++) {
    results.push(nodes.snapshotItem(i))
  }
  return results
};
gviz.FeedToDataTable.DomFeedRunner_.createResolver_ = function(map) {
  return function(prefix) {
    return map[prefix]
  }
};
gviz.FeedToDataTable.JsonFeedRunner_ = function(feed, opt_defaultNamespacePrefix) {
  if(null == feed) {
    throw Error("Null feed");
  }
  gviz.FeedToDataTable.FeedRunner_.call(this, new gviz.FeedToDataTable.JsonFeedNode_(feed));
  this.defaultNamespacePrefix_ = (opt_defaultNamespacePrefix || gviz.FeedToDataTable.FeedRunner_.DEFAULT_NAMESPACE_PREFIX_) + ":"
};
goog.inherits(gviz.FeedToDataTable.JsonFeedRunner_, gviz.FeedToDataTable.FeedRunner_);
gviz.FeedToDataTable.JsonFeedRunner_.buildXPathRegExp_ = function() {
  var ncname = "[_a-z0-9-]+", fullname = ncname + "(?::" + ncname + ")?", step = "(?:(?:@)?" + fullname + "|\\.|\\.\\.)", path = "(?:" + step + "(?:/" + step + ")*)?";
  return RegExp("^" + path + "$", "i")
};
gviz.FeedToDataTable.JsonFeedRunner_.XPATH_REGEXP_ = gviz.FeedToDataTable.JsonFeedRunner_.buildXPathRegExp_();
gviz.FeedToDataTable.JsonFeedRunner_.prototype.visitXPath = function(path, handler, opt_contextNode) {
  var steps = path.split("/");
  steps[steps.length - 1] || steps.pop();
  var contextNode = opt_contextNode || this.feed_;
  this.visitXSteps_(steps, 0, handler, contextNode)
};
gviz.FeedToDataTable.JsonFeedRunner_.prototype.visitXSteps_ = function(steps, stepIndex, handler, curNode) {
  for(var numberOfSteps = steps.length;stepIndex < numberOfSteps;) {
    var step = steps[stepIndex++];
    if("." != step) {
      if(".." == step) {
        if(curNode = curNode.getParent(), null == curNode) {
          return!1
        }
      }else {
        if(0 == step.indexOf("@")) {
          var attribText = curNode.getAttributeValue(step.substring(1));
          if(null == attribText) {
            return!1
          }
          curNode = new gviz.FeedToDataTable.JsonFeedNode_(attribText, curNode)
        }else {
          var child = curNode.getChild(step);
          if(null == child && (0 == step.indexOf(this.defaultNamespacePrefix_) && (child = curNode.getChild(step.substring(this.defaultNamespacePrefix_.length))), null == child)) {
            return!1
          }
          if(child.constructor == curNode.jsonNode_.constructor) {
            curNode = new gviz.FeedToDataTable.JsonFeedNode_(child, curNode)
          }else {
            for(var n = child.length, i = 0;i < n;i++) {
              var subElement = child[i];
              if(null != subElement || "object" == typeof subElement) {
                var nextNode = new gviz.FeedToDataTable.JsonFeedNode_(subElement, curNode);
                if(this.visitXSteps_(steps, stepIndex, handler, nextNode)) {
                  return!0
                }
              }
            }
            return!1
          }
        }
      }
    }
  }
  return handler.call(this, curNode)
};
gviz.FeedToDataTable.FeedNode_ = function() {
};
gviz.FeedToDataTable.DomFeedNode_ = function(domNode) {
  this.domNode_ = domNode
};
gviz.FeedToDataTable.DomFeedNode_.prototype.getValue = function(opt_includeChildText) {
  var value = this.domNode_.nodeValue;
  if(null == value && opt_includeChildText) {
    for(var child = this.domNode_.firstChild;child;) {
      if(3 == child.nodeType) {
        return child.nodeValue
      }
      child = child.nextSibling
    }
  }
  return value
};
gviz.FeedToDataTable.DomFeedNode_.prototype.getAttributeValue = function(attributeName) {
  var attributes = this.domNode_.attributes;
  if(attributes) {
    var attribute = attributes.getNamedItem(attributeName);
    if(attribute) {
      return attribute.nodeValue
    }
  }
  return null
};
gviz.FeedToDataTable.DomFeedNode_.prototype.getDomNode = function() {
  return this.domNode_
};
gviz.FeedToDataTable.JsonFeedNode_ = function(jsonNode, opt_parentNode) {
  this.jsonNode_ = jsonNode;
  this.parentNode_ = opt_parentNode || null
};
gviz.FeedToDataTable.JsonFeedNode_.prototype.getValue = function(opt_includeChildText) {
  if(this.isText_()) {
    return this.jsonNode_
  }
  if(opt_includeChildText) {
    var text = this.jsonNode_.$t;
    if(null != text) {
      return text
    }
  }
  return null
};
gviz.FeedToDataTable.JsonFeedNode_.prototype.getAttributeValue = function(attributeName) {
  return this.getChild(attributeName, !0)
};
gviz.FeedToDataTable.JsonFeedNode_.prototype.getParent = function() {
  return this.parentNode_
};
gviz.FeedToDataTable.JsonFeedNode_.prototype.getChild = function(name, opt_attribute) {
  if(this.isText_()) {
    return null
  }
  var child = this.jsonNode_[name.replace(":", "$")];
  return null == child || typeof child != (opt_attribute ? "string" : "object") ? null : child
};
gviz.FeedToDataTable.JsonFeedNode_.prototype.isText_ = function() {
  return"string" == typeof this.jsonNode_
};
// Input 91
gviz.HtmlToDataTable = function(tableElement, colTypes, opt_numHeaders) {
  if(!tableElement || "TABLE" != tableElement.tagName) {
    throw Error("Not a table element");
  }
  this.numHeaders_ = goog.isDefAndNotNull(opt_numHeaders) ? opt_numHeaders : 1;
  this.tableElement_ = tableElement;
  this.validateTypes_(colTypes);
  this.types_ = colTypes;
  this.columns_ = []
};
gviz.HtmlToDataTable.prototype.createDataTable = function() {
  var htmlRows = this.getHtmlRows_(), dataTable = new google.visualization.DataTable;
  htmlRows && 0 < htmlRows.length && (this.createColumns_(htmlRows, dataTable), this.createRows_(htmlRows, dataTable));
  return dataTable
};
gviz.HtmlToDataTable.prototype.getHtmlRows_ = function() {
  var table = this.tableElement_, firstChild = table.firstChild;
  if(!firstChild) {
    return null
  }
  var htmlRows = "TBODY" == table.firstChild.tagName ? table.firstChild.childNodes : table.childNodes;
  if(!htmlRows) {
    return null
  }
  this.numHeaders_ = Math.min(htmlRows.length, this.numHeaders_);
  return htmlRows
};
gviz.HtmlToDataTable.prototype.createColumns_ = function(htmlRows, dataTable) {
  for(var cols = [], types = this.types_, t = 0;t < types.length;t++) {
    cols.push({type:types[t], label:[]})
  }
  for(var numHeaders = this.numHeaders_, r = 0;r < numHeaders;r++) {
    var htmlRow = htmlRows[r].childNodes;
    if(htmlRow.length < cols.length) {
      throw Error("Html row is too short: " + r);
    }
    for(var c = 0;c < cols.length;c++) {
      cols[c].label.push(htmlRow[c].textContent)
    }
  }
  for(var i = 0;i < cols.length;i++) {
    var col = cols[i];
    dataTable.addColumn(col.type, col.label.join(" "))
  }
  this.columns_ = cols
};
gviz.HtmlToDataTable.prototype.createRows_ = function(htmlRows, dataTable) {
  for(var cols = this.columns_, numHeaders = this.numHeaders_, r = numHeaders;r < htmlRows.length;r++) {
    var htmlRow = htmlRows[r].childNodes;
    if(htmlRow.length < cols.length) {
      throw Error("Html row is too short: " + r);
    }
    dataTable.addRow();
    for(var c = 0;c < cols.length;c++) {
      var value = htmlRow[c].textContent, type = cols[c].type;
      dataTable.setCell(r - numHeaders, c, this.getTypedValue_(value, type))
    }
  }
};
gviz.HtmlToDataTable.prototype.validateTypes_ = function(types) {
  for(var t = 0;t < types.length;t++) {
    var type = types[t];
    if(!gviz.HtmlToDataTable.SupportedTypes_[type]) {
      throw Error("Unsupported type: " + type);
    }
  }
};
gviz.HtmlToDataTable.prototype.getTypedValue_ = function(value, type) {
  return gviz.HtmlToDataTable.SupportedTypes_[type](value)
};
gviz.HtmlToDataTable.SupportedTypes_ = {number:function(value) {
  return gviz.HtmlToDataTable.convertToNumber_(value)
}, string:function(value) {
  return value
}, "boolean":function(value) {
  return"true" == value
}, date:function() {
  throw Error("Unspported type");
}, datetime:function() {
  throw Error("Unspported type");
}, timeofday:function() {
  throw Error("Unspported type");
}};
gviz.HtmlToDataTable.convertToNumber_ = function(val) {
  var num = parseFloat(val);
  if(isNaN(num)) {
    throw Error("Not a number " + val);
  }
  return num
};
// Input 92
gviz.FeedToDataTable.KnownFeeds = {};
gviz.FeedToDataTable.KnownFeeds.findFeedDefinition = function(feedUrl) {
  for(var knownFeeds = gviz.FeedToDataTable.KnownFeeds.LIST_, n = knownFeeds.length, i = 0;i < n;i++) {
    if(feedUrl.match(knownFeeds[i].getUrlPattern())) {
      return knownFeeds[i]
    }
  }
  return null
};
gviz.FeedToDataTable.KnownFeeds.LIST_ = [new gviz.FeedToDataTable.KnownFeedDefinition("Google Analytics Visitor Feed", /^http:\/\/www\.google\.com\/analytics\/feeds\/visitor\//, "atom:feed/atom:entry", [new gviz.FeedToDataTable.ColumnDefinition("analytics:date/analytics:year", "number", "Year", "c_year"), new gviz.FeedToDataTable.ColumnDefinition("analytics:date/analytics:month", "number", "Month", "c_month"), new gviz.FeedToDataTable.ColumnDefinition("analytics:date/analytics:dayOfMonth", "number", 
"Day", "c_day"), new gviz.FeedToDataTable.ColumnDefinition("analytics:date/analytics:weekOfYear", "number", "Week", "c_week"), new gviz.FeedToDataTable.ColumnDefinition("analytics:visits", "number", "Visits", "c_visits"), new gviz.FeedToDataTable.ColumnDefinition("analytics:visitors", "number", "Visitors", "c_visitors"), new gviz.FeedToDataTable.ColumnDefinition("analytics:newVisitors", "number", "New Visitors", "c_newVisitors"), new gviz.FeedToDataTable.ColumnDefinition("analytics:pageviews", "number", 
"Pageviews", "c_pageviews"), new gviz.FeedToDataTable.ColumnDefinition("analytics:timeOnSite", "number", "Time on Site", "c_timeOnSite"), new gviz.FeedToDataTable.ColumnDefinition("analytics:bounceRate", "number", "Bounce Rate", "c_bounceRate")]), new gviz.FeedToDataTable.KnownFeedDefinition("Google Analytics Traffic Source Feed", /^http:\/\/www\.google\.com\/analytics\/feeds\/traffic\//, "atom:feed/atom:entry/analytics:trafficSource", [new gviz.FeedToDataTable.ColumnDefinition("../analytics:date/analytics:year", 
"number", "Year", "c_year"), new gviz.FeedToDataTable.ColumnDefinition("../analytics:date/analytics:month", "number", "Month", "c_month"), new gviz.FeedToDataTable.ColumnDefinition("../analytics:date/analytics:dayOfMonth", "number", "Day", "c_day"), new gviz.FeedToDataTable.ColumnDefinition("../analytics:date/analytics:weekOfYear", "number", "Week", "c_week"), new gviz.FeedToDataTable.ColumnDefinition("@trafficType", "string", "Traffic Type", "c_trafficType"), new gviz.FeedToDataTable.ColumnDefinition("analytics:visits", 
"number", "Visits", "c_visits"), new gviz.FeedToDataTable.ColumnDefinition("analytics:pageviewsPerVisit", "number", "Pageviews / Visit", "c_pageviewsPerVisit"), new gviz.FeedToDataTable.ColumnDefinition("analytics:timeOnSite", "number", "Time on Site", "c_timeOnSite"), new gviz.FeedToDataTable.ColumnDefinition("analytics:newVisitPercentage", "number", "New Visitor %", "c_newVisitPercentage"), new gviz.FeedToDataTable.ColumnDefinition("analytics:bounceRate", "number", "Bounce Rate", "c_bounceRate")]), 
new gviz.FeedToDataTable.KnownFeedDefinition("Google Analytics Keywords Overview Feed", /^http:\/\/www\.google\.com\/analytics\/feeds\/keywords\//, "atom:feed/atom:entry", [new gviz.FeedToDataTable.ColumnDefinition("analytics:keyword", "string", "Keyword", "c_keyword"), new gviz.FeedToDataTable.ColumnDefinition("analytics:visits", "number", "Visits", "c_visits"), new gviz.FeedToDataTable.ColumnDefinition("analytics:pageviewsPerVisit", "number", "Pageviews / Visit", "c_pageviewsPerVisit"), new gviz.FeedToDataTable.ColumnDefinition("analytics:timeOnSite", 
"number", "Time on Site", "c_timeOnSite"), new gviz.FeedToDataTable.ColumnDefinition("analytics:newVisitPercentage", "number", "New Visitor %", "c_newVisitPercentage"), new gviz.FeedToDataTable.ColumnDefinition("analytics:bounceRate", "number", "Bounce Rate", "c_bounceRate")]), new gviz.FeedToDataTable.KnownFeedDefinition("Google Analytics Content Overview Feed", /^http:\/\/www\.google\.com\/analytics\/feeds\/content\//, "atom:feed/atom:entry", [new gviz.FeedToDataTable.ColumnDefinition("analytics:url", 
"string", "URL", "c_url"), new gviz.FeedToDataTable.ColumnDefinition("analytics:pageviews", "number", "Pageviews", "c_pageviews"), new gviz.FeedToDataTable.ColumnDefinition("analytics:timeOnPage", "number", "Time on Page", "c_timeOnPage"), new gviz.FeedToDataTable.ColumnDefinition("analytics:uniqueViews", "number", "Unique Views", "c_uniqueViews"), new gviz.FeedToDataTable.ColumnDefinition("analytics:bounceRate", "number", "Bounce Rate", "c_bounceRate"), new gviz.FeedToDataTable.ColumnDefinition("analytics:exitRate", 
"number", "Exit Rate", "c_exitRate"), new gviz.FeedToDataTable.ColumnDefinition("analytics:dollarIndex", "number", "Dollar Index", "c_dollarIndex")]), new gviz.FeedToDataTable.KnownFeedDefinition("Google Analytics Goal Overview Feed", /^http:\/\/www\.google\.com\/analytics\/feeds\/goals\//, "atom:feed/atom:entry", [new gviz.FeedToDataTable.ColumnDefinition("analytics:goal", "string", "Goal", "c_goal"), new gviz.FeedToDataTable.ColumnDefinition("analytics:conversions", "number", "Conversions", "c_conversions"), 
new gviz.FeedToDataTable.ColumnDefinition("analytics:conversionRate", "number", "Conversion Rate", "c_conversionRate"), new gviz.FeedToDataTable.ColumnDefinition("analytics:abandonmentRate", "number", "Abandonment Rate", "c_abandonmentRate")]), new gviz.FeedToDataTable.KnownFeedDefinition("Google Trends Query Frequency Feed", /^http:\/\/(?:www|trends)\.google\.com\/trends\/api\/freq\?/, "atom:feed/atom:entry/trends:dp", [new gviz.FeedToDataTable.ColumnDefinition("../trends:query", "string", "Query", 
"c_query"), new gviz.FeedToDataTable.ColumnDefinition("../trends:loc", "string", "Location", "c_location"), new gviz.FeedToDataTable.ColumnDefinition("@aggval", "string", "Data Point", "c_dataPoint"), new gviz.FeedToDataTable.ColumnDefinition(".", "number", "Frequency", "c_frequency"), new gviz.FeedToDataTable.ColumnDefinition("@stderror", "string", "Standard Error", "c_stderror")])];
// Input 93
google.visualization.data = {};
google.visualization.data.copyDataTableColumn_ = function(targetDt, sourceDt, index) {
  var dataType = sourceDt.getColumnType(index), colId = sourceDt.getColumnId(index), colLabel = sourceDt.getColumnLabel(index), colIdx = targetDt.addColumn(dataType, colLabel, colId);
  targetDt.setColumnProperties(colIdx, sourceDt.getColumnProperties(index));
  return colIdx
};
google.visualization.data.join = function(dt1, dt2, joinMethod, keys, dt1Columns, dt2Columns) {
  var includeLeft = "left" == joinMethod || "full" == joinMethod, includeRight = "right" == joinMethod || "full" == joinMethod, resultDt = new google.visualization.DataTable, types = [];
  goog.array.forEach(keys, function(key) {
    var type1 = dt1.getColumnType(key[0]), type2 = dt2.getColumnType(key[1]);
    if(type1 != type2) {
      throw Error("Key types do not match:" + type1 + ", " + type2);
    }
    google.visualization.data.copyDataTableColumn_(resultDt, dt1, key[0]);
    types.push(type1)
  });
  var sortColumns1 = [], sortColumns2 = [];
  goog.array.forEach(keys, function(key) {
    sortColumns1.push({column:key[0]});
    sortColumns2.push({column:key[1]})
  });
  var sortedIndices1 = dt1.getSortedRows(sortColumns1), sortedIndices2 = dt2.getSortedRows(sortColumns2);
  goog.array.forEach(dt1Columns, function(idx) {
    google.visualization.data.copyDataTableColumn_(resultDt, dt1, idx)
  });
  goog.array.forEach(dt2Columns, function(idx) {
    google.visualization.data.copyDataTableColumn_(resultDt, dt2, idx)
  });
  for(var isRightRowEmitted = !1, i = 0, j = 0, resultRowIdx = 0;i < sortedIndices1.length || j < sortedIndices2.length;) {
    var compareKeysResult = 0, rowIdx = [];
    if(j >= sortedIndices2.length) {
      if(includeLeft) {
        rowIdx[0] = sortedIndices1[i], compareKeysResult = -1
      }else {
        break
      }
    }else {
      if(i >= sortedIndices1.length) {
        if(includeRight) {
          rowIdx[1] = sortedIndices2[j], compareKeysResult = 1
        }else {
          break
        }
      }else {
        rowIdx[0] = sortedIndices1[i];
        rowIdx[1] = sortedIndices2[j];
        for(var keyIdx = 0;keyIdx < keys.length;keyIdx++) {
          var key1 = dt1.getValue(rowIdx[0], keys[keyIdx][0]), key2 = dt2.getValue(rowIdx[1], keys[keyIdx][1]), compareKeysResult = google.visualization.datautils.compareValues(types[keyIdx], key1, key2);
          if(0 != compareKeysResult) {
            break
          }
        }
      }
    }
    if(isRightRowEmitted && 0 != compareKeysResult) {
      isRightRowEmitted = !1, j++
    }else {
      if(-1 == compareKeysResult && includeLeft || 1 == compareKeysResult && includeRight || 0 == compareKeysResult) {
        resultDt.addRow();
        var sourceDt, dtIdx;
        -1 == compareKeysResult && includeLeft || 0 == compareKeysResult && "right" != joinMethod ? (sourceDt = dt1, dtIdx = 0) : (sourceDt = dt2, dtIdx = 1);
        goog.array.forEach(keys, function(key, count) {
          "full" == joinMethod ? resultDt.setValue(resultRowIdx, count, sourceDt.getValue(rowIdx[dtIdx], key[dtIdx])) : resultDt.setCell(resultRowIdx, count, sourceDt.getValue(rowIdx[dtIdx], key[dtIdx]), sourceDt.getFormattedValue(rowIdx[dtIdx], key[dtIdx]), sourceDt.getProperties(rowIdx[dtIdx], key[dtIdx]))
        });
        if(-1 == compareKeysResult && includeLeft || 0 == compareKeysResult) {
          var baseColIdx = keys.length;
          goog.array.forEach(dt1Columns, function(idx, count) {
            resultDt.setCell(resultRowIdx, count + baseColIdx, dt1.getValue(rowIdx[0], idx), dt1.getFormattedValue(rowIdx[0], idx), dt1.getProperties(rowIdx[0], idx))
          })
        }
        if(1 == compareKeysResult && includeRight || 0 == compareKeysResult) {
          baseColIdx = dt1Columns.length + keys.length, goog.array.forEach(dt2Columns, function(idx, count) {
            resultDt.setCell(resultRowIdx, count + baseColIdx, dt2.getValue(rowIdx[1], idx), dt2.getFormattedValue(rowIdx[1], idx), dt2.getProperties(rowIdx[1], idx))
          })
        }
        resultRowIdx++
      }
      1 == compareKeysResult ? j++ : i++;
      0 == compareKeysResult && (isRightRowEmitted = !0)
    }
  }
  return resultDt
};
google.visualization.data.sum = function(values) {
  for(var res = 0, i = 0;i < values.length;i++) {
    res += values[i]
  }
  return res
};
google.visualization.data.count = function(values) {
  return values.length
};
google.visualization.data.avg = function(values) {
  return google.visualization.data.sum(values) / values.length
};
google.visualization.data.min = function(values) {
  if(0 == values.length) {
    return null
  }
  for(var min = values[0], i = 1;i < values.length;i++) {
    var val = values[i];
    null != val && val < min && (min = val)
  }
  return min
};
google.visualization.data.max = function(values) {
  if(0 == values.length) {
    return null
  }
  for(var max = values[0], i = 1;i < values.length;i++) {
    var val = values[i];
    null != val && val > max && (max = val)
  }
  return max
};
google.visualization.data.month = function(date) {
  return date.getMonth() + 1
};
google.visualization.data.group = function(dt, keys, columns) {
  var calc = function(colIdx, modifier, dt, rowIdx) {
    return modifier.call(null, dt.getValue(rowIdx, colIdx))
  }, keyIndices = [], keyModifiers = [];
  goog.array.forEach(keys, function(key) {
    if(goog.isNumber(key)) {
      keyIndices.push(key)
    }else {
      if("object" == goog.typeOf(key)) {
        var keyIdx = key.column;
        "modifier" in key && keyModifiers.push([keyIdx, {calc:goog.partial(calc, keyIdx, key.modifier), type:key.type, label:key.label, id:key.id}]);
        keyIndices.push(keyIdx)
      }
    }
  });
  if(!goog.array.isEmpty(keyModifiers)) {
    for(var view = new google.visualization.DataView(dt), viewCols = view.getViewColumns(), numberOfRows = dt.getNumberOfRows(), r = 0;r < numberOfRows;r++) {
      goog.array.forEach(keyModifiers, function(keyModifier) {
        viewCols[keyModifier[0]] = keyModifier[1]
      })
    }
    view.setColumns(viewCols);
    dt = view
  }
  var result = new google.visualization.DataTable, types = [];
  goog.array.forEach(keyIndices, function(keyIdx, idx) {
    var type = dt.getColumnType(keyIdx), label = keys[idx].label || dt.getColumnLabel(keyIdx), id = goog.isDefAndNotNull(keys[idx].id) ? keys[idx].id : dt.getColumnId(keyIdx);
    result.addColumn(type, label, id);
    types.push(type)
  });
  columns = columns || [];
  goog.array.forEach(columns, function(c) {
    var colIdx = c.column, label = c.label || dt.getColumnLabel(colIdx), id = goog.isDefAndNotNull(c.id) ? c.id : dt.getColumnId(colIdx);
    result.addColumn(c.type, label, id)
  });
  var sortColumns = [];
  goog.array.forEach(keyIndices, function(keyIdx) {
    sortColumns.push({column:keyIdx})
  });
  for(var sortedIndices = dt.getSortedRows(sortColumns), columnValues = [], i = 0;i < columns.length;i++) {
    columnValues.push([])
  }
  for(i = 0;i < sortedIndices.length;i++) {
    goog.array.forEach(columns, function(c, idx) {
      columnValues[idx].push(dt.getValue(sortedIndices[i], c.column))
    });
    var nextKeyMatches = !1;
    if(i < sortedIndices.length - 1) {
      for(var nextKeyMatches = !0, j = 0;j < keyIndices.length;j++) {
        var key1 = dt.getValue(sortedIndices[i], keyIndices[j]), key2 = dt.getValue(sortedIndices[i + 1], keyIndices[j]);
        if(0 != google.visualization.datautils.compareValues(types[j], key1, key2)) {
          nextKeyMatches = !1;
          break
        }
      }
    }
    if(!nextKeyMatches) {
      var rowIdx$$0 = result.addRow();
      goog.array.forEach(keyIndices, function(keyIdx, colIdx) {
        result.setValue(rowIdx$$0, colIdx, dt.getValue(sortedIndices[i], keyIdx))
      });
      var baseColIdx = keys.length;
      goog.array.forEach(columns, function(c, idx) {
        var value = c.aggregation.call(null, columnValues[idx]);
        result.setValue(rowIdx$$0, baseColIdx + idx, value)
      });
      for(var k = 0;k < columns.length;k++) {
        columnValues[k] = []
      }
    }
  }
  return result
};
// Input 94
goog.exportSymbol("google.visualization.drawChart", google.visualization.drawChart);
goog.exportSymbol("google.visualization.drawFromUrl", google.visualization.drawFromUrl);
goog.exportSymbol("google.visualization.createUrl", google.visualization.createUrl);
goog.exportSymbol("google.visualization.createSnippet", google.visualization.createSnippet);
goog.exportSymbol("google.visualization.createWrapper", google.visualization.createWrapper);
goog.exportSymbol("google.visualization.ChartWrapper", google.visualization.ChartWrapper);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "clear", google.visualization.ChartWrapper.prototype.clear);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "draw", google.visualization.ChartWrapper.prototype.draw);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "clone", google.visualization.ChartWrapper.prototype.clone);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "toJSON", google.visualization.ChartWrapper.prototype.toJSON);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getSnapshot", google.visualization.ChartWrapper.prototype.getSnapshot);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getDataSourceUrl", google.visualization.ChartWrapper.prototype.getDataSourceUrl);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getDataTable", google.visualization.ChartWrapper.prototype.getDataTable);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getChartName", google.visualization.ChartWrapper.prototype.getChartName);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getChartType", google.visualization.ChartWrapper.prototype.getChartType);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getChart", google.visualization.ChartWrapper.prototype.getChart);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getContainerId", google.visualization.ChartWrapper.prototype.getContainerId);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getPackages", google.visualization.ChartWrapper.prototype.getPackages);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getQuery", google.visualization.ChartWrapper.prototype.getQuery);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getRefreshInterval", google.visualization.ChartWrapper.prototype.getRefreshInterval);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getView", google.visualization.ChartWrapper.prototype.getView);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getOption", google.visualization.ChartWrapper.prototype.getOption);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getOptions", google.visualization.ChartWrapper.prototype.getOptions);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getState", google.visualization.ChartWrapper.prototype.getState);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "getCustomRequestHandler", google.visualization.ChartWrapper.prototype.getCustomRequestHandler);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "isDefaultVisualization", google.visualization.ChartWrapper.prototype.isDefaultVisualization);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "pushView", google.visualization.ChartWrapper.prototype.pushView);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "sendQuery", google.visualization.ChartWrapper.prototype.sendQuery);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setDataSourceUrl", google.visualization.ChartWrapper.prototype.setDataSourceUrl);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setDataTable", google.visualization.ChartWrapper.prototype.setDataTable);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setChart", google.visualization.ChartWrapper.prototype.setChart);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setChartName", google.visualization.ChartWrapper.prototype.setChartName);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setChartType", google.visualization.ChartWrapper.prototype.setChartType);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setContainerId", google.visualization.ChartWrapper.prototype.setContainerId);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setIsDefaultVisualization", google.visualization.ChartWrapper.prototype.setIsDefaultVisualization);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setPackages", google.visualization.ChartWrapper.prototype.setPackages);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setQuery", google.visualization.ChartWrapper.prototype.setQuery);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setRefreshInterval", google.visualization.ChartWrapper.prototype.setRefreshInterval);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setView", google.visualization.ChartWrapper.prototype.setView);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setOption", google.visualization.ChartWrapper.prototype.setOption);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setOptions", google.visualization.ChartWrapper.prototype.setOptions);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setState", google.visualization.ChartWrapper.prototype.setState);
goog.exportProperty(google.visualization.ChartWrapper.prototype, "setCustomRequestHandler", google.visualization.ChartWrapper.prototype.setCustomRequestHandler);
goog.exportSymbol("google.visualization.ControlWrapper", google.visualization.ControlWrapper);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "clear", google.visualization.ControlWrapper.prototype.clear);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "draw", google.visualization.ControlWrapper.prototype.draw);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "toJSON", google.visualization.ControlWrapper.prototype.toJSON);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getSnapshot", google.visualization.ControlWrapper.prototype.getSnapshot);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getDataSourceUrl", google.visualization.ControlWrapper.prototype.getDataSourceUrl);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getDataTable", google.visualization.ControlWrapper.prototype.getDataTable);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getControlName", google.visualization.ControlWrapper.prototype.getControlName);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getControlType", google.visualization.ControlWrapper.prototype.getControlType);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getControl", google.visualization.ControlWrapper.prototype.getControl);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getContainerId", google.visualization.ControlWrapper.prototype.getContainerId);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getPackages", google.visualization.ControlWrapper.prototype.getPackages);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getQuery", google.visualization.ControlWrapper.prototype.getQuery);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getRefreshInterval", google.visualization.ControlWrapper.prototype.getRefreshInterval);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getView", google.visualization.ControlWrapper.prototype.getView);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getOption", google.visualization.ControlWrapper.prototype.getOption);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getOptions", google.visualization.ControlWrapper.prototype.getOptions);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "getState", google.visualization.ControlWrapper.prototype.getState);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "sendQuery", google.visualization.ControlWrapper.prototype.sendQuery);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setDataSourceUrl", google.visualization.ControlWrapper.prototype.setDataSourceUrl);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setDataTable", google.visualization.ControlWrapper.prototype.setDataTable);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setControlName", google.visualization.ControlWrapper.prototype.setControlName);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setControlType", google.visualization.ControlWrapper.prototype.setControlType);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setContainerId", google.visualization.ControlWrapper.prototype.setContainerId);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setPackages", google.visualization.ControlWrapper.prototype.setPackages);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setQuery", google.visualization.ControlWrapper.prototype.setQuery);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setRefreshInterval", google.visualization.ControlWrapper.prototype.setRefreshInterval);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setView", google.visualization.ControlWrapper.prototype.setView);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setOption", google.visualization.ControlWrapper.prototype.setOption);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setOptions", google.visualization.ControlWrapper.prototype.setOptions);
goog.exportProperty(google.visualization.ControlWrapper.prototype, "setState", google.visualization.ControlWrapper.prototype.setState);
goog.exportSymbol("google.visualization.DashboardWrapper", google.visualization.DashboardWrapper);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "clear", google.visualization.DashboardWrapper.prototype.clear);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "draw", google.visualization.DashboardWrapper.prototype.draw);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "toJSON", google.visualization.DashboardWrapper.prototype.toJSON);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getBindings", google.visualization.DashboardWrapper.prototype.getBindings);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getDataSourceUrl", google.visualization.DashboardWrapper.prototype.getDataSourceUrl);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getDataTable", google.visualization.DashboardWrapper.prototype.getDataTable);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getDashboard", google.visualization.DashboardWrapper.prototype.getDashboard);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getDashboardName", google.visualization.DashboardWrapper.prototype.getDashboardName);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getContainerId", google.visualization.DashboardWrapper.prototype.getContainerId);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getPackages", google.visualization.DashboardWrapper.prototype.getPackages);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getQuery", google.visualization.DashboardWrapper.prototype.getQuery);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getRefreshInterval", google.visualization.DashboardWrapper.prototype.getRefreshInterval);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getView", google.visualization.DashboardWrapper.prototype.getView);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getWrappers", google.visualization.DashboardWrapper.prototype.getWrappers);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setBindings", google.visualization.DashboardWrapper.prototype.setBindings);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setDataSourceUrl", google.visualization.DashboardWrapper.prototype.setDataSourceUrl);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setDataTable", google.visualization.DashboardWrapper.prototype.setDataTable);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setDashboardName", google.visualization.DashboardWrapper.prototype.setDashboardName);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setContainerId", google.visualization.DashboardWrapper.prototype.setContainerId);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setPackages", google.visualization.DashboardWrapper.prototype.setPackages);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setQuery", google.visualization.DashboardWrapper.prototype.setQuery);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setRefreshInterval", google.visualization.DashboardWrapper.prototype.setRefreshInterval);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setView", google.visualization.DashboardWrapper.prototype.setView);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "getSnapshot", google.visualization.DashboardWrapper.prototype.getSnapshot);
goog.exportProperty(google.visualization.DashboardWrapper.prototype, "setWrappers", google.visualization.DashboardWrapper.prototype.setWrappers);
// Input 95
goog.exportSymbol("google.visualization.data.avg", google.visualization.data.avg);
goog.exportSymbol("google.visualization.data.count", google.visualization.data.count);
goog.exportSymbol("google.visualization.data.group", google.visualization.data.group);
goog.exportSymbol("google.visualization.data.join", google.visualization.data.join);
goog.exportSymbol("google.visualization.data.max", google.visualization.data.max);
goog.exportSymbol("google.visualization.data.min", google.visualization.data.min);
goog.exportSymbol("google.visualization.data.month", google.visualization.data.month);
goog.exportSymbol("google.visualization.data.sum", google.visualization.data.sum);
// Input 96
goog.exportSymbol("__gvizguard__", google.visualization.Guard);
goog.exportSymbol("google.visualization.Query", google.visualization.Query);
goog.exportProperty(google.visualization.Query.prototype, "makeRequest", google.visualization.Query.prototype.makeRequest);
goog.exportProperty(google.visualization.Query.prototype, "setRefreshInterval", google.visualization.Query.prototype.setRefreshInterval);
goog.exportProperty(google.visualization.Query.prototype, "setQuery", google.visualization.Query.prototype.setQuery);
goog.exportProperty(google.visualization.Query.prototype, "send", google.visualization.Query.prototype.send);
goog.exportProperty(google.visualization.Query.prototype, "setRefreshable", google.visualization.Query.prototype.setRefreshable);
goog.exportProperty(google.visualization.Query.prototype, "setTimeout", google.visualization.Query.prototype.setTimeout);
goog.exportProperty(google.visualization.Query.prototype, "setHandlerType", google.visualization.Query.prototype.setHandlerType);
goog.exportProperty(google.visualization.Query.prototype, "setHandlerParameter", google.visualization.Query.prototype.setHandlerParameter);
goog.exportProperty(google.visualization.Query, "setResponse", google.visualization.Query.setResponse);
goog.exportProperty(google.visualization.Query.prototype, "abort", google.visualization.Query.prototype.abort);
goog.exportSymbol("google.visualization.CustomQuery", google.visualization.CustomQuery);
goog.exportProperty(google.visualization.CustomQuery.prototype, "send", google.visualization.CustomQuery.prototype.send);
goog.exportSymbol("google.visualization.QueryResponse", google.visualization.QueryResponse);
goog.exportProperty(google.visualization.QueryResponse.prototype, "getDataTable", google.visualization.QueryResponse.prototype.getDataTable);
goog.exportProperty(google.visualization.QueryResponse.prototype, "isError", google.visualization.QueryResponse.prototype.isError);
goog.exportProperty(google.visualization.QueryResponse.prototype, "hasWarning", google.visualization.QueryResponse.prototype.hasWarning);
goog.exportProperty(google.visualization.QueryResponse.prototype, "getReasons", google.visualization.QueryResponse.prototype.getReasons);
goog.exportProperty(google.visualization.QueryResponse.prototype, "getMessage", google.visualization.QueryResponse.prototype.getMessage);
goog.exportProperty(google.visualization.QueryResponse.prototype, "getDetailedMessage", google.visualization.QueryResponse.prototype.getDetailedMessage);
goog.exportSymbol("google.visualization.DataTable", google.visualization.DataTable);
goog.exportProperty(google.visualization.DataTable.prototype, "addColumn", google.visualization.DataTable.prototype.addColumn);
goog.exportProperty(google.visualization.DataTable.prototype, "addRow", google.visualization.DataTable.prototype.addRow);
goog.exportProperty(google.visualization.DataTable.prototype, "addRows", google.visualization.DataTable.prototype.addRows);
goog.exportProperty(google.visualization.DataTable.prototype, "clone", google.visualization.DataTable.prototype.clone);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnId", google.visualization.DataTable.prototype.getColumnId);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnIndex", google.visualization.DataTable.prototype.getColumnIndex);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnLabel", google.visualization.DataTable.prototype.getColumnLabel);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnPattern", google.visualization.DataTable.prototype.getColumnPattern);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnProperty", google.visualization.DataTable.prototype.getColumnProperty);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnProperties", google.visualization.DataTable.prototype.getColumnProperties);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnRange", google.visualization.DataTable.prototype.getColumnRange);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnRole", google.visualization.DataTable.prototype.getColumnRole);
goog.exportProperty(google.visualization.DataTable.prototype, "getColumnType", google.visualization.DataTable.prototype.getColumnType);
goog.exportProperty(google.visualization.DataTable.prototype, "getDistinctValues", google.visualization.DataTable.prototype.getDistinctValues);
goog.exportProperty(google.visualization.DataTable.prototype, "getFilteredRows", google.visualization.DataTable.prototype.getFilteredRows);
goog.exportProperty(google.visualization.DataTable.prototype, "getFormattedValue", google.visualization.DataTable.prototype.getFormattedValue);
goog.exportProperty(google.visualization.DataTable.prototype, "getNumberOfColumns", google.visualization.DataTable.prototype.getNumberOfColumns);
goog.exportProperty(google.visualization.DataTable.prototype, "getNumberOfRows", google.visualization.DataTable.prototype.getNumberOfRows);
goog.exportProperty(google.visualization.DataTable.prototype, "getProperties", google.visualization.DataTable.prototype.getProperties);
goog.exportProperty(google.visualization.DataTable.prototype, "getProperty", google.visualization.DataTable.prototype.getProperty);
goog.exportProperty(google.visualization.DataTable.prototype, "getRowProperty", google.visualization.DataTable.prototype.getRowProperty);
goog.exportProperty(google.visualization.DataTable.prototype, "getRowProperties", google.visualization.DataTable.prototype.getRowProperties);
goog.exportProperty(google.visualization.DataTable.prototype, "getSortedRows", google.visualization.DataTable.prototype.getSortedRows);
goog.exportProperty(google.visualization.DataTable.prototype, "getTableProperty", google.visualization.DataTable.prototype.getTableProperty);
goog.exportProperty(google.visualization.DataTable.prototype, "getTableProperties", google.visualization.DataTable.prototype.getTableProperties);
goog.exportProperty(google.visualization.DataTable.prototype, "getUnderlyingTableColumnIndex", google.visualization.DataTable.prototype.getUnderlyingTableColumnIndex);
goog.exportProperty(google.visualization.DataTable.prototype, "getUnderlyingTableRowIndex", google.visualization.DataTable.prototype.getUnderlyingTableRowIndex);
goog.exportProperty(google.visualization.DataTable.prototype, "getValue", google.visualization.DataTable.prototype.getValue);
goog.exportProperty(google.visualization.DataTable.prototype, "insertColumn", google.visualization.DataTable.prototype.insertColumn);
goog.exportProperty(google.visualization.DataTable.prototype, "insertRows", google.visualization.DataTable.prototype.insertRows);
goog.exportProperty(google.visualization.DataTable.prototype, "removeColumn", google.visualization.DataTable.prototype.removeColumn);
goog.exportProperty(google.visualization.DataTable.prototype, "removeColumns", google.visualization.DataTable.prototype.removeColumns);
goog.exportProperty(google.visualization.DataTable.prototype, "removeRow", google.visualization.DataTable.prototype.removeRow);
goog.exportProperty(google.visualization.DataTable.prototype, "removeRows", google.visualization.DataTable.prototype.removeRows);
goog.exportProperty(google.visualization.DataTable.prototype, "setCell", google.visualization.DataTable.prototype.setCell);
goog.exportProperty(google.visualization.DataTable.prototype, "setColumnLabel", google.visualization.DataTable.prototype.setColumnLabel);
goog.exportProperty(google.visualization.DataTable.prototype, "setColumnProperties", google.visualization.DataTable.prototype.setColumnProperties);
goog.exportProperty(google.visualization.DataTable.prototype, "setColumnProperty", google.visualization.DataTable.prototype.setColumnProperty);
goog.exportProperty(google.visualization.DataTable.prototype, "setFormattedValue", google.visualization.DataTable.prototype.setFormattedValue);
goog.exportProperty(google.visualization.DataTable.prototype, "setProperties", google.visualization.DataTable.prototype.setProperties);
goog.exportProperty(google.visualization.DataTable.prototype, "setProperty", google.visualization.DataTable.prototype.setProperty);
goog.exportProperty(google.visualization.DataTable.prototype, "setRowProperties", google.visualization.DataTable.prototype.setRowProperties);
goog.exportProperty(google.visualization.DataTable.prototype, "setRowProperty", google.visualization.DataTable.prototype.setRowProperty);
goog.exportProperty(google.visualization.DataTable.prototype, "setTableProperties", google.visualization.DataTable.prototype.setTableProperties);
goog.exportProperty(google.visualization.DataTable.prototype, "setTableProperty", google.visualization.DataTable.prototype.setTableProperty);
goog.exportProperty(google.visualization.DataTable.prototype, "setValue", google.visualization.DataTable.prototype.setValue);
goog.exportProperty(google.visualization.DataTable.prototype, "sort", google.visualization.DataTable.prototype.sort);
goog.exportProperty(google.visualization.DataTable.prototype, "toJSON", google.visualization.DataTable.prototype.toJSON);
goog.exportSymbol("google.visualization.DataView", google.visualization.DataView);
goog.exportProperty(google.visualization.DataView, "fromJSON", google.visualization.DataView.fromJSON);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnId", google.visualization.DataView.prototype.getColumnId);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnIndex", google.visualization.DataView.prototype.getColumnIndex);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnLabel", google.visualization.DataView.prototype.getColumnLabel);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnPattern", google.visualization.DataView.prototype.getColumnPattern);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnProperty", google.visualization.DataView.prototype.getColumnProperty);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnProperty", google.visualization.DataView.prototype.getColumnProperty);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnProperties", google.visualization.DataView.prototype.getColumnProperties);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnRange", google.visualization.DataView.prototype.getColumnRange);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnRole", google.visualization.DataView.prototype.getColumnRole);
goog.exportProperty(google.visualization.DataView.prototype, "getColumnType", google.visualization.DataView.prototype.getColumnType);
goog.exportProperty(google.visualization.DataView.prototype, "getDistinctValues", google.visualization.DataView.prototype.getDistinctValues);
goog.exportProperty(google.visualization.DataView.prototype, "getFilteredRows", google.visualization.DataView.prototype.getFilteredRows);
goog.exportProperty(google.visualization.DataView.prototype, "getFormattedValue", google.visualization.DataView.prototype.getFormattedValue);
goog.exportProperty(google.visualization.DataView.prototype, "getNumberOfColumns", google.visualization.DataView.prototype.getNumberOfColumns);
goog.exportProperty(google.visualization.DataView.prototype, "getNumberOfRows", google.visualization.DataView.prototype.getNumberOfRows);
goog.exportProperty(google.visualization.DataView.prototype, "getProperties", google.visualization.DataView.prototype.getProperties);
goog.exportProperty(google.visualization.DataView.prototype, "getProperty", google.visualization.DataView.prototype.getProperty);
goog.exportProperty(google.visualization.DataView.prototype, "getRowProperty", google.visualization.DataView.prototype.getRowProperty);
goog.exportProperty(google.visualization.DataView.prototype, "getRowProperties", google.visualization.DataView.prototype.getRowProperties);
goog.exportProperty(google.visualization.DataView.prototype, "getSortedRows", google.visualization.DataView.prototype.getSortedRows);
goog.exportProperty(google.visualization.DataView.prototype, "getTableColumnIndex", google.visualization.DataView.prototype.getTableColumnIndex);
goog.exportProperty(google.visualization.DataView.prototype, "getUnderlyingTableColumnIndex", google.visualization.DataView.prototype.getUnderlyingTableColumnIndex);
goog.exportProperty(google.visualization.DataView.prototype, "getTableRowIndex", google.visualization.DataView.prototype.getTableRowIndex);
goog.exportProperty(google.visualization.DataView.prototype, "getUnderlyingTableRowIndex", google.visualization.DataView.prototype.getUnderlyingTableRowIndex);
goog.exportProperty(google.visualization.DataView.prototype, "getTableProperty", google.visualization.DataView.prototype.getTableProperty);
goog.exportProperty(google.visualization.DataView.prototype, "getTableProperties", google.visualization.DataView.prototype.getTableProperties);
goog.exportProperty(google.visualization.DataView.prototype, "getValue", google.visualization.DataView.prototype.getValue);
goog.exportProperty(google.visualization.DataView.prototype, "getViewColumnIndex", google.visualization.DataView.prototype.getViewColumnIndex);
goog.exportProperty(google.visualization.DataView.prototype, "getViewColumns", google.visualization.DataView.prototype.getViewColumns);
goog.exportProperty(google.visualization.DataView.prototype, "getViewRowIndex", google.visualization.DataView.prototype.getViewRowIndex);
goog.exportProperty(google.visualization.DataView.prototype, "getViewRows", google.visualization.DataView.prototype.getViewRows);
goog.exportProperty(google.visualization.DataView.prototype, "hideColumns", google.visualization.DataView.prototype.hideColumns);
goog.exportProperty(google.visualization.DataView.prototype, "hideRows", google.visualization.DataView.prototype.hideRows);
goog.exportProperty(google.visualization.DataView.prototype, "setColumns", google.visualization.DataView.prototype.setColumns);
goog.exportProperty(google.visualization.DataView.prototype, "setRows", google.visualization.DataView.prototype.setRows);
goog.exportProperty(google.visualization.DataView.prototype, "toDataTable", google.visualization.DataView.prototype.toDataTable);
goog.exportProperty(google.visualization.DataView.prototype, "toJSON", google.visualization.DataView.prototype.toJSON);
goog.exportSymbol("google.visualization.errors", google.visualization.errors);
goog.exportProperty(google.visualization.errors, "addError", google.visualization.errors.addError);
goog.exportProperty(google.visualization.errors, "removeAll", google.visualization.errors.removeAll);
goog.exportProperty(google.visualization.errors, "removeError", google.visualization.errors.removeError);
goog.exportProperty(google.visualization.errors, "addErrorFromQueryResponse", google.visualization.errors.addErrorFromQueryResponse);
goog.exportProperty(google.visualization.errors, "getContainer", google.visualization.errors.getContainer);
goog.exportProperty(google.visualization.errors, "createProtectedCallback", google.visualization.errors.createProtectedCallback);
goog.exportSymbol("google.visualization.events.addListener", google.visualization.events.addListener);
goog.exportSymbol("google.visualization.events.trigger", google.visualization.events.trigger);
goog.exportSymbol("google.visualization.events.removeListener", google.visualization.events.removeListener);
goog.exportSymbol("google.visualization.events.removeAllListeners", google.visualization.events.removeAllListeners);
goog.exportSymbol("google.visualization.QueryWrapper", google.visualization.QueryWrapper);
goog.exportProperty(google.visualization.QueryWrapper.prototype, "setOptions", google.visualization.QueryWrapper.prototype.setOptions);
goog.exportProperty(google.visualization.QueryWrapper.prototype, "draw", google.visualization.QueryWrapper.prototype.draw);
goog.exportProperty(google.visualization.QueryWrapper.prototype, "setCustomErrorHandler", google.visualization.QueryWrapper.prototype.setCustomErrorHandler);
goog.exportProperty(google.visualization.QueryWrapper.prototype, "sendAndDraw", google.visualization.QueryWrapper.prototype.sendAndDraw);
goog.exportProperty(google.visualization.QueryWrapper.prototype, "setCustomPostResponseHandler", google.visualization.QueryWrapper.prototype.setCustomPostResponseHandler);
goog.exportProperty(google.visualization.QueryWrapper.prototype, "setCustomResponseHandler", google.visualization.QueryWrapper.prototype.setCustomResponseHandler);
goog.exportProperty(google.visualization.QueryWrapper.prototype, "abort", google.visualization.QueryWrapper.prototype.abort);
goog.exportSymbol("google.visualization.arrayToDataTable", google.visualization.datautils.arrayToDataTable);
goog.exportSymbol("google.visualization.datautils.compareValues", google.visualization.datautils.compareValues);
goog.exportSymbol("google.visualization.dataTableToCsv", google.visualization.datautils.dataTableToCsv);
// Input 97
goog.exportSymbol("google.visualization.GadgetHelper", google.visualization.GadgetHelper);
goog.exportProperty(google.visualization.GadgetHelper.prototype, "createQueryFromPrefs", google.visualization.GadgetHelper.prototype.createQueryFromPrefs);
goog.exportProperty(google.visualization.GadgetHelper.prototype, "validateResponse", google.visualization.GadgetHelper.prototype.validateResponse);


// Input 0
goog.memoize = function(f, opt_serializer) {
  var serializer = opt_serializer || goog.memoize.simpleSerializer;
  return function() {
    if(goog.memoize.ENABLE_MEMOIZE) {
      var thisOrGlobal = this || goog.global, cache = thisOrGlobal[goog.memoize.CACHE_PROPERTY_] || (thisOrGlobal[goog.memoize.CACHE_PROPERTY_] = {}), key = serializer(goog.getUid(f), arguments);
      return cache.hasOwnProperty(key) ? cache[key] : cache[key] = f.apply(this, arguments)
    }
    return f.apply(this, arguments)
  }
};
goog.memoize.ENABLE_MEMOIZE = !0;
goog.memoize.clearCache = function(cacheOwner) {
  cacheOwner[goog.memoize.CACHE_PROPERTY_] = {}
};
goog.memoize.CACHE_PROPERTY_ = "closure_memoize_cache_";
goog.memoize.simpleSerializer = function(functionUid, args) {
  for(var context = [functionUid], i = args.length - 1;0 <= i;--i) {
    context.push(typeof args[i], args[i])
  }
  return context.join("\x0B")
};
// Input 1
goog.style.bidi = {};
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if(isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft
  }
  if(isRtl && (!goog.userAgent.IE || !goog.userAgent.isVersionOrHigher("8"))) {
    var overflowX = goog.style.getComputedOverflowX(element);
    if("visible" != overflowX) {
      return element.scrollWidth - element.clientWidth - element.scrollLeft
    }
  }
  return element.scrollLeft
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft, bestParent = element.offsetParent;
  bestParent || "fixed" != goog.style.getComputedPosition(element) || (bestParent = goog.dom.getOwnerDocument(element).documentElement);
  if(!bestParent) {
    return offsetLeftForReal
  }
  if(goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent), offsetLeftForReal = offsetLeftForReal + borderWidths.left
  }else {
    goog.userAgent.isDocumentModeOrHigher(8) && (borderWidths = goog.style.getBorderBox(bestParent), offsetLeftForReal -= borderWidths.left)
  }
  if(goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset
  }
  return offsetLeftForReal
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  goog.style.isRightToLeft(element) ? goog.userAgent.GECKO ? element.scrollLeft = -offsetStart : goog.userAgent.IE && goog.userAgent.isVersionOrHigher("8") ? element.scrollLeft = offsetStart : element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth : element.scrollLeft = offsetStart
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  goog.isNull(top) || (elem.style.top = top + "px");
  isRtl ? (elem.style.right = left + "px", elem.style.left = "") : (elem.style.left = left + "px", elem.style.right = "")
};
// Input 2
goog.positioning = {};
goog.positioning.Corner = {TOP_LEFT:0, TOP_RIGHT:2, BOTTOM_LEFT:1, BOTTOM_RIGHT:3, TOP_START:4, TOP_END:6, BOTTOM_START:5, BOTTOM_END:7};
goog.positioning.CornerBit = {BOTTOM:1, RIGHT:2, FLIP_RTL:4};
goog.positioning.Overflow = {IGNORE:0, ADJUST_X:1, FAIL_X:2, ADJUST_Y:4, FAIL_Y:8, RESIZE_WIDTH:16, RESIZE_HEIGHT:32, ADJUST_X_EXCEPT_OFFSCREEN:65, ADJUST_Y_EXCEPT_OFFSCREEN:132};
goog.positioning.OverflowStatus = {NONE:0, ADJUSTED_X:1, ADJUSTED_Y:2, WIDTH_ADJUSTED:4, HEIGHT_ADJUSTED:8, FAILED_LEFT:16, FAILED_RIGHT:32, FAILED_TOP:64, FAILED_BOTTOM:128, FAILED_OUTSIDE_VIEWPORT:256};
goog.positioning.OverflowStatus.FAILED = goog.positioning.OverflowStatus.FAILED_LEFT | goog.positioning.OverflowStatus.FAILED_RIGHT | goog.positioning.OverflowStatus.FAILED_TOP | goog.positioning.OverflowStatus.FAILED_BOTTOM | goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;
goog.positioning.OverflowStatus.FAILED_HORIZONTAL = goog.positioning.OverflowStatus.FAILED_LEFT | goog.positioning.OverflowStatus.FAILED_RIGHT;
goog.positioning.OverflowStatus.FAILED_VERTICAL = goog.positioning.OverflowStatus.FAILED_TOP | goog.positioning.OverflowStatus.FAILED_BOTTOM;
goog.positioning.positionAtAnchor = function(anchorElement, anchorElementCorner, movableElement, movableElementCorner, opt_offset, opt_margin, opt_overflow, opt_preferredSize, opt_viewport) {
  goog.asserts.assert(movableElement);
  var movableParentTopLeft = goog.positioning.getOffsetParentPageOffset(movableElement), anchorRect = goog.positioning.getVisiblePart_(anchorElement);
  goog.style.translateRectForAnotherFrame(anchorRect, goog.dom.getDomHelper(anchorElement), goog.dom.getDomHelper(movableElement));
  var corner = goog.positioning.getEffectiveCorner(anchorElement, anchorElementCorner), absolutePos = new goog.math.Coordinate(corner & goog.positioning.CornerBit.RIGHT ? anchorRect.left + anchorRect.width : anchorRect.left, corner & goog.positioning.CornerBit.BOTTOM ? anchorRect.top + anchorRect.height : anchorRect.top), absolutePos = goog.math.Coordinate.difference(absolutePos, movableParentTopLeft);
  opt_offset && (absolutePos.x += (corner & goog.positioning.CornerBit.RIGHT ? -1 : 1) * opt_offset.x, absolutePos.y += (corner & goog.positioning.CornerBit.BOTTOM ? -1 : 1) * opt_offset.y);
  var viewport;
  if(opt_overflow) {
    if(opt_viewport) {
      viewport = opt_viewport
    }else {
      if(viewport = goog.style.getVisibleRectForElement(movableElement)) {
        viewport.top -= movableParentTopLeft.y, viewport.right -= movableParentTopLeft.x, viewport.bottom -= movableParentTopLeft.y, viewport.left -= movableParentTopLeft.x
      }
    }
  }
  return goog.positioning.positionAtCoordinate(absolutePos, movableElement, movableElementCorner, opt_margin, viewport, opt_overflow, opt_preferredSize)
};
goog.positioning.getOffsetParentPageOffset = function(movableElement) {
  var movableParentTopLeft, parent = movableElement.offsetParent;
  if(parent) {
    var isBody = parent.tagName == goog.dom.TagName.HTML || parent.tagName == goog.dom.TagName.BODY;
    isBody && "static" == goog.style.getComputedPosition(parent) || (movableParentTopLeft = goog.style.getPageOffset(parent), isBody || (movableParentTopLeft = goog.math.Coordinate.difference(movableParentTopLeft, new goog.math.Coordinate(goog.style.bidi.getScrollLeft(parent), parent.scrollTop))))
  }
  return movableParentTopLeft || new goog.math.Coordinate
};
goog.positioning.getVisiblePart_ = function(el) {
  var rect = goog.style.getBounds(el), visibleBox = goog.style.getVisibleRectForElement(el);
  visibleBox && rect.intersection(goog.math.Rect.createFromBox(visibleBox));
  return rect
};
goog.positioning.positionAtCoordinate = function(absolutePos, movableElement, movableElementCorner, opt_margin, opt_viewport, opt_overflow, opt_preferredSize) {
  absolutePos = absolutePos.clone();
  var status = goog.positioning.OverflowStatus.NONE, corner = goog.positioning.getEffectiveCorner(movableElement, movableElementCorner), elementSize = goog.style.getSize(movableElement), size = opt_preferredSize ? opt_preferredSize.clone() : elementSize.clone();
  if(opt_margin || corner != goog.positioning.Corner.TOP_LEFT) {
    corner & goog.positioning.CornerBit.RIGHT ? absolutePos.x -= size.width + (opt_margin ? opt_margin.right : 0) : opt_margin && (absolutePos.x += opt_margin.left), corner & goog.positioning.CornerBit.BOTTOM ? absolutePos.y -= size.height + (opt_margin ? opt_margin.bottom : 0) : opt_margin && (absolutePos.y += opt_margin.top)
  }
  if(opt_overflow && (status = opt_viewport ? goog.positioning.adjustForViewport_(absolutePos, size, opt_viewport, opt_overflow) : goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT, status & goog.positioning.OverflowStatus.FAILED)) {
    return status
  }
  goog.style.setPosition(movableElement, absolutePos);
  goog.math.Size.equals(elementSize, size) || goog.style.setBorderBoxSize(movableElement, size);
  return status
};
goog.positioning.adjustForViewport_ = function(pos, size, viewport, overflow) {
  var status = goog.positioning.OverflowStatus.NONE, ADJUST_X_EXCEPT_OFFSCREEN = goog.positioning.Overflow.ADJUST_X_EXCEPT_OFFSCREEN, ADJUST_Y_EXCEPT_OFFSCREEN = goog.positioning.Overflow.ADJUST_Y_EXCEPT_OFFSCREEN;
  (overflow & ADJUST_X_EXCEPT_OFFSCREEN) == ADJUST_X_EXCEPT_OFFSCREEN && (pos.x < viewport.left || pos.x >= viewport.right) && (overflow &= ~goog.positioning.Overflow.ADJUST_X);
  (overflow & ADJUST_Y_EXCEPT_OFFSCREEN) == ADJUST_Y_EXCEPT_OFFSCREEN && (pos.y < viewport.top || pos.y >= viewport.bottom) && (overflow &= ~goog.positioning.Overflow.ADJUST_Y);
  pos.x < viewport.left && overflow & goog.positioning.Overflow.ADJUST_X && (pos.x = viewport.left, status |= goog.positioning.OverflowStatus.ADJUSTED_X);
  pos.x < viewport.left && pos.x + size.width > viewport.right && overflow & goog.positioning.Overflow.RESIZE_WIDTH && (size.width = Math.max(size.width - (pos.x + size.width - viewport.right), 0), status |= goog.positioning.OverflowStatus.WIDTH_ADJUSTED);
  pos.x + size.width > viewport.right && overflow & goog.positioning.Overflow.ADJUST_X && (pos.x = Math.max(viewport.right - size.width, viewport.left), status |= goog.positioning.OverflowStatus.ADJUSTED_X);
  overflow & goog.positioning.Overflow.FAIL_X && (status = status | (pos.x < viewport.left ? goog.positioning.OverflowStatus.FAILED_LEFT : 0) | (pos.x + size.width > viewport.right ? goog.positioning.OverflowStatus.FAILED_RIGHT : 0));
  pos.y < viewport.top && overflow & goog.positioning.Overflow.ADJUST_Y && (pos.y = viewport.top, status |= goog.positioning.OverflowStatus.ADJUSTED_Y);
  pos.y <= viewport.top && pos.y + size.height < viewport.bottom && overflow & goog.positioning.Overflow.RESIZE_HEIGHT && (size.height = Math.max(size.height - (viewport.top - pos.y), 0), pos.y = viewport.top, status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED);
  pos.y >= viewport.top && pos.y + size.height > viewport.bottom && overflow & goog.positioning.Overflow.RESIZE_HEIGHT && (size.height = Math.max(size.height - (pos.y + size.height - viewport.bottom), 0), status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED);
  pos.y + size.height > viewport.bottom && overflow & goog.positioning.Overflow.ADJUST_Y && (pos.y = Math.max(viewport.bottom - size.height, viewport.top), status |= goog.positioning.OverflowStatus.ADJUSTED_Y);
  overflow & goog.positioning.Overflow.FAIL_Y && (status = status | (pos.y < viewport.top ? goog.positioning.OverflowStatus.FAILED_TOP : 0) | (pos.y + size.height > viewport.bottom ? goog.positioning.OverflowStatus.FAILED_BOTTOM : 0));
  return status
};
goog.positioning.getEffectiveCorner = function(element, corner) {
  return(corner & goog.positioning.CornerBit.FLIP_RTL && goog.style.isRightToLeft(element) ? corner ^ goog.positioning.CornerBit.RIGHT : corner) & ~goog.positioning.CornerBit.FLIP_RTL
};
goog.positioning.flipCornerHorizontal = function(corner) {
  return corner ^ goog.positioning.CornerBit.RIGHT
};
goog.positioning.flipCornerVertical = function(corner) {
  return corner ^ goog.positioning.CornerBit.BOTTOM
};
goog.positioning.flipCorner = function(corner) {
  return corner ^ goog.positioning.CornerBit.BOTTOM ^ goog.positioning.CornerBit.RIGHT
};
// Input 3
goog.positioning.AbstractPosition = function() {
};
goog.positioning.AbstractPosition.prototype.reposition = function() {
};
// Input 4
goog.positioning.AnchoredPosition = function(anchorElement, corner, opt_overflow) {
  this.element = anchorElement;
  this.corner = corner;
  this.overflow_ = opt_overflow
};
goog.inherits(goog.positioning.AnchoredPosition, goog.positioning.AbstractPosition);
goog.positioning.AnchoredPosition.prototype.reposition = function(movableElement, movableCorner, opt_margin) {
  goog.positioning.positionAtAnchor(this.element, this.corner, movableElement, movableCorner, void 0, opt_margin, this.overflow_)
};
// Input 5
goog.positioning.ViewportPosition = function(arg1, opt_arg2) {
  this.coordinate = arg1 instanceof goog.math.Coordinate ? arg1 : new goog.math.Coordinate(arg1, opt_arg2)
};
goog.inherits(goog.positioning.ViewportPosition, goog.positioning.AbstractPosition);
goog.positioning.ViewportPosition.prototype.reposition = function(element, popupCorner, opt_margin, opt_preferredSize) {
  goog.positioning.positionAtAnchor(goog.style.getClientViewportElement(element), goog.positioning.Corner.TOP_LEFT, element, popupCorner, this.coordinate, opt_margin, null, opt_preferredSize)
};
// Input 6
goog.positioning.AbsolutePosition = function(arg1, opt_arg2) {
  this.coordinate = arg1 instanceof goog.math.Coordinate ? arg1 : new goog.math.Coordinate(arg1, opt_arg2)
};
goog.inherits(goog.positioning.AbsolutePosition, goog.positioning.AbstractPosition);
goog.positioning.AbsolutePosition.prototype.reposition = function(movableElement, movableCorner, opt_margin, opt_preferredSize) {
  goog.positioning.positionAtCoordinate(this.coordinate, movableElement, movableCorner, opt_margin, null, null, opt_preferredSize)
};
// Input 7
goog.positioning.AnchoredViewportPosition = function(anchorElement, corner, opt_adjust, opt_overflowConstraint) {
  goog.positioning.AnchoredPosition.call(this, anchorElement, corner);
  this.lastResortOverflow_ = opt_adjust ? goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.ADJUST_Y : goog.positioning.Overflow.IGNORE;
  this.overflowConstraint_ = opt_overflowConstraint || void 0
};
goog.inherits(goog.positioning.AnchoredViewportPosition, goog.positioning.AnchoredPosition);
goog.positioning.AnchoredViewportPosition.prototype.getLastResortOverflow = function() {
  return this.lastResortOverflow_
};
goog.positioning.AnchoredViewportPosition.prototype.setLastResortOverflow = function(lastResortOverflow) {
  this.lastResortOverflow_ = lastResortOverflow
};
goog.positioning.AnchoredViewportPosition.prototype.reposition = function(movableElement, movableCorner, opt_margin, opt_preferredSize) {
  var status = goog.positioning.positionAtAnchor(this.element, this.corner, movableElement, movableCorner, null, opt_margin, goog.positioning.Overflow.FAIL_X | goog.positioning.Overflow.FAIL_Y, opt_preferredSize, this.overflowConstraint_);
  if(status & goog.positioning.OverflowStatus.FAILED) {
    var cornerFallback = this.adjustCorner(status, this.corner), movableCornerFallback = this.adjustCorner(status, movableCorner), status = goog.positioning.positionAtAnchor(this.element, cornerFallback, movableElement, movableCornerFallback, null, opt_margin, goog.positioning.Overflow.FAIL_X | goog.positioning.Overflow.FAIL_Y, opt_preferredSize, this.overflowConstraint_);
    status & goog.positioning.OverflowStatus.FAILED && (cornerFallback = this.adjustCorner(status, cornerFallback), movableCornerFallback = this.adjustCorner(status, movableCornerFallback), goog.positioning.positionAtAnchor(this.element, cornerFallback, movableElement, movableCornerFallback, null, opt_margin, this.getLastResortOverflow(), opt_preferredSize, this.overflowConstraint_))
  }
};
goog.positioning.AnchoredViewportPosition.prototype.adjustCorner = function(status, corner) {
  status & goog.positioning.OverflowStatus.FAILED_HORIZONTAL && (corner = goog.positioning.flipCornerHorizontal(corner));
  status & goog.positioning.OverflowStatus.FAILED_VERTICAL && (corner = goog.positioning.flipCornerVertical(corner));
  return corner
};
// Input 8
goog.positioning.ClientPosition = function(arg1, opt_arg2) {
  this.coordinate = arg1 instanceof goog.math.Coordinate ? arg1 : new goog.math.Coordinate(arg1, opt_arg2)
};
goog.inherits(goog.positioning.ClientPosition, goog.positioning.AbstractPosition);
goog.positioning.ClientPosition.prototype.reposition = function(movableElement, movableElementCorner, opt_margin, opt_preferredSize) {
  goog.asserts.assert(movableElement);
  var viewportOffset = goog.style.getViewportPageOffset(goog.dom.getOwnerDocument(movableElement)), x = this.coordinate.x + viewportOffset.x, y = this.coordinate.y + viewportOffset.y, movableParentTopLeft = goog.positioning.getOffsetParentPageOffset(movableElement), x = x - movableParentTopLeft.x, y = y - movableParentTopLeft.y;
  goog.positioning.positionAtCoordinate(new goog.math.Coordinate(x, y), movableElement, movableElementCorner, opt_margin, null, null, opt_preferredSize)
};
// Input 9
goog.positioning.ViewportClientPosition = function(arg1, opt_arg2) {
  goog.positioning.ClientPosition.call(this, arg1, opt_arg2)
};
goog.inherits(goog.positioning.ViewportClientPosition, goog.positioning.ClientPosition);
goog.positioning.ViewportClientPosition.prototype.lastResortOverflow_ = 0;
goog.positioning.ViewportClientPosition.prototype.setLastResortOverflow = function(overflow) {
  this.lastResortOverflow_ = overflow
};
goog.positioning.ViewportClientPosition.prototype.reposition = function(element, popupCorner, opt_margin, opt_preferredSize) {
  var viewportElt = goog.style.getClientViewportElement(element), viewport = goog.style.getVisibleRectForElement(viewportElt), scrollEl = goog.dom.getDomHelper(element).getDocumentScrollElement(), clientPos = new goog.math.Coordinate(this.coordinate.x + scrollEl.scrollLeft, this.coordinate.y + scrollEl.scrollTop), failXY = goog.positioning.Overflow.FAIL_X | goog.positioning.Overflow.FAIL_Y, corner = popupCorner, status = goog.positioning.positionAtCoordinate(clientPos, element, corner, opt_margin, 
  viewport, failXY, opt_preferredSize);
  if(0 != (status & goog.positioning.OverflowStatus.FAILED)) {
    if(status & goog.positioning.OverflowStatus.FAILED_LEFT || status & goog.positioning.OverflowStatus.FAILED_RIGHT) {
      corner = goog.positioning.flipCornerHorizontal(corner)
    }
    if(status & goog.positioning.OverflowStatus.FAILED_TOP || status & goog.positioning.OverflowStatus.FAILED_BOTTOM) {
      corner = goog.positioning.flipCornerVertical(corner)
    }
    status = goog.positioning.positionAtCoordinate(clientPos, element, corner, opt_margin, viewport, failXY, opt_preferredSize);
    0 != (status & goog.positioning.OverflowStatus.FAILED) && goog.positioning.positionAtCoordinate(clientPos, element, popupCorner, opt_margin, viewport, this.lastResortOverflow_, opt_preferredSize)
  }
};
// Input 10
goog.events.KeyCodes = {WIN_KEY_FF_LINUX:0, MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, FF_EQUALS:61, FF_DASH:173, QUESTION_MARK:63, A:65, B:66, C:67, D:68, E:69, F:70, G:71, H:72, I:73, J:74, K:75, 
L:76, M:77, N:78, O:79, P:80, Q:81, R:82, S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, FIRST_MEDIA_KEY:166, 
LAST_MEDIA_KEY:183, SEMICOLON:186, DASH:189, EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, WIN_IME:229, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if(e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return!1
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    ;
    case goog.events.KeyCodes.CAPS_LOCK:
    ;
    case goog.events.KeyCodes.CONTEXT_MENU:
    ;
    case goog.events.KeyCodes.CTRL:
    ;
    case goog.events.KeyCodes.DOWN:
    ;
    case goog.events.KeyCodes.END:
    ;
    case goog.events.KeyCodes.ESC:
    ;
    case goog.events.KeyCodes.HOME:
    ;
    case goog.events.KeyCodes.INSERT:
    ;
    case goog.events.KeyCodes.LEFT:
    ;
    case goog.events.KeyCodes.MAC_FF_META:
    ;
    case goog.events.KeyCodes.META:
    ;
    case goog.events.KeyCodes.NUMLOCK:
    ;
    case goog.events.KeyCodes.NUM_CENTER:
    ;
    case goog.events.KeyCodes.PAGE_DOWN:
    ;
    case goog.events.KeyCodes.PAGE_UP:
    ;
    case goog.events.KeyCodes.PAUSE:
    ;
    case goog.events.KeyCodes.PHANTOM:
    ;
    case goog.events.KeyCodes.PRINT_SCREEN:
    ;
    case goog.events.KeyCodes.RIGHT:
    ;
    case goog.events.KeyCodes.SCROLL_LOCK:
    ;
    case goog.events.KeyCodes.SHIFT:
    ;
    case goog.events.KeyCodes.UP:
    ;
    case goog.events.KeyCodes.WIN_KEY:
    ;
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return!1;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return!goog.userAgent.GECKO;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey) {
  if(!(goog.userAgent.IE || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("525"))) {
    return!0
  }
  if(goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode)
  }
  if(opt_altKey && !opt_ctrlKey || !opt_shiftKey && (opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT || goog.userAgent.MAC && opt_heldKeyCode == goog.events.KeyCodes.META)) {
    return!1
  }
  if(goog.userAgent.WEBKIT && opt_ctrlKey && opt_shiftKey) {
    switch(keyCode) {
      case goog.events.KeyCodes.BACKSLASH:
      ;
      case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.TILDE:
      ;
      case goog.events.KeyCodes.SEMICOLON:
      ;
      case goog.events.KeyCodes.DASH:
      ;
      case goog.events.KeyCodes.EQUALS:
      ;
      case goog.events.KeyCodes.COMMA:
      ;
      case goog.events.KeyCodes.PERIOD:
      ;
      case goog.events.KeyCodes.SLASH:
      ;
      case goog.events.KeyCodes.APOSTROPHE:
      ;
      case goog.events.KeyCodes.SINGLE_QUOTE:
        return!1
    }
  }
  if(goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return!1
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return!(goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9));
    case goog.events.KeyCodes.ESC:
      return!goog.userAgent.WEBKIT
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode)
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if(keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE || keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY || keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z || goog.userAgent.WEBKIT && 0 == keyCode) {
    return!0
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    ;
    case goog.events.KeyCodes.QUESTION_MARK:
    ;
    case goog.events.KeyCodes.NUM_PLUS:
    ;
    case goog.events.KeyCodes.NUM_MINUS:
    ;
    case goog.events.KeyCodes.NUM_PERIOD:
    ;
    case goog.events.KeyCodes.NUM_DIVISION:
    ;
    case goog.events.KeyCodes.SEMICOLON:
    ;
    case goog.events.KeyCodes.FF_SEMICOLON:
    ;
    case goog.events.KeyCodes.DASH:
    ;
    case goog.events.KeyCodes.EQUALS:
    ;
    case goog.events.KeyCodes.FF_EQUALS:
    ;
    case goog.events.KeyCodes.COMMA:
    ;
    case goog.events.KeyCodes.PERIOD:
    ;
    case goog.events.KeyCodes.SLASH:
    ;
    case goog.events.KeyCodes.APOSTROPHE:
    ;
    case goog.events.KeyCodes.SINGLE_QUOTE:
    ;
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    ;
    case goog.events.KeyCodes.BACKSLASH:
    ;
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return!0;
    default:
      return!1
  }
};
goog.events.KeyCodes.normalizeGeckoKeyCode = function(keyCode) {
  switch(keyCode) {
    case goog.events.KeyCodes.FF_EQUALS:
      return goog.events.KeyCodes.EQUALS;
    case goog.events.KeyCodes.FF_SEMICOLON:
      return goog.events.KeyCodes.SEMICOLON;
    case goog.events.KeyCodes.FF_DASH:
      return goog.events.KeyCodes.DASH;
    case goog.events.KeyCodes.MAC_FF_META:
      return goog.events.KeyCodes.META;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return goog.events.KeyCodes.WIN_KEY;
    default:
      return keyCode
  }
};
// Input 11
goog.fx = {};
goog.fx.Transition = function() {
};
goog.fx.Transition.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause"};
// Input 12
goog.ui = {};
goog.ui.PopupBase = function(opt_element, opt_type) {
  goog.events.EventTarget.call(this);
  this.handler_ = new goog.events.EventHandler(this);
  this.setElement(opt_element || null);
  opt_type && this.setType(opt_type)
};
goog.inherits(goog.ui.PopupBase, goog.events.EventTarget);
goog.ui.PopupBase.Type = {TOGGLE_DISPLAY:"toggle_display", MOVE_OFFSCREEN:"move_offscreen"};
goog.ui.PopupBase.prototype.element_ = null;
goog.ui.PopupBase.prototype.autoHide_ = !0;
goog.ui.PopupBase.prototype.autoHideRegion_ = null;
goog.ui.PopupBase.prototype.isVisible_ = !1;
goog.ui.PopupBase.prototype.shouldHideAsync_ = !1;
goog.ui.PopupBase.prototype.lastShowTime_ = -1;
goog.ui.PopupBase.prototype.hideOnEscape_ = !1;
goog.ui.PopupBase.prototype.enableCrossIframeDismissal_ = !0;
goog.ui.PopupBase.prototype.type_ = goog.ui.PopupBase.Type.TOGGLE_DISPLAY;
goog.ui.PopupBase.EventType = {BEFORE_SHOW:"beforeshow", SHOW:"show", BEFORE_HIDE:"beforehide", HIDE:"hide"};
goog.ui.PopupBase.DEBOUNCE_DELAY_MS = 150;
goog.ui.PopupBase.prototype.getType = function() {
  return this.type_
};
goog.ui.PopupBase.prototype.setType = function(type) {
  this.type_ = type
};
goog.ui.PopupBase.prototype.getElement = function() {
  return this.element_
};
goog.ui.PopupBase.prototype.setElement = function(elt) {
  this.ensureNotVisible_();
  this.element_ = elt
};
goog.ui.PopupBase.prototype.setAutoHide = function(autoHide) {
  this.ensureNotVisible_();
  this.autoHide_ = autoHide
};
goog.ui.PopupBase.prototype.setTransition = function(opt_showTransition, opt_hideTransition) {
  this.showTransition_ = opt_showTransition;
  this.hideTransition_ = opt_hideTransition
};
goog.ui.PopupBase.prototype.getHandler = function() {
  return this.handler_
};
goog.ui.PopupBase.prototype.ensureNotVisible_ = function() {
  if(this.isVisible_) {
    throw Error("Can not change this state of the popup while showing.");
  }
};
goog.ui.PopupBase.prototype.isVisible = function() {
  return this.isVisible_
};
goog.ui.PopupBase.prototype.setVisible = function(visible) {
  this.showTransition_ && this.showTransition_.stop();
  this.hideTransition_ && this.hideTransition_.stop();
  visible ? this.show_() : this.hide_()
};
goog.ui.PopupBase.prototype.reposition = goog.nullFunction;
goog.ui.PopupBase.prototype.show_ = function() {
  if(!this.isVisible_ && this.onBeforeShow()) {
    if(!this.element_) {
      throw Error("Caller must call setElement before trying to show the popup");
    }
    this.reposition();
    var doc = goog.dom.getOwnerDocument(this.element_);
    this.hideOnEscape_ && this.handler_.listen(doc, goog.events.EventType.KEYDOWN, this.onDocumentKeyDown_, !0);
    if(this.autoHide_) {
      if(this.handler_.listen(doc, goog.events.EventType.MOUSEDOWN, this.onDocumentMouseDown_, !0), goog.userAgent.IE) {
        var activeElement;
        try {
          activeElement = doc.activeElement
        }catch(e) {
        }
        for(;activeElement && "IFRAME" == activeElement.nodeName;) {
          try {
            var tempDoc = goog.dom.getFrameContentDocument(activeElement)
          }catch(e$$0) {
            break
          }
          doc = tempDoc;
          activeElement = doc.activeElement
        }
        this.handler_.listen(doc, goog.events.EventType.MOUSEDOWN, this.onDocumentMouseDown_, !0);
        this.handler_.listen(doc, goog.events.EventType.DEACTIVATE, this.onDocumentBlur_)
      }else {
        this.handler_.listen(doc, goog.events.EventType.BLUR, this.onDocumentBlur_)
      }
    }
    this.type_ == goog.ui.PopupBase.Type.TOGGLE_DISPLAY ? this.showPopupElement() : this.type_ == goog.ui.PopupBase.Type.MOVE_OFFSCREEN && this.reposition();
    this.isVisible_ = !0;
    this.lastShowTime_ = goog.now();
    if(this.showTransition_) {
      goog.events.listenOnce(this.showTransition_, goog.fx.Transition.EventType.END, this.onShow_, !1, this), this.showTransition_.play()
    }else {
      this.onShow_()
    }
  }
};
goog.ui.PopupBase.prototype.hide_ = function(opt_target) {
  if(!this.isVisible_ || !this.onBeforeHide_(opt_target)) {
    return!1
  }
  this.handler_ && this.handler_.removeAll();
  this.isVisible_ = !1;
  goog.now();
  this.hideTransition_ ? (goog.events.listenOnce(this.hideTransition_, goog.fx.Transition.EventType.END, goog.partial(this.continueHidingPopup_, opt_target), !1, this), this.hideTransition_.play()) : this.continueHidingPopup_(opt_target);
  return!0
};
goog.ui.PopupBase.prototype.continueHidingPopup_ = function(opt_target) {
  this.type_ == goog.ui.PopupBase.Type.TOGGLE_DISPLAY ? this.shouldHideAsync_ ? goog.Timer.callOnce(this.hidePopupElement_, 0, this) : this.hidePopupElement_() : this.type_ == goog.ui.PopupBase.Type.MOVE_OFFSCREEN && this.moveOffscreen_();
  this.onHide_(opt_target)
};
goog.ui.PopupBase.prototype.showPopupElement = function() {
  this.element_.style.visibility = "visible";
  goog.style.setElementShown(this.element_, !0)
};
goog.ui.PopupBase.prototype.hidePopupElement_ = function() {
  this.element_.style.visibility = "hidden";
  goog.style.setElementShown(this.element_, !1)
};
goog.ui.PopupBase.prototype.moveOffscreen_ = function() {
  this.element_.style.top = "-10000px"
};
goog.ui.PopupBase.prototype.onBeforeShow = function() {
  return this.dispatchEvent(goog.ui.PopupBase.EventType.BEFORE_SHOW)
};
goog.ui.PopupBase.prototype.onShow_ = function() {
  this.dispatchEvent(goog.ui.PopupBase.EventType.SHOW)
};
goog.ui.PopupBase.prototype.onBeforeHide_ = function(opt_target) {
  return this.dispatchEvent({type:goog.ui.PopupBase.EventType.BEFORE_HIDE, target:opt_target})
};
goog.ui.PopupBase.prototype.onHide_ = function(opt_target) {
  this.dispatchEvent({type:goog.ui.PopupBase.EventType.HIDE, target:opt_target})
};
goog.ui.PopupBase.prototype.onDocumentMouseDown_ = function(e) {
  var target = e.target;
  goog.dom.contains(this.element_, target) || this.autoHideRegion_ && !goog.dom.contains(this.autoHideRegion_, target) || this.shouldDebounce_() || this.hide_(target)
};
goog.ui.PopupBase.prototype.onDocumentKeyDown_ = function(e) {
  e.keyCode == goog.events.KeyCodes.ESC && this.hide_(e.target) && (e.preventDefault(), e.stopPropagation())
};
goog.ui.PopupBase.prototype.onDocumentBlur_ = function(e) {
  if(this.enableCrossIframeDismissal_) {
    var doc = goog.dom.getOwnerDocument(this.element_);
    if("undefined" != typeof document.activeElement) {
      var activeElement = doc.activeElement;
      if(!activeElement || goog.dom.contains(this.element_, activeElement) || "BODY" == activeElement.tagName) {
        return
      }
    }else {
      if(e.target != doc) {
        return
      }
    }
    this.shouldDebounce_() || this.hide_()
  }
};
goog.ui.PopupBase.prototype.shouldDebounce_ = function() {
  return goog.now() - this.lastShowTime_ < goog.ui.PopupBase.DEBOUNCE_DELAY_MS
};
goog.ui.PopupBase.prototype.disposeInternal = function() {
  goog.ui.PopupBase.superClass_.disposeInternal.call(this);
  this.handler_.dispose();
  goog.dispose(this.showTransition_);
  goog.dispose(this.hideTransition_);
  delete this.element_;
  delete this.handler_
};
// Input 13
goog.ui.Popup = function(opt_element, opt_position) {
  this.popupCorner_ = goog.positioning.Corner.TOP_START;
  this.position_ = opt_position || void 0;
  goog.ui.PopupBase.call(this, opt_element)
};
goog.inherits(goog.ui.Popup, goog.ui.PopupBase);
goog.ui.Popup.Corner = goog.positioning.Corner;
goog.ui.Popup.Overflow = goog.positioning.Overflow;
goog.ui.Popup.prototype.setPinnedCorner = function(corner) {
  this.popupCorner_ = corner;
  this.isVisible() && this.reposition()
};
goog.ui.Popup.prototype.getPosition = function() {
  return this.position_ || null
};
goog.ui.Popup.prototype.setPosition = function(position) {
  this.position_ = position || void 0;
  this.isVisible() && this.reposition()
};
goog.ui.Popup.prototype.reposition = function() {
  if(this.position_) {
    var hideForPositioning = !this.isVisible() && this.getType() != goog.ui.PopupBase.Type.MOVE_OFFSCREEN, el = this.getElement();
    hideForPositioning && (el.style.visibility = "hidden", goog.style.setElementShown(el, !0));
    this.position_.reposition(el, this.popupCorner_, this.margin_);
    hideForPositioning && goog.style.setElementShown(el, !1)
  }
};
goog.ui.Popup.AnchoredPosition = goog.positioning.AnchoredPosition;
goog.ui.Popup.AnchoredViewPortPosition = goog.positioning.AnchoredViewportPosition;
goog.ui.Popup.AbsolutePosition = goog.positioning.AbsolutePosition;
goog.ui.Popup.ViewPortPosition = goog.positioning.ViewportPosition;
goog.ui.Popup.ClientPosition = goog.positioning.ClientPosition;
goog.ui.Popup.ViewPortClientPosition = goog.positioning.ViewportClientPosition;
// Input 14
goog.ui.Tooltip = function(opt_el, opt_str, opt_domHelper) {
  this.dom_ = opt_domHelper || (opt_el ? goog.dom.getDomHelper(goog.dom.getElement(opt_el)) : goog.dom.getDomHelper());
  goog.ui.Popup.call(this, this.dom_.createDom("div", {style:"position:absolute;display:none;"}));
  this.cursorPosition = new goog.math.Coordinate(1, 1);
  this.elements_ = new goog.structs.Set;
  opt_el && this.attach(opt_el);
  null != opt_str && this.setText(opt_str)
};
goog.inherits(goog.ui.Tooltip, goog.ui.Popup);
goog.ui.Tooltip.activeInstances_ = [];
goog.ui.Tooltip.prototype.activeEl_ = null;
goog.ui.Tooltip.prototype.className = "charts-tooltip";
goog.ui.Tooltip.prototype.showDelayMs_ = 500;
goog.ui.Tooltip.prototype.hideDelayMs_ = 0;
goog.ui.Tooltip.State = {INACTIVE:0, WAITING_TO_SHOW:1, SHOWING:2, WAITING_TO_HIDE:3, UPDATING:4};
goog.ui.Tooltip.Activation = {CURSOR:0, FOCUS:1};
goog.ui.Tooltip.prototype.getDomHelper = function() {
  return this.dom_
};
goog.ui.Tooltip.prototype.attach = function(el) {
  el = goog.dom.getElement(el);
  this.elements_.add(el);
  goog.events.listen(el, goog.events.EventType.MOUSEOVER, this.handleMouseOver, !1, this);
  goog.events.listen(el, goog.events.EventType.MOUSEOUT, this.handleMouseOutAndBlur, !1, this);
  goog.events.listen(el, goog.events.EventType.MOUSEMOVE, this.handleMouseMove, !1, this);
  goog.events.listen(el, goog.events.EventType.FOCUS, this.handleFocus, !1, this);
  goog.events.listen(el, goog.events.EventType.BLUR, this.handleMouseOutAndBlur, !1, this)
};
goog.ui.Tooltip.prototype.detach = function(opt_el) {
  if(opt_el) {
    var el = goog.dom.getElement(opt_el);
    this.detachElement_(el);
    this.elements_.remove(el)
  }else {
    for(var a = this.elements_.getValues(), i = 0;el = a[i];i++) {
      this.detachElement_(el)
    }
    this.elements_.clear()
  }
};
goog.ui.Tooltip.prototype.detachElement_ = function(el) {
  goog.events.unlisten(el, goog.events.EventType.MOUSEOVER, this.handleMouseOver, !1, this);
  goog.events.unlisten(el, goog.events.EventType.MOUSEOUT, this.handleMouseOutAndBlur, !1, this);
  goog.events.unlisten(el, goog.events.EventType.MOUSEMOVE, this.handleMouseMove, !1, this);
  goog.events.unlisten(el, goog.events.EventType.FOCUS, this.handleFocus, !1, this);
  goog.events.unlisten(el, goog.events.EventType.BLUR, this.handleMouseOutAndBlur, !1, this)
};
goog.ui.Tooltip.prototype.setShowDelayMs = function(delay) {
  this.showDelayMs_ = delay
};
goog.ui.Tooltip.prototype.setHideDelayMs = function(delay) {
  this.hideDelayMs_ = delay
};
goog.ui.Tooltip.prototype.getHideDelayMs = function() {
  return this.hideDelayMs_
};
goog.ui.Tooltip.prototype.setText = function(str) {
  goog.dom.setTextContent(this.getElement(), str)
};
goog.ui.Tooltip.prototype.setHtml = function(str) {
  this.getElement().innerHTML = str
};
goog.ui.Tooltip.prototype.setElement = function(el) {
  var oldElement = this.getElement();
  oldElement && goog.dom.removeNode(oldElement);
  goog.ui.Tooltip.superClass_.setElement.call(this, el);
  if(el) {
    var body = this.dom_.getDocument().body;
    body.insertBefore(el, body.lastChild)
  }
};
goog.ui.Tooltip.prototype.getText = function() {
  return goog.dom.getTextContent(this.getElement())
};
goog.ui.Tooltip.prototype.getHtml = function() {
  return this.getElement().innerHTML
};
goog.ui.Tooltip.prototype.getState = function() {
  return this.showTimer ? this.isVisible() ? goog.ui.Tooltip.State.UPDATING : goog.ui.Tooltip.State.WAITING_TO_SHOW : this.hideTimer ? goog.ui.Tooltip.State.WAITING_TO_HIDE : this.isVisible() ? goog.ui.Tooltip.State.SHOWING : goog.ui.Tooltip.State.INACTIVE
};
goog.ui.Tooltip.prototype.onBeforeShow = function() {
  if(!goog.ui.PopupBase.prototype.onBeforeShow.call(this)) {
    return!1
  }
  if(this.anchor) {
    for(var tt, i = 0;tt = goog.ui.Tooltip.activeInstances_[i];i++) {
      goog.dom.contains(tt.getElement(), this.anchor) || tt.setVisible(!1)
    }
  }
  goog.array.insert(goog.ui.Tooltip.activeInstances_, this);
  var element = this.getElement();
  element.className = this.className;
  this.clearHideTimer();
  goog.events.listen(element, goog.events.EventType.MOUSEOVER, this.handleTooltipMouseOver, !1, this);
  goog.events.listen(element, goog.events.EventType.MOUSEOUT, this.handleTooltipMouseOut, !1, this);
  this.clearShowTimer();
  return!0
};
goog.ui.Tooltip.prototype.onHide_ = function() {
  goog.array.remove(goog.ui.Tooltip.activeInstances_, this);
  for(var element = this.getElement(), tt, i = 0;tt = goog.ui.Tooltip.activeInstances_[i];i++) {
    tt.anchor && goog.dom.contains(element, tt.anchor) && tt.setVisible(!1)
  }
  this.parentTooltip_ && this.parentTooltip_.startHideTimer();
  goog.events.unlisten(element, goog.events.EventType.MOUSEOVER, this.handleTooltipMouseOver, !1, this);
  goog.events.unlisten(element, goog.events.EventType.MOUSEOUT, this.handleTooltipMouseOut, !1, this);
  this.anchor = void 0;
  this.getState() == goog.ui.Tooltip.State.INACTIVE && (this.seenInteraction_ = !1);
  goog.ui.PopupBase.prototype.onHide_.call(this)
};
goog.ui.Tooltip.prototype.maybeShow = function(el, opt_pos) {
  this.anchor == el && this.elements_.contains(this.anchor) && (this.seenInteraction_ || !this.requireInteraction_ ? (this.setVisible(!1), this.isVisible() || this.positionAndShow_(el, opt_pos)) : this.anchor = void 0);
  this.showTimer = void 0
};
goog.ui.Tooltip.prototype.getElements = function() {
  return this.elements_
};
goog.ui.Tooltip.prototype.getActiveElement = function() {
  return this.activeEl_
};
goog.ui.Tooltip.prototype.showForElement = function(el, opt_pos) {
  this.attach(el);
  this.activeEl_ = el;
  this.positionAndShow_(el, opt_pos)
};
goog.ui.Tooltip.prototype.positionAndShow_ = function(el, opt_pos) {
  this.anchor = el;
  this.setPosition(opt_pos || this.getPositioningStrategy(goog.ui.Tooltip.Activation.CURSOR));
  this.setVisible(!0)
};
goog.ui.Tooltip.prototype.maybeHide = function(el) {
  this.hideTimer = void 0;
  el == this.anchor && (null != this.activeEl_ && (this.activeEl_ == this.getElement() || this.elements_.contains(this.activeEl_)) || this.hasActiveChild() || this.setVisible(!1))
};
goog.ui.Tooltip.prototype.hasActiveChild = function() {
  return!(!this.childTooltip_ || !this.childTooltip_.activeEl_)
};
goog.ui.Tooltip.prototype.saveCursorPosition_ = function(event) {
  var scroll = this.dom_.getDocumentScroll();
  this.cursorPosition.x = event.clientX + scroll.x;
  this.cursorPosition.y = event.clientY + scroll.y
};
goog.ui.Tooltip.prototype.handleMouseOver = function(event) {
  var el = this.getAnchorFromElement(event.target);
  this.activeEl_ = el;
  this.clearHideTimer();
  el != this.anchor && (this.anchor = el, this.startShowTimer(el), this.checkForParentTooltip_(), this.saveCursorPosition_(event))
};
goog.ui.Tooltip.prototype.getAnchorFromElement = function(el) {
  try {
    for(;el && !this.elements_.contains(el);) {
      el = el.parentNode
    }
    return el
  }catch(e) {
    return null
  }
};
goog.ui.Tooltip.prototype.handleMouseMove = function(event) {
  this.saveCursorPosition_(event);
  this.seenInteraction_ = !0
};
goog.ui.Tooltip.prototype.handleFocus = function(event) {
  var el = this.getAnchorFromElement(event.target);
  this.activeEl_ = el;
  this.seenInteraction_ = !0;
  if(this.anchor != el) {
    this.anchor = el;
    var pos = this.getPositioningStrategy(goog.ui.Tooltip.Activation.FOCUS);
    this.clearHideTimer();
    this.startShowTimer(el, pos);
    this.checkForParentTooltip_()
  }
};
goog.ui.Tooltip.prototype.getPositioningStrategy = function(activationType) {
  if(activationType == goog.ui.Tooltip.Activation.CURSOR) {
    var coord = this.cursorPosition.clone();
    return new goog.ui.Tooltip.CursorTooltipPosition(coord)
  }
  return new goog.ui.Tooltip.ElementTooltipPosition(this.activeEl_)
};
goog.ui.Tooltip.prototype.checkForParentTooltip_ = function() {
  if(this.anchor) {
    for(var tt, i = 0;tt = goog.ui.Tooltip.activeInstances_[i];i++) {
      goog.dom.contains(tt.getElement(), this.anchor) && (tt.childTooltip_ = this, this.parentTooltip_ = tt)
    }
  }
};
goog.ui.Tooltip.prototype.handleMouseOutAndBlur = function(event) {
  var el = this.getAnchorFromElement(event.target), elTo = this.getAnchorFromElement(event.relatedTarget);
  el != elTo && (el == this.activeEl_ && (this.activeEl_ = null), this.clearShowTimer(), this.seenInteraction_ = !1, !this.isVisible() || event.relatedTarget && goog.dom.contains(this.getElement(), event.relatedTarget) ? this.anchor = void 0 : this.startHideTimer())
};
goog.ui.Tooltip.prototype.handleTooltipMouseOver = function() {
  var element = this.getElement();
  this.activeEl_ != element && (this.clearHideTimer(), this.activeEl_ = element)
};
goog.ui.Tooltip.prototype.handleTooltipMouseOut = function(event) {
  var element = this.getElement();
  this.activeEl_ != element || event.relatedTarget && goog.dom.contains(element, event.relatedTarget) || (this.activeEl_ = null, this.startHideTimer())
};
goog.ui.Tooltip.prototype.startShowTimer = function(el, opt_pos) {
  this.showTimer || (this.showTimer = goog.Timer.callOnce(goog.bind(this.maybeShow, this, el, opt_pos), this.showDelayMs_))
};
goog.ui.Tooltip.prototype.clearShowTimer = function() {
  this.showTimer && (goog.Timer.clear(this.showTimer), this.showTimer = void 0)
};
goog.ui.Tooltip.prototype.startHideTimer = function() {
  this.getState() == goog.ui.Tooltip.State.SHOWING && (this.hideTimer = goog.Timer.callOnce(goog.bind(this.maybeHide, this, this.anchor), this.getHideDelayMs()))
};
goog.ui.Tooltip.prototype.clearHideTimer = function() {
  this.hideTimer && (goog.Timer.clear(this.hideTimer), this.hideTimer = void 0)
};
goog.ui.Tooltip.prototype.disposeInternal = function() {
  this.setVisible(!1);
  this.clearShowTimer();
  this.detach();
  this.getElement() && goog.dom.removeNode(this.getElement());
  this.activeEl_ = null;
  delete this.dom_;
  goog.ui.Tooltip.superClass_.disposeInternal.call(this)
};
goog.ui.Tooltip.CursorTooltipPosition = function(arg1, opt_arg2) {
  goog.positioning.ViewportPosition.call(this, arg1, opt_arg2)
};
goog.inherits(goog.ui.Tooltip.CursorTooltipPosition, goog.positioning.ViewportPosition);
goog.ui.Tooltip.CursorTooltipPosition.prototype.reposition = function(element, popupCorner, opt_margin) {
  var viewportElt = goog.style.getClientViewportElement(element), viewport = goog.style.getVisibleRectForElement(viewportElt), margin = opt_margin ? new goog.math.Box(opt_margin.top + 10, opt_margin.right, opt_margin.bottom, opt_margin.left + 10) : new goog.math.Box(10, 0, 0, 10);
  goog.positioning.positionAtCoordinate(this.coordinate, element, goog.positioning.Corner.TOP_START, margin, viewport, goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.FAIL_Y) & goog.positioning.OverflowStatus.FAILED && goog.positioning.positionAtCoordinate(this.coordinate, element, goog.positioning.Corner.TOP_START, margin, viewport, goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.ADJUST_Y)
};
goog.ui.Tooltip.ElementTooltipPosition = function(element) {
  goog.positioning.AnchoredPosition.call(this, element, goog.positioning.Corner.BOTTOM_RIGHT)
};
goog.inherits(goog.ui.Tooltip.ElementTooltipPosition, goog.positioning.AnchoredPosition);
goog.ui.Tooltip.ElementTooltipPosition.prototype.reposition = function(element, popupCorner, opt_margin) {
  var offset = new goog.math.Coordinate(10, 0);
  goog.positioning.positionAtAnchor(this.element, this.corner, element, popupCorner, offset, opt_margin, goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.FAIL_Y) & goog.positioning.OverflowStatus.FAILED && goog.positioning.positionAtAnchor(this.element, goog.positioning.Corner.TOP_RIGHT, element, goog.positioning.Corner.BOTTOM_LEFT, offset, opt_margin, goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.ADJUST_Y)
};
// Input 15
gviz.graphics.DrawingGroup = function(elementOrCreateGroupFunc) {
  var createGroup = null, element = null;
  goog.isFunction(elementOrCreateGroupFunc) ? createGroup = elementOrCreateGroupFunc : element = elementOrCreateGroupFunc;
  this.createGroup_ = createGroup;
  this.element_ = element;
  this.logicalName_ = null
};
gviz.graphics.DrawingGroup.prototype.setLogicalName = function(name) {
  this.logicalName_ = name;
  this.isElementCreated() && gviz.graphics.logicalname.setLogicalName(this.element_, name)
};
gviz.graphics.DrawingGroup.prototype.getLogicalName = function() {
  return this.isElementCreated() ? gviz.graphics.logicalname.getLogicalName(this.element_) : this.logicalName_
};
gviz.graphics.DrawingGroup.prototype.getElement = function() {
  this.element_ || (this.element_ = this.createGroup_(), goog.isNull(this.logicalName_) || gviz.graphics.logicalname.setLogicalName(this.element_, this.logicalName_));
  return this.element_
};
gviz.graphics.DrawingGroup.prototype.isElementCreated = function() {
  return!!this.element_
};
// Input 16
gviz.graphics.PathSegments = function() {
  this.segments = []
};
gviz.graphics.PathSegments.SegmentType = {MOVE:"move", LINE:"line", CURVE:"curve", CLOSE:"close", ARC:"arc"};
gviz.graphics.PathSegments.prototype.addSegment = function(segment) {
  goog.array.isEmpty(this.segments) && goog.asserts.assert(segment.type == gviz.graphics.PathSegments.SegmentType.MOVE);
  this.segments.push(segment)
};
gviz.graphics.PathSegments.prototype.move = function(x, y) {
  var segment = gviz.graphics.PathSegments.createMoveSegment(x, y);
  this.addSegment(segment)
};
gviz.graphics.PathSegments.prototype.addLine = function(x, y) {
  var segment = gviz.graphics.PathSegments.createLineSegment(x, y);
  this.addSegment(segment)
};
gviz.graphics.PathSegments.prototype.addCurve = function(x1, y1, x2, y2, x, y) {
  var segment = gviz.graphics.PathSegments.createCurveSegment(x1, y1, x2, y2, x, y);
  this.addSegment(segment)
};
gviz.graphics.PathSegments.prototype.addArc = function(cx, cy, rx, ry, fromAngle, toAngle, isClockwise) {
  var segment = gviz.graphics.PathSegments.createArcSegment(cx, cy, rx, ry, fromAngle, toAngle, isClockwise);
  this.addSegment(segment)
};
gviz.graphics.PathSegments.prototype.extendFromVertices = function(vertices, opt_controlPoints) {
  if(0 != vertices.length) {
    if(0 == this.segments.length ? this.move(vertices[0].x, vertices[0].y) : this.addLine(vertices[0].x, vertices[0].y), opt_controlPoints) {
      for(var i = 1;i < vertices.length;++i) {
        this.addCurve(opt_controlPoints[i - 1][1].x, opt_controlPoints[i - 1][1].y, opt_controlPoints[i][0].x, opt_controlPoints[i][0].y, vertices[i].x, vertices[i].y)
      }
    }else {
      for(i = 1;i < vertices.length;++i) {
        this.addLine(vertices[i].x, vertices[i].y)
      }
    }
  }
};
gviz.graphics.PathSegments.prototype.close = function() {
  var segment = gviz.graphics.PathSegments.createCloseSegment();
  this.addSegment(segment)
};
gviz.graphics.PathSegments.createMoveSegment = function(x, y) {
  var segment = {type:gviz.graphics.PathSegments.SegmentType.MOVE, data:{x:x, y:y}};
  return segment
};
gviz.graphics.PathSegments.createLineSegment = function(x, y) {
  var segment = {type:gviz.graphics.PathSegments.SegmentType.LINE, data:{x:x, y:y}};
  return segment
};
gviz.graphics.PathSegments.createCurveSegment = function(x1, y1, x2, y2, x, y) {
  var segment = {type:gviz.graphics.PathSegments.SegmentType.CURVE, data:{x1:x1, y1:y1, x2:x2, y2:y2, x:x, y:y}};
  return segment
};
gviz.graphics.PathSegments.createArcSegment = function(cx, cy, rx, ry, fromAngle, toAngle, isClockwise) {
  var segment = {type:gviz.graphics.PathSegments.SegmentType.ARC, data:{cx:cx, cy:cy, rx:rx, ry:ry, fromAngle:fromAngle, toAngle:toAngle, isClockwise:isClockwise}};
  return segment
};
gviz.graphics.PathSegments.createCloseSegment = function() {
  var segment = {type:gviz.graphics.PathSegments.SegmentType.CLOSE, data:null};
  return segment
};
gviz.graphics.PathSegments.fromVertices = function(vertices, opt_isOpen) {
  var path = new gviz.graphics.PathSegments;
  0 < vertices.length && (path.extendFromVertices(vertices), opt_isOpen || path.close());
  return path
};
// Input 17
gviz.graphics.TextAlign = {START:"start", CENTER:"center", END:"end"};
gviz.graphics.TextAlign.getAbsoluteCoordinates = function(coordinate, length, align) {
  var start, end;
  switch(align) {
    case gviz.graphics.TextAlign.START:
      start = coordinate;
      end = coordinate + length;
      break;
    case gviz.graphics.TextAlign.END:
      start = coordinate - length;
      end = coordinate;
      break;
    case gviz.graphics.TextAlign.CENTER:
      start = coordinate - length / 2;
      end = coordinate + length / 2;
      break;
    default:
      start = end = NaN, goog.asserts.fail('Invalid TextAlign: "' + align + '"')
  }
  return{start:start, end:end}
};
gviz.graphics.TextAlign.getRelativeCoordinate = function(start, end, align) {
  switch(align) {
    case gviz.graphics.TextAlign.END:
      return end;
    case gviz.graphics.TextAlign.CENTER:
      return goog.math.average(start, end);
    default:
      return start
  }
};
// Input 18
gviz.graphics.AbstractRenderer = function(container, textMeasurementDiv) {
  goog.Disposable.call(this);
  this.container = container;
  this.textMeasurementDiv = textMeasurementDiv;
  this.mainCanvasGroup = null;
  this.getTextSize = goog.memoize(goog.bind(function(text, textStyle) {
    return this.getTextSizeInternal(text, textStyle)
  }, this), function(functionUid, args) {
    var signatureTokens = [functionUid, args[0]];
    goog.object.forEach(args[1], function(key, value) {
      signatureTokens.push(key);
      signatureTokens.push(value)
    });
    return signatureTokens.join("_")
  });
  this.scrollBarSize = null
};
goog.inherits(gviz.graphics.AbstractRenderer, goog.Disposable);
gviz.graphics.AbstractRenderer.ID_PREFIX = "_ABSTRACT_RENDERER_ID_";
gviz.graphics.AbstractRenderer.ELEMENTS_COUNTER_NAME_ = "__googleVisualizationAbstractRendererElementsCount__";
gviz.graphics.AbstractRenderer.newUniqueId = function() {
  var counterName = gviz.graphics.AbstractRenderer.ELEMENTS_COUNTER_NAME_;
  goog.global[counterName] = goog.global[counterName] || 0;
  var id = gviz.graphics.AbstractRenderer.ID_PREFIX + goog.global[counterName].toString();
  goog.global[counterName]++;
  return id
};
gviz.graphics.AbstractRenderer.prototype.width = 0;
gviz.graphics.AbstractRenderer.prototype.height = 0;
gviz.graphics.AbstractRenderer.prototype.createCanvas = function(width, height) {
  var mainCanvasGroup = this.createCanvasInternal(width, height);
  mainCanvasGroup.setLogicalName(gviz.graphics.logicalname.DEFAULT_NAME);
  return this.mainCanvasGroup = mainCanvasGroup
};
gviz.graphics.AbstractRenderer.prototype.getCanvas = function() {
  return this.mainCanvasGroup
};
gviz.graphics.AbstractRenderer.prototype.deleteContents = function() {
  this.deleteContentsInternal()
};
gviz.graphics.AbstractRenderer.prototype.clear = function() {
  this.clearInternal()
};
gviz.graphics.AbstractRenderer.prototype.clearInternal = function() {
  this.mainCanvasGroup = null
};
gviz.graphics.AbstractRenderer.prototype.disposeInternal = function() {
  this.clearInternal();
  gviz.graphics.AbstractRenderer.superClass_.disposeInternal.call(this)
};
gviz.graphics.AbstractRenderer.prototype.getContainer = function() {
  return this.container
};
gviz.graphics.AbstractRenderer.prototype.setLogicalName = function(elementOrGroup, name) {
  if(elementOrGroup) {
    if(elementOrGroup.constructor == gviz.graphics.DrawingGroup) {
      var group = elementOrGroup;
      group.setLogicalName(name)
    }else {
      var element = elementOrGroup;
      gviz.graphics.logicalname.setLogicalName(element, name)
    }
  }
};
gviz.graphics.AbstractRenderer.prototype.getLogicalName = function(element) {
  return gviz.graphics.logicalname.getLogicalName(element)
};
gviz.graphics.AbstractRenderer.prototype.appendChild = function(parent, child) {
  if(child) {
    var childElement;
    if(child.constructor == gviz.graphics.DrawingGroup) {
      var group = child;
      if(!group.isElementCreated()) {
        return
      }
      childElement = group.getElement()
    }else {
      childElement = child
    }
    var parentElement = parent.getElement();
    parentElement.appendChild(childElement);
    this.didAppendChild(parentElement.uid, childElement.uid)
  }
};
gviz.graphics.AbstractRenderer.prototype.didAppendChild = function() {
};
gviz.graphics.AbstractRenderer.prototype.replaceChild = function(parent, newChild, oldChild) {
  var parentElement = parent.getElement();
  parentElement.replaceChild(newChild, oldChild);
  this.didReplaceChild(parentElement.uid, newChild.uid, oldChild.uid)
};
gviz.graphics.AbstractRenderer.prototype.didReplaceChild = function() {
};
gviz.graphics.AbstractRenderer.prototype.removeChildren = function(group) {
  group.isElementCreated() && (this.removeChildrenFromElement_(group.getElement()), this.didRemoveChildren(group.getElement().uid))
};
gviz.graphics.AbstractRenderer.prototype.didRemoveChildren = function() {
};
gviz.graphics.AbstractRenderer.prototype.createGroup = function(opt_allowLazy) {
  var allowLazy = goog.isDefAndNotNull(opt_allowLazy) ? opt_allowLazy : !1, drawingGroup = new gviz.graphics.DrawingGroup(goog.bind(this.createGroupInternal, this));
  allowLazy || drawingGroup.getElement();
  return drawingGroup
};
gviz.graphics.AbstractRenderer.prototype.createLine = function(x1, y1, x2, y2, brush) {
  var pathSegments = new gviz.graphics.PathSegments;
  pathSegments.move(x1, y1);
  pathSegments.addLine(x2, y2);
  return this.createPath(pathSegments, brush)
};
gviz.graphics.AbstractRenderer.prototype.createPath = function(pathSegments, brush) {
  var path = this.buildPath_(pathSegments);
  return this.createPathInternal(path, brush)
};
gviz.graphics.AbstractRenderer.prototype.createMultilineText = function(text, x, y, width, horizAlign, vertAlign, textStyle, spacing) {
  for(var parts = text.split("\n"), elems = [], i = 0, leni = parts.length;i < leni;i++) {
    elems.push(this.createText(parts[i], x, y, width, horizAlign, vertAlign, textStyle)), y += spacing
  }
  return elems
};
gviz.graphics.AbstractRenderer.prototype.drawCircle = function(cx, cy, r, brush, group) {
  var circle = this.createCircle(cx, cy, r, brush);
  this.appendChild(group, circle);
  return circle
};
gviz.graphics.AbstractRenderer.prototype.drawEllipse = function(cx, cy, rx, ry, brush, group) {
  var ellipse = this.createEllipse(cx, cy, rx, ry, brush);
  this.appendChild(group, ellipse);
  return ellipse
};
gviz.graphics.AbstractRenderer.prototype.drawRect = function(x, y, width, height, brush, group) {
  var rect = this.createRect(x, y, width, height, brush);
  this.appendChild(group, rect);
  return rect
};
gviz.graphics.AbstractRenderer.prototype.drawLine = function(x1, y1, x2, y2, brush, group) {
  var line = this.createLine(x1, y1, x2, y2, brush);
  this.appendChild(group, line);
  return line
};
gviz.graphics.AbstractRenderer.prototype.drawPath = function(pathSegments, brush, group) {
  var path = this.createPath(pathSegments, brush);
  this.appendChild(group, path);
  return path
};
gviz.graphics.AbstractRenderer.prototype.drawText = function(text, x, y, width, horizAlign, vertAlign, textStyle, group) {
  var textElement = this.createText(text, x, y, width, horizAlign, vertAlign, textStyle);
  this.appendChild(group, textElement);
  return textElement
};
gviz.graphics.AbstractRenderer.prototype.drawTextOnLine = function(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle, group) {
  var textElement = this.createTextOnLine(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle);
  this.appendChild(group, textElement);
  return textElement
};
gviz.graphics.AbstractRenderer.prototype.drawTextOnLineByAngle = function(text, x, y, length, angle, paralAlign, perpenAlign, textStyle, group) {
  var textElement = this.createTextOnLineByAngle(text, x, y, length, angle, paralAlign, perpenAlign, textStyle);
  this.appendChild(group, textElement);
  return textElement
};
gviz.graphics.AbstractRenderer.prototype.getTextWidth = function(text, textStyle) {
  return this.getTextSize(text, textStyle).width
};
gviz.graphics.AbstractRenderer.prototype.getTextHeight = function(text, textStyle) {
  return this.getTextSize(text, textStyle).height
};
gviz.graphics.AbstractRenderer.prototype.isSlowRenderer = function() {
  return!1
};
gviz.graphics.AbstractRenderer.prototype.addSegmentToPath_ = function(path, segment) {
  switch(segment.type) {
    case gviz.graphics.PathSegments.SegmentType.MOVE:
      var pos = segment.data;
      this.addPathMove(path, pos.x, pos.y);
      break;
    case gviz.graphics.PathSegments.SegmentType.LINE:
      pos = segment.data;
      this.addPathLine(path, pos.x, pos.y);
      break;
    case gviz.graphics.PathSegments.SegmentType.CURVE:
      var curve = segment.data;
      goog.asserts.assert(curve);
      this.addPathCurve(path, curve.x1, curve.y1, curve.x2, curve.y2, curve.x, curve.y);
      break;
    case gviz.graphics.PathSegments.SegmentType.ARC:
      var arc = segment.data;
      goog.asserts.assert(arc);
      this.addPathArc(path, arc.cx, arc.cy, arc.rx, arc.ry, arc.fromAngle, arc.toAngle, arc.isClockwise);
      break;
    case gviz.graphics.PathSegments.SegmentType.CLOSE:
      this.addPathClose(path)
  }
};
gviz.graphics.AbstractRenderer.prototype.buildPath_ = function(pathSegments) {
  for(var path = [], i = 0;i < pathSegments.segments.length;i++) {
    var segment = pathSegments.segments[i];
    this.addSegmentToPath_(path, segment)
  }
  return path
};
// Input 19
gviz.graphics.cursorposition = {};
gviz.graphics.cursorposition.REFERENCE_POINT_ATTRIBUTE = "referencepoint";
gviz.graphics.cursorposition.setReferencePoint = function(element) {
  element && (element[gviz.graphics.cursorposition.REFERENCE_POINT_ATTRIBUTE] = !0)
};
gviz.graphics.cursorposition.getReferencePoint = function(element$$0) {
  return goog.dom.getAncestor(element$$0, function(element) {
    return element[gviz.graphics.cursorposition.REFERENCE_POINT_ATTRIBUTE]
  }, !0)
};
gviz.graphics.cursorposition.getCursorPosition = function(event) {
  var referencePoint = gviz.graphics.cursorposition.getReferencePoint(event.target);
  goog.asserts.assert(referencePoint);
  return goog.style.getRelativePosition(event, referencePoint)
};
// Input 20
gviz.graphics.BrowserRenderer = function(container, textMeasurementDiv) {
  gviz.graphics.AbstractRenderer.call(this, container, textMeasurementDiv);
  this.domHelper = goog.dom.getDomHelper(container);
  this.doc = this.domHelper.getDocument();
  this.tooltips = [];
  this.eventHandler_ = new goog.events.EventHandler
};
goog.inherits(gviz.graphics.BrowserRenderer, gviz.graphics.AbstractRenderer);
gviz.graphics.BrowserRenderer.prototype.addTooltip = function(element, text, cssStyle) {
  var tooltip = new goog.ui.Tooltip(element), elementDiv = this.domHelper.createDom("div"), parts = text.split("\n");
  elementDiv.appendChild(this.domHelper.createTextNode(parts[0]));
  for(var i = 1;i < parts.length;++i) {
    elementDiv.appendChild(this.domHelper.createDom("br")), elementDiv.appendChild(this.domHelper.createTextNode(parts[i]))
  }
  goog.style.setStyle(elementDiv, cssStyle);
  tooltip.getElement().appendChild(elementDiv);
  tooltip.setShowDelayMs(100);
  tooltip.setHideDelayMs(100);
  this.tooltips.push(tooltip);
  return tooltip
};
gviz.graphics.BrowserRenderer.prototype.removeChildrenFromElement_ = function(element) {
  this.domHelper.removeChildren(element)
};
gviz.graphics.BrowserRenderer.prototype.removeElement = function(element) {
  this.domHelper.removeNode(element);
  goog.events.removeAll(element)
};
gviz.graphics.BrowserRenderer.prototype.clear = function() {
  this.eventHandler_.removeAll();
  goog.dispose(this.eventHandler_);
  this.eventHandler_ = new goog.events.EventHandler;
  gviz.graphics.BrowserRenderer.superClass_.clear.call(this)
};
gviz.graphics.BrowserRenderer.prototype.clearInternal = function() {
  gviz.graphics.BrowserRenderer.superClass_.clearInternal.call(this);
  goog.array.forEach(this.tooltips, function(tooltip) {
    goog.dispose(tooltip)
  });
  goog.array.clear(this.tooltips);
  this.removeChildrenFromElement_(this.container);
  this.eventHandler_.removeAll();
  goog.dispose(this.eventHandler_)
};
gviz.graphics.BrowserRenderer.prototype.getBoundingBox = function(element) {
  var referencePoint = gviz.graphics.cursorposition.getReferencePoint(element);
  if(referencePoint) {
    var relativePosition = goog.style.getRelativePosition(element, referencePoint), size = goog.style.getSize(element);
    return new goog.math.Box(relativePosition.y, relativePosition.x + size.width, relativePosition.y + size.height, relativePosition.x)
  }
  return null
};
gviz.graphics.BrowserRenderer.prototype.getCursorPosition = function(event) {
  return gviz.graphics.cursorposition.getCursorPosition(event)
};
gviz.graphics.BrowserRenderer.prototype.setEventHandler = function(element, eventType, listener) {
  element.constructor == gviz.graphics.DrawingGroup && (element = element.getElement());
  this.eventHandler_.listen(element, eventType, listener)
};
gviz.graphics.BrowserRenderer.prototype.replaceChild = function(parent, newChild, oldChild) {
  gviz.graphics.BrowserRenderer.superClass_.replaceChild.call(this, parent, newChild, oldChild);
  goog.events.removeAll(oldChild)
};
// Input 21
goog.math.Line = function(x0, y0, x1, y1) {
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1
};
goog.math.Line.prototype.clone = function() {
  return new goog.math.Line(this.x0, this.y0, this.x1, this.y1)
};
goog.math.Line.prototype.equals = function(other) {
  return this.x0 == other.x0 && this.y0 == other.y0 && this.x1 == other.x1 && this.y1 == other.y1
};
goog.math.Line.prototype.getSegmentLengthSquared = function() {
  var xdist = this.x1 - this.x0, ydist = this.y1 - this.y0;
  return xdist * xdist + ydist * ydist
};
goog.math.Line.prototype.getSegmentLength = function() {
  return Math.sqrt(this.getSegmentLengthSquared())
};
goog.math.Line.prototype.getInterpolatedPoint = function(t) {
  return new goog.math.Coordinate(goog.math.lerp(this.x0, this.x1, t), goog.math.lerp(this.y0, this.y1, t))
};
// Input 22
goog.math.Vec2 = function(x, y) {
  this.x = x;
  this.y = y
};
goog.inherits(goog.math.Vec2, goog.math.Coordinate);
goog.math.Vec2.randomUnit = function() {
  var angle = 2 * Math.random() * Math.PI;
  return new goog.math.Vec2(Math.cos(angle), Math.sin(angle))
};
goog.math.Vec2.random = function() {
  var mag = Math.sqrt(Math.random()), angle = 2 * Math.random() * Math.PI;
  return new goog.math.Vec2(Math.cos(angle) * mag, Math.sin(angle) * mag)
};
goog.math.Vec2.fromCoordinate = function(a) {
  return new goog.math.Vec2(a.x, a.y)
};
goog.math.Vec2.prototype.clone = function() {
  return new goog.math.Vec2(this.x, this.y)
};
goog.math.Vec2.prototype.magnitude = function() {
  return Math.sqrt(this.x * this.x + this.y * this.y)
};
goog.math.Vec2.prototype.squaredMagnitude = function() {
  return this.x * this.x + this.y * this.y
};
goog.math.Vec2.prototype.scale = goog.math.Coordinate.prototype.scale;
goog.math.Vec2.prototype.invert = function() {
  this.x = -this.x;
  this.y = -this.y;
  return this
};
goog.math.Vec2.prototype.normalize = function() {
  return this.scale(1 / this.magnitude())
};
goog.math.Vec2.prototype.add = function(b) {
  this.x += b.x;
  this.y += b.y;
  return this
};
goog.math.Vec2.prototype.subtract = function(b) {
  this.x -= b.x;
  this.y -= b.y;
  return this
};
goog.math.Vec2.prototype.rotate = function(angle) {
  var cos = Math.cos(angle), sin = Math.sin(angle), newX = this.x * cos - this.y * sin, newY = this.y * cos + this.x * sin;
  this.x = newX;
  this.y = newY;
  return this
};
goog.math.Vec2.rotateAroundPoint = function(v, axisPoint, angle) {
  var res = v.clone();
  return res.subtract(axisPoint).rotate(angle).add(axisPoint)
};
goog.math.Vec2.prototype.equals = function(b) {
  return this == b || !!b && this.x == b.x && this.y == b.y
};
goog.math.Vec2.distance = goog.math.Coordinate.distance;
goog.math.Vec2.squaredDistance = goog.math.Coordinate.squaredDistance;
goog.math.Vec2.equals = goog.math.Coordinate.equals;
goog.math.Vec2.sum = function(a, b) {
  return new goog.math.Vec2(a.x + b.x, a.y + b.y)
};
goog.math.Vec2.difference = function(a, b) {
  return new goog.math.Vec2(a.x - b.x, a.y - b.y)
};
goog.math.Vec2.dot = function(a, b) {
  return a.x * b.x + a.y * b.y
};
goog.math.Vec2.lerp = function(a, b, x) {
  return new goog.math.Vec2(goog.math.lerp(a.x, b.x, x), goog.math.lerp(a.y, b.y, x))
};
// Input 23
gviz.graphics.CanvasRenderer = function(container, textMeasurementDiv) {
  gviz.graphics.BrowserRenderer.call(this, container, textMeasurementDiv);
  this.ctx_ = null;
  var canvas = this.doc.createElement("canvas");
  this.textMeasurementDiv.appendChild(canvas);
  this.textCtx_ = canvas.getContext("2d")
};
goog.inherits(gviz.graphics.CanvasRenderer, gviz.graphics.BrowserRenderer);
gviz.graphics.CanvasRenderer.prototype.createPath_ = function() {
  this.pathCreated_ || (this.ctx_.beginPath(), this.pathCreated_ = !0)
};
gviz.graphics.CanvasRenderer.prototype.createCanvasInternal = function(width, height) {
  goog.asserts.assert(!isNaN(width));
  goog.asserts.assert(!isNaN(height));
  goog.asserts.assert(isFinite(width));
  goog.asserts.assert(isFinite(height));
  goog.asserts.assert(0 <= width);
  goog.asserts.assert(0 <= height);
  var canvas = this.doc.createElement("canvas");
  canvas.setAttribute("width", width);
  canvas.setAttribute("height", height);
  this.container.appendChild(canvas);
  this.ctx_ = canvas.getContext("2d");
  return new gviz.graphics.DrawingGroup(canvas)
};
gviz.graphics.CanvasRenderer.prototype.deleteContentsInternal = function() {
  var element = this.getCanvas().getElement();
  this.ctx_.clearRect(0, 0, element.width, element.height)
};
gviz.graphics.CanvasRenderer.prototype.emptyElement_ = function() {
  return this.doc.createElement("empty")
};
gviz.graphics.CanvasRenderer.prototype.rgbFromColorAndOpacity_ = function(color, opacity) {
  if("none" == color) {
    return"clear"
  }
  "none" == opacity && (opacity = 1);
  var rgb = goog.color.hexToRgb(color);
  return"rgba(" + rgb + "," + opacity + ")"
};
gviz.graphics.CanvasRenderer.prototype.drawDiagonalStripesPattern_ = function(pattern) {
  var canvas = this.doc.createElement("canvas");
  canvas.setAttribute("width", 4);
  canvas.setAttribute("height", 4);
  var context = canvas.getContext("2d");
  context.fillStyle = pattern.getBackgroundColor();
  context.fillRect(0, 0, 4, 4);
  context.strokeStyle = pattern.getColor();
  context.beginPath();
  context.lineWidth = 2;
  context.lineCap = "square";
  context.moveTo(2, 0);
  context.lineTo(4, 2);
  context.moveTo(0, 2);
  context.lineTo(2, 4);
  context.stroke();
  return canvas
};
gviz.graphics.CanvasRenderer.prototype.setBrush_ = function(brush) {
  this.ctx_.strokeStyle = this.rgbFromColorAndOpacity_(brush.getStroke(), brush.getStrokeOpacity());
  this.ctx_.fillStyle = this.rgbFromColorAndOpacity_(brush.getFill(), brush.getFillOpacity());
  var dash = brush.getStrokeDashStyle();
  goog.isDefAndNotNull(dash) && "dash" == dash ? this.ctx_.setLineDash([8, 2]) : this.ctx_.setLineDash([]);
  var pattern = brush.getPattern();
  if(goog.isDefAndNotNull(pattern)) {
    var canvas;
    switch(pattern.getStyle()) {
      case gviz.graphics.Pattern.Style.PRIMARY_DIAGONAL_STRIPES:
        canvas = this.drawDiagonalStripesPattern_(pattern);
        break;
      default:
        goog.asserts.assert("Unsupported pattern style " + pattern.getStyle())
    }
    this.ctx_.fillStyle = this.ctx_.createPattern(canvas, "repeat")
  }else {
    if(goog.isDefAndNotNull(brush.gradient)) {
      var gradient = this.ctx_.createLinearGradient(+brush.gradient.x1, +brush.gradient.y1, +brush.gradient.x2, +brush.gradient.y2);
      gradient.addColorStop(0, brush.gradient.color1);
      gradient.addColorStop(1, brush.gradient.color2);
      this.ctx_.fillStyle = gradient
    }
  }
  this.ctx_.lineWidth = brush.getStrokeWidth()
};
gviz.graphics.CanvasRenderer.prototype.setTextFromStyle_ = function(context, style) {
  style.auraColor && "none" != style.auraColor ? (context.strokeStyle = style.auraColor, context.lineWidth = 3) : context.strokeStyle = "clear";
  context.fillStyle = style.color;
  context.setLineDash([]);
  var font = "";
  style.bold && (font = "bold ");
  font += style.fontSize + "px " + style.fontName;
  context.font = font
};
gviz.graphics.CanvasRenderer.prototype.createCircle = function(cx, cy, r, brush) {
  goog.asserts.assert(!isNaN(cx));
  goog.asserts.assert(!isNaN(cy));
  goog.asserts.assert(!isNaN(r));
  goog.asserts.assert(isFinite(cx));
  goog.asserts.assert(isFinite(cy));
  goog.asserts.assert(isFinite(r));
  goog.asserts.assert(0 <= r);
  this.ctx_.beginPath();
  this.setBrush_(brush);
  this.ctx_.arc(cx, cy, r, 0, 2 * Math.PI);
  this.ctx_.closePath();
  this.ctx_.fill();
  this.ctx_.stroke();
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.createEllipse = function(cx, cy, rx, ry, brush) {
  goog.asserts.assert(!isNaN(cx));
  goog.asserts.assert(!isNaN(cy));
  goog.asserts.assert(!isNaN(rx));
  goog.asserts.assert(!isNaN(ry));
  goog.asserts.assert(isFinite(cx));
  goog.asserts.assert(isFinite(cy));
  goog.asserts.assert(isFinite(rx));
  goog.asserts.assert(isFinite(ry));
  goog.asserts.assert(0 <= rx);
  goog.asserts.assert(0 <= ry);
  this.ctx_.save();
  this.setBrush_(brush);
  this.ctx_.translate(cx, cy);
  var radius;
  rx > ry ? (this.ctx_.scale(1, ry / rx), radius = rx) : (this.ctx_.scale(rx / ry, 1), radius = ry);
  this.ctx_.arc(0, 0, radius, 0, 2 * Math.PI, !1);
  this.ctx_.fill();
  this.ctx_.stroke();
  this.ctx_.restore();
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.createRect = function(x, y, width, height, brush) {
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(!isNaN(width));
  goog.asserts.assert(!isNaN(height));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  goog.asserts.assert(isFinite(width));
  goog.asserts.assert(isFinite(height));
  goog.asserts.assert(0 <= width);
  goog.asserts.assert(0 <= height);
  this.setBrush_(brush);
  this.ctx_.fillRect(x, y, width, height);
  this.ctx_.strokeRect(x, y, width, height);
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.makeElementScrollable = function() {
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.createPathInternal = function(pathSegments, brush) {
  this.setBrush_(brush);
  this.ctx_.fill();
  this.ctx_.stroke();
  this.pathCreated_ = !1;
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.createText = function(text, x, y, width, horizAlign, vertAlign, textStyle) {
  return this.createTextOnLineByAngle(text, x, y, width, 0, horizAlign, vertAlign, textStyle)
};
gviz.graphics.CanvasRenderer.prototype.createTextOnLine = function(text, x1, y1, x2, y2, horizAlign, perpenAlign, textStyle) {
  var x = gviz.graphics.TextAlign.getRelativeCoordinate(x1, x2, horizAlign), y = gviz.graphics.TextAlign.getRelativeCoordinate(y1, y2, horizAlign), line = new goog.math.Line(x1, y1, x2, y2), length = line.getSegmentLength(), angle = goog.math.angle(x1, y1, x2, y2);
  return this.createTextOnLineByAngle(text, x, y, length, angle, horizAlign, perpenAlign, textStyle)
};
gviz.graphics.CanvasRenderer.prototype.createTextOnLineByAngle = function(text, x, y, length, angle, horizAlign, vertAlign, textStyle) {
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(!isNaN(length));
  goog.asserts.assert(!isNaN(angle));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  goog.asserts.assert(isFinite(length));
  goog.asserts.assert(isFinite(angle));
  this.setTextFromStyle_(this.ctx_, textStyle);
  this.ctx_.save();
  "start" == vertAlign ? y += 4 * textStyle.fontSize / 5 : "center" == vertAlign ? y += textStyle.fontSize / 3 : "end" == vertAlign ? y -= textStyle.fontSize / 5 : goog.asserts.fail("Unknown vertAlign: " + vertAlign);
  "start" != horizAlign && ("center" == horizAlign ? x -= length / 2 : "end" == horizAlign ? x -= this.getTextSizeInternal(text, textStyle).width : goog.asserts.fail("Unknown horizAlign: " + horizAlign));
  this.ctx_.translate(x, y);
  this.ctx_.rotate(goog.math.toRadians(angle));
  this.ctx_.strokeText(text, 0, 0);
  this.ctx_.fillText(text, 0, 0);
  this.ctx_.restore();
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.createGroupInternal = function() {
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.clipGroup = function() {
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.addPathMove = function(path, x, y) {
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  this.createPath_();
  this.ctx_.moveTo(x, y)
};
gviz.graphics.CanvasRenderer.prototype.addPathLine = function(path, x, y) {
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  this.createPath_();
  this.ctx_.lineTo(x, y)
};
gviz.graphics.CanvasRenderer.prototype.addPathCurve = function(path, x1, y1, x2, y2, x, y) {
  goog.asserts.assert(!isNaN(x1));
  goog.asserts.assert(!isNaN(y1));
  goog.asserts.assert(!isNaN(x2));
  goog.asserts.assert(!isNaN(y2));
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(isFinite(x1));
  goog.asserts.assert(isFinite(y1));
  goog.asserts.assert(isFinite(x2));
  goog.asserts.assert(isFinite(y2));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y))
};
gviz.graphics.CanvasRenderer.prototype.addPathClose = function() {
  this.createPath_();
  this.ctx_.closePath()
};
gviz.graphics.CanvasRenderer.prototype.addPathArc = function(path, cx, cy, rx, ry, fromAngle, toAngle) {
  goog.asserts.assert(!isNaN(cx));
  goog.asserts.assert(!isNaN(cy));
  goog.asserts.assert(!isNaN(rx));
  goog.asserts.assert(!isNaN(ry));
  goog.asserts.assert(!isNaN(fromAngle));
  goog.asserts.assert(!isNaN(toAngle));
  goog.asserts.assert(isFinite(cx));
  goog.asserts.assert(isFinite(cy));
  goog.asserts.assert(isFinite(rx));
  goog.asserts.assert(isFinite(ry));
  goog.asserts.assert(isFinite(fromAngle));
  goog.asserts.assert(isFinite(toAngle));
  this.createPath_();
  fromAngle = goog.math.toRadians(fromAngle - 90);
  toAngle = goog.math.toRadians(toAngle - 90);
  this.ctx_.arc(cx, cy, rx, fromAngle, toAngle)
};
gviz.graphics.CanvasRenderer.prototype.setOffset = function() {
};
gviz.graphics.CanvasRenderer.prototype.setWidth = function() {
};
gviz.graphics.CanvasRenderer.prototype.setHeight = function() {
};
gviz.graphics.CanvasRenderer.prototype.setLeftPosition = function() {
};
gviz.graphics.CanvasRenderer.prototype.setTopPosition = function() {
};
gviz.graphics.CanvasRenderer.prototype.setStroke = function() {
};
gviz.graphics.CanvasRenderer.prototype.getTextSizeInternal = function(text, textStyle) {
  this.setTextFromStyle_(this.textCtx_, textStyle);
  var width = this.textCtx_.measureText(text).width;
  return new goog.math.Size(width, textStyle.fontSize)
};
gviz.graphics.CanvasRenderer.prototype.getScrollbarSize = function() {
  return this.emptyElement_()
};
gviz.graphics.CanvasRenderer.prototype.setBrush = function() {
};
// Input 24
gviz.graphics.MobileRenderer = function(container, textMeasurementDiv) {
  gviz.graphics.AbstractRenderer.call(this, container, textMeasurementDiv);
  this.uniqueId = constructor_Native();
  this.setEventHandler = function() {
  }
};
goog.inherits(gviz.graphics.MobileRenderer, gviz.graphics.AbstractRenderer);
gviz.graphics.MobileRenderer.prototype.createCanvasInternal = function() {
  var uid = createCanvasInternal_Native(this.uniqueId, this.width, this.height), element = MobileCreateElementWithUID(uid);
  return new gviz.graphics.DrawingGroup(element)
};
gviz.graphics.MobileRenderer.prototype.createGroupInternal = function() {
  var uid = createGroupInternal_Native(this.uniqueId);
  return MobileCreateElementWithUID(uid)
};
gviz.graphics.MobileRenderer.prototype.clipGroup = function(group, clipRect, opt_ellipseClipping) {
  clipGroup_Native(this.uniqueId, JSON.stringify(group), JSON.stringify(clipRect), opt_ellipseClipping);
  return group.getElement()
};
gviz.graphics.MobileRenderer.prototype.deleteContentsInternal = function() {
  deleteContentsInternal_Native(this.uniqueId)
};
gviz.graphics.MobileRenderer.prototype.setOffset = function(element, dx, dy) {
  setOffset_Native(this.uniqueId, JSON.stringify(element), dx, dy)
};
gviz.graphics.MobileRenderer.prototype.setWidth = function(element, width) {
  setWidth_Native(this.uniqueId, JSON.stringify(element), width)
};
gviz.graphics.MobileRenderer.prototype.setHeight = function(element, height) {
  setHeight_Native(this.uniqueId, JSON.stringify(element), height)
};
gviz.graphics.MobileRenderer.prototype.setLeftPosition = function(element, left) {
  setLeftPosition_Native(this.uniqueId, JSON.stringify(element), left)
};
gviz.graphics.MobileRenderer.prototype.setTopPosition = function(element, top) {
  setTopPosition_Native(this.uniqueId, JSON.stringify(element), top)
};
gviz.graphics.MobileRenderer.prototype.addPathMove = function(path, x, y) {
  addPathMove_Native(this.uniqueId, JSON.stringify(path), x, y)
};
gviz.graphics.MobileRenderer.prototype.addPathLine = function(path, x, y) {
  addPathLine_Native(this.uniqueId, JSON.stringify(path), x, y)
};
gviz.graphics.MobileRenderer.prototype.addPathCurve = function(path, x1, y1, x2, y2, x, y) {
  addPathCurve_Native(this.uniqueId, JSON.stringify(path), x1, y1, x2, y2, x, y)
};
gviz.graphics.MobileRenderer.prototype.addPathClose = function(path) {
  addPathClose_Native(this.uniqueId, JSON.stringify(path))
};
gviz.graphics.MobileRenderer.prototype.addPathArc = function(path, cx, cy, rx, ry, fromAngle, toAngle, isClockwise) {
  addPathArc_Native(this.uniqueId, JSON.stringify(path), cx, cy, rx, ry, fromAngle, toAngle, isClockwise)
};
gviz.graphics.MobileRenderer.prototype.createCircle = function(cx, cy, r, brush) {
  var uid = createCircle_Native(this.uniqueId, cx, cy, r, brush.toJSON());
  return MobileCreateElementWithUID(uid)
};
gviz.graphics.MobileRenderer.prototype.createEllipse = function(cx, cy, rx, ry, brush) {
  var uid = createElipse_Native(this.uniqueId, cx, cy, rx, ry, brush.toJSON());
  return MobileCreateElementWithUID(uid)
};
gviz.graphics.MobileRenderer.prototype.createRect = function(x, y, width, height, brush) {
  var uid = createRect_Native(this.uniqueId, x, y, width, height, brush.toJSON());
  return MobileCreateElementWithUID(uid)
};
gviz.graphics.MobileRenderer.prototype.makeElementScrollable = function(elems, viewWidth, viewHeight, scrollWidth, scrollHeight, scrollX, scrollY) {
  makeElementScrollable_Native(this.uniqueId, JSON.stringify(elems), viewWidth, viewHeight, scrollWidth, scrollHeight, scrollX, scrollY);
  return MobileCreateElement()
};
gviz.graphics.MobileRenderer.prototype.createPathInternal = function(pathSegments, brush) {
  var ret = JSON.parse(createPathInternal_Native(this.uniqueId, JSON.stringify(pathSegments), brush.toJSON()));
  return MobileCreateElementWithUID(ret.uid)
};
gviz.graphics.MobileRenderer.prototype.createText = function(text, x, y, width, horizAlign, vertAlign, textStyle) {
  var uid = createText_Native(this.uniqueId, text, x, y, width, horizAlign, vertAlign, gviz.graphics.TextStyleToJSON(textStyle));
  return MobileCreateElementWithUID(uid)
};
gviz.graphics.MobileRenderer.prototype.createTextOnLine = function(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle) {
  var uid = createTextOnLine_Native(this.uniqueId, text, x1, y1, x2, y2, paralAlign, perpenAlign, gviz.graphics.TextStyleToJSON(textStyle));
  return MobileCreateElementWithUID(uid)
};
gviz.graphics.MobileRenderer.prototype.createTextOnLineByAngle = function(text, x, y, length, angle, paralAlign, perpenAlign, textStyle) {
  var uid = createTextOnLineByAngle_Native(this.uniqueId, text, x, y, length, angle, paralAlign, perpenAlign, gviz.graphics.TextStyleToJSON(textStyle));
  return MobileCreateElementWithUID(uid)
};
gviz.graphics.MobileRenderer.prototype.getTextSizeInternal = function(text, textStyle) {
  var ret = JSON.parse(getTextSizeInternal_Native(this.uniqueId, text, gviz.graphics.TextStyleToJSON(textStyle)));
  return ret
};
gviz.graphics.MobileRenderer.prototype.getScrollbarSize = function() {
  var ret = JSON.parse(getScrollbarSize_Native(this.uniqueId));
  return ret
};
gviz.graphics.MobileRenderer.prototype.getBoundingBox = function() {
  var ret = JSON.parse(getBoundingBox_Native(this.uniqueId));
  return ret
};
gviz.graphics.MobileRenderer.prototype.addTooltip = function(element, text, cssStyle) {
  var ret = JSON.parse(addTooltip_Native(this.uniqueId, JSON.stringify(element), text, JSON.stringify(cssStyle)));
  return ret
};
gviz.graphics.MobileRenderer.prototype.setBrush = function() {
};
gviz.graphics.MobileRenderer.prototype.didAppendChild = function(parentID, childID) {
  DidAppendChild_Native(this.uniqueId, parentID, childID)
};
gviz.graphics.MobileRenderer.prototype.didReplaceChild = function(parentID, newChildID, replacedChildID) {
  DidReplaceChild_Native(this.uniqueId, parentID, newChildID, replacedChildID)
};
gviz.graphics.MobileRenderer.prototype.didRemoveChildren = function(parentID) {
  DidRemoveChildren_Native(this.uniqueId, parentID)
};
gviz.graphics.MobileRenderer.prototype.getCursorPosition = function(event) {
  for(var element = event.currentTarget;null != element;) {
    var point = element[gviz.graphics.cursorposition.REFERENCE_POINT_ATTRIBUTE];
    if(null != point) {
      return goog.style.getRelativePosition(event, point)
    }
    element = element.parentElement
  }
  goog.asserts.assert(!1);
  return null
};
// Input 25
gviz.graphics.OverlayArea = function(container) {
  goog.Disposable.call(this);
  this.container_ = container;
  this.eventHandler_ = new goog.events.EventHandler
};
goog.inherits(gviz.graphics.OverlayArea, goog.Disposable);
gviz.graphics.OverlayArea.prototype.getContainer = function() {
  return this.container_
};
gviz.graphics.OverlayArea.prototype.clear = function() {
  this.clear_();
  this.eventHandler_ = new goog.events.EventHandler
};
gviz.graphics.OverlayArea.prototype.clear_ = function() {
  goog.dom.removeChildren(this.container_);
  this.eventHandler_.removeAll();
  goog.dispose(this.eventHandler_)
};
gviz.graphics.OverlayArea.prototype.disposeInternal = function() {
  this.clear_();
  gviz.graphics.OverlayArea.superClass_.disposeInternal.call(this)
};
gviz.graphics.OverlayArea.prototype.setEventHandler = function(element, eventType, listener) {
  this.eventHandler_.listen(element, eventType, listener)
};
// Input 26
gviz.graphics.SvgRenderer = function(container, textMeasurementDiv) {
  gviz.graphics.BrowserRenderer.call(this, container, textMeasurementDiv);
  this.defs_ = this.textWidthDiv_ = null;
  this.patternDefsUrls_ = {}
};
goog.inherits(gviz.graphics.SvgRenderer, gviz.graphics.BrowserRenderer);
gviz.graphics.SvgRenderer.XHTML_NAMESPACE_ = "http://www.w3.org/1999/xhtml";
gviz.graphics.SvgRenderer.SVG_NAMESPACE_ = "http://www.w3.org/2000/svg";
gviz.graphics.SvgRenderer.prototype.createCanvasInternal = function(width, height) {
  goog.asserts.assert(!isNaN(width));
  goog.asserts.assert(!isNaN(height));
  goog.asserts.assert(isFinite(width));
  goog.asserts.assert(isFinite(height));
  goog.asserts.assert(0 <= width);
  goog.asserts.assert(0 <= height);
  this.width = width;
  this.height = height;
  var chart = this.createSvgElement_("svg");
  chart.setAttribute("width", width);
  chart.setAttribute("height", height);
  chart.style.overflow = "hidden";
  this.container.appendChild(chart);
  this.defs_ = this.createSvgElement_("defs");
  this.defs_.setAttribute("id", "defs");
  this.patternDefsUrls_ = {};
  chart.appendChild(this.defs_);
  return new gviz.graphics.DrawingGroup(chart)
};
gviz.graphics.SvgRenderer.prototype.deleteContentsInternal = function() {
  for(var chartCanvas = this.getCanvas(), parent = chartCanvas.getElement(), children = parent.childNodes, numberOfNodes = children.length;1 < numberOfNodes;) {
    parent.removeChild(children[0]), numberOfNodes--
  }
  this.defs_ = this.createSvgElement_("defs");
  this.defs_.setAttribute("id", "defs");
  this.patternDefsUrls_ = {};
  parent.appendChild(this.defs_)
};
gviz.graphics.SvgRenderer.prototype.getInternalSvg = function() {
  return this.container.innerHTML
};
gviz.graphics.SvgRenderer.prototype.round = function(n) {
  goog.asserts.assert(!isNaN(n));
  goog.asserts.assert(isFinite(n));
  return Math.round(100 * n) / 100
};
gviz.graphics.SvgRenderer.prototype.createCircle = function(cx, cy, r, brush) {
  goog.asserts.assert(!isNaN(cx));
  goog.asserts.assert(!isNaN(cy));
  goog.asserts.assert(!isNaN(r));
  goog.asserts.assert(isFinite(cx));
  goog.asserts.assert(isFinite(cy));
  goog.asserts.assert(isFinite(r));
  goog.asserts.assert(0 <= r);
  var element = this.createSvgElement_("circle");
  element.setAttribute("cx", cx);
  element.setAttribute("cy", cy);
  element.setAttribute("r", r);
  this.setBrush(element, brush);
  return element
};
gviz.graphics.SvgRenderer.prototype.createEllipse = function(cx, cy, rx, ry, brush) {
  goog.asserts.assert(!isNaN(cx));
  goog.asserts.assert(!isNaN(cy));
  goog.asserts.assert(!isNaN(rx));
  goog.asserts.assert(!isNaN(ry));
  goog.asserts.assert(isFinite(cx));
  goog.asserts.assert(isFinite(cy));
  goog.asserts.assert(isFinite(rx));
  goog.asserts.assert(isFinite(ry));
  goog.asserts.assert(0 <= rx);
  goog.asserts.assert(0 <= ry);
  var element = this.createSvgElement_("ellipse");
  element.setAttribute("cx", cx);
  element.setAttribute("cy", cy);
  element.setAttribute("rx", rx);
  element.setAttribute("ry", ry);
  this.setBrush(element, brush);
  return element
};
gviz.graphics.SvgRenderer.prototype.createRect = function(x, y, width, height, brush) {
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(!isNaN(width));
  goog.asserts.assert(!isNaN(height));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  goog.asserts.assert(isFinite(width));
  goog.asserts.assert(isFinite(height));
  goog.asserts.assert(0 <= width);
  goog.asserts.assert(0 <= height);
  var element = this.createSvgElement_("rect");
  element.setAttribute("x", x);
  element.setAttribute("y", y);
  element.setAttribute("width", width);
  element.setAttribute("height", height);
  this.setBrush(element, brush);
  return element
};
gviz.graphics.SvgRenderer.prototype.makeElementScrollable = function(elems, viewWidth, viewHeight, scrollWidth, scrollHeight, scrollX, scrollY) {
  var overflowX = scrollX ? "scroll" : "hidden", overflowY = scrollY ? "scroll" : "hidden", divStyle = "height:" + viewHeight + "px;overflow-x:" + overflowX + ";overflow-y:" + overflowY + ";width:" + viewWidth + "px;position: absolute;top:0;left:0;", newCanvas = this.createCanvasInternal(scrollWidth, scrollHeight);
  if(goog.isArrayLike(elems)) {
    for(var i = 0, leni = elems.length;i < leni;i++) {
      this.appendChild(newCanvas, elems[i])
    }
  }else {
    this.appendChild(newCanvas, elems)
  }
  var scrollDiv = goog.dom.createDom("div", {style:divStyle}, newCanvas.getElement());
  this.container.appendChild(scrollDiv);
  return{append:[], events:[newCanvas.getElement()]}
};
gviz.graphics.SvgRenderer.prototype.createPathInternal = function(pathSegments, brush) {
  var element = this.createSvgElement_("path");
  element.setAttribute("d", pathSegments.join(""));
  this.setBrush(element, brush);
  return element
};
gviz.graphics.SvgRenderer.prototype.createText = function(text, x, y, width, horizAlign, vertAlign, textStyle) {
  return this.createTextOnLineByAngle(text, x, y, width, 0, horizAlign, vertAlign, textStyle)
};
gviz.graphics.SvgRenderer.prototype.createTextOnLine = function(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle) {
  var x = gviz.graphics.TextAlign.getRelativeCoordinate(x1, x2, paralAlign), y = gviz.graphics.TextAlign.getRelativeCoordinate(y1, y2, paralAlign), line = new goog.math.Line(x1, y1, x2, y2), length = line.getSegmentLength(), angle = goog.math.angle(x1, y1, x2, y2);
  return this.createTextOnLineByAngle(text, x, y, length, angle, paralAlign, perpenAlign, textStyle)
};
gviz.graphics.SvgRenderer.prototype.createTextOnLineByAngle = function(text, x, y, length, angle, paralAlign, perpenAlign, textStyle) {
  var opacity = goog.isDef(textStyle.opacity) ? textStyle.opacity : 1, brush = new gviz.graphics.Brush({fill:textStyle.color, fillOpacity:opacity});
  if(textStyle.color && textStyle.color != gviz.graphics.util.NO_COLOR && textStyle.auraColor && textStyle.auraColor != gviz.graphics.util.NO_COLOR) {
    var brushWithAura = new gviz.graphics.Brush({fill:textStyle.color, fillOpacity:opacity, stroke:textStyle.auraColor, strokeOpacity:opacity, strokeWidth:3}), textGroup = this.createGroup();
    this.drawTextInternal_(text, x, y, length, angle, paralAlign, perpenAlign, textStyle, brushWithAura, textGroup);
    this.drawTextInternal_(text, x, y, length, angle, paralAlign, perpenAlign, textStyle, brush, textGroup);
    return textGroup.getElement()
  }
  return this.createTextInternal_(text, x, y, length, angle, paralAlign, perpenAlign, textStyle, brush)
};
gviz.graphics.SvgRenderer.prototype.createTextInternal_ = function(text, x, y, length, angle, paralAlign, perpenAlign, textStyle, brush) {
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(!isNaN(length));
  goog.asserts.assert(!isNaN(angle));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  goog.asserts.assert(isFinite(length));
  goog.asserts.assert(isFinite(angle));
  var element = this.createSvgElement_("text"), perpenStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(0, textStyle.fontSize, perpenAlign);
  perpenAlign = gviz.graphics.TextAlign.END;
  var perpenCenter = gviz.graphics.TextAlign.getRelativeCoordinate(perpenStartEnd.start, perpenStartEnd.end, perpenAlign), perpenCenter = perpenCenter - 0.15 * textStyle.fontSize, shiftVec = new goog.math.Vec2(0, perpenCenter);
  shiftVec.rotate(goog.math.toRadians(angle));
  var p = new goog.math.Vec2(x, y);
  p.add(shiftVec);
  x = p.x;
  y = p.y;
  element.appendChild(this.doc.createTextNode(text));
  switch(paralAlign) {
    case gviz.graphics.TextAlign.START:
      element.setAttribute("text-anchor", "start");
      break;
    case gviz.graphics.TextAlign.CENTER:
      element.setAttribute("text-anchor", "middle");
      break;
    case gviz.graphics.TextAlign.END:
      element.setAttribute("text-anchor", "end");
      break;
    default:
      goog.asserts.fail('Invalid parallel alignment "' + paralAlign + '"')
  }
  element.setAttribute("x", x);
  element.setAttribute("y", y);
  element.setAttribute("font-family", textStyle.fontName);
  element.setAttribute("font-size", textStyle.fontSize || 0);
  textStyle.bold && element.setAttribute("font-weight", "bold");
  textStyle.italic && element.setAttribute("font-style", "italic");
  textStyle.underline && element.setAttribute("text-decoration", "underline");
  0 != angle && element.setAttribute("transform", "rotate(" + angle + " " + x + " " + y + ")");
  this.setBrush(element, brush);
  return element
};
gviz.graphics.SvgRenderer.prototype.drawTextInternal_ = function(text, x, y, length, angle, paralAlign, perpenAlign, textStyle, brush, group) {
  var textElement = this.createTextInternal_(text, x, y, length, angle, paralAlign, perpenAlign, textStyle, brush);
  this.appendChild(group, textElement);
  return textElement
};
gviz.graphics.SvgRenderer.prototype.createGroupInternal = function() {
  return this.createSvgElement_("g")
};
gviz.graphics.SvgRenderer.prototype.clipGroup = function(group, clipRect, opt_ellipseClipping) {
  var id = gviz.graphics.AbstractRenderer.newUniqueId(), clipPath = this.createSvgElement_("clipPath");
  if(opt_ellipseClipping) {
    var ellipse = this.createSvgElement_("ellipse");
    ellipse.setAttribute("cx", clipRect.left + clipRect.width / 2);
    ellipse.setAttribute("cy", clipRect.top + clipRect.height / 2);
    ellipse.setAttribute("rx", clipRect.width / 2);
    ellipse.setAttribute("ry", clipRect.height / 2);
    clipPath.appendChild(ellipse)
  }else {
    var rect = this.createSvgElement_("rect");
    rect.setAttribute("x", clipRect.left);
    rect.setAttribute("y", clipRect.top);
    rect.setAttribute("width", clipRect.width);
    rect.setAttribute("height", clipRect.height);
    clipPath.appendChild(rect)
  }
  clipPath.setAttribute("id", id);
  goog.asserts.assert(this.defs_);
  this.defs_.appendChild(clipPath);
  var element = group.getElement(), url = "";
  goog.userAgent.GECKO && (url = window.location.href.split("#")[0]);
  element.setAttribute("clip-path", "url(" + url + "#" + id + ")");
  return element
};
gviz.graphics.SvgRenderer.prototype.addPathMove = function(path, x, y) {
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  path.push("M" + x + "," + y)
};
gviz.graphics.SvgRenderer.prototype.addPathLine = function(path, x, y) {
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  path.push("L" + x + "," + y)
};
gviz.graphics.SvgRenderer.prototype.addPathCurve = function(path, x1, y1, x2, y2, x, y) {
  goog.asserts.assert(!isNaN(x1));
  goog.asserts.assert(!isNaN(y1));
  goog.asserts.assert(!isNaN(x2));
  goog.asserts.assert(!isNaN(y2));
  goog.asserts.assert(!isNaN(x));
  goog.asserts.assert(!isNaN(y));
  goog.asserts.assert(isFinite(x1));
  goog.asserts.assert(isFinite(y1));
  goog.asserts.assert(isFinite(x2));
  goog.asserts.assert(isFinite(y2));
  goog.asserts.assert(isFinite(x));
  goog.asserts.assert(isFinite(y));
  path.push("C" + x1 + "," + y1 + "," + x2 + "," + y2 + "," + x + "," + y)
};
gviz.graphics.SvgRenderer.prototype.addPathClose = function(path) {
  path.push("Z")
};
gviz.graphics.SvgRenderer.prototype.addPathArc = function(path, cx, cy, rx, ry, fromAngle, toAngle, isClockwise) {
  goog.asserts.assert(!isNaN(cx));
  goog.asserts.assert(!isNaN(cy));
  goog.asserts.assert(!isNaN(rx));
  goog.asserts.assert(!isNaN(ry));
  goog.asserts.assert(!isNaN(fromAngle));
  goog.asserts.assert(!isNaN(toAngle));
  goog.asserts.assert(isFinite(cx));
  goog.asserts.assert(isFinite(cy));
  goog.asserts.assert(isFinite(rx));
  goog.asserts.assert(isFinite(ry));
  goog.asserts.assert(isFinite(fromAngle));
  goog.asserts.assert(isFinite(toAngle));
  fromAngle = goog.math.standardAngle(fromAngle);
  toAngle = goog.math.standardAngle(toAngle);
  var toAngleDx = goog.math.angleDx(toAngle - 90, rx), toAngleDy = goog.math.angleDy(toAngle - 90, ry), angleDiff = isClockwise ? toAngle - fromAngle : fromAngle - toAngle;
  0 > angleDiff && (angleDiff += 360);
  var isLong = 180 < angleDiff ? 1 : 0;
  path.push("A" + rx + "," + ry + ",0," + isLong + "," + (isClockwise ? 1 : 0) + "," + (cx + toAngleDx) + "," + (cy + toAngleDy))
};
gviz.graphics.SvgRenderer.prototype.setOffset = function(element, dx, dy) {
  goog.asserts.assert(!isNaN(dx));
  goog.asserts.assert(!isNaN(dy));
  goog.asserts.assert(isFinite(dx));
  goog.asserts.assert(isFinite(dy));
  element.setAttribute("transform", "translate(" + dx + ", " + dy + ")")
};
gviz.graphics.SvgRenderer.prototype.setWidth = function(element, width) {
  element.setAttribute("width", width)
};
gviz.graphics.SvgRenderer.prototype.setHeight = function(element, height) {
  element.setAttribute("height", height)
};
gviz.graphics.SvgRenderer.prototype.setLeftPosition = function(element, left) {
  element.setAttribute("x", left)
};
gviz.graphics.SvgRenderer.prototype.setTopPosition = function(element, top) {
  element.setAttribute("y", top)
};
gviz.graphics.SvgRenderer.prototype.setStroke = function(element, color, width) {
  goog.asserts.assert(!isNaN(width));
  goog.asserts.assert(isFinite(width));
  element.setAttribute("stroke-width", width);
  color && element.setAttribute("stroke", color)
};
gviz.graphics.SvgRenderer.prototype.getTextSizeInternal = function(text, textStyle) {
  var textDiv = this.textMeasurementDiv;
  textDiv.firstChild.data = text;
  var style = textDiv.style;
  style.fontFamily = textStyle.fontName;
  style.fontSize = textStyle.fontSize + "px";
  style.fontWeight = textStyle.bold ? "bold" : "";
  style.fontStyle = textStyle.italic ? "italic" : "";
  style.display = "block";
  var width = textDiv.clientWidth, height = textDiv.clientHeight;
  style.display = "none";
  return new goog.math.Size(width, height)
};
gviz.graphics.SvgRenderer.prototype.getScrollbarSize = function() {
  if(null != this.scrollBarSize) {
    return this.scrollBarSize
  }
  var divStyle = "width:100px;height:100px;overflow:scroll;position:absolute;visibility:hidden;", scrollDiv = goog.dom.createDom("div", {style:divStyle});
  goog.dom.appendChild(this.textMeasurementDiv, scrollDiv);
  this.textMeasurementDiv.style.display = "block";
  this.scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  this.textMeasurementDiv.style.display = "none";
  goog.dom.removeNode(scrollDiv);
  return this.scrollBarSize
};
gviz.graphics.SvgRenderer.prototype.createSvgElement_ = function(name) {
  return this.doc.createElementNS(gviz.graphics.SvgRenderer.SVG_NAMESPACE_, name)
};
gviz.graphics.SvgRenderer.prototype.setBrush = function(element, brush) {
  brush.hasStroke() ? (element.setAttribute("stroke", brush.getStroke()), element.setAttribute("stroke-width", brush.getStrokeWidth()), brush.isStrokeOpaque() ? element.removeAttribute("stroke-opacity") : element.setAttribute("stroke-opacity", brush.getStrokeOpacity()), brush.strokeHasDashStyle() ? element.setAttribute("stroke-dasharray", gviz.graphics.SvgRenderer.convertStrokeDashStyle_(brush.getStrokeDashStyle(), brush.getStrokeWidth())) : element.removeAttribute("stroke-dasharray")) : (element.setAttribute("stroke", 
  gviz.graphics.util.NO_COLOR), element.setAttribute("stroke-width", 0));
  brush.isFillOpaque() ? element.removeAttribute("fill-opacity") : element.setAttribute("fill-opacity", brush.getFillOpacity());
  var brushGradient = brush.gradient;
  if(brushGradient) {
    var url = this.getGradientDefinitionUrl_(brushGradient);
    element.setAttribute("fill", "url(#" + url + ")")
  }else {
    goog.isDefAndNotNull(brush.getPattern()) ? (url = this.getPatternDefinitionUrl_(brush.getPattern()), element.setAttribute("fill", "url(#" + url + ")")) : element.setAttribute("fill", brush.getFill())
  }
};
gviz.graphics.SvgRenderer.prototype.getGradientDefinitionUrl_ = function(gradient) {
  var id = gviz.graphics.AbstractRenderer.newUniqueId(), gradientElement = this.createSvgElement_("linearGradient"), x1 = gradient.x1, x2 = gradient.x2, y1 = gradient.y1, y2 = gradient.y2, color1 = gradient.color1, color2 = gradient.color2, opacity1 = gradient.opacity1 || 1, opacity2 = gradient.opacity2 || 1, gradientUnits = gradient.useObjectBoundingBoxUnits ? "objectBoundingBox" : "userSpaceOnUse";
  gradientElement.setAttribute("id", id);
  gradientElement.setAttribute("x1", x1);
  gradientElement.setAttribute("y1", y1);
  gradientElement.setAttribute("x2", x2);
  gradientElement.setAttribute("y2", y2);
  gradientElement.setAttribute("gradientUnits", gradientUnits);
  var stop1Style = "stop-color:" + color1 + ";stop-opacity:" + opacity1, stop2Style = "stop-color:" + color2 + ";stop-opacity:" + opacity2, stop1 = this.createSvgElement_("stop");
  stop1.setAttribute("offset", "0%");
  stop1.setAttribute("style", stop1Style);
  gradientElement.appendChild(stop1);
  if(gradient.sharpTransition) {
    var stop1MidPoint = this.createSvgElement_("stop");
    stop1MidPoint.setAttribute("offset", "49.99%");
    stop1MidPoint.setAttribute("style", stop1Style);
    gradientElement.appendChild(stop1MidPoint);
    var stop2MidPoint = this.createSvgElement_("stop");
    stop2MidPoint.setAttribute("offset", "50%");
    stop2MidPoint.setAttribute("style", stop2Style);
    gradientElement.appendChild(stop2MidPoint)
  }
  var stop2 = this.createSvgElement_("stop");
  stop2.setAttribute("offset", "100%");
  stop2.setAttribute("style", stop2Style);
  gradientElement.appendChild(stop2);
  goog.asserts.assert(this.defs_);
  this.defs_.appendChild(gradientElement);
  return id
};
gviz.graphics.SvgRenderer.calcPatternId_ = function(pattern) {
  var id = pattern.getStyle() + "_" + pattern.getColor() + "_" + pattern.getBackgroundColor();
  return id
};
gviz.graphics.SvgRenderer.prototype.getPatternDefinitionUrl_ = function(pattern) {
  var patternId = gviz.graphics.SvgRenderer.calcPatternId_(pattern);
  if(!(patternId in this.patternDefsUrls_)) {
    var patternElement = null, patternStyle = pattern.getStyle();
    switch(patternStyle) {
      case gviz.graphics.Pattern.Style.PRIMARY_DIAGONAL_STRIPES:
        patternElement = this.createDiagonalStripesPatternDefinition_(pattern);
        break;
      default:
        goog.asserts.assert("Unsupported pattern style " + patternStyle)
    }
    var id = gviz.graphics.AbstractRenderer.newUniqueId();
    patternElement.setAttribute("id", id);
    goog.asserts.assert(this.defs_);
    this.defs_.appendChild(patternElement);
    this.patternDefsUrls_[patternId] = id
  }
  return this.patternDefsUrls_[patternId]
};
gviz.graphics.SvgRenderer.prototype.createDiagonalStripesPatternDefinition_ = function(pattern) {
  var patternElement = this.createSvgElement_("pattern");
  patternElement.setAttribute("patternUnits", "userSpaceOnUse");
  patternElement.setAttribute("x", "0");
  patternElement.setAttribute("y", "0");
  patternElement.setAttribute("width", "4");
  patternElement.setAttribute("height", "4");
  patternElement.setAttribute("viewBox", "0 0 4 4");
  var rectElement = this.createSvgElement_("rect");
  rectElement.setAttribute("x", "0");
  rectElement.setAttribute("y", "0");
  rectElement.setAttribute("width", "4");
  rectElement.setAttribute("height", "4");
  rectElement.setAttribute("fill", pattern.getBackgroundColor());
  patternElement.appendChild(rectElement);
  var groupElement = this.createSvgElement_("g");
  groupElement.setAttribute("stroke", pattern.getColor());
  groupElement.setAttribute("stroke-linecap", "square");
  var lineElement = this.createSvgElement_("line");
  lineElement.setAttribute("x1", "2");
  lineElement.setAttribute("y1", "0");
  lineElement.setAttribute("x2", "4");
  lineElement.setAttribute("y2", "2");
  lineElement.setAttribute("stroke-width", "2");
  groupElement.appendChild(lineElement);
  lineElement = this.createSvgElement_("line");
  lineElement.setAttribute("x1", "0");
  lineElement.setAttribute("y1", "2");
  lineElement.setAttribute("x2", "2");
  lineElement.setAttribute("y2", "4");
  lineElement.setAttribute("stroke-width", "2");
  groupElement.appendChild(lineElement);
  patternElement.appendChild(groupElement);
  return patternElement
};
gviz.graphics.SvgRenderer.convertStrokeDashStyle_ = function(strokeDashStyle, strokeWidth) {
  switch(strokeDashStyle) {
    case gviz.graphics.Brush.StrokeDashStyle.SOLID:
      return"0";
    case gviz.graphics.Brush.StrokeDashStyle.DASH:
      return String(4 * strokeWidth) + "," + String(strokeWidth);
    default:
      return gviz.graphics.SvgRenderer.convertStrokeDashStyle_(gviz.graphics.Brush.DEFAULT_STROKE_DASH_STYLE, strokeWidth)
  }
};
// Input 27
gviz.graphics.VmlRenderer = function(container, textMeasurementDiv) {
  gviz.graphics.BrowserRenderer.call(this, container, textMeasurementDiv);
  this.textWidthDiv_ = null
};
goog.inherits(gviz.graphics.VmlRenderer, gviz.graphics.BrowserRenderer);
gviz.graphics.VmlRenderer.DIV_OFFSET = 5E4;
gviz.graphics.VmlRenderer.prototype.createCanvasInternal = function(width, height) {
  this.width = width;
  this.height = height;
  var offset = gviz.graphics.VmlRenderer.DIV_OFFSET, div = this.createElement_("div");
  this.setPositionAndSize_(div, -offset, -offset, this.width + 2 * offset, this.height + 2 * offset);
  this.container.appendChild(div);
  var chart = this.createGroup(), chartElement = chart.getElement();
  chartElement.coordorigin = "0 0";
  chartElement.coordsize = width + " " + height;
  chartElement.style.top = offset;
  chartElement.style.left = offset;
  div.appendChild(chartElement);
  return chart
};
gviz.graphics.VmlRenderer.prototype.deleteContentsInternal = function() {
  for(var chartCanvas = this.getCanvas(), parent = chartCanvas.getElement(), children = parent.childNodes, numberOfNodes = children.length;1 < numberOfNodes;) {
    parent.removeChild(children[0]), numberOfNodes--
  }
};
gviz.graphics.VmlRenderer.prototype.round = function(n) {
  return Math.round(n)
};
gviz.graphics.VmlRenderer.prototype.createCircle = function(cx, cy, r, brush) {
  var element = this.createElement_("v:oval"), d = 2 * r;
  this.setPositionAndSize_(element, cx - r, cy - r, d, d);
  this.setBrush(element, brush, !1);
  return element
};
gviz.graphics.VmlRenderer.prototype.createEllipse = function(cx, cy, rx, ry, brush) {
  var element = this.createElement_("v:oval");
  this.setPositionAndSize_(element, cx - rx, cy - ry, 2 * rx, 2 * ry);
  this.setBrush(element, brush, !1);
  return element
};
gviz.graphics.VmlRenderer.prototype.createRect = function(x, y, width, height, brush) {
  var element = this.createElement_("v:rect"), allowImplicitOutline = brush.isFillOpaque() && 1 <= height && 1 <= width && !goog.isDefAndNotNull(brush.gradient);
  this.setBrush(element, brush, allowImplicitOutline);
  if(brush.hasStroke() || allowImplicitOutline) {
    width = Math.max(width - 1, 0), height = Math.max(height - 1, 0)
  }
  this.setPositionAndSize_(element, x, y, width, height);
  return element
};
gviz.graphics.VmlRenderer.prototype.makeElementScrollable = function(elems, viewWidth, viewHeight, scrollWidth, scrollHeight, scrollX, scrollY) {
  var overflowX = scrollX ? "scroll" : "hidden", overflowY = scrollY ? "scroll" : "hidden", divStyle = "height:" + viewHeight + "px;overflow-x:" + overflowX + ";overflow-y:" + overflowY + ";width:" + viewWidth + "px;", scrollDiv = goog.dom.createDom("div", {style:divStyle}), group = new gviz.graphics.DrawingGroup(scrollDiv);
  if(goog.isArrayLike(elems)) {
    for(var i = 0, leni = elems.length;i < leni;i++) {
      this.appendChild(group, elems[i])
    }
  }else {
    this.appendChild(group, elems)
  }
  return{append:[group.getElement()], events:[]}
};
gviz.graphics.VmlRenderer.prototype.createPathInternal = function(pathSegments, brush) {
  for(var element = this.createElement_("v:shape"), pathData = this.createElement_("v:path");0 < pathSegments.length && goog.string.startsWith(goog.array.peek(pathSegments), "M");) {
    pathSegments = goog.array.slice(pathSegments, 0, pathSegments.length - 1)
  }
  pathData.setAttribute("v", pathSegments.join(""));
  this.setPositionAndSize_(element, 0, 0, this.width, this.height);
  element.appendChild(pathData);
  this.setBrush(element, brush, !1);
  return element
};
gviz.graphics.VmlRenderer.prototype.createText = function(text, x, y, width, horizAlign, vertAlign, textStyle) {
  var xStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(x, width, horizAlign), yStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(y, textStyle.fontSize, vertAlign);
  vertAlign = gviz.graphics.TextAlign.CENTER;
  var yCenter = gviz.graphics.TextAlign.getRelativeCoordinate(yStartEnd.start, yStartEnd.end, vertAlign);
  return this.createTextOnLine(text, xStartEnd.start, yCenter, xStartEnd.end, yCenter, horizAlign, vertAlign, textStyle)
};
gviz.graphics.VmlRenderer.prototype.createTextOnLine = function(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle) {
  var brush = new gviz.graphics.Brush({fill:textStyle.color});
  if(textStyle.color && textStyle.color != gviz.graphics.util.NO_COLOR && textStyle.auraColor && textStyle.auraColor != gviz.graphics.util.NO_COLOR) {
    var brushWithAura = new gviz.graphics.Brush({fill:textStyle.color, stroke:textStyle.auraColor, strokeWidth:2}), textGroup = this.createGroup();
    this.drawTextInternal_(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle, brushWithAura, textGroup);
    this.drawTextInternal_(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle, brush, textGroup);
    return textGroup.getElement()
  }
  return this.createTextInternal_(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle, brush)
};
gviz.graphics.VmlRenderer.prototype.createTextOnLineByAngle = function(text, x, y, length, angle, paralAlign, perpenAlign, textStyle) {
  var radians = goog.math.toRadians(angle), xStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(x, length, paralAlign), axisPoint = new goog.math.Vec2(x, y), startPoint = new goog.math.Vec2(xStartEnd.start, y), startPoint = goog.math.Vec2.rotateAroundPoint(startPoint, axisPoint, radians), endPoint = new goog.math.Vec2(xStartEnd.end, y), endPoint = goog.math.Vec2.rotateAroundPoint(endPoint, axisPoint, radians);
  return this.createTextOnLine(text, startPoint.x, startPoint.y, endPoint.x, endPoint.y, paralAlign, perpenAlign, textStyle)
};
gviz.graphics.VmlRenderer.prototype.createTextInternal_ = function(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle, brush) {
  var shape = this.createElement_("v:shape");
  this.setPositionAndSize_(shape, 0, 0, this.width, this.height);
  if(perpenAlign != gviz.graphics.TextAlign.CENTER) {
    var perpenStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(0, textStyle.fontSize, perpenAlign);
    perpenAlign = gviz.graphics.TextAlign.CENTER;
    var perpenCenter = gviz.graphics.TextAlign.getRelativeCoordinate(perpenStartEnd.start, perpenStartEnd.end, perpenAlign), shiftVec = new goog.math.Vec2(0, perpenCenter), angle = goog.math.angle(x1, y1, x2, y2);
    shiftVec.rotate(goog.math.toRadians(angle));
    var p1 = new goog.math.Vec2(x1, y1), p2 = new goog.math.Vec2(x2, y2);
    p1.add(shiftVec);
    p2.add(shiftVec);
    x1 = p1.x;
    y1 = p1.y;
    x2 = p2.x;
    y2 = p2.y
  }
  x1 = Math.round(x1);
  y1 = Math.round(y1);
  x2 = Math.round(x2);
  y2 = Math.round(y2);
  var pathElement = this.createElement_("v:path"), path = "M" + x1 + "," + y1 + "L" + x2 + "," + y2 + "E";
  pathElement.setAttribute("v", path);
  pathElement.setAttribute("textpathok", "true");
  var textPathElement = this.createElement_("v:textpath");
  textPathElement.setAttribute("on", "true");
  var style = textPathElement.style;
  style.fontSize = textStyle.fontSize;
  style.fontFamily = textStyle.fontName;
  switch(paralAlign) {
    case gviz.graphics.TextAlign.START:
      style.setAttribute("v-text-align", "left");
      break;
    case gviz.graphics.TextAlign.CENTER:
      style.setAttribute("v-text-align", "center");
      break;
    case gviz.graphics.TextAlign.END:
      style.setAttribute("v-text-align", "right");
      break;
    default:
      goog.asserts.fail('Invalid parallel alignment "' + paralAlign + '"')
  }
  textStyle.bold && (style.fontWeight = "bold");
  textStyle.italic && (style.fontStyle = "italic");
  textPathElement.setAttribute("string", text);
  shape.appendChild(pathElement);
  shape.appendChild(textPathElement);
  this.setBrush(shape, brush, !1);
  return shape
};
gviz.graphics.VmlRenderer.prototype.drawTextInternal_ = function(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle, brush, group) {
  var textElement = this.createTextInternal_(text, x1, y1, x2, y2, paralAlign, perpenAlign, textStyle, brush);
  this.appendChild(group, textElement);
  return textElement
};
gviz.graphics.VmlRenderer.prototype.createGroupInternal = function() {
  var element = this.createElement_("v:group");
  this.setPositionAndSize_(element, 0, 0, this.width, this.height);
  return element
};
gviz.graphics.VmlRenderer.prototype.clipGroup = function(group, clipRect, opt_ellipseClipping) {
  goog.asserts.assert(!(goog.isDefAndNotNull(opt_ellipseClipping) && opt_ellipseClipping));
  var offset = gviz.graphics.VmlRenderer.DIV_OFFSET, div = this.createElement_("div"), r = [this.px_(offset + clipRect.top), this.px_(offset + clipRect.left + clipRect.width), this.px_(offset + clipRect.top + clipRect.height), this.px_(offset + clipRect.left)];
  div.style.clip = "rect(" + r.join(", ") + ")";
  this.setPositionAndSize_(div, 0, 0, this.width + 2 * offset, this.height + 2 * offset);
  group.getElement();
  var divDrawingGroup = new gviz.graphics.DrawingGroup(div);
  this.appendChild(divDrawingGroup, group);
  this.drawRect(1, 1, 1, 1, new gviz.graphics.Brush({fill:"white"}), divDrawingGroup);
  return div
};
gviz.graphics.VmlRenderer.prototype.addPathMove = function(path, x, y) {
  path.push("M" + Math.round(x) + "," + Math.round(y))
};
gviz.graphics.VmlRenderer.prototype.addPathLine = function(path, x, y) {
  path.push("L" + Math.round(x) + "," + Math.round(y))
};
gviz.graphics.VmlRenderer.prototype.addPathCurve = function(path, x1, y1, x2, y2, x, y) {
  path.push("C" + Math.round(x1) + "," + Math.round(y1) + "," + Math.round(x2) + "," + Math.round(y2) + "," + Math.round(x) + "," + Math.round(y))
};
gviz.graphics.VmlRenderer.prototype.addPathClose = function(path) {
  path.push("X")
};
gviz.graphics.VmlRenderer.prototype.addPathArc = function(path, cx, cy, rx, ry, fromAngle, toAngle, isClockwise) {
  fromAngle = goog.math.standardAngle(fromAngle);
  toAngle = goog.math.standardAngle(toAngle);
  var fromAngleDx = Math.round(goog.math.angleDx(fromAngle - 90, rx)), fromAngleDy = Math.round(goog.math.angleDy(fromAngle - 90, ry)), toAngleDx = Math.round(goog.math.angleDx(toAngle - 90, rx)), toAngleDy = Math.round(goog.math.angleDy(toAngle - 90, ry));
  rx = Math.round(rx);
  ry = Math.round(ry);
  cx = Math.round(cx);
  cy = Math.round(cy);
  if(fromAngleDx !== toAngleDx || fromAngleDy !== toAngleDy || !(isClockwise && 180 > goog.math.standardAngle(toAngle - fromAngle) || !isClockwise && 180 > goog.math.standardAngle(fromAngle - toAngle))) {
    var op = isClockwise ? "WA" : "AT";
    path.push(op + (cx - rx) + "," + (cy - ry) + "," + (cx + rx) + "," + (cy + ry) + "," + (cx + fromAngleDx) + "," + (cy + fromAngleDy) + "," + (cx + toAngleDx) + "," + (cy + toAngleDy))
  }
};
gviz.graphics.VmlRenderer.prototype.setOffset = function(element, dx, dy) {
  element.style.top = this.px_(dy);
  element.style.left = this.px_(dx)
};
gviz.graphics.VmlRenderer.prototype.setWidth = function(element, width) {
  element.style.width = this.px_(width)
};
gviz.graphics.VmlRenderer.prototype.setHeight = function(element, height) {
  element.style.height = this.px_(height)
};
gviz.graphics.VmlRenderer.prototype.setLeftPosition = function(element, left) {
  element.style.left = this.px_(left)
};
gviz.graphics.VmlRenderer.prototype.setTopPosition = function(element, top) {
  element.style.top = this.px_(top)
};
gviz.graphics.VmlRenderer.prototype.setStroke = function(element, color, width) {
  0 == width ? element.stroked = !1 : (element.stroked = !0, color && (element.strokecolor = color), element.strokeweight = width)
};
gviz.graphics.VmlRenderer.prototype.getTextSizeInternal = function(text, textStyle) {
  var textDiv = this.textMeasurementDiv;
  textDiv.firstChild.data = text;
  var style = textDiv.style;
  style.fontFamily = textStyle.fontName;
  style.fontSize = this.px_(textStyle.fontSize || 0);
  style.fontWeight = textStyle.bold ? "bold" : "";
  style.fontStyle = textStyle.italic ? "italic" : "";
  style.display = "block";
  var width = textDiv.clientWidth, height = textDiv.clientHeight;
  style.display = "none";
  textStyle.bold && (width *= 1.1);
  textStyle.italic && (width *= 0.9);
  return new goog.math.Size(width, height)
};
gviz.graphics.VmlRenderer.prototype.getScrollbarSize = function() {
  if(null != this.scrollBarSize) {
    return this.scrollBarSize
  }
  var divStyle = "width:100px;height:100px;overflow:scroll;position:absolute;visibility:hidden;", scrollDiv = goog.dom.createDom("div", {style:divStyle});
  goog.dom.appendChild(this.textMeasurementDiv, scrollDiv);
  this.textMeasurementDiv.style.display = "block";
  this.scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  this.textMeasurementDiv.style.display = "none";
  goog.dom.removeNode(scrollDiv);
  return this.scrollBarSize
};
gviz.graphics.VmlRenderer.prototype.px_ = function(number) {
  return Math.round(number) + "px"
};
gviz.graphics.VmlRenderer.prototype.createElement_ = function(name) {
  return this.doc.createElement(name)
};
gviz.graphics.VmlRenderer.prototype.setBrush = function(element, brush, opt_allowImplicitOutline) {
  for(var children = element.children, i = 0;i < children.length;i++) {
    "fill" != element.children[i].tagName && "stroke" != element.children[i].tagName || element.removeChild(children[i])
  }
  var allowImplicitOutline = goog.isDefAndNotNull(opt_allowImplicitOutline) ? opt_allowImplicitOutline : !0;
  if(brush.hasStroke()) {
    element.stroked = !0;
    element.strokeweight = brush.getStrokeWidth();
    element.strokecolor = brush.getStroke();
    var isStrokeNotOpaque = !brush.isStrokeOpaque(), strokeHasDashStyle = brush.strokeHasDashStyle();
    if(isStrokeNotOpaque || strokeHasDashStyle) {
      var strokeNode = this.createElement_("v:stroke");
      isStrokeNotOpaque && (strokeNode.opacity = String(Math.round(100 * brush.getStrokeOpacity())) + "%");
      strokeHasDashStyle && (strokeNode.dashstyle = gviz.graphics.VmlRenderer.convertStrokeDashStyle_(brush.getStrokeDashStyle()));
      element.appendChild(strokeNode)
    }
  }else {
    allowImplicitOutline && brush.isFillOpaque() ? (element.stroked = !0, element.strokeweight = 1, element.strokecolor = brush.getFill()) : element.stroked = !1
  }
  goog.isDef(element.filled) && (element.filled = !0);
  var brushGradient = brush.gradient;
  if(goog.isDefAndNotNull(brush.gradient)) {
    var gradient = this.createElement_("v:fill");
    gradient.setAttribute("color", brushGradient.color1);
    gradient.setAttribute("color2", brushGradient.color2);
    gradient.setAttribute("opacity", brushGradient.opacity1 || 1);
    gradient.setAttribute("opacity2", brushGradient.opacity2 || 1);
    var x1 = brushGradient.x1, y1 = brushGradient.y1, x2 = brushGradient.x2, y2 = brushGradient.y2;
    "string" == typeof x1 && (x1 = parseInt(x1, 10));
    "string" == typeof y1 && (y1 = parseInt(y1, 10));
    "string" == typeof x2 && (x2 = parseInt(x2, 10));
    "string" == typeof y2 && (y2 = parseInt(y2, 10));
    var angle = goog.math.angle(x1, y1, x2, y2), angle = goog.math.modulo(270 - angle, 360);
    gradient.setAttribute("angle", angle);
    gradient.setAttribute("type", "gradient");
    element.appendChild(gradient)
  }else {
    if(brush.getPattern()) {
      var patternFillElement = this.createPatternFillElement_(brush.getPattern());
      element.appendChild(patternFillElement)
    }else {
      if(brush.getFill() == gviz.graphics.util.NO_COLOR) {
        element.filled = !1
      }else {
        if(brush.isFillOpaque()) {
          element.fillcolor = brush.getFill()
        }else {
          var fillNode = this.createElement_("v:fill");
          fillNode.opacity = String(Math.round(100 * brush.getFillOpacity())) + "%";
          fillNode.color = brush.getFill();
          element.appendChild(fillNode)
        }
      }
    }
  }
};
gviz.graphics.VmlRenderer.prototype.createPatternFillElement_ = function(pattern) {
  var fillElement = this.createElement_("v:fill");
  fillElement.setAttribute("type", "pattern");
  fillElement.setAttribute("color", pattern.getColor());
  fillElement.setAttribute("color2", pattern.getBackgroundColor());
  var patternUrl = gviz.util.VisCommon.getModulePath() + "/core/patterns/" + pattern.getStyle() + ".gif";
  fillElement.setAttribute("src", patternUrl);
  return fillElement
};
gviz.graphics.VmlRenderer.prototype.setPositionAndSize_ = function(element, left, top, width, height) {
  var style = element.style;
  style.position = "absolute";
  style.left = this.px_(left);
  style.top = this.px_(top);
  style.width = this.px_(width);
  style.height = this.px_(height)
};
gviz.graphics.VmlRenderer.prototype.isSlowRenderer = function() {
  return!0
};
gviz.graphics.VmlRenderer.convertStrokeDashStyle_ = function(strokeDashStyle) {
  switch(strokeDashStyle) {
    case gviz.graphics.Brush.StrokeDashStyle.SOLID:
      return"solid";
    case gviz.graphics.Brush.StrokeDashStyle.DASH:
      return"shortdash";
    default:
      return gviz.graphics.VmlRenderer.convertStrokeDashStyle_(gviz.graphics.Brush.DEFAULT_STROKE_DASH_STYLE)
  }
};
// Input 28
gviz.graphics.DrawingFrame = function(container, dimensions, asyncWrapper, forceIFrame) {
  goog.Disposable.call(this);
  var isSupported = gviz.graphics.DrawingFrame.isBrowserSupported_();
  if(!isSupported) {
    throw Error("Graphics is not supported");
  }
  this.frameId_ = gviz.graphics.DrawingFrame.generateFrameId_();
  this.container_ = container;
  gviz.graphics.cursorposition.setReferencePoint(this.container_);
  this.container_.innerHTML = "";
  this.dimensions_ = dimensions;
  this.domHelper_ = goog.dom.getDomHelper(this.container_);
  this.textMeasurementDiv_ = this.renderersDiv_ = null;
  this.isReady_ = !1;
  this.renderers_ = [];
  this.overlayArea_ = null;
  var isVml;
  this.rendererCtor_ = (isVml = gviz.graphics.DrawingFrame.isVml_()) ? gviz.graphics.VmlRenderer : gviz.graphics.SvgRenderer;
  (this.useIFrame_ = isVml || forceIFrame) && this.createDrawingFrame_(isVml);
  this.waitUntilFrameReady_(asyncWrapper)
};
goog.inherits(gviz.graphics.DrawingFrame, goog.Disposable);
gviz.graphics.DrawingFrame.prototype.waitUntilFrameReady_ = function(asyncWrapper) {
  var isFrameReady = goog.bind(this.isFrameReady_, this), onFrameReady = goog.bind(this.onFrameReady_, this);
  gviz.graphics.DrawingFrame.waitForCondition(isFrameReady, onFrameReady, asyncWrapper)
};
gviz.graphics.DrawingFrame.prototype.onFrameReady_ = function() {
  if(this.useIFrame_) {
    var iFrameDoc = this.getIFrameDocument_();
    this.renderersDiv_ = iFrameDoc.getElementById("renderers");
    gviz.graphics.cursorposition.setReferencePoint(this.renderersDiv_);
    goog.asserts.assert(iFrameDoc.body);
    this.createTextMeasurementDiv_(iFrameDoc.body)
  }else {
    this.renderersDiv_ = this.domHelper_.createElement("div"), goog.style.setStyle(this.renderersDiv_, "position", "relative"), goog.style.setSize(this.renderersDiv_, this.dimensions_), this.renderersDiv_.dir = "ltr", this.container_.appendChild(this.renderersDiv_), this.createTextMeasurementDiv_(this.container_)
  }
  this.isReady_ = !0
};
gviz.graphics.DrawingFrame.prototype.createTextMeasurementDiv_ = function(parent) {
  var domHelper = goog.dom.getDomHelper(parent);
  this.textMeasurementDiv_ = domHelper.createElement("div");
  var style = this.textMeasurementDiv_.style;
  style.display = "none";
  style.position = "absolute";
  style.top = this.dimensions_.height + 10 + "px";
  style.left = this.dimensions_.width + 10 + "px";
  style.whiteSpace = "nowrap";
  var doc = domHelper.getDocument();
  domHelper.appendChild(this.textMeasurementDiv_, doc.createTextNode(" "));
  domHelper.appendChild(parent, this.textMeasurementDiv_)
};
gviz.graphics.DrawingFrame.prototype.createRenderer_ = function() {
  var domHelper = goog.dom.getDomHelper(this.renderersDiv_), div = domHelper.createElement("div");
  goog.style.setStyle(div, "position", "absolute");
  goog.style.setPosition(div, 0, 0);
  goog.style.setSize(div, "100%", "100%");
  this.renderersDiv_.appendChild(div);
  var renderer = new this.rendererCtor_(div, this.textMeasurementDiv_);
  this.registerDisposable(renderer);
  this.renderers_.push(renderer)
};
gviz.graphics.DrawingFrame.prototype.createOverlayArea_ = function() {
  var element;
  element = this.domHelper_.createElement("div");
  this.overlayArea_ = new gviz.graphics.OverlayArea(element);
  this.domHelper_.appendChild(this.container_, this.overlayArea_.getContainer())
};
gviz.graphics.DrawingFrame.isVml_ = function() {
  return goog.userAgent.IE ? goog.isDefAndNotNull(document.documentMode) ? 9 > document.documentMode : !goog.userAgent.isVersionOrHigher("9") : !1
};
gviz.graphics.DrawingFrame.prototype.isFrameReady_ = function() {
  if(!this.useIFrame_) {
    return!0
  }
  var iframeWindow = this.getIFrameWindow_();
  return iframeWindow && iframeWindow._loaded
};
gviz.graphics.DrawingFrame.prototype.getRenderer = function(opt_index) {
  if(!this.isReady_) {
    return null
  }
  for(var index = goog.isDefAndNotNull(opt_index) ? opt_index : 0;this.renderers_.length <= index;) {
    this.createRenderer_()
  }
  return this.renderers_[index]
};
gviz.graphics.DrawingFrame.prototype.getOverlayArea = function() {
  if(!this.isReady_) {
    return null
  }
  this.overlayArea_ || this.createOverlayArea_();
  return this.overlayArea_
};
gviz.graphics.DrawingFrame.prototype.waitUntilReady = function(callback, asyncWrapper) {
  gviz.graphics.DrawingFrame.waitForCondition(goog.bind(function() {
    return goog.isDefAndNotNull(this.renderersDiv_)
  }, this), callback, asyncWrapper)
};
gviz.graphics.DrawingFrame.prototype.update = function(dimensions, asyncWrapper) {
  this.dimensions_ = dimensions;
  if(this.useIFrame_) {
    var frame = this.getIFrame_();
    frame && (frame.width = this.dimensions_.width.toString(), frame.height = this.dimensions_.height.toString())
  }else {
    this.isReady_ && goog.style.setSize(this.renderersDiv_, this.dimensions_)
  }
  this.isReady_ || this.waitUntilFrameReady_(asyncWrapper)
};
gviz.graphics.DrawingFrame.generateFrameId_ = function() {
  for(var chartId = goog.math.randomInt(1E5);window.frames["Drawing_Frame_" + chartId];) {
    chartId++
  }
  return"Drawing_Frame_" + chartId
};
gviz.graphics.DrawingFrame.prototype.getIFrameDocument_ = function() {
  var iframe = this.getIFrame_();
  return iframe ? goog.dom.getFrameContentDocument(iframe) : null
};
gviz.graphics.DrawingFrame.prototype.getIFrameWindow_ = function() {
  var iframe = this.getIFrame_();
  return iframe ? goog.dom.getFrameContentWindow(iframe) : null
};
gviz.graphics.DrawingFrame.prototype.getIFrame_ = function() {
  var elem = this.domHelper_.getElement(this.frameId_);
  return elem
};
gviz.graphics.DrawingFrame.prototype.createDrawingFrame_ = function(isVml) {
  var frame = this.domHelper_.createElement("iframe");
  frame.name = this.frameId_;
  frame.id = this.frameId_;
  frame.width = this.dimensions_.width.toString();
  frame.height = this.dimensions_.height.toString();
  frame.frameBorder = 0;
  frame.scrolling = "no";
  frame.marginHeight = 0;
  frame.marginWidth = 0;
  frame.allowTransparency = "true";
  isVml || (frame.type = "image/svg+xml");
  this.domHelper_.appendChild(this.container_, frame);
  var frameDoc = goog.dom.getFrameContentDocument(frame);
  frameDoc.open();
  var frameSource = [];
  isVml ? (frameSource.push('<html xmlns:v="urn:scheman-microsoft-com:vml">'), frameSource.push("<head>"), frameSource.push("<style> v\\:* { behavior:url(#default#VML);}</style>")) : (frameSource.push('<?xml version="1.0"?>'), frameSource.push('<html xmlns="http://www.w3.org/1999/xhtml"'), frameSource.push(' xmlns:svg="http://www.w3.org/2000/svg"'), frameSource.push(' xmlns:xlink="http://www.w3.org/1999/xlink">'), frameSource.push("<head>"));
  frameSource.push('<script type="text/javascript">');
  frameSource.push("var _loaded = false;");
  frameSource.push("function CHART_loaded() {");
  frameSource.push(" _loaded = true;");
  frameSource.push("}");
  frameSource.push("\x3c/script>");
  frameSource.push("</head>");
  frameSource.push('<body marginwidth="0" marginheight="0"');
  frameSource.push(' onload="CHART_loaded()"');
  frameSource.push(">");
  frameSource.push('<div id="renderers"></div>');
  frameSource.push("</body>");
  frameSource.push("</html>");
  frameDoc.write(frameSource.join("\n"));
  frameDoc.close()
};
gviz.graphics.DrawingFrame.isBrowserSupported_ = function() {
  var version = goog.userAgent.VERSION;
  return goog.userAgent.IE ? 0 <= goog.string.compareVersions(version, "5.5") : goog.userAgent.GECKO ? 0 <= goog.string.compareVersions(version, "1.8") : goog.userAgent.OPERA ? 0 <= goog.string.compareVersions(version, "9.0") : goog.userAgent.WEBKIT ? 0 <= goog.string.compareVersions(version, "420+") : !1
};
gviz.graphics.DrawingFrame.waitForCondition = function(condition, callback, asyncWrapper, opt_interval) {
  condition.call() ? callback.call() : gviz.graphics.DrawingFrame.waitForConditionAsync(condition, callback, asyncWrapper, opt_interval)
};
gviz.graphics.DrawingFrame.waitForConditionAsync = function(condition, callback, asyncWrapper, opt_interval) {
  var interval = goog.isDefAndNotNull(opt_interval) ? opt_interval : 10;
  window.setTimeout(asyncWrapper(function() {
    gviz.graphics.DrawingFrame.waitForCondition(condition, callback, asyncWrapper, interval)
  }), interval)
};
gviz.graphics.DrawingFrame.prototype.disposeInternal = function() {
  this.domHelper_.removeChildren(this.container_);
  goog.dispose(this.overlayArea_);
  goog.array.forEach(this.renderers_, function(renderer) {
    goog.dispose(renderer)
  });
  gviz.graphics.DrawingFrame.superClass_.disposeInternal.call(this)
};
// Input 29
gviz.graphics.MultiBrushPathSegments = function() {
  this.segments = []
};
gviz.graphics.MultiBrushPathSegments.prototype.addSegment = function(brush, segment) {
  goog.array.isEmpty(this.segments) && goog.asserts.assert(segment.type == gviz.graphics.PathSegments.SegmentType.MOVE);
  this.segments.push({brush:brush, segment:segment})
};
gviz.graphics.MultiBrushPathSegments.prototype.move = function(x, y) {
  var segment = gviz.graphics.PathSegments.createMoveSegment(x, y);
  this.addSegment(null, segment)
};
gviz.graphics.MultiBrushPathSegments.prototype.addLine = function(brush, x, y) {
  var segment = gviz.graphics.PathSegments.createLineSegment(x, y);
  this.addSegment(brush, segment)
};
gviz.graphics.MultiBrushPathSegments.prototype.addCurve = function(brush, x1, y1, x2, y2, x, y) {
  var segment = gviz.graphics.PathSegments.createCurveSegment(x1, y1, x2, y2, x, y);
  this.addSegment(brush, segment)
};
gviz.graphics.MultiBrushPathSegments.prototype.addArc = function(brush, cx, cy, rx, ry, fromAngle, toAngle, isClockwise) {
  var segment = gviz.graphics.PathSegments.createArcSegment(cx, cy, rx, ry, fromAngle, toAngle, isClockwise);
  this.addSegment(brush, segment)
};
gviz.graphics.MultiBrushPathSegments.prototype.close = function(brush) {
  goog.asserts.assert(!goog.array.isEmpty(this.segments));
  var startPos = this.segments[0].segment.data;
  this.addLine(brush, startPos.x, startPos.y)
};
gviz.graphics.MultiBrushPathSegments.getPathByBrush_ = function(paths, brush) {
  for(var p = 0;p < paths.length;p++) {
    var path = paths[p];
    if(gviz.graphics.Brush.equals(brush, path.brush)) {
      return path
    }
  }
  path = {brush:brush, segments:new gviz.graphics.PathSegments, endPos:null};
  paths.push(path);
  return path
};
gviz.graphics.MultiBrushPathSegments.calcSegmentEndPos_ = function(segment) {
  switch(segment.type) {
    case gviz.graphics.PathSegments.SegmentType.MOVE:
    ;
    case gviz.graphics.PathSegments.SegmentType.LINE:
    ;
    case gviz.graphics.PathSegments.SegmentType.CURVE:
      var pos = segment.data;
      return new goog.math.Coordinate(pos.x, pos.y);
    case gviz.graphics.PathSegments.SegmentType.ARC:
      var arc = segment.data, toAngle = goog.math.standardAngle(arc.toAngle), toAngleDx = goog.math.angleDx(toAngle - 90, arc.rx), toAngleDy = goog.math.angleDy(toAngle - 90, arc.ry);
      return new goog.math.Coordinate(arc.cx + toAngleDx, arc.cy + toAngleDy);
    default:
      return goog.asserts.assert(!1), new goog.math.Coordinate(0, 0)
  }
};
gviz.graphics.MultiBrushPathSegments.prototype.buildPaths_ = function() {
  for(var paths = [], curPos = null, i = 0;i < this.segments.length;i++) {
    var brushSegment = this.segments[i], segment = brushSegment.segment;
    if(segment.type == gviz.graphics.PathSegments.SegmentType.MOVE) {
      curPos = gviz.graphics.MultiBrushPathSegments.calcSegmentEndPos_(segment)
    }else {
      var brush = brushSegment.brush;
      goog.asserts.assert(brush);
      var path = gviz.graphics.MultiBrushPathSegments.getPathByBrush_(paths, brush);
      goog.asserts.assert(curPos);
      goog.math.Coordinate.equals(path.endPos, curPos) || path.segments.move(curPos.x, curPos.y);
      path.segments.addSegment(segment);
      curPos = path.endPos = gviz.graphics.MultiBrushPathSegments.calcSegmentEndPos_(segment)
    }
  }
  return paths
};
gviz.graphics.MultiBrushPathSegments.createPathElement_ = function(renderer, paths) {
  if(goog.array.isEmpty(paths)) {
    return null
  }
  if(1 == paths.length) {
    return renderer.createPath(paths[0].segments, paths[0].brush)
  }
  for(var pathGroup = renderer.createGroup(), p = 0;p < paths.length;p++) {
    var path = paths[p], pathElement = renderer.createPath(path.segments, path.brush);
    renderer.appendChild(pathGroup, pathElement)
  }
  return pathGroup.getElement()
};
gviz.graphics.MultiBrushPathSegments.prototype.createPath = function(renderer) {
  var paths = this.buildPaths_();
  return gviz.graphics.MultiBrushPathSegments.createPathElement_(renderer, paths)
};
gviz.graphics.MultiBrushPathSegments.prototype.toSingleBrush = function() {
  for(var path = new gviz.graphics.PathSegments, i = 0;i < this.segments.length;i++) {
    var brushSegment = this.segments[i];
    path.addSegment(brushSegment.segment)
  }
  return path
};
// Input 30
gviz.graphics.pathsegmentsutil = {};
gviz.graphics.pathsegmentsutil.calcParallelPath = function(path, dist) {
  var parallelPath = new gviz.graphics.PathSegments, segments = path.segments;
  if(0 == segments.length || 1 == segments.length) {
    return parallelPath
  }
  for(var points = [null], i = 0;i < segments.length;i++) {
    var segment = segments[i];
    segment.data && points.push(new goog.math.Coordinate(segment.data.x, segment.data.y))
  }
  points.push(null);
  var lastSegmentType = segments[segments.length - 1].type, closed = lastSegmentType == gviz.graphics.PathSegments.SegmentType.CLOSE;
  gviz.graphics.pathsegmentsutil.addPaddingPoints_(points, closed);
  for(var calcParallelToTheRight = gviz.graphics.pathsegmentsutil.calcParallelToTheRight, calcPerpendicularLine = gviz.graphics.pathsegmentsutil.calcPerpendicularLine, intersectLines = gviz.graphics.pathsegmentsutil.intersectLines, segmentContainsPoint = gviz.graphics.pathsegmentsutil.segmentContainsPoint, calcParallelSegment = gviz.graphics.pathsegmentsutil.calcParallelSegment_, clockwise = 0 > dist, previousParallelLine = calcParallelToTheRight(points[0], points[1], dist), lastPathPointIndex = 
  points.length - 2, i = 1;i <= lastPathPointIndex;i++) {
    var parallelLine = calcParallelToTheRight(points[i], points[i + 1], dist), intersectionPoint = intersectLines(previousParallelLine, parallelLine), parallelSegmentsIntersect;
    if(goog.isObject(intersectionPoint)) {
      var v1 = intersectLines(calcPerpendicularLine(points[i - 1], points[i]), previousParallelLine), v2 = intersectLines(calcPerpendicularLine(points[i], points[i - 1]), previousParallelLine);
      parallelSegmentsIntersect = segmentContainsPoint(v1, v2, intersectionPoint)
    }else {
      parallelSegmentsIntersect = Infinity == intersectionPoint
    }
    var parallelSegmentEndPoint;
    if(parallelSegmentsIntersect && Infinity != intersectionPoint) {
      parallelSegmentEndPoint = intersectionPoint
    }else {
      var previousPerpendicularLine = calcPerpendicularLine(points[i], points[i - 1]);
      parallelSegmentEndPoint = intersectLines(previousPerpendicularLine, previousParallelLine)
    }
    parallelPath.addSegment(calcParallelSegment(segments[i - 1], parallelSegmentEndPoint));
    if(!parallelSegmentsIntersect) {
      var fromRadians = Math.atan2(parallelSegmentEndPoint.x - points[i].x, parallelSegmentEndPoint.y - points[i].y), fromAngle = 180 - goog.math.toDegrees(fromRadians), perpendicularLine = calcPerpendicularLine(points[i], points[i + 1]), arcEndPoint = intersectLines(perpendicularLine, parallelLine), toRadians = Math.atan2(arcEndPoint.x - points[i].x, arcEndPoint.y - points[i].y), toAngle = 180 - goog.math.toDegrees(toRadians);
      goog.asserts.assert(fromAngle != toAngle, "Two adjacent input segments cannot be parallel, so their parallel segments cannot be either");
      parallelPath.addArc(points[i].x, points[i].y, Math.abs(dist), Math.abs(dist), fromAngle, toAngle, clockwise)
    }
    previousParallelLine = parallelLine
  }
  closed && parallelPath.close();
  return parallelPath
};
gviz.graphics.pathsegmentsutil.addPaddingPoints_ = function(points, closed) {
  goog.asserts.assert(4 <= points.length);
  goog.asserts.assert(goog.isNull(points[0]));
  goog.asserts.assert(goog.isNull(points[points.length - 1]));
  var firstPoint = points[1].clone(), secondPoint = points[2].clone(), penultimatePoint = points[points.length - 3].clone(), lastPoint = points[points.length - 2].clone();
  if(closed) {
    points[0] = lastPoint, points[points.length - 1] = firstPoint
  }else {
    if(goog.math.Coordinate.equals(firstPoint, lastPoint)) {
      points[0] = penultimatePoint, points[points.length - 1] = secondPoint
    }else {
      var firstLine = new goog.math.Line(firstPoint.x, firstPoint.y, secondPoint.x, secondPoint.y);
      points[0] = firstLine.getInterpolatedPoint(-1);
      var lastLine = new goog.math.Line(lastPoint.x, lastPoint.y, penultimatePoint.x, penultimatePoint.y);
      points[points.length - 1] = lastLine.getInterpolatedPoint(-1)
    }
  }
};
gviz.graphics.pathsegmentsutil.calcParallelSegment_ = function(segment, point) {
  var parallelSegment = goog.object.unsafeClone(segment);
  switch(segment.type) {
    case gviz.graphics.PathSegments.SegmentType.MOVE:
    ;
    case gviz.graphics.PathSegments.SegmentType.LINE:
      parallelSegment.data.x = point.x;
      parallelSegment.data.y = point.y;
      break;
    case gviz.graphics.PathSegments.SegmentType.CURVE:
      parallelSegment.data.x = point.x;
      parallelSegment.data.y = point.y;
      var offsetX = point.x - segment.data.x, offsetY = point.y - segment.data.y;
      parallelSegment.data.x1 += offsetX;
      parallelSegment.data.y1 += offsetY;
      parallelSegment.data.x2 += offsetX;
      parallelSegment.data.y2 += offsetY;
      break;
    case gviz.graphics.PathSegments.SegmentType.ARC:
      goog.asserts.fail("Calculating parallel arcs is not yet supported.");
      break;
    case gviz.graphics.PathSegments.SegmentType.CLOSE:
      break;
    default:
      goog.asserts.fail('Unsupported segment type "' + segment.type + '"')
  }
  return parallelSegment
};
gviz.graphics.pathsegmentsutil.segmentContainsPoint = function(v1, v2, p) {
  return goog.math.Range.containsPoint(new goog.math.Range(v1.x, v2.x), p.x) && goog.math.Range.containsPoint(new goog.math.Range(v1.y, v2.y), p.y)
};
gviz.graphics.pathsegmentsutil.calcLineFromTwoPoints = function(p1, p2) {
  goog.asserts.assert(!goog.math.Coordinate.equals(p1, p2));
  var dx = p2.x - p1.x, dy = p2.y - p1.y, m = dy / dx;
  if(!isFinite(m)) {
    return{m:Infinity, n:p1.x}
  }
  var n = p1.y - m * p1.x;
  return{m:m, n:n}
};
gviz.graphics.pathsegmentsutil.calcParallelToTheRight = function(p1, p2, dist) {
  var line = gviz.graphics.pathsegmentsutil.calcLineFromTwoPoints(p1, p2), m = line.m, n = line.n;
  if(Infinity == m) {
    var dy = p2.y - p1.y;
    return{m:Infinity, n:0 > dy ? n + dist : n - dist}
  }
  var h = dist * Math.sqrt(1 + m * m), dx = p2.x - p1.x;
  return{m:m, n:0 < dx ? n + h : n - h}
};
gviz.graphics.pathsegmentsutil.calcPerpendicularLine = function(p1, p2) {
  var m = (p1.x - p2.x) / (p2.y - p1.y), n;
  isFinite(m) ? n = p1.y - m * p1.x : (m = Infinity, n = p1.x);
  return{m:m, n:n}
};
gviz.graphics.pathsegmentsutil.intersectLines = function(l1, l2) {
  var m1 = l1.m, n1 = l1.n, m2 = l2.m, n2 = l2.n;
  isFinite(m1) || (m1 = Infinity);
  isFinite(m2) || (m2 = Infinity);
  if(gviz.util.roughlyEquals(m1, m2)) {
    return gviz.util.roughlyEquals(n1, n2) ? Infinity : null
  }
  if(Infinity == m1) {
    return new goog.math.Coordinate(n1, m2 * n1 + n2)
  }
  if(Infinity == m2) {
    return new goog.math.Coordinate(n2, m1 * n2 + n1)
  }
  var dm = m2 - m1, dn = n2 - n1, n1m2 = n1 * m2, m1n2 = m1 * n2;
  return new goog.math.Coordinate(-dn / dm, (n1m2 - m1n2) / dm)
};
// Input 31
goog.dom.SavedRange = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.dom.SavedRange, goog.Disposable);
goog.dom.SavedRange.logger_ = goog.log.getLogger("goog.dom.SavedRange");
goog.dom.SavedRange.prototype.restore = function(opt_stayAlive) {
  this.isDisposed() && goog.log.error(goog.dom.SavedRange.logger_, "Disposed SavedRange objects cannot be restored.");
  var range = this.restoreInternal();
  opt_stayAlive || this.dispose();
  return range
};
// Input 32
goog.dom.SavedCaretRange = function(range) {
  goog.dom.SavedRange.call(this);
  this.startCaretId_ = goog.string.createUniqueString();
  this.endCaretId_ = goog.string.createUniqueString();
  this.reversed_ = range.isReversed();
  this.dom_ = goog.dom.getDomHelper(range.getDocument());
  range.surroundWithNodes(this.createCaret_(!0), this.createCaret_(!1))
};
goog.inherits(goog.dom.SavedCaretRange, goog.dom.SavedRange);
goog.dom.SavedCaretRange.prototype.getCaret = function(start) {
  return this.dom_.getElement(start ? this.startCaretId_ : this.endCaretId_)
};
goog.dom.SavedCaretRange.prototype.removeCarets = function(opt_range) {
  goog.dom.removeNode(this.getCaret(!0));
  goog.dom.removeNode(this.getCaret(!1));
  return opt_range
};
goog.dom.SavedCaretRange.prototype.restoreInternal = function() {
  var range = null, anchorCaret = this.getCaret(!this.reversed_), focusCaret = this.getCaret(this.reversed_);
  if(anchorCaret && focusCaret) {
    var anchorNode = anchorCaret.parentNode, anchorOffset = goog.array.indexOf(anchorNode.childNodes, anchorCaret), focusNode = focusCaret.parentNode, focusOffset = goog.array.indexOf(focusNode.childNodes, focusCaret);
    focusNode == anchorNode && (this.reversed_ ? anchorOffset-- : focusOffset--);
    range = goog.dom.Range.createFromNodes(anchorNode, anchorOffset, focusNode, focusOffset);
    range = this.removeCarets(range);
    range.select()
  }else {
    this.removeCarets()
  }
  return range
};
goog.dom.SavedCaretRange.prototype.disposeInternal = function() {
  this.removeCarets();
  this.dom_ = null
};
goog.dom.SavedCaretRange.prototype.createCaret_ = function(start) {
  return this.dom_.createDom(goog.dom.TagName.SPAN, {id:start ? this.startCaretId_ : this.endCaretId_})
};
goog.dom.SavedCaretRange.CARET_REGEX = /<span\s+id="?goog_\d+"?><\/span>/ig;
goog.dom.SavedCaretRange.htmlEqual = function(str1, str2) {
  return str1 == str2 || str1.replace(goog.dom.SavedCaretRange.CARET_REGEX, "") == str2.replace(goog.dom.SavedCaretRange.CARET_REGEX, "")
};
// Input 33
goog.dom.TagWalkType = {START_TAG:1, OTHER:0, END_TAG:-1};
goog.dom.TagIterator = function(opt_node, opt_reversed, opt_unconstrained, opt_tagType, opt_depth) {
  this.reversed = !!opt_reversed;
  opt_node && this.setPosition(opt_node, opt_tagType);
  this.depth = void 0 != opt_depth ? opt_depth : this.tagType || 0;
  this.reversed && (this.depth *= -1);
  this.constrained = !opt_unconstrained
};
goog.inherits(goog.dom.TagIterator, goog.iter.Iterator);
goog.dom.TagIterator.prototype.node = null;
goog.dom.TagIterator.prototype.tagType = goog.dom.TagWalkType.OTHER;
goog.dom.TagIterator.prototype.started_ = !1;
goog.dom.TagIterator.prototype.setPosition = function(node, opt_tagType, opt_depth) {
  if(this.node = node) {
    this.tagType = goog.isNumber(opt_tagType) ? opt_tagType : this.node.nodeType != goog.dom.NodeType.ELEMENT ? goog.dom.TagWalkType.OTHER : this.reversed ? goog.dom.TagWalkType.END_TAG : goog.dom.TagWalkType.START_TAG
  }
  goog.isNumber(opt_depth) && (this.depth = opt_depth)
};
goog.dom.TagIterator.prototype.copyFrom = function(other) {
  this.node = other.node;
  this.tagType = other.tagType;
  this.depth = other.depth;
  this.reversed = other.reversed;
  this.constrained = other.constrained
};
goog.dom.TagIterator.prototype.clone = function() {
  return new goog.dom.TagIterator(this.node, this.reversed, !this.constrained, this.tagType, this.depth)
};
goog.dom.TagIterator.prototype.restartTag = function() {
  var check = this.reversed ? goog.dom.TagWalkType.START_TAG : goog.dom.TagWalkType.END_TAG;
  this.tagType == check && (this.tagType = -1 * check, this.depth += this.tagType * (this.reversed ? -1 : 1))
};
goog.dom.TagIterator.prototype.next = function() {
  var node;
  if(this.started_) {
    if(!this.node || this.constrained && 0 == this.depth) {
      throw goog.iter.StopIteration;
    }
    node = this.node;
    var startType = this.reversed ? goog.dom.TagWalkType.END_TAG : goog.dom.TagWalkType.START_TAG;
    if(this.tagType == startType) {
      var child = this.reversed ? node.lastChild : node.firstChild;
      child ? this.setPosition(child) : this.setPosition(node, -1 * startType)
    }else {
      var sibling = this.reversed ? node.previousSibling : node.nextSibling;
      sibling ? this.setPosition(sibling) : this.setPosition(node.parentNode, -1 * startType)
    }
    this.depth += this.tagType * (this.reversed ? -1 : 1)
  }else {
    this.started_ = !0
  }
  node = this.node;
  if(!this.node) {
    throw goog.iter.StopIteration;
  }
  return node
};
goog.dom.TagIterator.prototype.isStarted = function() {
  return this.started_
};
goog.dom.TagIterator.prototype.isStartTag = function() {
  return this.tagType == goog.dom.TagWalkType.START_TAG
};
goog.dom.TagIterator.prototype.isEndTag = function() {
  return this.tagType == goog.dom.TagWalkType.END_TAG
};
goog.dom.TagIterator.prototype.equals = function(other) {
  return other.node == this.node && (!this.node || other.tagType == this.tagType)
};
goog.dom.TagIterator.prototype.splice = function(var_args) {
  var node = this.node;
  this.restartTag();
  this.reversed = !this.reversed;
  goog.dom.TagIterator.prototype.next.call(this);
  this.reversed = !this.reversed;
  for(var arr = goog.isArrayLike(arguments[0]) ? arguments[0] : arguments, i = arr.length - 1;0 <= i;i--) {
    goog.dom.insertSiblingAfter(arr[i], node)
  }
  goog.dom.removeNode(node)
};
// Input 34
goog.dom.RangeType = {TEXT:"text", CONTROL:"control", MULTI:"mutli"};
goog.dom.AbstractRange = function() {
};
goog.dom.AbstractRange.getBrowserSelectionForWindow = function(win) {
  if(win.getSelection) {
    return win.getSelection()
  }
  var doc = win.document, sel = doc.selection;
  if(sel) {
    try {
      var range = sel.createRange();
      if(range.parentElement) {
        if(range.parentElement().document != doc) {
          return null
        }
      }else {
        if(!range.length || range.item(0).document != doc) {
          return null
        }
      }
    }catch(e) {
      return null
    }
    return sel
  }
  return null
};
goog.dom.AbstractRange.isNativeControlRange = function(range) {
  return!!range && !!range.addElement
};
goog.dom.AbstractRange.prototype.getTextRanges = function() {
  for(var output = [], i = 0, len = this.getTextRangeCount();i < len;i++) {
    output.push(this.getTextRange(i))
  }
  return output
};
goog.dom.AbstractRange.prototype.getAnchorNode = function() {
  return this.isReversed() ? this.getEndNode() : this.getStartNode()
};
goog.dom.AbstractRange.prototype.getAnchorOffset = function() {
  return this.isReversed() ? this.getEndOffset() : this.getStartOffset()
};
goog.dom.AbstractRange.prototype.getFocusNode = function() {
  return this.isReversed() ? this.getStartNode() : this.getEndNode()
};
goog.dom.AbstractRange.prototype.getFocusOffset = function() {
  return this.isReversed() ? this.getStartOffset() : this.getEndOffset()
};
goog.dom.AbstractRange.prototype.isReversed = function() {
  return!1
};
goog.dom.AbstractRange.prototype.getDocument = function() {
  return goog.dom.getOwnerDocument(goog.userAgent.IE ? this.getContainer() : this.getStartNode())
};
goog.dom.AbstractRange.prototype.getWindow = function() {
  return goog.dom.getWindow(this.getDocument())
};
goog.dom.AbstractRange.prototype.containsNode = function(node, opt_allowPartial) {
  return this.containsRange(goog.dom.Range.createFromNodeContents(node), opt_allowPartial)
};
goog.dom.RangeIterator = function(node, opt_reverse) {
  goog.dom.TagIterator.call(this, node, opt_reverse, !0)
};
goog.inherits(goog.dom.RangeIterator, goog.dom.TagIterator);
// Input 35
goog.dom.AbstractMultiRange = function() {
};
goog.inherits(goog.dom.AbstractMultiRange, goog.dom.AbstractRange);
goog.dom.AbstractMultiRange.prototype.containsRange = function(otherRange, opt_allowPartial) {
  var ranges = this.getTextRanges(), otherRanges = otherRange.getTextRanges(), fn = opt_allowPartial ? goog.array.some : goog.array.every;
  return fn(otherRanges, function(otherRange) {
    return goog.array.some(ranges, function(range) {
      return range.containsRange(otherRange, opt_allowPartial)
    })
  })
};
goog.dom.AbstractMultiRange.prototype.insertNode = function(node, before) {
  before ? goog.dom.insertSiblingBefore(node, this.getStartNode()) : goog.dom.insertSiblingAfter(node, this.getEndNode());
  return node
};
goog.dom.AbstractMultiRange.prototype.surroundWithNodes = function(startNode, endNode) {
  this.insertNode(startNode, !0);
  this.insertNode(endNode, !1)
};
// Input 36
goog.dom.RangeEndpoint = {START:1, END:0};
// Input 37
goog.dom.TextRangeIterator = function(startNode, startOffset, endNode, endOffset, opt_reverse) {
  var goNext;
  if(startNode) {
    this.startNode_ = startNode;
    this.startOffset_ = startOffset;
    this.endNode_ = endNode;
    this.endOffset_ = endOffset;
    if(startNode.nodeType == goog.dom.NodeType.ELEMENT && startNode.tagName != goog.dom.TagName.BR) {
      var startChildren = startNode.childNodes, candidate = startChildren[startOffset];
      candidate ? (this.startNode_ = candidate, this.startOffset_ = 0) : (startChildren.length && (this.startNode_ = goog.array.peek(startChildren)), goNext = !0)
    }
    endNode.nodeType == goog.dom.NodeType.ELEMENT && ((this.endNode_ = endNode.childNodes[endOffset]) ? this.endOffset_ = 0 : this.endNode_ = endNode)
  }
  goog.dom.RangeIterator.call(this, opt_reverse ? this.endNode_ : this.startNode_, opt_reverse);
  if(goNext) {
    try {
      this.next()
    }catch(e) {
      if(e != goog.iter.StopIteration) {
        throw e;
      }
    }
  }
};
goog.inherits(goog.dom.TextRangeIterator, goog.dom.RangeIterator);
goog.dom.TextRangeIterator.prototype.startNode_ = null;
goog.dom.TextRangeIterator.prototype.endNode_ = null;
goog.dom.TextRangeIterator.prototype.startOffset_ = 0;
goog.dom.TextRangeIterator.prototype.endOffset_ = 0;
goog.dom.TextRangeIterator.prototype.getStartNode = function() {
  return this.startNode_
};
goog.dom.TextRangeIterator.prototype.getEndNode = function() {
  return this.endNode_
};
goog.dom.TextRangeIterator.prototype.isLast = function() {
  return this.isStarted() && this.node == this.endNode_ && (!this.endOffset_ || !this.isStartTag())
};
goog.dom.TextRangeIterator.prototype.next = function() {
  if(this.isLast()) {
    throw goog.iter.StopIteration;
  }
  return goog.dom.TextRangeIterator.superClass_.next.call(this)
};
goog.dom.TextRangeIterator.prototype.copyFrom = function(other) {
  this.startNode_ = other.startNode_;
  this.endNode_ = other.endNode_;
  this.startOffset_ = other.startOffset_;
  this.endOffset_ = other.endOffset_;
  this.isReversed_ = other.isReversed_;
  goog.dom.TextRangeIterator.superClass_.copyFrom.call(this, other)
};
goog.dom.TextRangeIterator.prototype.clone = function() {
  var copy = new goog.dom.TextRangeIterator(this.startNode_, this.startOffset_, this.endNode_, this.endOffset_, this.isReversed_);
  copy.copyFrom(this);
  return copy
};
// Input 38
goog.string.StringBuffer = function(opt_a1, var_args) {
  null != opt_a1 && this.append.apply(this, arguments)
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(null != opt_a2) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
// Input 39
goog.dom.browserrange = {};
goog.dom.browserrange.AbstractRange = function() {
};
goog.dom.browserrange.AbstractRange.prototype.containsRange = function(abstractRange, opt_allowPartial) {
  var checkPartial = opt_allowPartial && !abstractRange.isCollapsed(), range = abstractRange.getBrowserRange(), start = goog.dom.RangeEndpoint.START, end = goog.dom.RangeEndpoint.END;
  try {
    return checkPartial ? 0 <= this.compareBrowserRangeEndpoints(range, end, start) && 0 >= this.compareBrowserRangeEndpoints(range, start, end) : 0 <= this.compareBrowserRangeEndpoints(range, end, end) && 0 >= this.compareBrowserRangeEndpoints(range, start, start)
  }catch(e) {
    if(!goog.userAgent.IE) {
      throw e;
    }
    return!1
  }
};
goog.dom.browserrange.AbstractRange.prototype.containsNode = function(node, opt_allowPartial) {
  return this.containsRange(goog.dom.browserrange.createRangeFromNodeContents(node), opt_allowPartial)
};
goog.dom.browserrange.AbstractRange.prototype.__iterator__ = function() {
  return new goog.dom.TextRangeIterator(this.getStartNode(), this.getStartOffset(), this.getEndNode(), this.getEndOffset())
};
// Input 40
goog.dom.browserrange.W3cRange = function(range) {
  this.range_ = range
};
goog.inherits(goog.dom.browserrange.W3cRange, goog.dom.browserrange.AbstractRange);
goog.dom.browserrange.W3cRange.getBrowserRangeForNode = function(node) {
  var nodeRange = goog.dom.getOwnerDocument(node).createRange();
  if(node.nodeType == goog.dom.NodeType.TEXT) {
    nodeRange.setStart(node, 0), nodeRange.setEnd(node, node.length)
  }else {
    if(goog.dom.browserrange.canContainRangeEndpoint(node)) {
      for(var tempNode, leaf = node;(tempNode = leaf.firstChild) && goog.dom.browserrange.canContainRangeEndpoint(tempNode);) {
        leaf = tempNode
      }
      nodeRange.setStart(leaf, 0);
      for(leaf = node;(tempNode = leaf.lastChild) && goog.dom.browserrange.canContainRangeEndpoint(tempNode);) {
        leaf = tempNode
      }
      nodeRange.setEnd(leaf, leaf.nodeType == goog.dom.NodeType.ELEMENT ? leaf.childNodes.length : leaf.length)
    }else {
      var rangeParent = node.parentNode, rangeStartOffset = goog.array.indexOf(rangeParent.childNodes, node);
      nodeRange.setStart(rangeParent, rangeStartOffset);
      nodeRange.setEnd(rangeParent, rangeStartOffset + 1)
    }
  }
  return nodeRange
};
goog.dom.browserrange.W3cRange.getBrowserRangeForNodes = function(startNode, startOffset, endNode, endOffset) {
  var nodeRange = goog.dom.getOwnerDocument(startNode).createRange();
  nodeRange.setStart(startNode, startOffset);
  nodeRange.setEnd(endNode, endOffset);
  return nodeRange
};
goog.dom.browserrange.W3cRange.createFromNodeContents = function(node) {
  return new goog.dom.browserrange.W3cRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNode(node))
};
goog.dom.browserrange.W3cRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return new goog.dom.browserrange.W3cRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNodes(startNode, startOffset, endNode, endOffset))
};
goog.dom.browserrange.W3cRange.prototype.clone = function() {
  return new this.constructor(this.range_.cloneRange())
};
goog.dom.browserrange.W3cRange.prototype.getBrowserRange = function() {
  return this.range_
};
goog.dom.browserrange.W3cRange.prototype.getContainer = function() {
  return this.range_.commonAncestorContainer
};
goog.dom.browserrange.W3cRange.prototype.getStartNode = function() {
  return this.range_.startContainer
};
goog.dom.browserrange.W3cRange.prototype.getStartOffset = function() {
  return this.range_.startOffset
};
goog.dom.browserrange.W3cRange.prototype.getEndNode = function() {
  return this.range_.endContainer
};
goog.dom.browserrange.W3cRange.prototype.getEndOffset = function() {
  return this.range_.endOffset
};
goog.dom.browserrange.W3cRange.prototype.compareBrowserRangeEndpoints = function(range, thisEndpoint, otherEndpoint) {
  return this.range_.compareBoundaryPoints(otherEndpoint == goog.dom.RangeEndpoint.START ? thisEndpoint == goog.dom.RangeEndpoint.START ? goog.global.Range.START_TO_START : goog.global.Range.START_TO_END : thisEndpoint == goog.dom.RangeEndpoint.START ? goog.global.Range.END_TO_START : goog.global.Range.END_TO_END, range)
};
goog.dom.browserrange.W3cRange.prototype.isCollapsed = function() {
  return this.range_.collapsed
};
goog.dom.browserrange.W3cRange.prototype.getText = function() {
  return this.range_.toString()
};
goog.dom.browserrange.W3cRange.prototype.select = function(reverse) {
  var win = goog.dom.getWindow(goog.dom.getOwnerDocument(this.getStartNode()));
  this.selectInternal(win.getSelection(), reverse)
};
goog.dom.browserrange.W3cRange.prototype.selectInternal = function(selection) {
  selection.removeAllRanges();
  selection.addRange(this.range_)
};
goog.dom.browserrange.W3cRange.prototype.surroundContents = function(element) {
  this.range_.surroundContents(element);
  return element
};
goog.dom.browserrange.W3cRange.prototype.insertNode = function(node, before) {
  var range = this.range_.cloneRange();
  range.collapse(before);
  range.insertNode(node);
  range.detach();
  return node
};
goog.dom.browserrange.W3cRange.prototype.surroundWithNodes = function(startNode, endNode) {
  var win = goog.dom.getWindow(goog.dom.getOwnerDocument(this.getStartNode())), selectionRange = goog.dom.Range.createFromWindow(win);
  if(selectionRange) {
    var sNode = selectionRange.getStartNode(), eNode = selectionRange.getEndNode(), sOffset = selectionRange.getStartOffset(), eOffset = selectionRange.getEndOffset()
  }
  var clone1 = this.range_.cloneRange(), clone2 = this.range_.cloneRange();
  clone1.collapse(!1);
  clone2.collapse(!0);
  clone1.insertNode(endNode);
  clone2.insertNode(startNode);
  clone1.detach();
  clone2.detach();
  if(selectionRange) {
    var isInsertedNode = function(n) {
      return n == startNode || n == endNode
    };
    if(sNode.nodeType == goog.dom.NodeType.TEXT) {
      for(;sOffset > sNode.length;) {
        sOffset -= sNode.length;
        do {
          sNode = sNode.nextSibling
        }while(isInsertedNode(sNode))
      }
    }
    if(eNode.nodeType == goog.dom.NodeType.TEXT) {
      for(;eOffset > eNode.length;) {
        eOffset -= eNode.length;
        do {
          eNode = eNode.nextSibling
        }while(isInsertedNode(eNode))
      }
    }
    goog.dom.Range.createFromNodes(sNode, sOffset, eNode, eOffset).select()
  }
};
goog.dom.browserrange.W3cRange.prototype.collapse = function(toStart) {
  this.range_.collapse(toStart)
};
// Input 41
goog.dom.browserrange.GeckoRange = function(range) {
  goog.dom.browserrange.W3cRange.call(this, range)
};
goog.inherits(goog.dom.browserrange.GeckoRange, goog.dom.browserrange.W3cRange);
goog.dom.browserrange.GeckoRange.createFromNodeContents = function(node) {
  return new goog.dom.browserrange.GeckoRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNode(node))
};
goog.dom.browserrange.GeckoRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return new goog.dom.browserrange.GeckoRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNodes(startNode, startOffset, endNode, endOffset))
};
goog.dom.browserrange.GeckoRange.prototype.selectInternal = function(selection, reversed) {
  !reversed || this.isCollapsed() ? goog.dom.browserrange.GeckoRange.superClass_.selectInternal.call(this, selection, reversed) : (selection.collapse(this.getEndNode(), this.getEndOffset()), selection.extend(this.getStartNode(), this.getStartOffset()))
};
// Input 42
goog.dom.browserrange.IeRange = function(range, doc) {
  this.range_ = range;
  this.doc_ = doc
};
goog.inherits(goog.dom.browserrange.IeRange, goog.dom.browserrange.AbstractRange);
goog.dom.browserrange.IeRange.logger_ = goog.log.getLogger("goog.dom.browserrange.IeRange");
goog.dom.browserrange.IeRange.getBrowserRangeForNode_ = function(node) {
  var nodeRange = goog.dom.getOwnerDocument(node).body.createTextRange();
  if(node.nodeType == goog.dom.NodeType.ELEMENT) {
    nodeRange.moveToElementText(node), goog.dom.browserrange.canContainRangeEndpoint(node) && !node.childNodes.length && nodeRange.collapse(!1)
  }else {
    for(var offset = 0, sibling = node;sibling = sibling.previousSibling;) {
      var nodeType = sibling.nodeType;
      if(nodeType == goog.dom.NodeType.TEXT) {
        offset += sibling.length
      }else {
        if(nodeType == goog.dom.NodeType.ELEMENT) {
          nodeRange.moveToElementText(sibling);
          break
        }
      }
    }
    sibling || nodeRange.moveToElementText(node.parentNode);
    nodeRange.collapse(!sibling);
    offset && nodeRange.move("character", offset);
    nodeRange.moveEnd("character", node.length)
  }
  return nodeRange
};
goog.dom.browserrange.IeRange.getBrowserRangeForNodes_ = function(startNode, startOffset, endNode, endOffset) {
  var child, collapse = !1;
  startNode.nodeType == goog.dom.NodeType.ELEMENT && (startOffset > startNode.childNodes.length && goog.log.error(goog.dom.browserrange.IeRange.logger_, "Cannot have startOffset > startNode child count"), child = startNode.childNodes[startOffset], collapse = !child, startNode = child || startNode.lastChild || startNode, startOffset = 0);
  var leftRange = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(startNode);
  startOffset && leftRange.move("character", startOffset);
  if(startNode == endNode && startOffset == endOffset) {
    return leftRange.collapse(!0), leftRange
  }
  collapse && leftRange.collapse(!1);
  collapse = !1;
  endNode.nodeType == goog.dom.NodeType.ELEMENT && (endOffset > endNode.childNodes.length && goog.log.error(goog.dom.browserrange.IeRange.logger_, "Cannot have endOffset > endNode child count"), endNode = (child = endNode.childNodes[endOffset]) || endNode.lastChild || endNode, endOffset = 0, collapse = !child);
  var rightRange = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(endNode);
  rightRange.collapse(!collapse);
  endOffset && rightRange.moveEnd("character", endOffset);
  leftRange.setEndPoint("EndToEnd", rightRange);
  return leftRange
};
goog.dom.browserrange.IeRange.createFromNodeContents = function(node) {
  var range = new goog.dom.browserrange.IeRange(goog.dom.browserrange.IeRange.getBrowserRangeForNode_(node), goog.dom.getOwnerDocument(node));
  if(goog.dom.browserrange.canContainRangeEndpoint(node)) {
    for(var tempNode, leaf = node;(tempNode = leaf.firstChild) && goog.dom.browserrange.canContainRangeEndpoint(tempNode);) {
      leaf = tempNode
    }
    range.startNode_ = leaf;
    range.startOffset_ = 0;
    for(leaf = node;(tempNode = leaf.lastChild) && goog.dom.browserrange.canContainRangeEndpoint(tempNode);) {
      leaf = tempNode
    }
    range.endNode_ = leaf;
    range.endOffset_ = leaf.nodeType == goog.dom.NodeType.ELEMENT ? leaf.childNodes.length : leaf.length;
    range.parentNode_ = node
  }else {
    range.startNode_ = range.endNode_ = range.parentNode_ = node.parentNode, range.startOffset_ = goog.array.indexOf(range.parentNode_.childNodes, node), range.endOffset_ = range.startOffset_ + 1
  }
  return range
};
goog.dom.browserrange.IeRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  var range = new goog.dom.browserrange.IeRange(goog.dom.browserrange.IeRange.getBrowserRangeForNodes_(startNode, startOffset, endNode, endOffset), goog.dom.getOwnerDocument(startNode));
  range.startNode_ = startNode;
  range.startOffset_ = startOffset;
  range.endNode_ = endNode;
  range.endOffset_ = endOffset;
  return range
};
goog.dom.browserrange.IeRange.prototype.parentNode_ = null;
goog.dom.browserrange.IeRange.prototype.startNode_ = null;
goog.dom.browserrange.IeRange.prototype.endNode_ = null;
goog.dom.browserrange.IeRange.prototype.startOffset_ = -1;
goog.dom.browserrange.IeRange.prototype.endOffset_ = -1;
goog.dom.browserrange.IeRange.prototype.clone = function() {
  var range = new goog.dom.browserrange.IeRange(this.range_.duplicate(), this.doc_);
  range.parentNode_ = this.parentNode_;
  range.startNode_ = this.startNode_;
  range.endNode_ = this.endNode_;
  return range
};
goog.dom.browserrange.IeRange.prototype.getBrowserRange = function() {
  return this.range_
};
goog.dom.browserrange.IeRange.prototype.clearCachedValues_ = function() {
  this.parentNode_ = this.startNode_ = this.endNode_ = null;
  this.startOffset_ = this.endOffset_ = -1
};
goog.dom.browserrange.IeRange.prototype.getContainer = function() {
  if(!this.parentNode_) {
    var selectText = this.range_.text, range = this.range_.duplicate(), rightTrimmedSelectText = selectText.replace(/ +$/, ""), numSpacesAtEnd = selectText.length - rightTrimmedSelectText.length;
    numSpacesAtEnd && range.moveEnd("character", -numSpacesAtEnd);
    var parent = range.parentElement(), htmlText = range.htmlText, htmlTextLen = goog.string.stripNewlines(htmlText).length;
    if(this.isCollapsed() && 0 < htmlTextLen) {
      return this.parentNode_ = parent
    }
    for(;htmlTextLen > goog.string.stripNewlines(parent.outerHTML).length;) {
      parent = parent.parentNode
    }
    for(;1 == parent.childNodes.length && parent.innerText == goog.dom.browserrange.IeRange.getNodeText_(parent.firstChild) && goog.dom.browserrange.canContainRangeEndpoint(parent.firstChild);) {
      parent = parent.firstChild
    }
    0 == selectText.length && (parent = this.findDeepestContainer_(parent));
    this.parentNode_ = parent
  }
  return this.parentNode_
};
goog.dom.browserrange.IeRange.prototype.findDeepestContainer_ = function(node) {
  for(var childNodes = node.childNodes, i = 0, len = childNodes.length;i < len;i++) {
    var child = childNodes[i];
    if(goog.dom.browserrange.canContainRangeEndpoint(child)) {
      var childRange = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(child), start = goog.dom.RangeEndpoint.START, end = goog.dom.RangeEndpoint.END, isChildRangeErratic = childRange.htmlText != child.outerHTML, isNativeInRangeErratic = this.isCollapsed() && isChildRangeErratic, inChildRange = isNativeInRangeErratic ? 0 <= this.compareBrowserRangeEndpoints(childRange, start, start) && 0 >= this.compareBrowserRangeEndpoints(childRange, start, end) : this.range_.inRange(childRange);
      if(inChildRange) {
        return this.findDeepestContainer_(child)
      }
    }
  }
  return node
};
goog.dom.browserrange.IeRange.prototype.getStartNode = function() {
  this.startNode_ || (this.startNode_ = this.getEndpointNode_(goog.dom.RangeEndpoint.START), this.isCollapsed() && (this.endNode_ = this.startNode_));
  return this.startNode_
};
goog.dom.browserrange.IeRange.prototype.getStartOffset = function() {
  0 > this.startOffset_ && (this.startOffset_ = this.getOffset_(goog.dom.RangeEndpoint.START), this.isCollapsed() && (this.endOffset_ = this.startOffset_));
  return this.startOffset_
};
goog.dom.browserrange.IeRange.prototype.getEndNode = function() {
  if(this.isCollapsed()) {
    return this.getStartNode()
  }
  this.endNode_ || (this.endNode_ = this.getEndpointNode_(goog.dom.RangeEndpoint.END));
  return this.endNode_
};
goog.dom.browserrange.IeRange.prototype.getEndOffset = function() {
  if(this.isCollapsed()) {
    return this.getStartOffset()
  }
  0 > this.endOffset_ && (this.endOffset_ = this.getOffset_(goog.dom.RangeEndpoint.END), this.isCollapsed() && (this.startOffset_ = this.endOffset_));
  return this.endOffset_
};
goog.dom.browserrange.IeRange.prototype.compareBrowserRangeEndpoints = function(range, thisEndpoint, otherEndpoint) {
  return this.range_.compareEndPoints((thisEndpoint == goog.dom.RangeEndpoint.START ? "Start" : "End") + "To" + (otherEndpoint == goog.dom.RangeEndpoint.START ? "Start" : "End"), range)
};
goog.dom.browserrange.IeRange.prototype.getEndpointNode_ = function(endpoint, opt_node) {
  var node = opt_node || this.getContainer();
  if(!node || !node.firstChild) {
    return node
  }
  for(var start = goog.dom.RangeEndpoint.START, end = goog.dom.RangeEndpoint.END, isStartEndpoint = endpoint == start, j = 0, length = node.childNodes.length;j < length;j++) {
    var i = isStartEndpoint ? j : length - j - 1, child = node.childNodes[i], childRange;
    try {
      childRange = goog.dom.browserrange.createRangeFromNodeContents(child)
    }catch(e) {
      continue
    }
    var ieRange = childRange.getBrowserRange();
    if(this.isCollapsed()) {
      if(!goog.dom.browserrange.canContainRangeEndpoint(child)) {
        if(0 == this.compareBrowserRangeEndpoints(ieRange, start, start)) {
          this.startOffset_ = this.endOffset_ = i;
          break
        }
      }else {
        if(childRange.containsRange(this)) {
          return this.getEndpointNode_(endpoint, child)
        }
      }
    }else {
      if(this.containsRange(childRange)) {
        if(!goog.dom.browserrange.canContainRangeEndpoint(child)) {
          isStartEndpoint ? this.startOffset_ = i : this.endOffset_ = i + 1;
          break
        }
        return this.getEndpointNode_(endpoint, child)
      }
      if(0 > this.compareBrowserRangeEndpoints(ieRange, start, end) && 0 < this.compareBrowserRangeEndpoints(ieRange, end, start)) {
        return this.getEndpointNode_(endpoint, child)
      }
    }
  }
  return node
};
goog.dom.browserrange.IeRange.prototype.compareNodeEndpoints_ = function(node, thisEndpoint, otherEndpoint) {
  return this.range_.compareEndPoints((thisEndpoint == goog.dom.RangeEndpoint.START ? "Start" : "End") + "To" + (otherEndpoint == goog.dom.RangeEndpoint.START ? "Start" : "End"), goog.dom.browserrange.createRangeFromNodeContents(node).getBrowserRange())
};
goog.dom.browserrange.IeRange.prototype.getOffset_ = function(endpoint, opt_container) {
  var isStartEndpoint = endpoint == goog.dom.RangeEndpoint.START, container = opt_container || (isStartEndpoint ? this.getStartNode() : this.getEndNode());
  if(container.nodeType == goog.dom.NodeType.ELEMENT) {
    for(var children = container.childNodes, len = children.length, edge = isStartEndpoint ? 0 : len - 1, sign = isStartEndpoint ? 1 : -1, i = edge;0 <= i && i < len;i += sign) {
      var child = children[i];
      if(!goog.dom.browserrange.canContainRangeEndpoint(child)) {
        var endPointCompare = this.compareNodeEndpoints_(child, endpoint, endpoint);
        if(0 == endPointCompare) {
          return isStartEndpoint ? i : i + 1
        }
      }
    }
    return-1 == i ? 0 : i
  }
  var range = this.range_.duplicate(), nodeRange = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(container);
  range.setEndPoint(isStartEndpoint ? "EndToEnd" : "StartToStart", nodeRange);
  var rangeLength = range.text.length;
  return isStartEndpoint ? container.length - rangeLength : rangeLength
};
goog.dom.browserrange.IeRange.getNodeText_ = function(node) {
  return node.nodeType == goog.dom.NodeType.TEXT ? node.nodeValue : node.innerText
};
goog.dom.browserrange.IeRange.prototype.isCollapsed = function() {
  return 0 == this.range_.compareEndPoints("StartToEnd", this.range_)
};
goog.dom.browserrange.IeRange.prototype.getText = function() {
  return this.range_.text
};
goog.dom.browserrange.IeRange.prototype.select = function() {
  this.range_.select()
};
goog.dom.browserrange.IeRange.getDomHelper_ = function(range) {
  return goog.dom.getDomHelper(range.parentElement())
};
goog.dom.browserrange.IeRange.pasteElement_ = function(range, element, opt_domHelper) {
  opt_domHelper = opt_domHelper || goog.dom.browserrange.IeRange.getDomHelper_(range);
  var id, originalId = id = element.id;
  id || (id = element.id = goog.string.createUniqueString());
  range.pasteHTML(element.outerHTML);
  (element = opt_domHelper.getElement(id)) && (originalId || element.removeAttribute("id"));
  return element
};
goog.dom.browserrange.IeRange.prototype.surroundContents = function(element) {
  goog.dom.removeNode(element);
  element.innerHTML = this.range_.htmlText;
  (element = goog.dom.browserrange.IeRange.pasteElement_(this.range_, element)) && this.range_.moveToElementText(element);
  this.clearCachedValues_();
  return element
};
goog.dom.browserrange.IeRange.insertNode_ = function(clone, node, before, opt_domHelper) {
  opt_domHelper = opt_domHelper || goog.dom.browserrange.IeRange.getDomHelper_(clone);
  var isNonElement;
  node.nodeType != goog.dom.NodeType.ELEMENT && (isNonElement = !0, node = opt_domHelper.createDom(goog.dom.TagName.DIV, null, node));
  clone.collapse(before);
  node = goog.dom.browserrange.IeRange.pasteElement_(clone, node, opt_domHelper);
  if(isNonElement) {
    var newNonElement = node.firstChild;
    opt_domHelper.flattenElement(node);
    node = newNonElement
  }
  return node
};
goog.dom.browserrange.IeRange.prototype.insertNode = function(node, before) {
  var output = goog.dom.browserrange.IeRange.insertNode_(this.range_.duplicate(), node, before);
  this.clearCachedValues_();
  return output
};
goog.dom.browserrange.IeRange.prototype.surroundWithNodes = function(startNode, endNode) {
  var clone1 = this.range_.duplicate(), clone2 = this.range_.duplicate();
  goog.dom.browserrange.IeRange.insertNode_(clone1, startNode, !0);
  goog.dom.browserrange.IeRange.insertNode_(clone2, endNode, !1);
  this.clearCachedValues_()
};
goog.dom.browserrange.IeRange.prototype.collapse = function(toStart) {
  this.range_.collapse(toStart);
  toStart ? (this.endNode_ = this.startNode_, this.endOffset_ = this.startOffset_) : (this.startNode_ = this.endNode_, this.startOffset_ = this.endOffset_)
};
// Input 43
goog.dom.browserrange.OperaRange = function(range) {
  goog.dom.browserrange.W3cRange.call(this, range)
};
goog.inherits(goog.dom.browserrange.OperaRange, goog.dom.browserrange.W3cRange);
goog.dom.browserrange.OperaRange.createFromNodeContents = function(node) {
  return new goog.dom.browserrange.OperaRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNode(node))
};
goog.dom.browserrange.OperaRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return new goog.dom.browserrange.OperaRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNodes(startNode, startOffset, endNode, endOffset))
};
goog.dom.browserrange.OperaRange.prototype.selectInternal = function(selection) {
  selection.collapse(this.getStartNode(), this.getStartOffset());
  this.getEndNode() == this.getStartNode() && this.getEndOffset() == this.getStartOffset() || selection.extend(this.getEndNode(), this.getEndOffset());
  0 == selection.rangeCount && selection.addRange(this.range_)
};
// Input 44
goog.dom.browserrange.WebKitRange = function(range) {
  goog.dom.browserrange.W3cRange.call(this, range)
};
goog.inherits(goog.dom.browserrange.WebKitRange, goog.dom.browserrange.W3cRange);
goog.dom.browserrange.WebKitRange.createFromNodeContents = function(node) {
  return new goog.dom.browserrange.WebKitRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNode(node))
};
goog.dom.browserrange.WebKitRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return new goog.dom.browserrange.WebKitRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNodes(startNode, startOffset, endNode, endOffset))
};
goog.dom.browserrange.WebKitRange.prototype.compareBrowserRangeEndpoints = function(range, thisEndpoint, otherEndpoint) {
  return goog.userAgent.isVersionOrHigher("528") ? goog.dom.browserrange.WebKitRange.superClass_.compareBrowserRangeEndpoints.call(this, range, thisEndpoint, otherEndpoint) : this.range_.compareBoundaryPoints(otherEndpoint == goog.dom.RangeEndpoint.START ? thisEndpoint == goog.dom.RangeEndpoint.START ? goog.global.Range.START_TO_START : goog.global.Range.END_TO_START : thisEndpoint == goog.dom.RangeEndpoint.START ? goog.global.Range.START_TO_END : goog.global.Range.END_TO_END, range)
};
goog.dom.browserrange.WebKitRange.prototype.selectInternal = function(selection, reversed) {
  selection.removeAllRanges();
  reversed ? selection.setBaseAndExtent(this.getEndNode(), this.getEndOffset(), this.getStartNode(), this.getStartOffset()) : selection.setBaseAndExtent(this.getStartNode(), this.getStartOffset(), this.getEndNode(), this.getEndOffset())
};
// Input 45
goog.dom.browserrange.Error = {NOT_IMPLEMENTED:"Not Implemented"};
goog.dom.browserrange.createRange = function(range) {
  return goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) ? new goog.dom.browserrange.IeRange(range, goog.dom.getOwnerDocument(range.parentElement())) : goog.userAgent.WEBKIT ? new goog.dom.browserrange.WebKitRange(range) : goog.userAgent.GECKO ? new goog.dom.browserrange.GeckoRange(range) : goog.userAgent.OPERA ? new goog.dom.browserrange.OperaRange(range) : new goog.dom.browserrange.W3cRange(range)
};
goog.dom.browserrange.createRangeFromNodeContents = function(node) {
  return goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) ? goog.dom.browserrange.IeRange.createFromNodeContents(node) : goog.userAgent.WEBKIT ? goog.dom.browserrange.WebKitRange.createFromNodeContents(node) : goog.userAgent.GECKO ? goog.dom.browserrange.GeckoRange.createFromNodeContents(node) : goog.userAgent.OPERA ? goog.dom.browserrange.OperaRange.createFromNodeContents(node) : goog.dom.browserrange.W3cRange.createFromNodeContents(node)
};
goog.dom.browserrange.createRangeFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) ? goog.dom.browserrange.IeRange.createFromNodes(startNode, startOffset, endNode, endOffset) : goog.userAgent.WEBKIT ? goog.dom.browserrange.WebKitRange.createFromNodes(startNode, startOffset, endNode, endOffset) : goog.userAgent.GECKO ? goog.dom.browserrange.GeckoRange.createFromNodes(startNode, startOffset, endNode, endOffset) : goog.userAgent.OPERA ? goog.dom.browserrange.OperaRange.createFromNodes(startNode, startOffset, endNode, 
  endOffset) : goog.dom.browserrange.W3cRange.createFromNodes(startNode, startOffset, endNode, endOffset)
};
goog.dom.browserrange.canContainRangeEndpoint = function(node) {
  return goog.dom.canHaveChildren(node) || node.nodeType == goog.dom.NodeType.TEXT
};
// Input 46
goog.dom.TextRange = function() {
};
goog.inherits(goog.dom.TextRange, goog.dom.AbstractRange);
goog.dom.TextRange.createFromBrowserRange = function(range, opt_isReversed) {
  return goog.dom.TextRange.createFromBrowserRangeWrapper_(goog.dom.browserrange.createRange(range), opt_isReversed)
};
goog.dom.TextRange.createFromBrowserRangeWrapper_ = function(browserRange, opt_isReversed) {
  var range = new goog.dom.TextRange;
  range.browserRangeWrapper_ = browserRange;
  range.isReversed_ = !!opt_isReversed;
  return range
};
goog.dom.TextRange.createFromNodeContents = function(node, opt_isReversed) {
  return goog.dom.TextRange.createFromBrowserRangeWrapper_(goog.dom.browserrange.createRangeFromNodeContents(node), opt_isReversed)
};
goog.dom.TextRange.createFromNodes = function(anchorNode, anchorOffset, focusNode, focusOffset) {
  var range = new goog.dom.TextRange;
  range.isReversed_ = goog.dom.Range.isReversed(anchorNode, anchorOffset, focusNode, focusOffset);
  if(goog.dom.isElement(anchorNode) && !goog.dom.canHaveChildren(anchorNode)) {
    var parent = anchorNode.parentNode;
    anchorOffset = goog.array.indexOf(parent.childNodes, anchorNode);
    anchorNode = parent
  }
  goog.dom.isElement(focusNode) && !goog.dom.canHaveChildren(focusNode) && (parent = focusNode.parentNode, focusOffset = goog.array.indexOf(parent.childNodes, focusNode), focusNode = parent);
  range.isReversed_ ? (range.startNode_ = focusNode, range.startOffset_ = focusOffset, range.endNode_ = anchorNode, range.endOffset_ = anchorOffset) : (range.startNode_ = anchorNode, range.startOffset_ = anchorOffset, range.endNode_ = focusNode, range.endOffset_ = focusOffset);
  return range
};
goog.dom.TextRange.prototype.browserRangeWrapper_ = null;
goog.dom.TextRange.prototype.startNode_ = null;
goog.dom.TextRange.prototype.startOffset_ = null;
goog.dom.TextRange.prototype.endNode_ = null;
goog.dom.TextRange.prototype.endOffset_ = null;
goog.dom.TextRange.prototype.isReversed_ = !1;
goog.dom.TextRange.prototype.clone = function() {
  var range = new goog.dom.TextRange;
  range.browserRangeWrapper_ = this.browserRangeWrapper_;
  range.startNode_ = this.startNode_;
  range.startOffset_ = this.startOffset_;
  range.endNode_ = this.endNode_;
  range.endOffset_ = this.endOffset_;
  range.isReversed_ = this.isReversed_;
  return range
};
goog.dom.TextRange.prototype.getType = function() {
  return goog.dom.RangeType.TEXT
};
goog.dom.TextRange.prototype.getBrowserRangeObject = function() {
  return this.getBrowserRangeWrapper_().getBrowserRange()
};
goog.dom.TextRange.prototype.clearCachedValues_ = function() {
  this.startNode_ = this.startOffset_ = this.endNode_ = this.endOffset_ = null
};
goog.dom.TextRange.prototype.getTextRangeCount = function() {
  return 1
};
goog.dom.TextRange.prototype.getTextRange = function() {
  return this
};
goog.dom.TextRange.prototype.getBrowserRangeWrapper_ = function() {
  return this.browserRangeWrapper_ || (this.browserRangeWrapper_ = goog.dom.browserrange.createRangeFromNodes(this.getStartNode(), this.getStartOffset(), this.getEndNode(), this.getEndOffset()))
};
goog.dom.TextRange.prototype.getContainer = function() {
  return this.getBrowserRangeWrapper_().getContainer()
};
goog.dom.TextRange.prototype.getStartNode = function() {
  return this.startNode_ || (this.startNode_ = this.getBrowserRangeWrapper_().getStartNode())
};
goog.dom.TextRange.prototype.getStartOffset = function() {
  return null != this.startOffset_ ? this.startOffset_ : this.startOffset_ = this.getBrowserRangeWrapper_().getStartOffset()
};
goog.dom.TextRange.prototype.getEndNode = function() {
  return this.endNode_ || (this.endNode_ = this.getBrowserRangeWrapper_().getEndNode())
};
goog.dom.TextRange.prototype.getEndOffset = function() {
  return null != this.endOffset_ ? this.endOffset_ : this.endOffset_ = this.getBrowserRangeWrapper_().getEndOffset()
};
goog.dom.TextRange.prototype.isReversed = function() {
  return this.isReversed_
};
goog.dom.TextRange.prototype.containsRange = function(otherRange, opt_allowPartial) {
  var otherRangeType = otherRange.getType();
  if(otherRangeType == goog.dom.RangeType.TEXT) {
    return this.getBrowserRangeWrapper_().containsRange(otherRange.getBrowserRangeWrapper_(), opt_allowPartial)
  }
  if(otherRangeType == goog.dom.RangeType.CONTROL) {
    var elements = otherRange.getElements(), fn = opt_allowPartial ? goog.array.some : goog.array.every;
    return fn(elements, function(el) {
      return this.containsNode(el, opt_allowPartial)
    }, this)
  }
  return!1
};
goog.dom.TextRange.isAttachedNode = function(node) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var returnValue = !1;
    try {
      returnValue = node.parentNode
    }catch(e) {
    }
    return!!returnValue
  }
  return goog.dom.contains(node.ownerDocument.body, node)
};
goog.dom.TextRange.prototype.isCollapsed = function() {
  return this.getBrowserRangeWrapper_().isCollapsed()
};
goog.dom.TextRange.prototype.getText = function() {
  return this.getBrowserRangeWrapper_().getText()
};
goog.dom.TextRange.prototype.__iterator__ = function() {
  return new goog.dom.TextRangeIterator(this.getStartNode(), this.getStartOffset(), this.getEndNode(), this.getEndOffset())
};
goog.dom.TextRange.prototype.select = function() {
  this.getBrowserRangeWrapper_().select(this.isReversed_)
};
goog.dom.TextRange.prototype.surroundContents = function(element) {
  var output = this.getBrowserRangeWrapper_().surroundContents(element);
  this.clearCachedValues_();
  return output
};
goog.dom.TextRange.prototype.insertNode = function(node, before) {
  var output = this.getBrowserRangeWrapper_().insertNode(node, before);
  this.clearCachedValues_();
  return output
};
goog.dom.TextRange.prototype.surroundWithNodes = function(startNode, endNode) {
  this.getBrowserRangeWrapper_().surroundWithNodes(startNode, endNode);
  this.clearCachedValues_()
};
goog.dom.TextRange.prototype.saveUsingDom = function() {
  return new goog.dom.DomSavedTextRange_(this)
};
goog.dom.TextRange.prototype.collapse = function(toAnchor) {
  var toStart = this.isReversed() ? !toAnchor : toAnchor;
  this.browserRangeWrapper_ && this.browserRangeWrapper_.collapse(toStart);
  toStart ? (this.endNode_ = this.startNode_, this.endOffset_ = this.startOffset_) : (this.startNode_ = this.endNode_, this.startOffset_ = this.endOffset_);
  this.isReversed_ = !1
};
goog.dom.DomSavedTextRange_ = function(range) {
  this.anchorNode_ = range.getAnchorNode();
  this.anchorOffset_ = range.getAnchorOffset();
  this.focusNode_ = range.getFocusNode();
  this.focusOffset_ = range.getFocusOffset()
};
goog.inherits(goog.dom.DomSavedTextRange_, goog.dom.SavedRange);
goog.dom.DomSavedTextRange_.prototype.restoreInternal = function() {
  return goog.dom.Range.createFromNodes(this.anchorNode_, this.anchorOffset_, this.focusNode_, this.focusOffset_)
};
goog.dom.DomSavedTextRange_.prototype.disposeInternal = function() {
  goog.dom.DomSavedTextRange_.superClass_.disposeInternal.call(this);
  this.focusNode_ = this.anchorNode_ = null
};
// Input 47
goog.dom.ControlRange = function() {
};
goog.inherits(goog.dom.ControlRange, goog.dom.AbstractMultiRange);
goog.dom.ControlRange.createFromBrowserRange = function(controlRange) {
  var range = new goog.dom.ControlRange;
  range.range_ = controlRange;
  return range
};
goog.dom.ControlRange.createFromElements = function(var_args) {
  for(var range = goog.dom.getOwnerDocument(arguments[0]).body.createControlRange(), i = 0, len = arguments.length;i < len;i++) {
    range.addElement(arguments[i])
  }
  return goog.dom.ControlRange.createFromBrowserRange(range)
};
goog.dom.ControlRange.prototype.range_ = null;
goog.dom.ControlRange.prototype.elements_ = null;
goog.dom.ControlRange.prototype.sortedElements_ = null;
goog.dom.ControlRange.prototype.clearCachedValues_ = function() {
  this.sortedElements_ = this.elements_ = null
};
goog.dom.ControlRange.prototype.clone = function() {
  return goog.dom.ControlRange.createFromElements.apply(this, this.getElements())
};
goog.dom.ControlRange.prototype.getType = function() {
  return goog.dom.RangeType.CONTROL
};
goog.dom.ControlRange.prototype.getBrowserRangeObject = function() {
  return this.range_ || document.body.createControlRange()
};
goog.dom.ControlRange.prototype.getTextRangeCount = function() {
  return this.range_ ? this.range_.length : 0
};
goog.dom.ControlRange.prototype.getTextRange = function(i) {
  return goog.dom.TextRange.createFromNodeContents(this.range_.item(i))
};
goog.dom.ControlRange.prototype.getContainer = function() {
  return goog.dom.findCommonAncestor.apply(null, this.getElements())
};
goog.dom.ControlRange.prototype.getStartNode = function() {
  return this.getSortedElements()[0]
};
goog.dom.ControlRange.prototype.getStartOffset = function() {
  return 0
};
goog.dom.ControlRange.prototype.getEndNode = function() {
  var sorted = this.getSortedElements(), startsLast = goog.array.peek(sorted);
  return goog.array.find(sorted, function(el) {
    return goog.dom.contains(el, startsLast)
  })
};
goog.dom.ControlRange.prototype.getEndOffset = function() {
  return this.getEndNode().childNodes.length
};
goog.dom.ControlRange.prototype.getElements = function() {
  if(!this.elements_ && (this.elements_ = [], this.range_)) {
    for(var i = 0;i < this.range_.length;i++) {
      this.elements_.push(this.range_.item(i))
    }
  }
  return this.elements_
};
goog.dom.ControlRange.prototype.getSortedElements = function() {
  this.sortedElements_ || (this.sortedElements_ = this.getElements().concat(), this.sortedElements_.sort(function(a, b) {
    return a.sourceIndex - b.sourceIndex
  }));
  return this.sortedElements_
};
goog.dom.ControlRange.prototype.isCollapsed = function() {
  return!this.range_ || !this.range_.length
};
goog.dom.ControlRange.prototype.getText = function() {
  return""
};
goog.dom.ControlRange.prototype.__iterator__ = function() {
  return new goog.dom.ControlRangeIterator(this)
};
goog.dom.ControlRange.prototype.select = function() {
  this.range_ && this.range_.select()
};
goog.dom.ControlRange.prototype.saveUsingDom = function() {
  return new goog.dom.DomSavedControlRange_(this)
};
goog.dom.ControlRange.prototype.collapse = function() {
  this.range_ = null;
  this.clearCachedValues_()
};
goog.dom.DomSavedControlRange_ = function(range) {
  this.elements_ = range.getElements()
};
goog.inherits(goog.dom.DomSavedControlRange_, goog.dom.SavedRange);
goog.dom.DomSavedControlRange_.prototype.restoreInternal = function() {
  for(var doc = this.elements_.length ? goog.dom.getOwnerDocument(this.elements_[0]) : document, controlRange = doc.body.createControlRange(), i = 0, len = this.elements_.length;i < len;i++) {
    controlRange.addElement(this.elements_[i])
  }
  return goog.dom.ControlRange.createFromBrowserRange(controlRange)
};
goog.dom.DomSavedControlRange_.prototype.disposeInternal = function() {
  goog.dom.DomSavedControlRange_.superClass_.disposeInternal.call(this);
  delete this.elements_
};
goog.dom.ControlRangeIterator = function(range) {
  range && (this.elements_ = range.getSortedElements(), this.startNode_ = this.elements_.shift(), this.endNode_ = goog.array.peek(this.elements_) || this.startNode_);
  goog.dom.RangeIterator.call(this, this.startNode_, !1)
};
goog.inherits(goog.dom.ControlRangeIterator, goog.dom.RangeIterator);
goog.dom.ControlRangeIterator.prototype.startNode_ = null;
goog.dom.ControlRangeIterator.prototype.endNode_ = null;
goog.dom.ControlRangeIterator.prototype.elements_ = null;
goog.dom.ControlRangeIterator.prototype.getStartNode = function() {
  return this.startNode_
};
goog.dom.ControlRangeIterator.prototype.getEndNode = function() {
  return this.endNode_
};
goog.dom.ControlRangeIterator.prototype.isLast = function() {
  return!this.depth && !this.elements_.length
};
goog.dom.ControlRangeIterator.prototype.next = function() {
  if(this.isLast()) {
    throw goog.iter.StopIteration;
  }
  if(!this.depth) {
    var el = this.elements_.shift();
    this.setPosition(el, goog.dom.TagWalkType.START_TAG, goog.dom.TagWalkType.START_TAG);
    return el
  }
  return goog.dom.ControlRangeIterator.superClass_.next.call(this)
};
goog.dom.ControlRangeIterator.prototype.copyFrom = function(other) {
  this.elements_ = other.elements_;
  this.startNode_ = other.startNode_;
  this.endNode_ = other.endNode_;
  goog.dom.ControlRangeIterator.superClass_.copyFrom.call(this, other)
};
goog.dom.ControlRangeIterator.prototype.clone = function() {
  var copy = new goog.dom.ControlRangeIterator(null);
  copy.copyFrom(this);
  return copy
};
// Input 48
goog.dom.MultiRange = function() {
  this.browserRanges_ = [];
  this.ranges_ = [];
  this.container_ = this.sortedRanges_ = null
};
goog.inherits(goog.dom.MultiRange, goog.dom.AbstractMultiRange);
goog.dom.MultiRange.createFromBrowserSelection = function(selection) {
  for(var range = new goog.dom.MultiRange, i = 0, len = selection.rangeCount;i < len;i++) {
    range.browserRanges_.push(selection.getRangeAt(i))
  }
  return range
};
goog.dom.MultiRange.createFromBrowserRanges = function(browserRanges) {
  var range = new goog.dom.MultiRange;
  range.browserRanges_ = goog.array.clone(browserRanges);
  return range
};
goog.dom.MultiRange.createFromTextRanges = function(textRanges) {
  var range$$0 = new goog.dom.MultiRange;
  range$$0.ranges_ = textRanges;
  range$$0.browserRanges_ = goog.array.map(textRanges, function(range) {
    return range.getBrowserRangeObject()
  });
  return range$$0
};
goog.dom.MultiRange.prototype.logger_ = goog.log.getLogger("goog.dom.MultiRange");
goog.dom.MultiRange.prototype.clearCachedValues_ = function() {
  this.ranges_ = [];
  this.container_ = this.sortedRanges_ = null
};
goog.dom.MultiRange.prototype.clone = function() {
  return goog.dom.MultiRange.createFromBrowserRanges(this.browserRanges_)
};
goog.dom.MultiRange.prototype.getType = function() {
  return goog.dom.RangeType.MULTI
};
goog.dom.MultiRange.prototype.getBrowserRangeObject = function() {
  1 < this.browserRanges_.length && goog.log.warning(this.logger_, "getBrowserRangeObject called on MultiRange with more than 1 range");
  return this.browserRanges_[0]
};
goog.dom.MultiRange.prototype.getTextRangeCount = function() {
  return this.browserRanges_.length
};
goog.dom.MultiRange.prototype.getTextRange = function(i) {
  this.ranges_[i] || (this.ranges_[i] = goog.dom.TextRange.createFromBrowserRange(this.browserRanges_[i]));
  return this.ranges_[i]
};
goog.dom.MultiRange.prototype.getContainer = function() {
  if(!this.container_) {
    for(var nodes = [], i = 0, len = this.getTextRangeCount();i < len;i++) {
      nodes.push(this.getTextRange(i).getContainer())
    }
    this.container_ = goog.dom.findCommonAncestor.apply(null, nodes)
  }
  return this.container_
};
goog.dom.MultiRange.prototype.getSortedRanges = function() {
  this.sortedRanges_ || (this.sortedRanges_ = this.getTextRanges(), this.sortedRanges_.sort(function(a, b) {
    var aStartNode = a.getStartNode(), aStartOffset = a.getStartOffset(), bStartNode = b.getStartNode(), bStartOffset = b.getStartOffset();
    return aStartNode == bStartNode && aStartOffset == bStartOffset ? 0 : goog.dom.Range.isReversed(aStartNode, aStartOffset, bStartNode, bStartOffset) ? 1 : -1
  }));
  return this.sortedRanges_
};
goog.dom.MultiRange.prototype.getStartNode = function() {
  return this.getSortedRanges()[0].getStartNode()
};
goog.dom.MultiRange.prototype.getStartOffset = function() {
  return this.getSortedRanges()[0].getStartOffset()
};
goog.dom.MultiRange.prototype.getEndNode = function() {
  return goog.array.peek(this.getSortedRanges()).getEndNode()
};
goog.dom.MultiRange.prototype.getEndOffset = function() {
  return goog.array.peek(this.getSortedRanges()).getEndOffset()
};
goog.dom.MultiRange.prototype.isCollapsed = function() {
  return 0 == this.browserRanges_.length || 1 == this.browserRanges_.length && this.getTextRange(0).isCollapsed()
};
goog.dom.MultiRange.prototype.getText = function() {
  return goog.array.map(this.getTextRanges(), function(range) {
    return range.getText()
  }).join("")
};
goog.dom.MultiRange.prototype.__iterator__ = function() {
  return new goog.dom.MultiRangeIterator(this)
};
goog.dom.MultiRange.prototype.select = function() {
  var selection = goog.dom.AbstractRange.getBrowserSelectionForWindow(this.getWindow());
  selection.removeAllRanges();
  for(var i = 0, len = this.getTextRangeCount();i < len;i++) {
    selection.addRange(this.getTextRange(i).getBrowserRangeObject())
  }
};
goog.dom.MultiRange.prototype.saveUsingDom = function() {
  return new goog.dom.DomSavedMultiRange_(this)
};
goog.dom.MultiRange.prototype.collapse = function(toAnchor) {
  if(!this.isCollapsed()) {
    var range = toAnchor ? this.getTextRange(0) : this.getTextRange(this.getTextRangeCount() - 1);
    this.clearCachedValues_();
    range.collapse(toAnchor);
    this.ranges_ = [range];
    this.sortedRanges_ = [range];
    this.browserRanges_ = [range.getBrowserRangeObject()]
  }
};
goog.dom.DomSavedMultiRange_ = function(range$$0) {
  this.savedRanges_ = goog.array.map(range$$0.getTextRanges(), function(range) {
    return range.saveUsingDom()
  })
};
goog.inherits(goog.dom.DomSavedMultiRange_, goog.dom.SavedRange);
goog.dom.DomSavedMultiRange_.prototype.restoreInternal = function() {
  var ranges = goog.array.map(this.savedRanges_, function(savedRange) {
    return savedRange.restore()
  });
  return goog.dom.MultiRange.createFromTextRanges(ranges)
};
goog.dom.DomSavedMultiRange_.prototype.disposeInternal = function() {
  goog.dom.DomSavedMultiRange_.superClass_.disposeInternal.call(this);
  goog.array.forEach(this.savedRanges_, function(savedRange) {
    savedRange.dispose()
  });
  delete this.savedRanges_
};
goog.dom.MultiRangeIterator = function(range) {
  range && (this.iterators_ = goog.array.map(range.getSortedRanges(), function(r) {
    return goog.iter.toIterator(r)
  }));
  goog.dom.RangeIterator.call(this, range ? this.getStartNode() : null, !1)
};
goog.inherits(goog.dom.MultiRangeIterator, goog.dom.RangeIterator);
goog.dom.MultiRangeIterator.prototype.iterators_ = null;
goog.dom.MultiRangeIterator.prototype.currentIdx_ = 0;
goog.dom.MultiRangeIterator.prototype.getStartNode = function() {
  return this.iterators_[0].getStartNode()
};
goog.dom.MultiRangeIterator.prototype.getEndNode = function() {
  return goog.array.peek(this.iterators_).getEndNode()
};
goog.dom.MultiRangeIterator.prototype.isLast = function() {
  return this.iterators_[this.currentIdx_].isLast()
};
goog.dom.MultiRangeIterator.prototype.next = function() {
  try {
    var it = this.iterators_[this.currentIdx_], next = it.next();
    this.setPosition(it.node, it.tagType, it.depth);
    return next
  }catch(ex) {
    if(ex !== goog.iter.StopIteration || this.iterators_.length - 1 == this.currentIdx_) {
      throw ex;
    }
    this.currentIdx_++;
    return this.next()
  }
};
goog.dom.MultiRangeIterator.prototype.copyFrom = function(other) {
  this.iterators_ = goog.array.clone(other.iterators_);
  goog.dom.MultiRangeIterator.superClass_.copyFrom.call(this, other)
};
goog.dom.MultiRangeIterator.prototype.clone = function() {
  var copy = new goog.dom.MultiRangeIterator(null);
  copy.copyFrom(this);
  return copy
};
// Input 49
goog.dom.Range = {};
goog.dom.Range.createFromWindow = function(opt_win) {
  var sel = goog.dom.AbstractRange.getBrowserSelectionForWindow(opt_win || window);
  return sel && goog.dom.Range.createFromBrowserSelection(sel)
};
goog.dom.Range.createFromBrowserSelection = function(selection) {
  var range, isReversed = !1;
  if(selection.createRange) {
    try {
      range = selection.createRange()
    }catch(e) {
      return null
    }
  }else {
    if(selection.rangeCount) {
      if(1 < selection.rangeCount) {
        return goog.dom.MultiRange.createFromBrowserSelection(selection)
      }
      range = selection.getRangeAt(0);
      isReversed = goog.dom.Range.isReversed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset)
    }else {
      return null
    }
  }
  return goog.dom.Range.createFromBrowserRange(range, isReversed)
};
goog.dom.Range.createFromBrowserRange = function(range, opt_isReversed) {
  return goog.dom.AbstractRange.isNativeControlRange(range) ? goog.dom.ControlRange.createFromBrowserRange(range) : goog.dom.TextRange.createFromBrowserRange(range, opt_isReversed)
};
goog.dom.Range.createFromNodeContents = function(node, opt_isReversed) {
  return goog.dom.TextRange.createFromNodeContents(node, opt_isReversed)
};
goog.dom.Range.createCaret = function(node, offset) {
  return goog.dom.TextRange.createFromNodes(node, offset, node, offset)
};
goog.dom.Range.createFromNodes = function(anchorNode, anchorOffset, focusNode, focusOffset) {
  return goog.dom.TextRange.createFromNodes(anchorNode, anchorOffset, focusNode, focusOffset)
};
goog.dom.Range.clearSelection = function(opt_win) {
  var sel = goog.dom.AbstractRange.getBrowserSelectionForWindow(opt_win || window);
  if(sel) {
    if(sel.empty) {
      try {
        sel.empty()
      }catch(e) {
      }
    }else {
      try {
        sel.removeAllRanges()
      }catch(e$$0) {
      }
    }
  }
};
goog.dom.Range.hasSelection = function(opt_win) {
  var sel = goog.dom.AbstractRange.getBrowserSelectionForWindow(opt_win || window);
  return!!sel && (goog.userAgent.IE ? "None" != sel.type : !!sel.rangeCount)
};
goog.dom.Range.isReversed = function(anchorNode, anchorOffset, focusNode, focusOffset) {
  if(anchorNode == focusNode) {
    return focusOffset < anchorOffset
  }
  var child;
  if(anchorNode.nodeType == goog.dom.NodeType.ELEMENT && anchorOffset) {
    if(child = anchorNode.childNodes[anchorOffset]) {
      anchorNode = child, anchorOffset = 0
    }else {
      if(goog.dom.contains(anchorNode, focusNode)) {
        return!0
      }
    }
  }
  if(focusNode.nodeType == goog.dom.NodeType.ELEMENT && focusOffset) {
    if(child = focusNode.childNodes[focusOffset]) {
      focusNode = child, focusOffset = 0
    }else {
      if(goog.dom.contains(focusNode, anchorNode)) {
        return!1
      }
    }
  }
  return 0 < (goog.dom.compareNodeOrder(anchorNode, focusNode) || anchorOffset - focusOffset)
};
// Input 50
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return":" + (this.nextId_++).toString(36)
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
// Input 51
goog.ui.Component = function(opt_domHelper) {
  goog.events.EventTarget.call(this);
  this.dom_ = opt_domHelper || goog.dom.getDomHelper();
  this.rightToLeft_ = goog.ui.Component.defaultRightToLeft_
};
goog.inherits(goog.ui.Component, goog.events.EventTarget);
goog.ui.Component.ALLOW_DETACHED_DECORATION = !1;
goog.ui.Component.prototype.idGenerator_ = goog.ui.IdGenerator.getInstance();
goog.ui.Component.defaultRightToLeft_ = null;
goog.ui.Component.EventType = {BEFORE_SHOW:"beforeshow", SHOW:"show", HIDE:"hide", DISABLE:"disable", ENABLE:"enable", HIGHLIGHT:"highlight", UNHIGHLIGHT:"unhighlight", ACTIVATE:"activate", DEACTIVATE:"deactivate", SELECT:"select", UNSELECT:"unselect", CHECK:"check", UNCHECK:"uncheck", FOCUS:"focus", BLUR:"blur", OPEN:"open", CLOSE:"close", ENTER:"enter", LEAVE:"leave", ACTION:"action", CHANGE:"change"};
goog.ui.Component.Error = {NOT_SUPPORTED:"Method not supported", DECORATE_INVALID:"Invalid element to decorate", ALREADY_RENDERED:"Component already rendered", PARENT_UNABLE_TO_BE_SET:"Unable to set parent component", CHILD_INDEX_OUT_OF_BOUNDS:"Child component index out of bounds", NOT_OUR_CHILD:"Child is not in parent component", NOT_IN_DOCUMENT:"Operation not supported while component is not in document", STATE_INVALID:"Invalid component state"};
goog.ui.Component.State = {ALL:255, DISABLED:1, HOVER:2, ACTIVE:4, SELECTED:8, CHECKED:16, FOCUSED:32, OPENED:64};
goog.ui.Component.getStateTransitionEvent = function(state, isEntering) {
  switch(state) {
    case goog.ui.Component.State.DISABLED:
      return isEntering ? goog.ui.Component.EventType.DISABLE : goog.ui.Component.EventType.ENABLE;
    case goog.ui.Component.State.HOVER:
      return isEntering ? goog.ui.Component.EventType.HIGHLIGHT : goog.ui.Component.EventType.UNHIGHLIGHT;
    case goog.ui.Component.State.ACTIVE:
      return isEntering ? goog.ui.Component.EventType.ACTIVATE : goog.ui.Component.EventType.DEACTIVATE;
    case goog.ui.Component.State.SELECTED:
      return isEntering ? goog.ui.Component.EventType.SELECT : goog.ui.Component.EventType.UNSELECT;
    case goog.ui.Component.State.CHECKED:
      return isEntering ? goog.ui.Component.EventType.CHECK : goog.ui.Component.EventType.UNCHECK;
    case goog.ui.Component.State.FOCUSED:
      return isEntering ? goog.ui.Component.EventType.FOCUS : goog.ui.Component.EventType.BLUR;
    case goog.ui.Component.State.OPENED:
      return isEntering ? goog.ui.Component.EventType.OPEN : goog.ui.Component.EventType.CLOSE
  }
  throw Error(goog.ui.Component.Error.STATE_INVALID);
};
goog.ui.Component.setDefaultRightToLeft = function(rightToLeft) {
  goog.ui.Component.defaultRightToLeft_ = rightToLeft
};
goog.ui.Component.prototype.id_ = null;
goog.ui.Component.prototype.inDocument_ = !1;
goog.ui.Component.prototype.element_ = null;
goog.ui.Component.prototype.rightToLeft_ = null;
goog.ui.Component.prototype.model_ = null;
goog.ui.Component.prototype.parent_ = null;
goog.ui.Component.prototype.children_ = null;
goog.ui.Component.prototype.childIndex_ = null;
goog.ui.Component.prototype.wasDecorated_ = !1;
goog.ui.Component.prototype.getId = function() {
  return this.id_ || (this.id_ = this.idGenerator_.getNextUniqueId())
};
goog.ui.Component.prototype.setId = function(id) {
  this.parent_ && this.parent_.childIndex_ && (goog.object.remove(this.parent_.childIndex_, this.id_), goog.object.add(this.parent_.childIndex_, id, this));
  this.id_ = id
};
goog.ui.Component.prototype.getElement = function() {
  return this.element_
};
goog.ui.Component.prototype.getElementStrict = function() {
  var el = this.element_;
  goog.asserts.assert(el, "Can not call getElementStrict before rendering/decorating.");
  return el
};
goog.ui.Component.prototype.setElementInternal = function(element) {
  this.element_ = element
};
goog.ui.Component.prototype.getElementsByClass = function(className) {
  return this.element_ ? this.dom_.getElementsByClass(className, this.element_) : []
};
goog.ui.Component.prototype.getElementByClass = function(className) {
  return this.element_ ? this.dom_.getElementByClass(className, this.element_) : null
};
goog.ui.Component.prototype.getHandler = function() {
  return this.googUiComponentHandler_ || (this.googUiComponentHandler_ = new goog.events.EventHandler(this))
};
goog.ui.Component.prototype.setParent = function(parent) {
  if(this == parent) {
    throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);
  }
  if(parent && this.parent_ && this.id_ && this.parent_.getChild(this.id_) && this.parent_ != parent) {
    throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);
  }
  this.parent_ = parent;
  goog.ui.Component.superClass_.setParentEventTarget.call(this, parent)
};
goog.ui.Component.prototype.getParent = function() {
  return this.parent_
};
goog.ui.Component.prototype.setParentEventTarget = function(parent) {
  if(this.parent_ && this.parent_ != parent) {
    throw Error(goog.ui.Component.Error.NOT_SUPPORTED);
  }
  goog.ui.Component.superClass_.setParentEventTarget.call(this, parent)
};
goog.ui.Component.prototype.getDomHelper = function() {
  return this.dom_
};
goog.ui.Component.prototype.isInDocument = function() {
  return this.inDocument_
};
goog.ui.Component.prototype.createDom = function() {
  this.element_ = this.dom_.createElement("div")
};
goog.ui.Component.prototype.render = function(opt_parentElement) {
  this.render_(opt_parentElement)
};
goog.ui.Component.prototype.render_ = function(opt_parentElement, opt_beforeNode) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.element_ || this.createDom();
  opt_parentElement ? opt_parentElement.insertBefore(this.element_, opt_beforeNode || null) : this.dom_.getDocument().body.appendChild(this.element_);
  this.parent_ && !this.parent_.isInDocument() || this.enterDocument()
};
goog.ui.Component.prototype.decorate = function(element) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(element && this.canDecorate(element)) {
    this.wasDecorated_ = !0;
    var doc = goog.dom.getOwnerDocument(element);
    this.dom_ && this.dom_.getDocument() == doc || (this.dom_ = goog.dom.getDomHelper(element));
    this.decorateInternal(element);
    goog.ui.Component.ALLOW_DETACHED_DECORATION && !goog.dom.contains(doc, element) || this.enterDocument()
  }else {
    throw Error(goog.ui.Component.Error.DECORATE_INVALID);
  }
};
goog.ui.Component.prototype.canDecorate = function() {
  return!0
};
goog.ui.Component.prototype.decorateInternal = function(element) {
  this.element_ = element
};
goog.ui.Component.prototype.enterDocument = function() {
  this.inDocument_ = !0;
  this.forEachChild(function(child) {
    !child.isInDocument() && child.getElement() && child.enterDocument()
  })
};
goog.ui.Component.prototype.exitDocument = function() {
  this.forEachChild(function(child) {
    child.isInDocument() && child.exitDocument()
  });
  this.googUiComponentHandler_ && this.googUiComponentHandler_.removeAll();
  this.inDocument_ = !1
};
goog.ui.Component.prototype.disposeInternal = function() {
  this.inDocument_ && this.exitDocument();
  this.googUiComponentHandler_ && (this.googUiComponentHandler_.dispose(), delete this.googUiComponentHandler_);
  this.forEachChild(function(child) {
    child.dispose()
  });
  !this.wasDecorated_ && this.element_ && goog.dom.removeNode(this.element_);
  this.parent_ = this.model_ = this.element_ = this.childIndex_ = this.children_ = null;
  goog.ui.Component.superClass_.disposeInternal.call(this)
};
goog.ui.Component.prototype.makeId = function(idFragment) {
  return this.getId() + "." + idFragment
};
goog.ui.Component.prototype.getModel = function() {
  return this.model_
};
goog.ui.Component.prototype.setModel = function(obj) {
  this.model_ = obj
};
goog.ui.Component.prototype.addChild = function(child, opt_render) {
  this.addChildAt(child, this.getChildCount(), opt_render)
};
goog.ui.Component.prototype.addChildAt = function(child, index, opt_render) {
  if(child.inDocument_ && (opt_render || !this.inDocument_)) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(0 > index || index > this.getChildCount()) {
    throw Error(goog.ui.Component.Error.CHILD_INDEX_OUT_OF_BOUNDS);
  }
  this.childIndex_ && this.children_ || (this.childIndex_ = {}, this.children_ = []);
  child.getParent() == this ? (goog.object.set(this.childIndex_, child.getId(), child), goog.array.remove(this.children_, child)) : goog.object.add(this.childIndex_, child.getId(), child);
  child.setParent(this);
  goog.array.insertAt(this.children_, child, index);
  if(child.inDocument_ && this.inDocument_ && child.getParent() == this) {
    var contentElement = this.getContentElement();
    contentElement.insertBefore(child.getElement(), contentElement.childNodes[index] || null)
  }else {
    if(opt_render) {
      this.element_ || this.createDom();
      var sibling = this.getChildAt(index + 1);
      child.render_(this.getContentElement(), sibling ? sibling.element_ : null)
    }else {
      this.inDocument_ && !child.inDocument_ && child.element_ && child.element_.parentNode && child.element_.parentNode.nodeType == goog.dom.NodeType.ELEMENT && child.enterDocument()
    }
  }
};
goog.ui.Component.prototype.getContentElement = function() {
  return this.element_
};
goog.ui.Component.prototype.isRightToLeft = function() {
  null == this.rightToLeft_ && (this.rightToLeft_ = goog.style.isRightToLeft(this.inDocument_ ? this.element_ : this.dom_.getDocument().body));
  return this.rightToLeft_
};
goog.ui.Component.prototype.setRightToLeft = function(rightToLeft) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.rightToLeft_ = rightToLeft
};
goog.ui.Component.prototype.hasChildren = function() {
  return!!this.children_ && 0 != this.children_.length
};
goog.ui.Component.prototype.getChildCount = function() {
  return this.children_ ? this.children_.length : 0
};
goog.ui.Component.prototype.getChild = function(id) {
  return this.childIndex_ && id ? goog.object.get(this.childIndex_, id) || null : null
};
goog.ui.Component.prototype.getChildAt = function(index) {
  return this.children_ ? this.children_[index] || null : null
};
goog.ui.Component.prototype.forEachChild = function(f, opt_obj) {
  this.children_ && goog.array.forEach(this.children_, f, opt_obj)
};
goog.ui.Component.prototype.indexOfChild = function(child) {
  return this.children_ && child ? goog.array.indexOf(this.children_, child) : -1
};
goog.ui.Component.prototype.removeChild = function(child, opt_unrender) {
  if(child) {
    var id = goog.isString(child) ? child : child.getId();
    child = this.getChild(id);
    id && child && (goog.object.remove(this.childIndex_, id), goog.array.remove(this.children_, child), opt_unrender && (child.exitDocument(), child.element_ && goog.dom.removeNode(child.element_)), child.setParent(null))
  }
  if(!child) {
    throw Error(goog.ui.Component.Error.NOT_OUR_CHILD);
  }
  return child
};
goog.ui.Component.prototype.removeChildAt = function(index, opt_unrender) {
  return this.removeChild(this.getChildAt(index), opt_unrender)
};
goog.ui.Component.prototype.removeChildren = function(opt_unrender) {
  for(var removedChildren = [];this.hasChildren();) {
    removedChildren.push(this.removeChildAt(0, opt_unrender))
  }
  return removedChildren
};
// Input 52
goog.a11y = {};
goog.a11y.aria = {};
goog.a11y.aria.State = {ACTIVEDESCENDANT:"activedescendant", ATOMIC:"atomic", AUTOCOMPLETE:"autocomplete", BUSY:"busy", CHECKED:"checked", CONTROLS:"controls", DESCRIBEDBY:"describedby", DISABLED:"disabled", DROPEFFECT:"dropeffect", EXPANDED:"expanded", FLOWTO:"flowto", GRABBED:"grabbed", HASPOPUP:"haspopup", HIDDEN:"hidden", INVALID:"invalid", LABEL:"label", LABELLEDBY:"labelledby", LEVEL:"level", LIVE:"live", MULTILINE:"multiline", MULTISELECTABLE:"multiselectable", ORIENTATION:"orientation", OWNS:"owns", 
POSINSET:"posinset", PRESSED:"pressed", READONLY:"readonly", RELEVANT:"relevant", REQUIRED:"required", SELECTED:"selected", SETSIZE:"setsize", SORT:"sort", VALUEMAX:"valuemax", VALUEMIN:"valuemin", VALUENOW:"valuenow", VALUETEXT:"valuetext"};
goog.a11y.aria.AutoCompleteValues = {INLINE:"inline", LIST:"list", BOTH:"both", NONE:"none"};
goog.a11y.aria.DropEffectValues = {COPY:"copy", MOVE:"move", LINK:"link", EXECUTE:"execute", POPUP:"popup", NONE:"none"};
goog.a11y.aria.LivePriority = {OFF:"off", POLITE:"polite", ASSERTIVE:"assertive"};
goog.a11y.aria.OrientationValues = {VERTICAL:"vertical", HORIZONTAL:"horizontal"};
goog.a11y.aria.RelevantValues = {ADDITIONS:"additions", REMOVALS:"removals", TEXT:"text", ALL:"all"};
goog.a11y.aria.SortValues = {ASCENDING:"ascending", DESCENDING:"descending", NONE:"none", OTHER:"other"};
goog.a11y.aria.CheckedValues = {TRUE:"true", FALSE:"false", MIXED:"mixed", UNDEFINED:"undefined"};
goog.a11y.aria.ExpandedValues = {TRUE:"true", FALSE:"false", UNDEFINED:"undefined"};
goog.a11y.aria.GrabbedValues = {TRUE:"true", FALSE:"false", UNDEFINED:"undefined"};
goog.a11y.aria.InvalidValues = {FALSE:"false", TRUE:"true", GRAMMAR:"grammar", SPELLING:"spelling"};
goog.a11y.aria.PressedValues = {TRUE:"true", FALSE:"false", MIXED:"mixed", UNDEFINED:"undefined"};
goog.a11y.aria.SelectedValues = {TRUE:"true", FALSE:"false", UNDEFINED:"undefined"};
// Input 53
goog.a11y.aria.datatables = {};
goog.a11y.aria.datatables.getDefaultValuesMap = function() {
  goog.a11y.aria.DefaultStateValueMap_ || (goog.a11y.aria.DefaultStateValueMap_ = goog.object.create(goog.a11y.aria.State.ATOMIC, !1, goog.a11y.aria.State.AUTOCOMPLETE, "none", goog.a11y.aria.State.DROPEFFECT, "none", goog.a11y.aria.State.HASPOPUP, !1, goog.a11y.aria.State.LIVE, "off", goog.a11y.aria.State.MULTILINE, !1, goog.a11y.aria.State.MULTISELECTABLE, !1, goog.a11y.aria.State.ORIENTATION, "vertical", goog.a11y.aria.State.READONLY, !1, goog.a11y.aria.State.RELEVANT, "additions text", goog.a11y.aria.State.REQUIRED, 
  !1, goog.a11y.aria.State.SORT, "none", goog.a11y.aria.State.BUSY, !1, goog.a11y.aria.State.DISABLED, !1, goog.a11y.aria.State.HIDDEN, !1, goog.a11y.aria.State.INVALID, "false"));
  return goog.a11y.aria.DefaultStateValueMap_
};
// Input 54
goog.a11y.aria.Role = {ALERT:"alert", ALERTDIALOG:"alertdialog", APPLICATION:"application", ARTICLE:"article", BANNER:"banner", BUTTON:"button", CHECKBOX:"checkbox", COLUMNHEADER:"columnheader", COMBOBOX:"combobox", COMPLEMENTARY:"complementary", CONTENTINFO:"contentinfo", DEFINITION:"definition", DIALOG:"dialog", DIRECTORY:"directory", DOCUMENT:"document", FORM:"form", GRID:"grid", GRIDCELL:"gridcell", GROUP:"group", HEADING:"heading", IMG:"img", LINK:"link", LIST:"list", LISTBOX:"listbox", LISTITEM:"listitem", 
LOG:"log", MAIN:"main", MARQUEE:"marquee", MATH:"math", MENU:"menu", MENUBAR:"menubar", MENU_ITEM:"menuitem", MENU_ITEM_CHECKBOX:"menuitemcheckbox", MENU_ITEM_RADIO:"menuitemradio", NAVIGATION:"navigation", NOTE:"note", OPTION:"option", PRESENTATION:"presentation", PROGRESSBAR:"progressbar", RADIO:"radio", RADIOGROUP:"radiogroup", REGION:"region", ROW:"row", ROWGROUP:"rowgroup", ROWHEADER:"rowheader", SCROLLBAR:"scrollbar", SEARCH:"search", SEPARATOR:"separator", SLIDER:"slider", SPINBUTTON:"spinbutton", 
STATUS:"status", TAB:"tab", TAB_LIST:"tablist", TAB_PANEL:"tabpanel", TEXTBOX:"textbox", TIMER:"timer", TOOLBAR:"toolbar", TOOLTIP:"tooltip", TREE:"tree", TREEGRID:"treegrid", TREEITEM:"treeitem"};
// Input 55
goog.a11y.aria.ARIA_PREFIX_ = "aria-";
goog.a11y.aria.ROLE_ATTRIBUTE_ = "role";
goog.a11y.aria.TAGS_WITH_ASSUMED_ROLES_ = [goog.dom.TagName.A, goog.dom.TagName.AREA, goog.dom.TagName.BUTTON, goog.dom.TagName.HEAD, goog.dom.TagName.INPUT, goog.dom.TagName.LINK, goog.dom.TagName.MENU, goog.dom.TagName.META, goog.dom.TagName.OPTGROUP, goog.dom.TagName.OPTION, goog.dom.TagName.PROGRESS, goog.dom.TagName.STYLE, goog.dom.TagName.SELECT, goog.dom.TagName.SOURCE, goog.dom.TagName.TEXTAREA, goog.dom.TagName.TITLE, goog.dom.TagName.TRACK];
goog.a11y.aria.setRole = function(element, roleName) {
  roleName ? (goog.asserts.ENABLE_ASSERTS && goog.asserts.assert(goog.object.containsValue(goog.a11y.aria.Role, roleName), "No such ARIA role " + roleName), element.setAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_, roleName)) : goog.a11y.aria.removeRole(element)
};
goog.a11y.aria.getRole = function(element) {
  var role = element.getAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_);
  return role || null
};
goog.a11y.aria.removeRole = function(element) {
  element.removeAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_)
};
goog.a11y.aria.setState = function(element, stateName, value) {
  if(goog.isArrayLike(value)) {
    var array = value;
    value = array.join(" ")
  }
  var attrStateName = goog.a11y.aria.getAriaAttributeName_(stateName);
  if("" === value || void 0 == value) {
    var defaultValueMap = goog.a11y.aria.datatables.getDefaultValuesMap();
    stateName in defaultValueMap ? element.setAttribute(attrStateName, defaultValueMap[stateName]) : element.removeAttribute(attrStateName)
  }else {
    element.setAttribute(attrStateName, value)
  }
};
goog.a11y.aria.removeState = function(element, stateName) {
  element.removeAttribute(goog.a11y.aria.getAriaAttributeName_(stateName))
};
goog.a11y.aria.getState = function(element, stateName) {
  var attr = element.getAttribute(goog.a11y.aria.getAriaAttributeName_(stateName)), isNullOrUndefined = null == attr || void 0 == attr;
  return isNullOrUndefined ? "" : String(attr)
};
goog.a11y.aria.getActiveDescendant = function(element) {
  var id = goog.a11y.aria.getState(element, goog.a11y.aria.State.ACTIVEDESCENDANT);
  return goog.dom.getOwnerDocument(element).getElementById(id)
};
goog.a11y.aria.setActiveDescendant = function(element, activeElement) {
  var id = "";
  activeElement && (id = activeElement.id, goog.asserts.assert(id, "The active element should have an id."));
  goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, id)
};
goog.a11y.aria.getLabel = function(element) {
  return goog.a11y.aria.getState(element, goog.a11y.aria.State.LABEL)
};
goog.a11y.aria.setLabel = function(element, label) {
  goog.a11y.aria.setState(element, goog.a11y.aria.State.LABEL, label)
};
goog.a11y.aria.assertRoleIsSetInternalUtil = function(element, allowedRoles) {
  if(!goog.array.contains(goog.a11y.aria.TAGS_WITH_ASSUMED_ROLES_, element.tagName)) {
    var elementRole = goog.a11y.aria.getRole(element);
    goog.asserts.assert(null != elementRole, "The element ARIA role cannot be null.");
    goog.asserts.assert(goog.array.contains(allowedRoles, elementRole), 'Non existing or incorrect role set for element.The role set is "' + elementRole + '". The role should be any of "' + allowedRoles + '". Check the ARIA specification for more details http://www.w3.org/TR/wai-aria/roles.')
  }
};
goog.a11y.aria.getBooleanStateInternalUtil = function(element, stateName) {
  var stringValue = goog.a11y.aria.getState(element, stateName);
  return"true" == stringValue ? !0 : "false" == stringValue ? !1 : null
};
goog.a11y.aria.getNumberStateInternalUtil = function(element, stateName) {
  var stringValue = goog.a11y.aria.getState(element, stateName);
  return goog.string.isNumeric(stringValue) ? goog.string.toNumber(stringValue) : null
};
goog.a11y.aria.getStringArrayStateInternalUtil = function(element, stateName) {
  var attrValue = element.getAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));
  return goog.a11y.aria.splitStringOnWhitespace_(attrValue)
};
goog.a11y.aria.getStringStateInternalUtil = function(element, stateName) {
  var stringValue = goog.a11y.aria.getState(element, stateName);
  return stringValue || null
};
goog.a11y.aria.splitStringOnWhitespace_ = function(stringValue) {
  return stringValue ? stringValue.split(/\s+/) : []
};
goog.a11y.aria.getAriaAttributeName_ = function(ariaName) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.assert(ariaName, "ARIA attribute cannot be empty."), goog.asserts.assert(goog.object.containsValue(goog.a11y.aria.State, ariaName), "No such ARIA attribute " + ariaName));
  return goog.a11y.aria.ARIA_PREFIX_ + ariaName
};
// Input 56
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.registerDisposable(this.eventHandler_);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, !1, this)
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.enabled_ = !0;
goog.fx.Dragger.prototype.dragging_ = !1;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = !1;
goog.fx.Dragger.prototype.useRightPositioningForRtl_ = !1;
goog.fx.Dragger.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl
};
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN)
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, !1, this);
  this.cleanUpAfterDragging_();
  this.handle = this.target = null
};
goog.fx.Dragger.prototype.isRightToLeft_ = function() {
  goog.isDef(this.rightToLeft_) || (this.rightToLeft_ = goog.style.isRightToLeft(this.target));
  return this.rightToLeft_
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if(!this.enabled_ || this.dragging_ || isMouseDown && !e.isMouseActionButton()) {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }else {
    this.maybeReinitTouchEvent_(e);
    if(0 == this.hysteresisDistanceSquared_) {
      if(this.fireDragStart_(e)) {
        this.dragging_ = !0, e.preventDefault()
      }else {
        return
      }
    }else {
      e.preventDefault()
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.useRightPositioningForRtl_ ? goog.style.bidi.getOffsetStart(this.target) : this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    goog.now()
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_, docEl = doc.documentElement, useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  goog.fx.Dragger.HAS_SET_CAPTURE_ ? (docEl.setCapture(!1), this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag)) : this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag);
  goog.userAgent.IE && this.ieDragStartCancellingOn_ && this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault);
  this.scrollTarget_ && this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture)
};
goog.fx.Dragger.prototype.fireDragStart_ = function(e) {
  return this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e))
};
goog.fx.Dragger.prototype.cleanUpAfterDragging_ = function() {
  this.eventHandler_.removeAll();
  goog.fx.Dragger.HAS_SET_CAPTURE_ && this.document_.releaseCapture()
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.cleanUpAfterDragging_();
  if(this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = !1;
    var x = this.limitX(this.deltaX), y = this.limitY(this.deltaY), dragCanceled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCanceled))
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE ? e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget) : type != goog.events.EventType.TOUCHEND && type != goog.events.EventType.TOUCHCANCEL || e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget)
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if(this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var sign = this.useRightPositioningForRtl_ && this.isRightToLeft_() ? -1 : 1, dx = sign * (e.clientX - this.clientX), dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if(!this.dragging_) {
      var diffX = this.startX - this.clientX, diffY = this.startY - this.clientY, distance = diffX * diffX + diffY * diffY;
      if(distance > this.hysteresisDistanceSquared_) {
        if(this.fireDragStart_(e)) {
          this.dragging_ = !0
        }else {
          this.isDisposed() || this.endDrag(e);
          return
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy), x = pos.x, y = pos.y;
    if(this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      rv && (this.doDrag(e, x, y, !1), e.preventDefault())
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX), y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y)
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, !0)
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y))
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits, left = isNaN(rect.left) ? null : rect.left, width = isNaN(rect.width) ? 0 : rect.width, maxX = null != left ? left + width : Infinity, minX = null != left ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x))
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits, top = isNaN(rect.top) ? null : rect.top, height = isNaN(rect.height) ? 0 : rect.height, maxY = null != top ? top + height : Infinity, minY = null != top ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y))
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  this.useRightPositioningForRtl_ && this.isRightToLeft_() ? this.target.style.right = x + "px" : this.target.style.left = x + "px";
  this.target.style.top = y + "px"
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
// Input 57
goog.dom.iframe = {};
goog.dom.iframe.BLANK_SOURCE = 'javascript:""';
goog.dom.iframe.BLANK_SOURCE_NEW_FRAME = goog.userAgent.IE ? 'javascript:""' : "javascript:undefined";
goog.dom.iframe.STYLES_ = "border:0;vertical-align:bottom;";
goog.dom.iframe.createBlank = function(domHelper, opt_styles) {
  return domHelper.createDom("iframe", {frameborder:0, style:goog.dom.iframe.STYLES_ + (opt_styles || ""), src:goog.dom.iframe.BLANK_SOURCE})
};
goog.dom.iframe.writeContent = function(iframe, content) {
  var doc = goog.dom.getFrameContentDocument(iframe);
  doc.open();
  doc.write(content);
  doc.close()
};
goog.dom.iframe.createWithContent = function(parentElement, opt_headContents, opt_bodyContents, opt_styles, opt_quirks) {
  var domHelper = goog.dom.getDomHelper(parentElement), contentBuf = [];
  opt_quirks || contentBuf.push("<!DOCTYPE html>");
  contentBuf.push("<html><head>", opt_headContents, "</head><body>", opt_bodyContents, "</body></html>");
  var iframe = goog.dom.iframe.createBlank(domHelper, opt_styles);
  parentElement.appendChild(iframe);
  goog.dom.iframe.writeContent(iframe, contentBuf.join(""));
  return iframe
};
// Input 58
goog.events.FocusHandler = function(element) {
  goog.events.EventTarget.call(this);
  this.element_ = element;
  var typeIn = goog.userAgent.IE ? "focusin" : "focus", typeOut = goog.userAgent.IE ? "focusout" : "blur";
  this.listenKeyIn_ = goog.events.listen(this.element_, typeIn, this, !goog.userAgent.IE);
  this.listenKeyOut_ = goog.events.listen(this.element_, typeOut, this, !goog.userAgent.IE)
};
goog.inherits(goog.events.FocusHandler, goog.events.EventTarget);
goog.events.FocusHandler.EventType = {FOCUSIN:"focusin", FOCUSOUT:"focusout"};
goog.events.FocusHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent(), event = new goog.events.BrowserEvent(be);
  event.type = "focusin" == e.type || "focus" == e.type ? goog.events.FocusHandler.EventType.FOCUSIN : goog.events.FocusHandler.EventType.FOCUSOUT;
  this.dispatchEvent(event)
};
goog.events.FocusHandler.prototype.disposeInternal = function() {
  goog.events.FocusHandler.superClass_.disposeInternal.call(this);
  goog.events.unlistenByKey(this.listenKeyIn_);
  goog.events.unlistenByKey(this.listenKeyOut_);
  delete this.element_
};
// Input 59
goog.ui.ModalPopup = function(opt_useIframeMask, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.useIframeMask_ = !!opt_useIframeMask;
  this.lastFocus_ = null
};
goog.inherits(goog.ui.ModalPopup, goog.ui.Component);
goog.ui.ModalPopup.prototype.focusHandler_ = null;
goog.ui.ModalPopup.prototype.visible_ = !1;
goog.ui.ModalPopup.prototype.bgEl_ = null;
goog.ui.ModalPopup.prototype.bgIframeEl_ = null;
goog.ui.ModalPopup.prototype.tabCatcherElement_ = null;
goog.ui.ModalPopup.prototype.backwardTabWrapInProgress_ = !1;
goog.ui.ModalPopup.prototype.getCssClass = function() {
  return"charts-modalpopup"
};
goog.ui.ModalPopup.prototype.getBackgroundIframe = function() {
  return this.bgIframeEl_
};
goog.ui.ModalPopup.prototype.getBackgroundElement = function() {
  return this.bgEl_
};
goog.ui.ModalPopup.prototype.createDom = function() {
  goog.ui.ModalPopup.superClass_.createDom.call(this);
  var element = this.getElement();
  goog.dom.classes.add(element, this.getCssClass());
  goog.dom.setFocusableTabIndex(element, !0);
  goog.style.setElementShown(element, !1);
  this.manageBackgroundDom_();
  this.createTabCatcher_()
};
goog.ui.ModalPopup.prototype.manageBackgroundDom_ = function() {
  this.useIframeMask_ && !this.bgIframeEl_ && (this.bgIframeEl_ = goog.dom.iframe.createBlank(this.getDomHelper()), this.bgIframeEl_.className = this.getCssClass() + "-bg", goog.style.setElementShown(this.bgIframeEl_, !1), goog.style.setOpacity(this.bgIframeEl_, 0));
  this.bgEl_ || (this.bgEl_ = this.getDomHelper().createDom("div", this.getCssClass() + "-bg"), goog.style.setElementShown(this.bgEl_, !1))
};
goog.ui.ModalPopup.prototype.createTabCatcher_ = function() {
  this.tabCatcherElement_ || (this.tabCatcherElement_ = this.getDomHelper().createElement("span"), goog.style.setElementShown(this.tabCatcherElement_, !1), goog.dom.setFocusableTabIndex(this.tabCatcherElement_, !0), this.tabCatcherElement_.style.position = "absolute")
};
goog.ui.ModalPopup.prototype.setupBackwardTabWrap = function() {
  this.backwardTabWrapInProgress_ = !0;
  try {
    this.tabCatcherElement_.focus()
  }catch(e) {
  }
  goog.Timer.callOnce(this.resetBackwardTabWrap_, 0, this)
};
goog.ui.ModalPopup.prototype.resetBackwardTabWrap_ = function() {
  this.backwardTabWrapInProgress_ = !1
};
goog.ui.ModalPopup.prototype.renderBackground_ = function() {
  goog.asserts.assert(!!this.bgEl_, "Background element must not be null.");
  this.bgIframeEl_ && goog.dom.insertSiblingBefore(this.bgIframeEl_, this.getElement());
  goog.dom.insertSiblingBefore(this.bgEl_, this.getElement())
};
goog.ui.ModalPopup.prototype.canDecorate = function(element) {
  return!!element && element.tagName == goog.dom.TagName.DIV
};
goog.ui.ModalPopup.prototype.decorateInternal = function(element) {
  goog.ui.ModalPopup.superClass_.decorateInternal.call(this, element);
  goog.dom.classes.add(this.getElement(), this.getCssClass());
  this.manageBackgroundDom_();
  this.createTabCatcher_();
  goog.style.setElementShown(this.getElement(), !1)
};
goog.ui.ModalPopup.prototype.enterDocument = function() {
  this.renderBackground_();
  goog.ui.ModalPopup.superClass_.enterDocument.call(this);
  goog.dom.insertSiblingAfter(this.tabCatcherElement_, this.getElement());
  this.focusHandler_ = new goog.events.FocusHandler(this.getDomHelper().getDocument());
  this.getHandler().listen(this.focusHandler_, goog.events.FocusHandler.EventType.FOCUSIN, this.onFocus_);
  this.setA11YDetectBackground_(!1)
};
goog.ui.ModalPopup.prototype.exitDocument = function() {
  this.isVisible() && this.setVisible(!1);
  goog.dispose(this.focusHandler_);
  goog.ui.ModalPopup.superClass_.exitDocument.call(this);
  goog.dom.removeNode(this.bgIframeEl_);
  goog.dom.removeNode(this.bgEl_);
  goog.dom.removeNode(this.tabCatcherElement_)
};
goog.ui.ModalPopup.prototype.setVisible = function(visible) {
  goog.asserts.assert(this.isInDocument(), "ModalPopup must be rendered first.");
  visible != this.visible_ && (this.popupShowTransition_ && this.popupShowTransition_.stop(), this.bgShowTransition_ && this.bgShowTransition_.stop(), this.popupHideTransition_ && this.popupHideTransition_.stop(), this.bgHideTransition_ && this.bgHideTransition_.stop(), this.isInDocument() && this.setA11YDetectBackground_(visible), visible ? this.show_() : this.hide_())
};
goog.ui.ModalPopup.setAriaHidden_ = function(element, hide) {
  hide ? goog.a11y.aria.setState(element, goog.a11y.aria.State.HIDDEN, hide) : goog.a11y.aria.removeState(element, goog.a11y.aria.State.HIDDEN)
};
goog.ui.ModalPopup.prototype.setA11YDetectBackground_ = function(hide) {
  for(var child = this.getDomHelper().getDocument().body.firstChild;child;child = child.nextSibling) {
    child.nodeType == goog.dom.NodeType.ELEMENT && goog.ui.ModalPopup.setAriaHidden_(child, hide)
  }
  goog.ui.ModalPopup.setAriaHidden_(this.getElementStrict(), !hide)
};
goog.ui.ModalPopup.prototype.setTransition = function(popupShowTransition, popupHideTransition, bgShowTransition, bgHideTransition) {
  this.popupShowTransition_ = popupShowTransition;
  this.popupHideTransition_ = popupHideTransition;
  this.bgShowTransition_ = bgShowTransition;
  this.bgHideTransition_ = bgHideTransition
};
goog.ui.ModalPopup.prototype.show_ = function() {
  if(this.dispatchEvent(goog.ui.PopupBase.EventType.BEFORE_SHOW)) {
    try {
      this.lastFocus_ = this.getDomHelper().getDocument().activeElement
    }catch(e) {
    }
    this.resizeBackground_();
    this.reposition();
    this.getHandler().listen(this.getDomHelper().getWindow(), goog.events.EventType.RESIZE, this.resizeBackground_);
    this.showPopupElement_(!0);
    this.focus();
    this.visible_ = !0;
    if(this.popupShowTransition_ && this.bgShowTransition_) {
      goog.events.listenOnce(this.popupShowTransition_, goog.fx.Transition.EventType.END, this.onShow, !1, this), this.bgShowTransition_.play(), this.popupShowTransition_.play()
    }else {
      this.onShow()
    }
  }
};
goog.ui.ModalPopup.prototype.hide_ = function() {
  if(this.dispatchEvent(goog.ui.PopupBase.EventType.BEFORE_HIDE)) {
    this.getHandler().unlisten(this.getDomHelper().getWindow(), goog.events.EventType.RESIZE, this.resizeBackground_);
    this.visible_ = !1;
    if(this.popupHideTransition_ && this.bgHideTransition_) {
      goog.events.listenOnce(this.popupHideTransition_, goog.fx.Transition.EventType.END, this.onHide, !1, this), this.bgHideTransition_.play(), this.popupHideTransition_.play()
    }else {
      this.onHide()
    }
    try {
      var body = this.getDomHelper().getDocument().body, active = this.getDomHelper().getDocument().activeElement || body;
      this.lastFocus_ && active == body && this.lastFocus_ != body && this.lastFocus_.focus()
    }catch(e) {
    }
    this.lastFocus_ = null
  }
};
goog.ui.ModalPopup.prototype.showPopupElement_ = function(visible) {
  this.bgIframeEl_ && goog.style.setElementShown(this.bgIframeEl_, visible);
  this.bgEl_ && goog.style.setElementShown(this.bgEl_, visible);
  goog.style.setElementShown(this.getElement(), visible);
  goog.style.setElementShown(this.tabCatcherElement_, visible)
};
goog.ui.ModalPopup.prototype.onShow = function() {
  this.dispatchEvent(goog.ui.PopupBase.EventType.SHOW)
};
goog.ui.ModalPopup.prototype.onHide = function() {
  this.showPopupElement_(!1);
  this.dispatchEvent(goog.ui.PopupBase.EventType.HIDE)
};
goog.ui.ModalPopup.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.ModalPopup.prototype.focus = function() {
  this.focusElement_()
};
goog.ui.ModalPopup.prototype.resizeBackground_ = function() {
  this.bgIframeEl_ && goog.style.setElementShown(this.bgIframeEl_, !1);
  this.bgEl_ && goog.style.setElementShown(this.bgEl_, !1);
  var doc = this.getDomHelper().getDocument(), win = goog.dom.getWindow(doc) || window, viewSize = goog.dom.getViewportSize(win), w = Math.max(viewSize.width, Math.max(doc.body.scrollWidth, doc.documentElement.scrollWidth)), h = Math.max(viewSize.height, Math.max(doc.body.scrollHeight, doc.documentElement.scrollHeight));
  this.bgIframeEl_ && (goog.style.setElementShown(this.bgIframeEl_, !0), goog.style.setSize(this.bgIframeEl_, w, h));
  this.bgEl_ && (goog.style.setElementShown(this.bgEl_, !0), goog.style.setSize(this.bgEl_, w, h))
};
goog.ui.ModalPopup.prototype.reposition = function() {
  var doc = this.getDomHelper().getDocument(), win = goog.dom.getWindow(doc) || window;
  if("fixed" == goog.style.getComputedPosition(this.getElement())) {
    var x = 0, y = 0
  }else {
    var scroll = this.getDomHelper().getDocumentScroll(), x = scroll.x, y = scroll.y
  }
  var popupSize = goog.style.getSize(this.getElement()), viewSize = goog.dom.getViewportSize(win), left = Math.max(x + viewSize.width / 2 - popupSize.width / 2, 0), top = Math.max(y + viewSize.height / 2 - popupSize.height / 2, 0);
  goog.style.setPosition(this.getElement(), left, top);
  goog.style.setPosition(this.tabCatcherElement_, left, top)
};
goog.ui.ModalPopup.prototype.onFocus_ = function(e) {
  this.backwardTabWrapInProgress_ ? this.resetBackwardTabWrap_() : e.target == this.tabCatcherElement_ && goog.Timer.callOnce(this.focusElement_, 0, this)
};
goog.ui.ModalPopup.prototype.focusElement_ = function() {
  try {
    goog.userAgent.IE && this.getDomHelper().getDocument().body.focus(), this.getElement().focus()
  }catch(e) {
  }
};
goog.ui.ModalPopup.prototype.disposeInternal = function() {
  goog.dispose(this.popupShowTransition_);
  this.popupShowTransition_ = null;
  goog.dispose(this.popupHideTransition_);
  this.popupHideTransition_ = null;
  goog.dispose(this.bgShowTransition_);
  this.bgShowTransition_ = null;
  goog.dispose(this.bgHideTransition_);
  this.bgHideTransition_ = null;
  goog.ui.ModalPopup.superClass_.disposeInternal.call(this)
};
// Input 60
goog.ui.Dialog = function(opt_class, opt_useIframeMask, opt_domHelper) {
  goog.ui.ModalPopup.call(this, opt_useIframeMask, opt_domHelper);
  this.class_ = opt_class || "modal-dialog";
  this.buttons_ = goog.ui.Dialog.ButtonSet.createOkCancel()
};
goog.inherits(goog.ui.Dialog, goog.ui.ModalPopup);
goog.ui.Dialog.prototype.escapeToCancel_ = !0;
goog.ui.Dialog.prototype.hasTitleCloseButton_ = !0;
goog.ui.Dialog.prototype.modal_ = !0;
goog.ui.Dialog.prototype.draggable_ = !0;
goog.ui.Dialog.prototype.backgroundElementOpacity_ = 0.5;
goog.ui.Dialog.prototype.title_ = "";
goog.ui.Dialog.prototype.content_ = "";
goog.ui.Dialog.prototype.dragger_ = null;
goog.ui.Dialog.prototype.disposeOnHide_ = !1;
goog.ui.Dialog.prototype.titleEl_ = null;
goog.ui.Dialog.prototype.titleTextEl_ = null;
goog.ui.Dialog.prototype.titleId_ = null;
goog.ui.Dialog.prototype.titleCloseEl_ = null;
goog.ui.Dialog.prototype.contentEl_ = null;
goog.ui.Dialog.prototype.buttonEl_ = null;
goog.ui.Dialog.prototype.preferredAriaRole_ = goog.a11y.aria.Role.DIALOG;
goog.ui.Dialog.prototype.getCssClass = function() {
  return this.class_
};
goog.ui.Dialog.prototype.setTitle = function(title) {
  this.title_ = title;
  this.titleTextEl_ && goog.dom.setTextContent(this.titleTextEl_, title)
};
goog.ui.Dialog.prototype.getTitle = function() {
  return this.title_
};
goog.ui.Dialog.prototype.setContent = function(html) {
  this.content_ = html;
  this.contentEl_ && (this.contentEl_.innerHTML = html)
};
goog.ui.Dialog.prototype.getContent = function() {
  return this.content_
};
goog.ui.Dialog.prototype.getPreferredAriaRole = function() {
  return this.preferredAriaRole_
};
goog.ui.Dialog.prototype.setPreferredAriaRole = function(role) {
  this.preferredAriaRole_ = role
};
goog.ui.Dialog.prototype.renderIfNoDom_ = function() {
  this.getElement() || this.render()
};
goog.ui.Dialog.prototype.getContentElement = function() {
  this.renderIfNoDom_();
  return this.contentEl_
};
goog.ui.Dialog.prototype.getTitleTextElement = function() {
  this.renderIfNoDom_();
  return this.titleTextEl_
};
goog.ui.Dialog.prototype.getButtonElement = function() {
  this.renderIfNoDom_();
  return this.buttonEl_
};
goog.ui.Dialog.prototype.getDialogElement = function() {
  this.renderIfNoDom_();
  return this.getElement()
};
goog.ui.Dialog.prototype.getBackgroundElement = function() {
  this.renderIfNoDom_();
  return goog.ui.Dialog.superClass_.getBackgroundElement.call(this)
};
goog.ui.Dialog.prototype.setBackgroundElementOpacity = function(opacity) {
  this.backgroundElementOpacity_ = opacity;
  if(this.getElement()) {
    var bgEl = this.getBackgroundElement();
    bgEl && goog.style.setOpacity(bgEl, this.backgroundElementOpacity_)
  }
};
goog.ui.Dialog.prototype.setModal = function(modal) {
  modal != this.modal_ && this.setModalInternal_(modal)
};
goog.ui.Dialog.prototype.setModalInternal_ = function(modal) {
  this.modal_ = modal;
  if(this.isInDocument()) {
    var dom = this.getDomHelper(), bg = this.getBackgroundElement(), bgIframe = this.getBackgroundIframe();
    modal ? (bgIframe && dom.insertSiblingBefore(bgIframe, this.getElement()), dom.insertSiblingBefore(bg, this.getElement())) : (dom.removeNode(bgIframe), dom.removeNode(bg))
  }
};
goog.ui.Dialog.prototype.getClass = function() {
  return this.getCssClass()
};
goog.ui.Dialog.prototype.setDraggable = function(draggable) {
  this.draggable_ = draggable;
  this.setDraggingEnabled_(draggable && this.isInDocument())
};
goog.ui.Dialog.prototype.createDragger = function() {
  return new goog.fx.Dragger(this.getElement(), this.titleEl_)
};
goog.ui.Dialog.prototype.getDraggable = function() {
  return this.draggable_
};
goog.ui.Dialog.prototype.setDraggingEnabled_ = function(enabled) {
  this.getElement() && goog.dom.classes.enable(this.titleEl_, this.class_ + "-title-draggable", enabled);
  enabled && !this.dragger_ ? (this.dragger_ = this.createDragger(), goog.dom.classes.add(this.titleEl_, this.class_ + "-title-draggable"), goog.events.listen(this.dragger_, goog.fx.Dragger.EventType.START, this.setDraggerLimits_, !1, this)) : !enabled && this.dragger_ && (this.dragger_.dispose(), this.dragger_ = null)
};
goog.ui.Dialog.prototype.createDom = function() {
  goog.ui.Dialog.superClass_.createDom.call(this);
  var element = this.getElement();
  goog.asserts.assert(element, "getElement() returns null");
  var dom = this.getDomHelper();
  this.titleEl_ = dom.createDom("div", {className:this.class_ + "-title", id:this.getId()}, this.titleTextEl_ = dom.createDom("span", this.class_ + "-title-text", this.title_), this.titleCloseEl_ = dom.createDom("span", this.class_ + "-title-close"));
  goog.dom.append(element, this.titleEl_, this.contentEl_ = dom.createDom("div", this.class_ + "-content"), this.buttonEl_ = dom.createDom("div", this.class_ + "-buttons"));
  this.titleId_ = this.titleEl_.id;
  goog.a11y.aria.setRole(element, this.getPreferredAriaRole());
  goog.a11y.aria.setState(element, goog.a11y.aria.State.LABELLEDBY, this.titleId_ || "");
  this.content_ && (this.contentEl_.innerHTML = this.content_);
  goog.style.setElementShown(this.titleCloseEl_, this.hasTitleCloseButton_);
  this.buttons_ && this.buttons_.attachToElement(this.buttonEl_);
  goog.style.setElementShown(this.buttonEl_, !!this.buttons_);
  this.setBackgroundElementOpacity(this.backgroundElementOpacity_)
};
goog.ui.Dialog.prototype.decorateInternal = function(element) {
  goog.ui.Dialog.superClass_.decorateInternal.call(this, element);
  var dialogElement = this.getElement();
  goog.asserts.assert(dialogElement, "The DOM element for dialog cannot be null.");
  var contentClass = this.class_ + "-content";
  (this.contentEl_ = goog.dom.getElementsByTagNameAndClass(null, contentClass, dialogElement)[0]) ? this.content_ = this.contentEl_.innerHTML : (this.contentEl_ = this.getDomHelper().createDom("div", contentClass), this.content_ && (this.contentEl_.innerHTML = this.content_), dialogElement.appendChild(this.contentEl_));
  var titleClass = this.class_ + "-title", titleTextClass = this.class_ + "-title-text", titleCloseClass = this.class_ + "-title-close";
  (this.titleEl_ = goog.dom.getElementsByTagNameAndClass(null, titleClass, dialogElement)[0]) ? (this.titleTextEl_ = goog.dom.getElementsByTagNameAndClass(null, titleTextClass, this.titleEl_)[0], this.titleCloseEl_ = goog.dom.getElementsByTagNameAndClass(null, titleCloseClass, this.titleEl_)[0], this.titleEl_.id || (this.titleEl_.id = this.getId())) : (this.titleEl_ = this.getDomHelper().createDom("div", {className:titleClass, id:this.getId()}), dialogElement.insertBefore(this.titleEl_, this.contentEl_));
  this.titleId_ = this.titleEl_.id;
  this.titleTextEl_ ? this.title_ = goog.dom.getTextContent(this.titleTextEl_) : (this.titleTextEl_ = this.getDomHelper().createDom("span", titleTextClass, this.title_), this.titleEl_.appendChild(this.titleTextEl_));
  goog.a11y.aria.setState(dialogElement, goog.a11y.aria.State.LABELLEDBY, this.titleId_ || "");
  this.titleCloseEl_ || (this.titleCloseEl_ = this.getDomHelper().createDom("span", titleCloseClass), this.titleEl_.appendChild(this.titleCloseEl_));
  goog.style.setElementShown(this.titleCloseEl_, this.hasTitleCloseButton_);
  var buttonsClass = this.class_ + "-buttons";
  (this.buttonEl_ = goog.dom.getElementsByTagNameAndClass(null, buttonsClass, dialogElement)[0]) ? (this.buttons_ = new goog.ui.Dialog.ButtonSet(this.getDomHelper()), this.buttons_.decorate(this.buttonEl_)) : (this.buttonEl_ = this.getDomHelper().createDom("div", buttonsClass), dialogElement.appendChild(this.buttonEl_), this.buttons_ && this.buttons_.attachToElement(this.buttonEl_), goog.style.setElementShown(this.buttonEl_, !!this.buttons_));
  this.setBackgroundElementOpacity(this.backgroundElementOpacity_)
};
goog.ui.Dialog.prototype.enterDocument = function() {
  goog.ui.Dialog.superClass_.enterDocument.call(this);
  this.getHandler().listen(this.getElement(), goog.events.EventType.KEYDOWN, this.onKey_).listen(this.getElement(), goog.events.EventType.KEYPRESS, this.onKey_);
  this.getHandler().listen(this.buttonEl_, goog.events.EventType.CLICK, this.onButtonClick_);
  this.setDraggingEnabled_(this.draggable_);
  this.getHandler().listen(this.titleCloseEl_, goog.events.EventType.CLICK, this.onTitleCloseClick_);
  var element = this.getElement();
  goog.asserts.assert(element, "The DOM element for dialog cannot be null");
  goog.a11y.aria.setRole(element, this.getPreferredAriaRole());
  "" !== this.titleTextEl_.id && goog.a11y.aria.setState(element, goog.a11y.aria.State.LABELLEDBY, this.titleTextEl_.id);
  this.modal_ || this.setModalInternal_(!1)
};
goog.ui.Dialog.prototype.exitDocument = function() {
  this.isVisible() && this.setVisible(!1);
  this.setDraggingEnabled_(!1);
  goog.ui.Dialog.superClass_.exitDocument.call(this)
};
goog.ui.Dialog.prototype.setVisible = function(visible) {
  visible != this.isVisible() && (this.isInDocument() || this.render(), goog.ui.Dialog.superClass_.setVisible.call(this, visible))
};
goog.ui.Dialog.prototype.onShow = function() {
  goog.ui.Dialog.superClass_.onShow.call(this);
  this.dispatchEvent(goog.ui.Dialog.EventType.AFTER_SHOW)
};
goog.ui.Dialog.prototype.onHide = function() {
  goog.ui.Dialog.superClass_.onHide.call(this);
  this.dispatchEvent(goog.ui.Dialog.EventType.AFTER_HIDE);
  this.disposeOnHide_ && this.dispose()
};
goog.ui.Dialog.prototype.focus = function() {
  goog.ui.Dialog.superClass_.focus.call(this);
  if(this.getButtonSet()) {
    var defaultButton = this.getButtonSet().getDefault();
    if(defaultButton) {
      for(var doc = this.getDomHelper().getDocument(), buttons = this.buttonEl_.getElementsByTagName("button"), i = 0, button;button = buttons[i];i++) {
        if(button.name == defaultButton && !button.disabled) {
          try {
            if(goog.userAgent.WEBKIT || goog.userAgent.OPERA) {
              var temp = doc.createElement("input");
              temp.style.cssText = "position:fixed;width:0;height:0;left:0;top:0;";
              this.getElement().appendChild(temp);
              temp.focus();
              this.getElement().removeChild(temp)
            }
            button.focus()
          }catch(e) {
          }
          break
        }
      }
    }
  }
};
goog.ui.Dialog.prototype.setDraggerLimits_ = function() {
  var doc = this.getDomHelper().getDocument(), win = goog.dom.getWindow(doc) || window, viewSize = goog.dom.getViewportSize(win), w = Math.max(doc.body.scrollWidth, viewSize.width), h = Math.max(doc.body.scrollHeight, viewSize.height), dialogSize = goog.style.getSize(this.getElement());
  "fixed" == goog.style.getComputedPosition(this.getElement()) ? this.dragger_.setLimits(new goog.math.Rect(0, 0, Math.max(0, viewSize.width - dialogSize.width), Math.max(0, viewSize.height - dialogSize.height))) : this.dragger_.setLimits(new goog.math.Rect(0, 0, w - dialogSize.width, h - dialogSize.height))
};
goog.ui.Dialog.prototype.onTitleCloseClick_ = function() {
  if(this.hasTitleCloseButton_) {
    var bs = this.getButtonSet(), key = bs && bs.getCancel();
    if(key) {
      var caption = bs.get(key);
      this.dispatchEvent(new goog.ui.Dialog.Event(key, caption)) && this.setVisible(!1)
    }else {
      this.setVisible(!1)
    }
  }
};
goog.ui.Dialog.prototype.setHasTitleCloseButton = function(b) {
  this.hasTitleCloseButton_ = b;
  this.titleCloseEl_ && goog.style.setElementShown(this.titleCloseEl_, this.hasTitleCloseButton_)
};
goog.ui.Dialog.prototype.setEscapeToCancel = function(b) {
  this.escapeToCancel_ = b
};
goog.ui.Dialog.prototype.setDisposeOnHide = function(b) {
  this.disposeOnHide_ = b
};
goog.ui.Dialog.prototype.disposeInternal = function() {
  this.buttonEl_ = this.titleCloseEl_ = null;
  goog.ui.Dialog.superClass_.disposeInternal.call(this)
};
goog.ui.Dialog.prototype.setButtonSet = function(buttons) {
  this.buttons_ = buttons;
  this.buttonEl_ && (this.buttons_ ? this.buttons_.attachToElement(this.buttonEl_) : this.buttonEl_.innerHTML = "", goog.style.setElementShown(this.buttonEl_, !!this.buttons_))
};
goog.ui.Dialog.prototype.getButtonSet = function() {
  return this.buttons_
};
goog.ui.Dialog.prototype.onButtonClick_ = function(e) {
  var button = this.findParentButton_(e.target);
  if(button && !button.disabled) {
    var key = button.name, caption = this.getButtonSet().get(key);
    this.dispatchEvent(new goog.ui.Dialog.Event(key, caption)) && this.setVisible(!1)
  }
};
goog.ui.Dialog.prototype.findParentButton_ = function(element) {
  for(var el = element;null != el && el != this.buttonEl_;) {
    if("BUTTON" == el.tagName) {
      return el
    }
    el = el.parentNode
  }
  return null
};
goog.ui.Dialog.prototype.onKey_ = function(e) {
  var close = !1, hasHandler = !1, buttonSet = this.getButtonSet(), target = e.target;
  if(e.type == goog.events.EventType.KEYDOWN) {
    if(this.escapeToCancel_ && e.keyCode == goog.events.KeyCodes.ESC) {
      var cancel = buttonSet && buttonSet.getCancel(), isSpecialFormElement = "SELECT" == target.tagName && !target.disabled;
      if(cancel && !isSpecialFormElement) {
        var hasHandler = !0, caption = buttonSet.get(cancel), close = this.dispatchEvent(new goog.ui.Dialog.Event(cancel, caption))
      }else {
        isSpecialFormElement || (close = !0)
      }
    }else {
      e.keyCode == goog.events.KeyCodes.TAB && e.shiftKey && target == this.getElement() && this.setupBackwardTabWrap()
    }
  }else {
    if(e.keyCode == goog.events.KeyCodes.ENTER) {
      var key;
      if("BUTTON" == target.tagName && !target.disabled) {
        key = target.name
      }else {
        if(buttonSet) {
          var defaultKey = buttonSet.getDefault(), defaultButton = defaultKey && buttonSet.getButton(defaultKey), isSpecialFormElement = ("TEXTAREA" == target.tagName || "SELECT" == target.tagName || "A" == target.tagName) && !target.disabled;
          !defaultButton || defaultButton.disabled || isSpecialFormElement || (key = defaultKey)
        }
      }
      key && buttonSet && (hasHandler = !0, close = this.dispatchEvent(new goog.ui.Dialog.Event(key, String(buttonSet.get(key)))))
    }
  }
  if(close || hasHandler) {
    e.stopPropagation(), e.preventDefault()
  }
  close && this.setVisible(!1)
};
goog.ui.Dialog.Event = function(key, caption) {
  this.type = goog.ui.Dialog.EventType.SELECT;
  this.key = key;
  this.caption = caption
};
goog.inherits(goog.ui.Dialog.Event, goog.events.Event);
goog.ui.Dialog.SELECT_EVENT = "dialogselect";
goog.ui.Dialog.EventType = {SELECT:"dialogselect", AFTER_HIDE:"afterhide", AFTER_SHOW:"aftershow"};
goog.ui.Dialog.ButtonSet = function(opt_domHelper) {
  this.dom_ = opt_domHelper || goog.dom.getDomHelper();
  goog.structs.Map.call(this)
};
goog.inherits(goog.ui.Dialog.ButtonSet, goog.structs.Map);
goog.ui.Dialog.ButtonSet.prototype.class_ = "charts-buttonset";
goog.ui.Dialog.ButtonSet.prototype.defaultButton_ = null;
goog.ui.Dialog.ButtonSet.prototype.element_ = null;
goog.ui.Dialog.ButtonSet.prototype.cancelButton_ = null;
goog.ui.Dialog.ButtonSet.prototype.set = function(key, caption, opt_isDefault, opt_isCancel) {
  goog.structs.Map.prototype.set.call(this, key, caption);
  opt_isDefault && (this.defaultButton_ = key);
  opt_isCancel && (this.cancelButton_ = key);
  return this
};
goog.ui.Dialog.ButtonSet.prototype.addButton = function(button, opt_isDefault, opt_isCancel) {
  return this.set(button.key, button.caption, opt_isDefault, opt_isCancel)
};
goog.ui.Dialog.ButtonSet.prototype.attachToElement = function(el) {
  this.element_ = el;
  this.render()
};
goog.ui.Dialog.ButtonSet.prototype.render = function() {
  if(this.element_) {
    this.element_.innerHTML = "";
    var domHelper = goog.dom.getDomHelper(this.element_);
    goog.structs.forEach(this, function(caption, key) {
      var button = domHelper.createDom("button", {name:key}, caption);
      key == this.defaultButton_ && (button.className = this.class_ + "-default");
      this.element_.appendChild(button)
    }, this)
  }
};
goog.ui.Dialog.ButtonSet.prototype.decorate = function(element) {
  if(element && element.nodeType == goog.dom.NodeType.ELEMENT) {
    this.element_ = element;
    for(var buttons = this.element_.getElementsByTagName("button"), i = 0, button, key, caption;button = buttons[i];i++) {
      if(key = button.name || button.id, caption = goog.dom.getTextContent(button) || button.value, key) {
        var isDefault = 0 == i, isCancel = button.name == goog.ui.Dialog.DefaultButtonKeys.CANCEL;
        this.set(key, caption, isDefault, isCancel);
        isDefault && goog.dom.classes.add(button, this.class_ + "-default")
      }
    }
  }
};
goog.ui.Dialog.ButtonSet.prototype.getElement = function() {
  return this.element_
};
goog.ui.Dialog.ButtonSet.prototype.getDomHelper = function() {
  return this.dom_
};
goog.ui.Dialog.ButtonSet.prototype.setDefault = function(key) {
  this.defaultButton_ = key
};
goog.ui.Dialog.ButtonSet.prototype.getDefault = function() {
  return this.defaultButton_
};
goog.ui.Dialog.ButtonSet.prototype.getCancel = function() {
  return this.cancelButton_
};
goog.ui.Dialog.ButtonSet.prototype.getButton = function(key) {
  for(var buttons = this.getAllButtons(), i = 0, nextButton;nextButton = buttons[i];i++) {
    if(nextButton.name == key || nextButton.id == key) {
      return nextButton
    }
  }
  return null
};
goog.ui.Dialog.ButtonSet.prototype.getAllButtons = function() {
  return this.element_.getElementsByTagName(goog.dom.TagName.BUTTON)
};
goog.ui.Dialog.ButtonSet.prototype.setButtonEnabled = function(key, enabled) {
  var button = this.getButton(key);
  button && (button.disabled = !enabled)
};
goog.ui.Dialog.DefaultButtonKeys = {OK:"ok", CANCEL:"cancel", YES:"yes", NO:"no", SAVE:"save", CONTINUE:"continue"};
goog.ui.Dialog.MSG_DIALOG_OK_ = "OK";
goog.ui.Dialog.MSG_DIALOG_CANCEL_ = "Cancel";
goog.ui.Dialog.MSG_DIALOG_YES_ = "Yes";
goog.ui.Dialog.MSG_DIALOG_NO_ = "No";
goog.ui.Dialog.MSG_DIALOG_SAVE_ = "Save";
goog.ui.Dialog.MSG_DIALOG_CONTINUE_ = "Continue";
goog.ui.Dialog.DefaultButtonCaptions = {OK:goog.ui.Dialog.MSG_DIALOG_OK_, CANCEL:goog.ui.Dialog.MSG_DIALOG_CANCEL_, YES:goog.ui.Dialog.MSG_DIALOG_YES_, NO:goog.ui.Dialog.MSG_DIALOG_NO_, SAVE:goog.ui.Dialog.MSG_DIALOG_SAVE_, CONTINUE:goog.ui.Dialog.MSG_DIALOG_CONTINUE_};
goog.ui.Dialog.ButtonSet.DefaultButtons = {OK:{key:goog.ui.Dialog.DefaultButtonKeys.OK, caption:goog.ui.Dialog.DefaultButtonCaptions.OK}, CANCEL:{key:goog.ui.Dialog.DefaultButtonKeys.CANCEL, caption:goog.ui.Dialog.DefaultButtonCaptions.CANCEL}, YES:{key:goog.ui.Dialog.DefaultButtonKeys.YES, caption:goog.ui.Dialog.DefaultButtonCaptions.YES}, NO:{key:goog.ui.Dialog.DefaultButtonKeys.NO, caption:goog.ui.Dialog.DefaultButtonCaptions.NO}, SAVE:{key:goog.ui.Dialog.DefaultButtonKeys.SAVE, caption:goog.ui.Dialog.DefaultButtonCaptions.SAVE}, 
CONTINUE:{key:goog.ui.Dialog.DefaultButtonKeys.CONTINUE, caption:goog.ui.Dialog.DefaultButtonCaptions.CONTINUE}};
goog.ui.Dialog.ButtonSet.createOk = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.OK, !0, !0)
};
goog.ui.Dialog.ButtonSet.createOkCancel = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.OK, !0).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.CANCEL, !1, !0)
};
goog.ui.Dialog.ButtonSet.createYesNo = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.YES, !0).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.NO, !1, !0)
};
goog.ui.Dialog.ButtonSet.createYesNoCancel = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.YES).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.NO, !0).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.CANCEL, !1, !0)
};
goog.ui.Dialog.ButtonSet.createContinueSaveCancel = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.CONTINUE).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.SAVE).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.CANCEL, !0, !0)
};
(function() {
  "undefined" != typeof document && (goog.ui.Dialog.ButtonSet.OK = goog.ui.Dialog.ButtonSet.createOk(), goog.ui.Dialog.ButtonSet.OK_CANCEL = goog.ui.Dialog.ButtonSet.createOkCancel(), goog.ui.Dialog.ButtonSet.YES_NO = goog.ui.Dialog.ButtonSet.createYesNo(), goog.ui.Dialog.ButtonSet.YES_NO_CANCEL = goog.ui.Dialog.ButtonSet.createYesNoCancel(), goog.ui.Dialog.ButtonSet.CONTINUE_SAVE_CANCEL = goog.ui.Dialog.ButtonSet.createContinueSaveCancel())
})();
// Input 61
goog.events.KeyHandler = function(opt_element, opt_capture) {
  goog.events.EventTarget.call(this);
  opt_element && this.attach(opt_element, opt_capture)
};
goog.inherits(goog.events.KeyHandler, goog.events.EventTarget);
goog.events.KeyHandler.prototype.element_ = null;
goog.events.KeyHandler.prototype.keyPressKey_ = null;
goog.events.KeyHandler.prototype.keyDownKey_ = null;
goog.events.KeyHandler.prototype.keyUpKey_ = null;
goog.events.KeyHandler.prototype.lastKey_ = -1;
goog.events.KeyHandler.prototype.keyCode_ = -1;
goog.events.KeyHandler.prototype.altKey_ = !1;
goog.events.KeyHandler.EventType = {KEY:"key"};
goog.events.KeyHandler.safariKey_ = {3:goog.events.KeyCodes.ENTER, 12:goog.events.KeyCodes.NUMLOCK, 63232:goog.events.KeyCodes.UP, 63233:goog.events.KeyCodes.DOWN, 63234:goog.events.KeyCodes.LEFT, 63235:goog.events.KeyCodes.RIGHT, 63236:goog.events.KeyCodes.F1, 63237:goog.events.KeyCodes.F2, 63238:goog.events.KeyCodes.F3, 63239:goog.events.KeyCodes.F4, 63240:goog.events.KeyCodes.F5, 63241:goog.events.KeyCodes.F6, 63242:goog.events.KeyCodes.F7, 63243:goog.events.KeyCodes.F8, 63244:goog.events.KeyCodes.F9, 
63245:goog.events.KeyCodes.F10, 63246:goog.events.KeyCodes.F11, 63247:goog.events.KeyCodes.F12, 63248:goog.events.KeyCodes.PRINT_SCREEN, 63272:goog.events.KeyCodes.DELETE, 63273:goog.events.KeyCodes.HOME, 63275:goog.events.KeyCodes.END, 63276:goog.events.KeyCodes.PAGE_UP, 63277:goog.events.KeyCodes.PAGE_DOWN, 63289:goog.events.KeyCodes.NUMLOCK, 63302:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.keyIdentifier_ = {Up:goog.events.KeyCodes.UP, Down:goog.events.KeyCodes.DOWN, Left:goog.events.KeyCodes.LEFT, Right:goog.events.KeyCodes.RIGHT, Enter:goog.events.KeyCodes.ENTER, F1:goog.events.KeyCodes.F1, F2:goog.events.KeyCodes.F2, F3:goog.events.KeyCodes.F3, F4:goog.events.KeyCodes.F4, F5:goog.events.KeyCodes.F5, F6:goog.events.KeyCodes.F6, F7:goog.events.KeyCodes.F7, F8:goog.events.KeyCodes.F8, F9:goog.events.KeyCodes.F9, F10:goog.events.KeyCodes.F10, F11:goog.events.KeyCodes.F11, 
F12:goog.events.KeyCodes.F12, "U+007F":goog.events.KeyCodes.DELETE, Home:goog.events.KeyCodes.HOME, End:goog.events.KeyCodes.END, PageUp:goog.events.KeyCodes.PAGE_UP, PageDown:goog.events.KeyCodes.PAGE_DOWN, Insert:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.USES_KEYDOWN_ = goog.userAgent.IE || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("525");
goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_ = goog.userAgent.MAC && goog.userAgent.GECKO;
goog.events.KeyHandler.prototype.handleKeyDown_ = function(e) {
  goog.userAgent.WEBKIT && (this.lastKey_ == goog.events.KeyCodes.CTRL && !e.ctrlKey || this.lastKey_ == goog.events.KeyCodes.ALT && !e.altKey || goog.userAgent.MAC && this.lastKey_ == goog.events.KeyCodes.META && !e.metaKey) && (this.keyCode_ = this.lastKey_ = -1);
  -1 == this.lastKey_ && (e.ctrlKey && e.keyCode != goog.events.KeyCodes.CTRL ? this.lastKey_ = goog.events.KeyCodes.CTRL : e.altKey && e.keyCode != goog.events.KeyCodes.ALT ? this.lastKey_ = goog.events.KeyCodes.ALT : e.metaKey && e.keyCode != goog.events.KeyCodes.META && (this.lastKey_ = goog.events.KeyCodes.META));
  goog.events.KeyHandler.USES_KEYDOWN_ && !goog.events.KeyCodes.firesKeyPressEvent(e.keyCode, this.lastKey_, e.shiftKey, e.ctrlKey, e.altKey) ? this.handleEvent(e) : (this.keyCode_ = goog.userAgent.GECKO ? goog.events.KeyCodes.normalizeGeckoKeyCode(e.keyCode) : e.keyCode, goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_ && (this.altKey_ = e.altKey))
};
goog.events.KeyHandler.prototype.resetState = function() {
  this.keyCode_ = this.lastKey_ = -1
};
goog.events.KeyHandler.prototype.handleKeyup_ = function(e) {
  this.resetState();
  this.altKey_ = e.altKey
};
goog.events.KeyHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent(), keyCode, charCode, altKey = be.altKey;
  goog.userAgent.IE && e.type == goog.events.EventType.KEYPRESS ? (keyCode = this.keyCode_, charCode = keyCode != goog.events.KeyCodes.ENTER && keyCode != goog.events.KeyCodes.ESC ? be.keyCode : 0) : goog.userAgent.WEBKIT && e.type == goog.events.EventType.KEYPRESS ? (keyCode = this.keyCode_, charCode = 0 <= be.charCode && 63232 > be.charCode && goog.events.KeyCodes.isCharacterKey(keyCode) ? be.charCode : 0) : goog.userAgent.OPERA ? (keyCode = this.keyCode_, charCode = goog.events.KeyCodes.isCharacterKey(keyCode) ? 
  be.keyCode : 0) : (keyCode = be.keyCode || this.keyCode_, charCode = be.charCode || 0, goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_ && (altKey = this.altKey_), goog.userAgent.MAC && charCode == goog.events.KeyCodes.QUESTION_MARK && keyCode == goog.events.KeyCodes.WIN_KEY && (keyCode = goog.events.KeyCodes.SLASH));
  var key = keyCode, keyIdentifier = be.keyIdentifier;
  keyCode ? 63232 <= keyCode && keyCode in goog.events.KeyHandler.safariKey_ ? key = goog.events.KeyHandler.safariKey_[keyCode] : 25 == keyCode && e.shiftKey && (key = 9) : keyIdentifier && keyIdentifier in goog.events.KeyHandler.keyIdentifier_ && (key = goog.events.KeyHandler.keyIdentifier_[keyIdentifier]);
  var repeat = key == this.lastKey_;
  this.lastKey_ = key;
  var event = new goog.events.KeyEvent(key, charCode, repeat, be);
  event.altKey = altKey;
  this.dispatchEvent(event)
};
goog.events.KeyHandler.prototype.getElement = function() {
  return this.element_
};
goog.events.KeyHandler.prototype.attach = function(element, opt_capture) {
  this.keyUpKey_ && this.detach();
  this.element_ = element;
  this.keyPressKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYPRESS, this, opt_capture);
  this.keyDownKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, opt_capture, this);
  this.keyUpKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYUP, this.handleKeyup_, opt_capture, this)
};
goog.events.KeyHandler.prototype.detach = function() {
  this.keyPressKey_ && (goog.events.unlistenByKey(this.keyPressKey_), goog.events.unlistenByKey(this.keyDownKey_), goog.events.unlistenByKey(this.keyUpKey_), this.keyUpKey_ = this.keyDownKey_ = this.keyPressKey_ = null);
  this.element_ = null;
  this.keyCode_ = this.lastKey_ = -1
};
goog.events.KeyHandler.prototype.disposeInternal = function() {
  goog.events.KeyHandler.superClass_.disposeInternal.call(this);
  this.detach()
};
goog.events.KeyEvent = function(keyCode, charCode, repeat, browserEvent) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.KeyHandler.EventType.KEY;
  this.keyCode = keyCode;
  this.charCode = charCode;
  this.repeat = repeat
};
goog.inherits(goog.events.KeyEvent, goog.events.BrowserEvent);
// Input 62
// Input 63
goog.ui.ControlRenderer = function() {
};
goog.addSingletonGetter(goog.ui.ControlRenderer);
goog.ui.ControlRenderer.getCustomRenderer = function(ctor, cssClassName) {
  var renderer = new ctor;
  renderer.getCssClass = function() {
    return cssClassName
  };
  return renderer
};
goog.ui.ControlRenderer.CSS_CLASS = "charts-control";
goog.ui.ControlRenderer.IE6_CLASS_COMBINATIONS = [];
goog.ui.ControlRenderer.prototype.getAriaRole = function() {
};
goog.ui.ControlRenderer.prototype.createDom = function(control) {
  var element = control.getDomHelper().createDom("div", this.getClassNames(control).join(" "), control.getContent());
  this.setAriaStates(control, element);
  return element
};
goog.ui.ControlRenderer.prototype.getContentElement = function(element) {
  return element
};
goog.ui.ControlRenderer.prototype.enableClassName = function(control, className, enable) {
  var element = control.getElement ? control.getElement() : control;
  if(element) {
    if(goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("7")) {
      var combinedClasses = this.getAppliedCombinedClassNames_(goog.dom.classes.get(element), className);
      combinedClasses.push(className);
      var f = enable ? goog.dom.classes.add : goog.dom.classes.remove;
      goog.partial(f, element).apply(null, combinedClasses)
    }else {
      goog.dom.classes.enable(element, className, enable)
    }
  }
};
goog.ui.ControlRenderer.prototype.enableExtraClassName = function(control, className, enable) {
  this.enableClassName(control, className, enable)
};
goog.ui.ControlRenderer.prototype.canDecorate = function() {
  return!0
};
goog.ui.ControlRenderer.prototype.decorate = function(control, element) {
  element.id && control.setId(element.id);
  var contentElem = this.getContentElement(element);
  contentElem && contentElem.firstChild ? control.setContentInternal(contentElem.firstChild.nextSibling ? goog.array.clone(contentElem.childNodes) : contentElem.firstChild) : control.setContentInternal(null);
  var state = 0, rendererClassName = this.getCssClass(), structuralClassName = this.getStructuralCssClass(), hasRendererClassName = !1, hasStructuralClassName = !1, hasCombinedClassName = !1, classNames = goog.dom.classes.get(element);
  goog.array.forEach(classNames, function(className) {
    hasRendererClassName || className != rendererClassName ? hasStructuralClassName || className != structuralClassName ? state |= this.getStateFromClass(className) : hasStructuralClassName = !0 : (hasRendererClassName = !0, structuralClassName == rendererClassName && (hasStructuralClassName = !0))
  }, this);
  control.setStateInternal(state);
  hasRendererClassName || (classNames.push(rendererClassName), structuralClassName == rendererClassName && (hasStructuralClassName = !0));
  hasStructuralClassName || classNames.push(structuralClassName);
  var extraClassNames = control.getExtraClassNames();
  extraClassNames && classNames.push.apply(classNames, extraClassNames);
  if(goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("7")) {
    var combinedClasses = this.getAppliedCombinedClassNames_(classNames);
    0 < combinedClasses.length && (classNames.push.apply(classNames, combinedClasses), hasCombinedClassName = !0)
  }
  hasRendererClassName && hasStructuralClassName && !extraClassNames && !hasCombinedClassName || goog.dom.classes.set(element, classNames.join(" "));
  this.setAriaStates(control, element);
  return element
};
goog.ui.ControlRenderer.prototype.initializeDom = function(control) {
  control.isRightToLeft() && this.setRightToLeft(control.getElement(), !0);
  control.isEnabled() && this.setFocusable(control, control.isVisible())
};
goog.ui.ControlRenderer.prototype.setAriaRole = function(element, opt_preferredRole) {
  var ariaRole = opt_preferredRole || this.getAriaRole();
  ariaRole && (goog.asserts.assert(element, "The element passed as a first parameter cannot be null."), goog.a11y.aria.setRole(element, ariaRole))
};
goog.ui.ControlRenderer.prototype.setAriaStates = function(control, element) {
  goog.asserts.assert(control);
  goog.asserts.assert(element);
  control.isVisible() || goog.a11y.aria.setState(element, goog.a11y.aria.State.HIDDEN, !control.isVisible());
  control.isEnabled() || this.updateAriaState(element, goog.ui.Component.State.DISABLED, !control.isEnabled());
  control.isSupportedState(goog.ui.Component.State.SELECTED) && this.updateAriaState(element, goog.ui.Component.State.SELECTED, control.isSelected());
  control.isSupportedState(goog.ui.Component.State.CHECKED) && this.updateAriaState(element, goog.ui.Component.State.CHECKED, control.isChecked());
  control.isSupportedState(goog.ui.Component.State.OPENED) && this.updateAriaState(element, goog.ui.Component.State.OPENED, control.isOpen())
};
goog.ui.ControlRenderer.prototype.setAllowTextSelection = function(element, allow) {
  goog.style.setUnselectable(element, !allow, !goog.userAgent.IE && !goog.userAgent.OPERA)
};
goog.ui.ControlRenderer.prototype.setRightToLeft = function(element, rightToLeft) {
  this.enableClassName(element, this.getStructuralCssClass() + "-rtl", rightToLeft)
};
goog.ui.ControlRenderer.prototype.isFocusable = function(control) {
  var keyTarget;
  return control.isSupportedState(goog.ui.Component.State.FOCUSED) && (keyTarget = control.getKeyEventTarget()) ? goog.dom.isFocusableTabIndex(keyTarget) : !1
};
goog.ui.ControlRenderer.prototype.setFocusable = function(control, focusable) {
  var keyTarget;
  if(control.isSupportedState(goog.ui.Component.State.FOCUSED) && (keyTarget = control.getKeyEventTarget())) {
    if(!focusable && control.isFocused()) {
      try {
        keyTarget.blur()
      }catch(e) {
      }
      control.isFocused() && control.handleBlur(null)
    }
    goog.dom.isFocusableTabIndex(keyTarget) != focusable && goog.dom.setFocusableTabIndex(keyTarget, focusable)
  }
};
goog.ui.ControlRenderer.prototype.setVisible = function(element, visible) {
  goog.style.setElementShown(element, visible);
  element && goog.a11y.aria.setState(element, goog.a11y.aria.State.HIDDEN, !visible)
};
goog.ui.ControlRenderer.prototype.setState = function(control, state, enable) {
  var element = control.getElement();
  if(element) {
    var className = this.getClassForState(state);
    className && this.enableClassName(control, className, enable);
    this.updateAriaState(element, state, enable)
  }
};
goog.ui.ControlRenderer.prototype.updateAriaState = function(element, state, enable) {
  goog.ui.ControlRenderer.ARIA_STATE_MAP_ || (goog.ui.ControlRenderer.ARIA_STATE_MAP_ = goog.object.create(goog.ui.Component.State.DISABLED, goog.a11y.aria.State.DISABLED, goog.ui.Component.State.SELECTED, goog.a11y.aria.State.SELECTED, goog.ui.Component.State.CHECKED, goog.a11y.aria.State.CHECKED, goog.ui.Component.State.OPENED, goog.a11y.aria.State.EXPANDED));
  var ariaState = goog.ui.ControlRenderer.ARIA_STATE_MAP_[state];
  ariaState && (goog.asserts.assert(element, "The element passed as a first parameter cannot be null."), goog.a11y.aria.setState(element, ariaState, enable))
};
goog.ui.ControlRenderer.prototype.setContent = function(element, content) {
  var contentElem = this.getContentElement(element);
  if(contentElem && (goog.dom.removeChildren(contentElem), content)) {
    if(goog.isString(content)) {
      goog.dom.setTextContent(contentElem, content)
    }else {
      var childHandler = function(child) {
        if(child) {
          var doc = goog.dom.getOwnerDocument(contentElem);
          contentElem.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
        }
      };
      goog.isArray(content) ? goog.array.forEach(content, childHandler) : !goog.isArrayLike(content) || "nodeType" in content ? childHandler(content) : goog.array.forEach(goog.array.clone(content), childHandler)
    }
  }
};
goog.ui.ControlRenderer.prototype.getKeyEventTarget = function(control) {
  return control.getElement()
};
goog.ui.ControlRenderer.prototype.getCssClass = function() {
  return goog.ui.ControlRenderer.CSS_CLASS
};
goog.ui.ControlRenderer.prototype.getIe6ClassCombinations = function() {
  return[]
};
goog.ui.ControlRenderer.prototype.getStructuralCssClass = function() {
  return this.getCssClass()
};
goog.ui.ControlRenderer.prototype.getClassNames = function(control) {
  var cssClass = this.getCssClass(), classNames = [cssClass], structuralCssClass = this.getStructuralCssClass();
  structuralCssClass != cssClass && classNames.push(structuralCssClass);
  var classNamesForState = this.getClassNamesForState(control.getState());
  classNames.push.apply(classNames, classNamesForState);
  var extraClassNames = control.getExtraClassNames();
  extraClassNames && classNames.push.apply(classNames, extraClassNames);
  goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("7") && classNames.push.apply(classNames, this.getAppliedCombinedClassNames_(classNames));
  return classNames
};
goog.ui.ControlRenderer.prototype.getAppliedCombinedClassNames_ = function(classes, opt_includedClass) {
  var toAdd = [];
  opt_includedClass && (classes = classes.concat([opt_includedClass]));
  goog.array.forEach(this.getIe6ClassCombinations(), function(combo) {
    !goog.array.every(combo, goog.partial(goog.array.contains, classes)) || opt_includedClass && !goog.array.contains(combo, opt_includedClass) || toAdd.push(combo.join("_"))
  });
  return toAdd
};
goog.ui.ControlRenderer.prototype.getClassNamesForState = function(state) {
  for(var classNames = [];state;) {
    var mask = state & -state;
    classNames.push(this.getClassForState(mask));
    state &= ~mask
  }
  return classNames
};
goog.ui.ControlRenderer.prototype.getClassForState = function(state) {
  this.classByState_ || this.createClassByStateMap_();
  return this.classByState_[state]
};
goog.ui.ControlRenderer.prototype.getStateFromClass = function(className) {
  this.stateByClass_ || this.createStateByClassMap_();
  var state = parseInt(this.stateByClass_[className], 10);
  return isNaN(state) ? 0 : state
};
goog.ui.ControlRenderer.prototype.createClassByStateMap_ = function() {
  var baseClass = this.getStructuralCssClass();
  this.classByState_ = goog.object.create(goog.ui.Component.State.DISABLED, baseClass + "-disabled", goog.ui.Component.State.HOVER, baseClass + "-hover", goog.ui.Component.State.ACTIVE, baseClass + "-active", goog.ui.Component.State.SELECTED, baseClass + "-selected", goog.ui.Component.State.CHECKED, baseClass + "-checked", goog.ui.Component.State.FOCUSED, baseClass + "-focused", goog.ui.Component.State.OPENED, baseClass + "-open")
};
goog.ui.ControlRenderer.prototype.createStateByClassMap_ = function() {
  this.classByState_ || this.createClassByStateMap_();
  this.stateByClass_ = goog.object.transpose(this.classByState_)
};
// Input 64
goog.ui.registry = {};
goog.ui.registry.getDefaultRenderer = function(componentCtor) {
  for(var key, rendererCtor;componentCtor;) {
    key = goog.getUid(componentCtor);
    if(rendererCtor = goog.ui.registry.defaultRenderers_[key]) {
      break
    }
    componentCtor = componentCtor.superClass_ ? componentCtor.superClass_.constructor : null
  }
  return rendererCtor ? goog.isFunction(rendererCtor.getInstance) ? rendererCtor.getInstance() : new rendererCtor : null
};
goog.ui.registry.setDefaultRenderer = function(componentCtor, rendererCtor) {
  if(!goog.isFunction(componentCtor)) {
    throw Error("Invalid component class " + componentCtor);
  }
  if(!goog.isFunction(rendererCtor)) {
    throw Error("Invalid renderer class " + rendererCtor);
  }
  var key = goog.getUid(componentCtor);
  goog.ui.registry.defaultRenderers_[key] = rendererCtor
};
goog.ui.registry.getDecoratorByClassName = function(className) {
  return className in goog.ui.registry.decoratorFunctions_ ? goog.ui.registry.decoratorFunctions_[className]() : null
};
goog.ui.registry.setDecoratorByClassName = function(className, decoratorFn) {
  if(!className) {
    throw Error("Invalid class name " + className);
  }
  if(!goog.isFunction(decoratorFn)) {
    throw Error("Invalid decorator function " + decoratorFn);
  }
  goog.ui.registry.decoratorFunctions_[className] = decoratorFn
};
goog.ui.registry.getDecorator = function(element) {
  for(var decorator, classNames = goog.dom.classes.get(element), i = 0, len = classNames.length;i < len;i++) {
    if(decorator = goog.ui.registry.getDecoratorByClassName(classNames[i])) {
      return decorator
    }
  }
  return null
};
goog.ui.registry.reset = function() {
  goog.ui.registry.defaultRenderers_ = {};
  goog.ui.registry.decoratorFunctions_ = {}
};
goog.ui.registry.defaultRenderers_ = {};
goog.ui.registry.decoratorFunctions_ = {};
// Input 65
goog.ui.decorate = function(element) {
  var decorator = goog.ui.registry.getDecorator(element);
  decorator && decorator.decorate(element);
  return decorator
};
// Input 66
goog.ui.Control = function(opt_content, opt_renderer, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.renderer_ = opt_renderer || goog.ui.registry.getDefaultRenderer(this.constructor);
  this.setContentInternal(goog.isDef(opt_content) ? opt_content : null)
};
goog.inherits(goog.ui.Control, goog.ui.Component);
goog.ui.Control.registerDecorator = goog.ui.registry.setDecoratorByClassName;
goog.ui.Control.getDecorator = goog.ui.registry.getDecorator;
goog.ui.Control.decorate = goog.ui.decorate;
goog.ui.Control.prototype.content_ = null;
goog.ui.Control.prototype.state_ = 0;
goog.ui.Control.prototype.supportedStates_ = goog.ui.Component.State.DISABLED | goog.ui.Component.State.HOVER | goog.ui.Component.State.ACTIVE | goog.ui.Component.State.FOCUSED;
goog.ui.Control.prototype.autoStates_ = goog.ui.Component.State.ALL;
goog.ui.Control.prototype.statesWithTransitionEvents_ = 0;
goog.ui.Control.prototype.visible_ = !0;
goog.ui.Control.prototype.extraClassNames_ = null;
goog.ui.Control.prototype.handleMouseEvents_ = !0;
goog.ui.Control.prototype.allowTextSelection_ = !1;
goog.ui.Control.prototype.preferredAriaRole_ = null;
goog.ui.Control.prototype.isHandleMouseEvents = function() {
  return this.handleMouseEvents_
};
goog.ui.Control.prototype.setHandleMouseEvents = function(enable) {
  this.isInDocument() && enable != this.handleMouseEvents_ && this.enableMouseEventHandling_(enable);
  this.handleMouseEvents_ = enable
};
goog.ui.Control.prototype.getKeyEventTarget = function() {
  return this.renderer_.getKeyEventTarget(this)
};
goog.ui.Control.prototype.getKeyHandler = function() {
  return this.keyHandler_ || (this.keyHandler_ = new goog.events.KeyHandler)
};
goog.ui.Control.prototype.getRenderer = function() {
  return this.renderer_
};
goog.ui.Control.prototype.setRenderer = function(renderer) {
  if(this.isInDocument()) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.getElement() && this.setElementInternal(null);
  this.renderer_ = renderer
};
goog.ui.Control.prototype.getExtraClassNames = function() {
  return this.extraClassNames_
};
goog.ui.Control.prototype.addClassName = function(className) {
  className && (this.extraClassNames_ ? goog.array.contains(this.extraClassNames_, className) || this.extraClassNames_.push(className) : this.extraClassNames_ = [className], this.renderer_.enableExtraClassName(this, className, !0))
};
goog.ui.Control.prototype.removeClassName = function(className) {
  className && this.extraClassNames_ && goog.array.remove(this.extraClassNames_, className) && (0 == this.extraClassNames_.length && (this.extraClassNames_ = null), this.renderer_.enableExtraClassName(this, className, !1))
};
goog.ui.Control.prototype.enableClassName = function(className, enable) {
  enable ? this.addClassName(className) : this.removeClassName(className)
};
goog.ui.Control.prototype.createDom = function() {
  var element = this.renderer_.createDom(this);
  this.setElementInternal(element);
  this.renderer_.setAriaRole(element, this.getPreferredAriaRole());
  this.isAllowTextSelection() || this.renderer_.setAllowTextSelection(element, !1);
  this.isVisible() || this.renderer_.setVisible(element, !1)
};
goog.ui.Control.prototype.getPreferredAriaRole = function() {
  return this.preferredAriaRole_
};
goog.ui.Control.prototype.setPreferredAriaRole = function(role) {
  this.preferredAriaRole_ = role
};
goog.ui.Control.prototype.getContentElement = function() {
  return this.renderer_.getContentElement(this.getElement())
};
goog.ui.Control.prototype.canDecorate = function(element) {
  return this.renderer_.canDecorate(element)
};
goog.ui.Control.prototype.decorateInternal = function(element) {
  element = this.renderer_.decorate(this, element);
  this.setElementInternal(element);
  this.renderer_.setAriaRole(element, this.getPreferredAriaRole());
  this.isAllowTextSelection() || this.renderer_.setAllowTextSelection(element, !1);
  this.visible_ = "none" != element.style.display
};
goog.ui.Control.prototype.enterDocument = function() {
  goog.ui.Control.superClass_.enterDocument.call(this);
  this.renderer_.initializeDom(this);
  if(this.supportedStates_ & ~goog.ui.Component.State.DISABLED && (this.isHandleMouseEvents() && this.enableMouseEventHandling_(!0), this.isSupportedState(goog.ui.Component.State.FOCUSED))) {
    var keyTarget = this.getKeyEventTarget();
    if(keyTarget) {
      var keyHandler = this.getKeyHandler();
      keyHandler.attach(keyTarget);
      this.getHandler().listen(keyHandler, goog.events.KeyHandler.EventType.KEY, this.handleKeyEvent).listen(keyTarget, goog.events.EventType.FOCUS, this.handleFocus).listen(keyTarget, goog.events.EventType.BLUR, this.handleBlur)
    }
  }
};
goog.ui.Control.prototype.enableMouseEventHandling_ = function(enable) {
  var handler = this.getHandler(), element = this.getElement();
  enable ? (handler.listen(element, goog.events.EventType.MOUSEOVER, this.handleMouseOver).listen(element, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).listen(element, goog.events.EventType.MOUSEUP, this.handleMouseUp).listen(element, goog.events.EventType.MOUSEOUT, this.handleMouseOut), this.handleContextMenu != goog.nullFunction && handler.listen(element, goog.events.EventType.CONTEXTMENU, this.handleContextMenu), goog.userAgent.IE && handler.listen(element, goog.events.EventType.DBLCLICK, 
  this.handleDblClick)) : (handler.unlisten(element, goog.events.EventType.MOUSEOVER, this.handleMouseOver).unlisten(element, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).unlisten(element, goog.events.EventType.MOUSEUP, this.handleMouseUp).unlisten(element, goog.events.EventType.MOUSEOUT, this.handleMouseOut), this.handleContextMenu != goog.nullFunction && handler.unlisten(element, goog.events.EventType.CONTEXTMENU, this.handleContextMenu), goog.userAgent.IE && handler.unlisten(element, 
  goog.events.EventType.DBLCLICK, this.handleDblClick))
};
goog.ui.Control.prototype.exitDocument = function() {
  goog.ui.Control.superClass_.exitDocument.call(this);
  this.keyHandler_ && this.keyHandler_.detach();
  this.isVisible() && this.isEnabled() && this.renderer_.setFocusable(this, !1)
};
goog.ui.Control.prototype.disposeInternal = function() {
  goog.ui.Control.superClass_.disposeInternal.call(this);
  this.keyHandler_ && (this.keyHandler_.dispose(), delete this.keyHandler_);
  delete this.renderer_;
  this.extraClassNames_ = this.content_ = null
};
goog.ui.Control.prototype.getContent = function() {
  return this.content_
};
goog.ui.Control.prototype.setContent = function(content) {
  this.renderer_.setContent(this.getElement(), content);
  this.setContentInternal(content)
};
goog.ui.Control.prototype.setContentInternal = function(content) {
  this.content_ = content
};
goog.ui.Control.prototype.getCaption = function() {
  var content = this.getContent();
  if(!content) {
    return""
  }
  var caption = goog.isString(content) ? content : goog.isArray(content) ? goog.array.map(content, goog.dom.getRawTextContent).join("") : goog.dom.getTextContent(content);
  return goog.string.collapseBreakingSpaces(caption)
};
goog.ui.Control.prototype.setRightToLeft = function(rightToLeft) {
  goog.ui.Control.superClass_.setRightToLeft.call(this, rightToLeft);
  var element = this.getElement();
  element && this.renderer_.setRightToLeft(element, rightToLeft)
};
goog.ui.Control.prototype.isAllowTextSelection = function() {
  return this.allowTextSelection_
};
goog.ui.Control.prototype.setAllowTextSelection = function(allow) {
  this.allowTextSelection_ = allow;
  var element = this.getElement();
  element && this.renderer_.setAllowTextSelection(element, allow)
};
goog.ui.Control.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.Control.prototype.setVisible = function(visible, opt_force) {
  if(opt_force || this.visible_ != visible && this.dispatchEvent(visible ? goog.ui.Component.EventType.SHOW : goog.ui.Component.EventType.HIDE)) {
    var element = this.getElement();
    element && this.renderer_.setVisible(element, visible);
    this.isEnabled() && this.renderer_.setFocusable(this, visible);
    this.visible_ = visible;
    return!0
  }
  return!1
};
goog.ui.Control.prototype.isEnabled = function() {
  return!this.hasState(goog.ui.Component.State.DISABLED)
};
goog.ui.Control.prototype.isParentDisabled_ = function() {
  var parent = this.getParent();
  return!!parent && "function" == typeof parent.isEnabled && !parent.isEnabled()
};
goog.ui.Control.prototype.setEnabled = function(enable) {
  !this.isParentDisabled_() && this.isTransitionAllowed(goog.ui.Component.State.DISABLED, !enable) && (enable || (this.setActive(!1), this.setHighlighted(!1)), this.isVisible() && this.renderer_.setFocusable(this, enable), this.setState(goog.ui.Component.State.DISABLED, !enable))
};
goog.ui.Control.prototype.isHighlighted = function() {
  return this.hasState(goog.ui.Component.State.HOVER)
};
goog.ui.Control.prototype.setHighlighted = function(highlight) {
  this.isTransitionAllowed(goog.ui.Component.State.HOVER, highlight) && this.setState(goog.ui.Component.State.HOVER, highlight)
};
goog.ui.Control.prototype.isActive = function() {
  return this.hasState(goog.ui.Component.State.ACTIVE)
};
goog.ui.Control.prototype.setActive = function(active) {
  this.isTransitionAllowed(goog.ui.Component.State.ACTIVE, active) && this.setState(goog.ui.Component.State.ACTIVE, active)
};
goog.ui.Control.prototype.isSelected = function() {
  return this.hasState(goog.ui.Component.State.SELECTED)
};
goog.ui.Control.prototype.setSelected = function(select) {
  this.isTransitionAllowed(goog.ui.Component.State.SELECTED, select) && this.setState(goog.ui.Component.State.SELECTED, select)
};
goog.ui.Control.prototype.isChecked = function() {
  return this.hasState(goog.ui.Component.State.CHECKED)
};
goog.ui.Control.prototype.setChecked = function(check) {
  this.isTransitionAllowed(goog.ui.Component.State.CHECKED, check) && this.setState(goog.ui.Component.State.CHECKED, check)
};
goog.ui.Control.prototype.isFocused = function() {
  return this.hasState(goog.ui.Component.State.FOCUSED)
};
goog.ui.Control.prototype.setFocused = function(focused) {
  this.isTransitionAllowed(goog.ui.Component.State.FOCUSED, focused) && this.setState(goog.ui.Component.State.FOCUSED, focused)
};
goog.ui.Control.prototype.isOpen = function() {
  return this.hasState(goog.ui.Component.State.OPENED)
};
goog.ui.Control.prototype.setOpen = function(open) {
  this.isTransitionAllowed(goog.ui.Component.State.OPENED, open) && this.setState(goog.ui.Component.State.OPENED, open)
};
goog.ui.Control.prototype.getState = function() {
  return this.state_
};
goog.ui.Control.prototype.hasState = function(state) {
  return!!(this.state_ & state)
};
goog.ui.Control.prototype.setState = function(state, enable) {
  this.isSupportedState(state) && enable != this.hasState(state) && (this.renderer_.setState(this, state, enable), this.state_ = enable ? this.state_ | state : this.state_ & ~state)
};
goog.ui.Control.prototype.setStateInternal = function(state) {
  this.state_ = state
};
goog.ui.Control.prototype.isSupportedState = function(state) {
  return!!(this.supportedStates_ & state)
};
goog.ui.Control.prototype.setSupportedState = function(state, support) {
  if(this.isInDocument() && this.hasState(state) && !support) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  !support && this.hasState(state) && this.setState(state, !1);
  this.supportedStates_ = support ? this.supportedStates_ | state : this.supportedStates_ & ~state
};
goog.ui.Control.prototype.isAutoState = function(state) {
  return!!(this.autoStates_ & state) && this.isSupportedState(state)
};
goog.ui.Control.prototype.setAutoStates = function(states, enable) {
  this.autoStates_ = enable ? this.autoStates_ | states : this.autoStates_ & ~states
};
goog.ui.Control.prototype.setDispatchTransitionEvents = function(states, enable) {
  this.statesWithTransitionEvents_ = enable ? this.statesWithTransitionEvents_ | states : this.statesWithTransitionEvents_ & ~states
};
goog.ui.Control.prototype.isTransitionAllowed = function(state, enable) {
  return this.isSupportedState(state) && this.hasState(state) != enable && (!(this.statesWithTransitionEvents_ & state) || this.dispatchEvent(goog.ui.Component.getStateTransitionEvent(state, enable))) && !this.isDisposed()
};
goog.ui.Control.prototype.handleMouseOver = function(e) {
  !goog.ui.Control.isMouseEventWithinElement_(e, this.getElement()) && this.dispatchEvent(goog.ui.Component.EventType.ENTER) && this.isEnabled() && this.isAutoState(goog.ui.Component.State.HOVER) && this.setHighlighted(!0)
};
goog.ui.Control.prototype.handleMouseOut = function(e) {
  !goog.ui.Control.isMouseEventWithinElement_(e, this.getElement()) && this.dispatchEvent(goog.ui.Component.EventType.LEAVE) && (this.isAutoState(goog.ui.Component.State.ACTIVE) && this.setActive(!1), this.isAutoState(goog.ui.Component.State.HOVER) && this.setHighlighted(!1))
};
goog.ui.Control.prototype.handleContextMenu = goog.nullFunction;
goog.ui.Control.isMouseEventWithinElement_ = function(e, elem) {
  return!!e.relatedTarget && goog.dom.contains(elem, e.relatedTarget)
};
goog.ui.Control.prototype.handleMouseDown = function(e) {
  this.isEnabled() && (this.isAutoState(goog.ui.Component.State.HOVER) && this.setHighlighted(!0), e.isMouseActionButton() && (this.isAutoState(goog.ui.Component.State.ACTIVE) && this.setActive(!0), this.renderer_.isFocusable(this) && this.getKeyEventTarget().focus()));
  !this.isAllowTextSelection() && e.isMouseActionButton() && e.preventDefault()
};
goog.ui.Control.prototype.handleMouseUp = function(e) {
  this.isEnabled() && (this.isAutoState(goog.ui.Component.State.HOVER) && this.setHighlighted(!0), this.isActive() && this.performActionInternal(e) && this.isAutoState(goog.ui.Component.State.ACTIVE) && this.setActive(!1))
};
goog.ui.Control.prototype.handleDblClick = function(e) {
  this.isEnabled() && this.performActionInternal(e)
};
goog.ui.Control.prototype.performActionInternal = function(e) {
  this.isAutoState(goog.ui.Component.State.CHECKED) && this.setChecked(!this.isChecked());
  this.isAutoState(goog.ui.Component.State.SELECTED) && this.setSelected(!0);
  this.isAutoState(goog.ui.Component.State.OPENED) && this.setOpen(!this.isOpen());
  var actionEvent = new goog.events.Event(goog.ui.Component.EventType.ACTION, this);
  e && (actionEvent.altKey = e.altKey, actionEvent.ctrlKey = e.ctrlKey, actionEvent.metaKey = e.metaKey, actionEvent.shiftKey = e.shiftKey, actionEvent.platformModifierKey = e.platformModifierKey);
  return this.dispatchEvent(actionEvent)
};
goog.ui.Control.prototype.handleFocus = function() {
  this.isAutoState(goog.ui.Component.State.FOCUSED) && this.setFocused(!0)
};
goog.ui.Control.prototype.handleBlur = function() {
  this.isAutoState(goog.ui.Component.State.ACTIVE) && this.setActive(!1);
  this.isAutoState(goog.ui.Component.State.FOCUSED) && this.setFocused(!1)
};
goog.ui.Control.prototype.handleKeyEvent = function(e) {
  return this.isVisible() && this.isEnabled() && this.handleKeyEventInternal(e) ? (e.preventDefault(), e.stopPropagation(), !0) : !1
};
goog.ui.Control.prototype.handleKeyEventInternal = function(e) {
  return e.keyCode == goog.events.KeyCodes.ENTER && this.performActionInternal(e)
};
goog.ui.registry.setDefaultRenderer(goog.ui.Control, goog.ui.ControlRenderer);
goog.ui.registry.setDecoratorByClassName(goog.ui.ControlRenderer.CSS_CLASS, function() {
  return new goog.ui.Control(null)
});
// Input 67
goog.ui.MenuItemRenderer = function() {
  this.classNameCache_ = []
};
goog.inherits(goog.ui.MenuItemRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.MenuItemRenderer);
goog.ui.MenuItemRenderer.CSS_CLASS = "charts-menuitem";
goog.ui.MenuItemRenderer.CompositeCssClassIndex_ = {HOVER:0, CHECKBOX:1, CONTENT:2};
goog.ui.MenuItemRenderer.prototype.getCompositeCssClass_ = function(index) {
  var result = this.classNameCache_[index];
  if(!result) {
    switch(index) {
      case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER:
        result = this.getStructuralCssClass() + "-highlight";
        break;
      case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX:
        result = this.getStructuralCssClass() + "-checkbox";
        break;
      case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT:
        result = this.getStructuralCssClass() + "-content"
    }
    this.classNameCache_[index] = result
  }
  return result
};
goog.ui.MenuItemRenderer.prototype.getAriaRole = function() {
  return goog.a11y.aria.Role.MENU_ITEM
};
goog.ui.MenuItemRenderer.prototype.createDom = function(item) {
  var element = item.getDomHelper().createDom("div", this.getClassNames(item).join(" "), this.createContent(item.getContent(), item.getDomHelper()));
  this.setEnableCheckBoxStructure(item, element, item.isSupportedState(goog.ui.Component.State.SELECTED) || item.isSupportedState(goog.ui.Component.State.CHECKED));
  this.setAriaStates(item, element);
  return element
};
goog.ui.MenuItemRenderer.prototype.getContentElement = function(element) {
  return element && element.firstChild
};
goog.ui.MenuItemRenderer.prototype.decorate = function(item, element) {
  this.hasContentStructure(element) || element.appendChild(this.createContent(element.childNodes, item.getDomHelper()));
  goog.dom.classes.has(element, "charts-option") && (item.setCheckable(!0), this.setCheckable(item, element, !0));
  return goog.ui.MenuItemRenderer.superClass_.decorate.call(this, item, element)
};
goog.ui.MenuItemRenderer.prototype.setContent = function(element, content) {
  var contentElement = this.getContentElement(element), checkBoxElement = this.hasCheckBoxStructure(element) ? contentElement.firstChild : null;
  goog.ui.MenuItemRenderer.superClass_.setContent.call(this, element, content);
  checkBoxElement && !this.hasCheckBoxStructure(element) && contentElement.insertBefore(checkBoxElement, contentElement.firstChild || null)
};
goog.ui.MenuItemRenderer.prototype.hasContentStructure = function(element) {
  var child = goog.dom.getFirstElementChild(element), contentClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT);
  return!!child && goog.dom.classes.has(child, contentClassName)
};
goog.ui.MenuItemRenderer.prototype.createContent = function(content, dom) {
  var contentClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT);
  return dom.createDom("div", contentClassName, content)
};
goog.ui.MenuItemRenderer.prototype.setSelectable = function(item, element, selectable) {
  element && (goog.a11y.aria.setRole(element, selectable ? goog.a11y.aria.Role.MENU_ITEM_RADIO : this.getAriaRole()), this.setEnableCheckBoxStructure(item, element, selectable))
};
goog.ui.MenuItemRenderer.prototype.setCheckable = function(item, element, checkable) {
  element && (goog.a11y.aria.setRole(element, checkable ? goog.a11y.aria.Role.MENU_ITEM_CHECKBOX : this.getAriaRole()), this.setEnableCheckBoxStructure(item, element, checkable))
};
goog.ui.MenuItemRenderer.prototype.hasCheckBoxStructure = function(element) {
  var contentElement = this.getContentElement(element);
  if(contentElement) {
    var child = contentElement.firstChild, checkboxClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX);
    return!!child && goog.dom.classes.has(child, checkboxClassName)
  }
  return!1
};
goog.ui.MenuItemRenderer.prototype.setEnableCheckBoxStructure = function(item, element, enable) {
  if(enable != this.hasCheckBoxStructure(element)) {
    goog.dom.classes.enable(element, "charts-option", enable);
    var contentElement = this.getContentElement(element);
    if(enable) {
      var checkboxClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX);
      contentElement.insertBefore(item.getDomHelper().createDom("div", checkboxClassName), contentElement.firstChild || null)
    }else {
      contentElement.removeChild(contentElement.firstChild)
    }
  }
};
goog.ui.MenuItemRenderer.prototype.getClassForState = function(state) {
  switch(state) {
    case goog.ui.Component.State.HOVER:
      return this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER);
    case goog.ui.Component.State.CHECKED:
    ;
    case goog.ui.Component.State.SELECTED:
      return"charts-option-selected";
    default:
      return goog.ui.MenuItemRenderer.superClass_.getClassForState.call(this, state)
  }
};
goog.ui.MenuItemRenderer.prototype.getStateFromClass = function(className) {
  var hoverClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER);
  switch(className) {
    case "charts-option-selected":
      return goog.ui.Component.State.CHECKED;
    case hoverClassName:
      return goog.ui.Component.State.HOVER;
    default:
      return goog.ui.MenuItemRenderer.superClass_.getStateFromClass.call(this, className)
  }
};
goog.ui.MenuItemRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuItemRenderer.CSS_CLASS
};
// Input 68
goog.ui.MenuItem = function(content, opt_model, opt_domHelper, opt_renderer) {
  goog.ui.Control.call(this, content, opt_renderer || goog.ui.MenuItemRenderer.getInstance(), opt_domHelper);
  this.setValue(opt_model)
};
goog.inherits(goog.ui.MenuItem, goog.ui.Control);
goog.ui.MenuItem.MNEMONIC_WRAPPER_CLASS_ = "charts-menuitem-mnemonic-separator";
goog.ui.MenuItem.ACCELERATOR_CLASS_ = "charts-menuitem-accel";
goog.ui.MenuItem.prototype.getValue = function() {
  var model = this.getModel();
  return null != model ? model : this.getCaption()
};
goog.ui.MenuItem.prototype.setValue = function(value) {
  this.setModel(value)
};
goog.ui.MenuItem.prototype.setSelectable = function(selectable) {
  this.setSupportedState(goog.ui.Component.State.SELECTED, selectable);
  this.isChecked() && !selectable && this.setChecked(!1);
  var element = this.getElement();
  element && this.getRenderer().setSelectable(this, element, selectable)
};
goog.ui.MenuItem.prototype.setCheckable = function(checkable) {
  this.setSupportedState(goog.ui.Component.State.CHECKED, checkable);
  var element = this.getElement();
  element && this.getRenderer().setCheckable(this, element, checkable)
};
goog.ui.MenuItem.prototype.getCaption = function() {
  var content = this.getContent();
  if(goog.isArray(content)) {
    var acceleratorClass = goog.ui.MenuItem.ACCELERATOR_CLASS_, mnemonicWrapClass = goog.ui.MenuItem.MNEMONIC_WRAPPER_CLASS_, caption = goog.array.map(content, function(node) {
      var classes = goog.dom.classes.get(node);
      return goog.array.contains(classes, acceleratorClass) || goog.array.contains(classes, mnemonicWrapClass) ? "" : goog.dom.getRawTextContent(node)
    }).join("");
    return goog.string.collapseBreakingSpaces(caption)
  }
  return goog.ui.MenuItem.superClass_.getCaption.call(this)
};
goog.ui.MenuItem.prototype.handleMouseUp = function(e) {
  var parentMenu = this.getParent();
  if(parentMenu) {
    var oldCoords = parentMenu.openingCoords;
    parentMenu.openingCoords = null;
    if(oldCoords && goog.isNumber(e.clientX)) {
      var newCoords = new goog.math.Coordinate(e.clientX, e.clientY);
      if(goog.math.Coordinate.equals(oldCoords, newCoords)) {
        return
      }
    }
  }
  goog.ui.MenuItem.superClass_.handleMouseUp.call(this, e)
};
goog.ui.MenuItem.prototype.handleKeyEventInternal = function(e) {
  return e.keyCode == this.getMnemonic() && this.performActionInternal(e) ? !0 : goog.ui.MenuItem.superClass_.handleKeyEventInternal.call(this, e)
};
goog.ui.MenuItem.prototype.getMnemonic = function() {
  return this.mnemonicKey_
};
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuItemRenderer.CSS_CLASS, function() {
  return new goog.ui.MenuItem(null)
});
// Input 69
goog.positioning.MenuAnchoredPosition = function(anchorElement, corner, opt_adjust, opt_resize) {
  goog.positioning.AnchoredViewportPosition.call(this, anchorElement, corner, opt_adjust || opt_resize);
  if(opt_adjust || opt_resize) {
    var overflowX = goog.positioning.Overflow.ADJUST_X_EXCEPT_OFFSCREEN, overflowY = opt_resize ? goog.positioning.Overflow.RESIZE_HEIGHT : goog.positioning.Overflow.ADJUST_Y_EXCEPT_OFFSCREEN;
    this.setLastResortOverflow(overflowX | overflowY)
  }
};
goog.inherits(goog.positioning.MenuAnchoredPosition, goog.positioning.AnchoredViewportPosition);
// Input 70
goog.userAgent.product = {};
goog.userAgent.product.ASSUME_FIREFOX = !1;
goog.userAgent.product.ASSUME_CAMINO = !1;
goog.userAgent.product.ASSUME_IPHONE = !1;
goog.userAgent.product.ASSUME_IPAD = !1;
goog.userAgent.product.ASSUME_ANDROID = !1;
goog.userAgent.product.ASSUME_CHROME = !1;
goog.userAgent.product.ASSUME_SAFARI = !1;
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_CAMINO || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.init_ = function() {
  goog.userAgent.product.detectedFirefox_ = !1;
  goog.userAgent.product.detectedCamino_ = !1;
  goog.userAgent.product.detectedIphone_ = !1;
  goog.userAgent.product.detectedIpad_ = !1;
  goog.userAgent.product.detectedAndroid_ = !1;
  goog.userAgent.product.detectedChrome_ = !1;
  goog.userAgent.product.detectedSafari_ = !1;
  var ua = goog.userAgent.getUserAgentString();
  ua && (-1 != ua.indexOf("Firefox") ? goog.userAgent.product.detectedFirefox_ = !0 : -1 != ua.indexOf("Camino") ? goog.userAgent.product.detectedCamino_ = !0 : -1 != ua.indexOf("iPhone") || -1 != ua.indexOf("iPod") ? goog.userAgent.product.detectedIphone_ = !0 : -1 != ua.indexOf("iPad") ? goog.userAgent.product.detectedIpad_ = !0 : -1 != ua.indexOf("Chrome") ? goog.userAgent.product.detectedChrome_ = !0 : -1 != ua.indexOf("Android") ? goog.userAgent.product.detectedAndroid_ = !0 : -1 != ua.indexOf("Safari") && 
  (goog.userAgent.product.detectedSafari_ = !0))
};
goog.userAgent.product.PRODUCT_KNOWN_ || goog.userAgent.product.init_();
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.userAgent.product.detectedFirefox_;
goog.userAgent.product.CAMINO = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CAMINO : goog.userAgent.product.detectedCamino_;
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.detectedIphone_;
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.userAgent.product.detectedIpad_;
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.userAgent.product.detectedAndroid_;
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.userAgent.product.detectedChrome_;
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.detectedSafari_;
// Input 71
goog.ui.ButtonSide = {NONE:0, START:1, END:2, BOTH:3};
// Input 72
goog.ui.ButtonRenderer = function() {
};
goog.inherits(goog.ui.ButtonRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.ButtonRenderer);
goog.ui.ButtonRenderer.CSS_CLASS = "charts-button";
goog.ui.ButtonRenderer.prototype.getAriaRole = function() {
  return goog.a11y.aria.Role.BUTTON
};
goog.ui.ButtonRenderer.prototype.updateAriaState = function(element, state, enable) {
  switch(state) {
    case goog.ui.Component.State.SELECTED:
    ;
    case goog.ui.Component.State.CHECKED:
      goog.asserts.assert(element, "The button DOM element cannot be null.");
      goog.a11y.aria.setState(element, goog.a11y.aria.State.PRESSED, enable);
      break;
    default:
    ;
    case goog.ui.Component.State.OPENED:
    ;
    case goog.ui.Component.State.DISABLED:
      goog.ui.ButtonRenderer.superClass_.updateAriaState.call(this, element, state, enable)
  }
};
goog.ui.ButtonRenderer.prototype.createDom = function(button) {
  var element = goog.ui.ButtonRenderer.superClass_.createDom.call(this, button);
  this.setTooltip(element, button.getTooltip());
  var value = button.getValue();
  value && this.setValue(element, value);
  button.isSupportedState(goog.ui.Component.State.CHECKED) && this.updateAriaState(element, goog.ui.Component.State.CHECKED, button.isChecked());
  return element
};
goog.ui.ButtonRenderer.prototype.decorate = function(button, element) {
  element = goog.ui.ButtonRenderer.superClass_.decorate.call(this, button, element);
  button.setValueInternal(this.getValue(element));
  button.setTooltipInternal(this.getTooltip(element));
  button.isSupportedState(goog.ui.Component.State.CHECKED) && this.updateAriaState(element, goog.ui.Component.State.CHECKED, button.isChecked());
  return element
};
goog.ui.ButtonRenderer.prototype.getValue = goog.nullFunction;
goog.ui.ButtonRenderer.prototype.setValue = goog.nullFunction;
goog.ui.ButtonRenderer.prototype.getTooltip = function(element) {
  return element.title
};
goog.ui.ButtonRenderer.prototype.setTooltip = function(element, tooltip) {
  element && tooltip && (element.title = tooltip)
};
goog.ui.ButtonRenderer.prototype.setCollapsed = function(button, sides) {
  var isRtl = button.isRightToLeft(), collapseLeftClassName = this.getStructuralCssClass() + "-collapse-left", collapseRightClassName = this.getStructuralCssClass() + "-collapse-right";
  button.enableClassName(isRtl ? collapseRightClassName : collapseLeftClassName, !!(sides & goog.ui.ButtonSide.START));
  button.enableClassName(isRtl ? collapseLeftClassName : collapseRightClassName, !!(sides & goog.ui.ButtonSide.END))
};
goog.ui.ButtonRenderer.prototype.getCssClass = function() {
  return goog.ui.ButtonRenderer.CSS_CLASS
};
// Input 73
goog.ui.NativeButtonRenderer = function() {
};
goog.inherits(goog.ui.NativeButtonRenderer, goog.ui.ButtonRenderer);
goog.addSingletonGetter(goog.ui.NativeButtonRenderer);
goog.ui.NativeButtonRenderer.prototype.getAriaRole = function() {
};
goog.ui.NativeButtonRenderer.prototype.createDom = function(button) {
  this.setUpNativeButton_(button);
  return button.getDomHelper().createDom("button", {"class":this.getClassNames(button).join(" "), disabled:!button.isEnabled(), title:button.getTooltip() || "", value:button.getValue() || ""}, button.getCaption() || "")
};
goog.ui.NativeButtonRenderer.prototype.canDecorate = function(element) {
  return"BUTTON" == element.tagName || "INPUT" == element.tagName && ("button" == element.type || "submit" == element.type || "reset" == element.type)
};
goog.ui.NativeButtonRenderer.prototype.decorate = function(button, element) {
  this.setUpNativeButton_(button);
  element.disabled && goog.dom.classes.add(element, this.getClassForState(goog.ui.Component.State.DISABLED));
  return goog.ui.NativeButtonRenderer.superClass_.decorate.call(this, button, element)
};
goog.ui.NativeButtonRenderer.prototype.initializeDom = function(button) {
  button.getHandler().listen(button.getElement(), goog.events.EventType.CLICK, button.performActionInternal)
};
goog.ui.NativeButtonRenderer.prototype.setAllowTextSelection = goog.nullFunction;
goog.ui.NativeButtonRenderer.prototype.setRightToLeft = goog.nullFunction;
goog.ui.NativeButtonRenderer.prototype.isFocusable = function(button) {
  return button.isEnabled()
};
goog.ui.NativeButtonRenderer.prototype.setFocusable = goog.nullFunction;
goog.ui.NativeButtonRenderer.prototype.setState = function(button, state, enable) {
  goog.ui.NativeButtonRenderer.superClass_.setState.call(this, button, state, enable);
  var element = button.getElement();
  element && state == goog.ui.Component.State.DISABLED && (element.disabled = enable)
};
goog.ui.NativeButtonRenderer.prototype.getValue = function(element) {
  return element.value
};
goog.ui.NativeButtonRenderer.prototype.setValue = function(element, value) {
  element && (element.value = value)
};
goog.ui.NativeButtonRenderer.prototype.updateAriaState = goog.nullFunction;
goog.ui.NativeButtonRenderer.prototype.setUpNativeButton_ = function(button) {
  button.setHandleMouseEvents(!1);
  button.setAutoStates(goog.ui.Component.State.ALL, !1);
  button.setSupportedState(goog.ui.Component.State.FOCUSED, !1)
};
// Input 74
goog.ui.Button = function(opt_content, opt_renderer, opt_domHelper) {
  goog.ui.Control.call(this, opt_content, opt_renderer || goog.ui.NativeButtonRenderer.getInstance(), opt_domHelper)
};
goog.inherits(goog.ui.Button, goog.ui.Control);
goog.ui.Button.Side = goog.ui.ButtonSide;
goog.ui.Button.prototype.getValue = function() {
  return this.value_
};
goog.ui.Button.prototype.setValue = function(value) {
  this.value_ = value;
  var renderer = this.getRenderer();
  renderer.setValue(this.getElement(), value)
};
goog.ui.Button.prototype.setValueInternal = function(value) {
  this.value_ = value
};
goog.ui.Button.prototype.getTooltip = function() {
  return this.tooltip_
};
goog.ui.Button.prototype.setTooltip = function(tooltip) {
  this.tooltip_ = tooltip;
  this.getRenderer().setTooltip(this.getElement(), tooltip)
};
goog.ui.Button.prototype.setTooltipInternal = function(tooltip) {
  this.tooltip_ = tooltip
};
goog.ui.Button.prototype.setCollapsed = function(sides) {
  this.getRenderer().setCollapsed(this, sides)
};
goog.ui.Button.prototype.disposeInternal = function() {
  goog.ui.Button.superClass_.disposeInternal.call(this);
  delete this.value_;
  delete this.tooltip_
};
goog.ui.Button.prototype.enterDocument = function() {
  goog.ui.Button.superClass_.enterDocument.call(this);
  if(this.isSupportedState(goog.ui.Component.State.FOCUSED)) {
    var keyTarget = this.getKeyEventTarget();
    keyTarget && this.getHandler().listen(keyTarget, goog.events.EventType.KEYUP, this.handleKeyEventInternal)
  }
};
goog.ui.Button.prototype.handleKeyEventInternal = function(e) {
  return e.keyCode == goog.events.KeyCodes.ENTER && e.type == goog.events.KeyHandler.EventType.KEY || e.keyCode == goog.events.KeyCodes.SPACE && e.type == goog.events.EventType.KEYUP ? this.performActionInternal(e) : e.keyCode == goog.events.KeyCodes.SPACE
};
goog.ui.registry.setDecoratorByClassName(goog.ui.ButtonRenderer.CSS_CLASS, function() {
  return new goog.ui.Button(null)
});
// Input 75
goog.ui.ContainerRenderer = function() {
};
goog.addSingletonGetter(goog.ui.ContainerRenderer);
goog.ui.ContainerRenderer.getCustomRenderer = function(ctor, cssClassName) {
  var renderer = new ctor;
  renderer.getCssClass = function() {
    return cssClassName
  };
  return renderer
};
goog.ui.ContainerRenderer.CSS_CLASS = "charts-container";
goog.ui.ContainerRenderer.prototype.getAriaRole = function() {
};
goog.ui.ContainerRenderer.prototype.enableTabIndex = function(element, enable) {
  element && (element.tabIndex = enable ? 0 : -1)
};
goog.ui.ContainerRenderer.prototype.createDom = function(container) {
  return container.getDomHelper().createDom("div", this.getClassNames(container).join(" "))
};
goog.ui.ContainerRenderer.prototype.getContentElement = function(element) {
  return element
};
goog.ui.ContainerRenderer.prototype.canDecorate = function(element) {
  return"DIV" == element.tagName
};
goog.ui.ContainerRenderer.prototype.decorate = function(container, element) {
  element.id && container.setId(element.id);
  var baseClass = this.getCssClass(), hasBaseClass = !1, classNames = goog.dom.classes.get(element);
  classNames && goog.array.forEach(classNames, function(className) {
    className == baseClass ? hasBaseClass = !0 : className && this.setStateFromClassName(container, className, baseClass)
  }, this);
  hasBaseClass || goog.dom.classes.add(element, baseClass);
  this.decorateChildren(container, this.getContentElement(element));
  return element
};
goog.ui.ContainerRenderer.prototype.setStateFromClassName = function(container, className, baseClass) {
  className == baseClass + "-disabled" ? container.setEnabled(!1) : className == baseClass + "-horizontal" ? container.setOrientation(goog.ui.Container.Orientation.HORIZONTAL) : className == baseClass + "-vertical" && container.setOrientation(goog.ui.Container.Orientation.VERTICAL)
};
goog.ui.ContainerRenderer.prototype.decorateChildren = function(container, element, opt_firstChild) {
  if(element) {
    for(var node = opt_firstChild || element.firstChild, next;node && node.parentNode == element;) {
      next = node.nextSibling;
      if(node.nodeType == goog.dom.NodeType.ELEMENT) {
        var child = this.getDecoratorForChild(node);
        child && (child.setElementInternal(node), container.isEnabled() || child.setEnabled(!1), container.addChild(child), child.decorate(node))
      }else {
        node.nodeValue && "" != goog.string.trim(node.nodeValue) || element.removeChild(node)
      }
      node = next
    }
  }
};
goog.ui.ContainerRenderer.prototype.getDecoratorForChild = function(element) {
  return goog.ui.registry.getDecorator(element)
};
goog.ui.ContainerRenderer.prototype.initializeDom = function(container) {
  var elem = container.getElement();
  goog.asserts.assert(elem, "The container DOM element cannot be null.");
  goog.style.setUnselectable(elem, !0, goog.userAgent.GECKO);
  goog.userAgent.IE && (elem.hideFocus = !0);
  var ariaRole = this.getAriaRole();
  ariaRole && goog.a11y.aria.setRole(elem, ariaRole)
};
goog.ui.ContainerRenderer.prototype.getKeyEventTarget = function(container) {
  return container.getElement()
};
goog.ui.ContainerRenderer.prototype.getCssClass = function() {
  return goog.ui.ContainerRenderer.CSS_CLASS
};
goog.ui.ContainerRenderer.prototype.getClassNames = function(container) {
  var baseClass = this.getCssClass(), isHorizontal = container.getOrientation() == goog.ui.Container.Orientation.HORIZONTAL, classNames = [baseClass, isHorizontal ? baseClass + "-horizontal" : baseClass + "-vertical"];
  container.isEnabled() || classNames.push(baseClass + "-disabled");
  return classNames
};
goog.ui.ContainerRenderer.prototype.getDefaultOrientation = function() {
  return goog.ui.Container.Orientation.VERTICAL
};
// Input 76
goog.ui.Container = function(opt_orientation, opt_renderer, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.renderer_ = opt_renderer || goog.ui.ContainerRenderer.getInstance();
  this.orientation_ = opt_orientation || this.renderer_.getDefaultOrientation()
};
goog.inherits(goog.ui.Container, goog.ui.Component);
goog.ui.Container.EventType = {AFTER_SHOW:"aftershow", AFTER_HIDE:"afterhide"};
goog.ui.Container.Orientation = {HORIZONTAL:"horizontal", VERTICAL:"vertical"};
goog.ui.Container.prototype.keyEventTarget_ = null;
goog.ui.Container.prototype.keyHandler_ = null;
goog.ui.Container.prototype.renderer_ = null;
goog.ui.Container.prototype.orientation_ = null;
goog.ui.Container.prototype.visible_ = !0;
goog.ui.Container.prototype.enabled_ = !0;
goog.ui.Container.prototype.focusable_ = !0;
goog.ui.Container.prototype.highlightedIndex_ = -1;
goog.ui.Container.prototype.openItem_ = null;
goog.ui.Container.prototype.mouseButtonPressed_ = !1;
goog.ui.Container.prototype.allowFocusableChildren_ = !1;
goog.ui.Container.prototype.openFollowsHighlight_ = !0;
goog.ui.Container.prototype.childElementIdMap_ = null;
goog.ui.Container.prototype.getKeyEventTarget = function() {
  return this.keyEventTarget_ || this.renderer_.getKeyEventTarget(this)
};
goog.ui.Container.prototype.getKeyHandler = function() {
  return this.keyHandler_ || (this.keyHandler_ = new goog.events.KeyHandler(this.getKeyEventTarget()))
};
goog.ui.Container.prototype.getRenderer = function() {
  return this.renderer_
};
goog.ui.Container.prototype.setRenderer = function(renderer) {
  if(this.getElement()) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.renderer_ = renderer
};
goog.ui.Container.prototype.createDom = function() {
  this.setElementInternal(this.renderer_.createDom(this))
};
goog.ui.Container.prototype.getContentElement = function() {
  return this.renderer_.getContentElement(this.getElement())
};
goog.ui.Container.prototype.canDecorate = function(element) {
  return this.renderer_.canDecorate(element)
};
goog.ui.Container.prototype.decorateInternal = function(element) {
  this.setElementInternal(this.renderer_.decorate(this, element));
  "none" == element.style.display && (this.visible_ = !1)
};
goog.ui.Container.prototype.enterDocument = function() {
  goog.ui.Container.superClass_.enterDocument.call(this);
  this.forEachChild(function(child) {
    child.isInDocument() && this.registerChildId_(child)
  }, this);
  var elem = this.getElement();
  this.renderer_.initializeDom(this);
  this.setVisible(this.visible_, !0);
  this.getHandler().listen(this, goog.ui.Component.EventType.ENTER, this.handleEnterItem).listen(this, goog.ui.Component.EventType.HIGHLIGHT, this.handleHighlightItem).listen(this, goog.ui.Component.EventType.UNHIGHLIGHT, this.handleUnHighlightItem).listen(this, goog.ui.Component.EventType.OPEN, this.handleOpenItem).listen(this, goog.ui.Component.EventType.CLOSE, this.handleCloseItem).listen(elem, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).listen(goog.dom.getOwnerDocument(elem), goog.events.EventType.MOUSEUP, 
  this.handleDocumentMouseUp).listen(elem, [goog.events.EventType.MOUSEDOWN, goog.events.EventType.MOUSEUP, goog.events.EventType.MOUSEOVER, goog.events.EventType.MOUSEOUT, goog.events.EventType.CONTEXTMENU], this.handleChildMouseEvents);
  this.isFocusable() && this.enableFocusHandling_(!0)
};
goog.ui.Container.prototype.enableFocusHandling_ = function(enable) {
  var handler = this.getHandler(), keyTarget = this.getKeyEventTarget();
  enable ? handler.listen(keyTarget, goog.events.EventType.FOCUS, this.handleFocus).listen(keyTarget, goog.events.EventType.BLUR, this.handleBlur).listen(this.getKeyHandler(), goog.events.KeyHandler.EventType.KEY, this.handleKeyEvent) : handler.unlisten(keyTarget, goog.events.EventType.FOCUS, this.handleFocus).unlisten(keyTarget, goog.events.EventType.BLUR, this.handleBlur).unlisten(this.getKeyHandler(), goog.events.KeyHandler.EventType.KEY, this.handleKeyEvent)
};
goog.ui.Container.prototype.exitDocument = function() {
  this.setHighlightedIndex(-1);
  this.openItem_ && this.openItem_.setOpen(!1);
  this.mouseButtonPressed_ = !1;
  goog.ui.Container.superClass_.exitDocument.call(this)
};
goog.ui.Container.prototype.disposeInternal = function() {
  goog.ui.Container.superClass_.disposeInternal.call(this);
  this.keyHandler_ && (this.keyHandler_.dispose(), this.keyHandler_ = null);
  this.renderer_ = this.openItem_ = this.childElementIdMap_ = this.keyEventTarget_ = null
};
goog.ui.Container.prototype.handleEnterItem = function() {
  return!0
};
goog.ui.Container.prototype.handleHighlightItem = function(e) {
  var index = this.indexOfChild(e.target);
  if(-1 < index && index != this.highlightedIndex_) {
    var item = this.getHighlighted();
    item && item.setHighlighted(!1);
    this.highlightedIndex_ = index;
    item = this.getHighlighted();
    this.isMouseButtonPressed() && item.setActive(!0);
    this.openFollowsHighlight_ && this.openItem_ && item != this.openItem_ && (item.isSupportedState(goog.ui.Component.State.OPENED) ? item.setOpen(!0) : this.openItem_.setOpen(!1))
  }
  var element = this.getElement();
  goog.asserts.assert(element, "The DOM element for the container cannot be null.");
  null != e.target.getElement() && goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, e.target.getElement().id)
};
goog.ui.Container.prototype.handleUnHighlightItem = function(e) {
  e.target == this.getHighlighted() && (this.highlightedIndex_ = -1);
  var element = this.getElement();
  goog.asserts.assert(element, "The DOM element for the container cannot be null.");
  goog.a11y.aria.removeState(element, goog.a11y.aria.State.ACTIVEDESCENDANT)
};
goog.ui.Container.prototype.handleOpenItem = function(e) {
  var item = e.target;
  item && item != this.openItem_ && item.getParent() == this && (this.openItem_ && this.openItem_.setOpen(!1), this.openItem_ = item)
};
goog.ui.Container.prototype.handleCloseItem = function(e) {
  e.target == this.openItem_ && (this.openItem_ = null)
};
goog.ui.Container.prototype.handleMouseDown = function(e) {
  this.enabled_ && this.setMouseButtonPressed(!0);
  var keyTarget = this.getKeyEventTarget();
  keyTarget && goog.dom.isFocusableTabIndex(keyTarget) ? keyTarget.focus() : e.preventDefault()
};
goog.ui.Container.prototype.handleDocumentMouseUp = function() {
  this.setMouseButtonPressed(!1)
};
goog.ui.Container.prototype.handleChildMouseEvents = function(e) {
  var control = this.getOwnerControl(e.target);
  if(control) {
    switch(e.type) {
      case goog.events.EventType.MOUSEDOWN:
        control.handleMouseDown(e);
        break;
      case goog.events.EventType.MOUSEUP:
        control.handleMouseUp(e);
        break;
      case goog.events.EventType.MOUSEOVER:
        control.handleMouseOver(e);
        break;
      case goog.events.EventType.MOUSEOUT:
        control.handleMouseOut(e);
        break;
      case goog.events.EventType.CONTEXTMENU:
        control.handleContextMenu(e)
    }
  }
};
goog.ui.Container.prototype.getOwnerControl = function(node) {
  if(this.childElementIdMap_) {
    for(var elem = this.getElement();node && node !== elem;) {
      var id = node.id;
      if(id in this.childElementIdMap_) {
        return this.childElementIdMap_[id]
      }
      node = node.parentNode
    }
  }
  return null
};
goog.ui.Container.prototype.handleFocus = function() {
};
goog.ui.Container.prototype.handleBlur = function() {
  this.setHighlightedIndex(-1);
  this.setMouseButtonPressed(!1);
  this.openItem_ && this.openItem_.setOpen(!1)
};
goog.ui.Container.prototype.handleKeyEvent = function(e) {
  return this.isEnabled() && this.isVisible() && (0 != this.getChildCount() || this.keyEventTarget_) && this.handleKeyEventInternal(e) ? (e.preventDefault(), e.stopPropagation(), !0) : !1
};
goog.ui.Container.prototype.handleKeyEventInternal = function(e) {
  var highlighted = this.getHighlighted();
  if(highlighted && "function" == typeof highlighted.handleKeyEvent && highlighted.handleKeyEvent(e) || this.openItem_ && this.openItem_ != highlighted && "function" == typeof this.openItem_.handleKeyEvent && this.openItem_.handleKeyEvent(e)) {
    return!0
  }
  if(e.shiftKey || e.ctrlKey || e.metaKey || e.altKey) {
    return!1
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ESC:
      if(this.isFocusable()) {
        this.getKeyEventTarget().blur()
      }else {
        return!1
      }
      break;
    case goog.events.KeyCodes.HOME:
      this.highlightFirst();
      break;
    case goog.events.KeyCodes.END:
      this.highlightLast();
      break;
    case goog.events.KeyCodes.UP:
      if(this.orientation_ == goog.ui.Container.Orientation.VERTICAL) {
        this.highlightPrevious()
      }else {
        return!1
      }
      break;
    case goog.events.KeyCodes.LEFT:
      if(this.orientation_ == goog.ui.Container.Orientation.HORIZONTAL) {
        this.isRightToLeft() ? this.highlightNext() : this.highlightPrevious()
      }else {
        return!1
      }
      break;
    case goog.events.KeyCodes.DOWN:
      if(this.orientation_ == goog.ui.Container.Orientation.VERTICAL) {
        this.highlightNext()
      }else {
        return!1
      }
      break;
    case goog.events.KeyCodes.RIGHT:
      if(this.orientation_ == goog.ui.Container.Orientation.HORIZONTAL) {
        this.isRightToLeft() ? this.highlightPrevious() : this.highlightNext()
      }else {
        return!1
      }
      break;
    default:
      return!1
  }
  return!0
};
goog.ui.Container.prototype.registerChildId_ = function(child) {
  var childElem = child.getElement(), id = childElem.id || (childElem.id = child.getId());
  this.childElementIdMap_ || (this.childElementIdMap_ = {});
  this.childElementIdMap_[id] = child
};
goog.ui.Container.prototype.addChild = function(child, opt_render) {
  goog.asserts.assertInstanceof(child, goog.ui.Control, "The child of a container must be a control");
  goog.ui.Container.superClass_.addChild.call(this, child, opt_render)
};
goog.ui.Container.prototype.addChildAt = function(control, index, opt_render) {
  control.setDispatchTransitionEvents(goog.ui.Component.State.HOVER, !0);
  control.setDispatchTransitionEvents(goog.ui.Component.State.OPENED, !0);
  !this.isFocusable() && this.isFocusableChildrenAllowed() || control.setSupportedState(goog.ui.Component.State.FOCUSED, !1);
  control.setHandleMouseEvents(!1);
  goog.ui.Container.superClass_.addChildAt.call(this, control, index, opt_render);
  control.isInDocument() && this.isInDocument() && this.registerChildId_(control);
  index <= this.highlightedIndex_ && this.highlightedIndex_++
};
goog.ui.Container.prototype.removeChild = function(control, opt_unrender) {
  if(control = goog.isString(control) ? this.getChild(control) : control) {
    var index = this.indexOfChild(control);
    -1 != index && (index == this.highlightedIndex_ ? control.setHighlighted(!1) : index < this.highlightedIndex_ && this.highlightedIndex_--);
    var childElem = control.getElement();
    childElem && childElem.id && this.childElementIdMap_ && goog.object.remove(this.childElementIdMap_, childElem.id)
  }
  control = goog.ui.Container.superClass_.removeChild.call(this, control, opt_unrender);
  control.setHandleMouseEvents(!0);
  return control
};
goog.ui.Container.prototype.getOrientation = function() {
  return this.orientation_
};
goog.ui.Container.prototype.setOrientation = function(orientation) {
  if(this.getElement()) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.orientation_ = orientation
};
goog.ui.Container.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.Container.prototype.setVisible = function(visible, opt_force) {
  if(opt_force || this.visible_ != visible && this.dispatchEvent(visible ? goog.ui.Component.EventType.SHOW : goog.ui.Component.EventType.HIDE)) {
    this.visible_ = visible;
    var elem = this.getElement();
    elem && (goog.style.setElementShown(elem, visible), this.isFocusable() && this.renderer_.enableTabIndex(this.getKeyEventTarget(), this.enabled_ && this.visible_), opt_force || this.dispatchEvent(this.visible_ ? goog.ui.Container.EventType.AFTER_SHOW : goog.ui.Container.EventType.AFTER_HIDE));
    return!0
  }
  return!1
};
goog.ui.Container.prototype.isEnabled = function() {
  return this.enabled_
};
goog.ui.Container.prototype.setEnabled = function(enable) {
  this.enabled_ != enable && this.dispatchEvent(enable ? goog.ui.Component.EventType.ENABLE : goog.ui.Component.EventType.DISABLE) && (enable ? (this.enabled_ = !0, this.forEachChild(function(child) {
    child.wasDisabled ? delete child.wasDisabled : child.setEnabled(!0)
  })) : (this.forEachChild(function(child) {
    child.isEnabled() ? child.setEnabled(!1) : child.wasDisabled = !0
  }), this.enabled_ = !1, this.setMouseButtonPressed(!1)), this.isFocusable() && this.renderer_.enableTabIndex(this.getKeyEventTarget(), enable && this.visible_))
};
goog.ui.Container.prototype.isFocusable = function() {
  return this.focusable_
};
goog.ui.Container.prototype.setFocusable = function(focusable) {
  focusable != this.focusable_ && this.isInDocument() && this.enableFocusHandling_(focusable);
  this.focusable_ = focusable;
  this.enabled_ && this.visible_ && this.renderer_.enableTabIndex(this.getKeyEventTarget(), focusable)
};
goog.ui.Container.prototype.isFocusableChildrenAllowed = function() {
  return this.allowFocusableChildren_
};
goog.ui.Container.prototype.setHighlightedIndex = function(index) {
  var child = this.getChildAt(index);
  child ? child.setHighlighted(!0) : -1 < this.highlightedIndex_ && this.getHighlighted().setHighlighted(!1)
};
goog.ui.Container.prototype.setHighlighted = function(item) {
  this.setHighlightedIndex(this.indexOfChild(item))
};
goog.ui.Container.prototype.getHighlighted = function() {
  return this.getChildAt(this.highlightedIndex_)
};
goog.ui.Container.prototype.highlightFirst = function() {
  this.highlightHelper(function(index, max) {
    return(index + 1) % max
  }, this.getChildCount() - 1)
};
goog.ui.Container.prototype.highlightLast = function() {
  this.highlightHelper(function(index, max) {
    index--;
    return 0 > index ? max - 1 : index
  }, 0)
};
goog.ui.Container.prototype.highlightNext = function() {
  this.highlightHelper(function(index, max) {
    return(index + 1) % max
  }, this.highlightedIndex_)
};
goog.ui.Container.prototype.highlightPrevious = function() {
  this.highlightHelper(function(index, max) {
    index--;
    return 0 > index ? max - 1 : index
  }, this.highlightedIndex_)
};
goog.ui.Container.prototype.highlightHelper = function(fn, startIndex) {
  for(var curIndex = 0 > startIndex ? this.indexOfChild(this.openItem_) : startIndex, numItems = this.getChildCount(), curIndex = fn.call(this, curIndex, numItems), visited = 0;visited <= numItems;) {
    var control = this.getChildAt(curIndex);
    if(control && this.canHighlightItem(control)) {
      return this.setHighlightedIndexFromKeyEvent(curIndex), !0
    }
    visited++;
    curIndex = fn.call(this, curIndex, numItems)
  }
  return!1
};
goog.ui.Container.prototype.canHighlightItem = function(item) {
  return item.isVisible() && item.isEnabled() && item.isSupportedState(goog.ui.Component.State.HOVER)
};
goog.ui.Container.prototype.setHighlightedIndexFromKeyEvent = function(index) {
  this.setHighlightedIndex(index)
};
goog.ui.Container.prototype.isMouseButtonPressed = function() {
  return this.mouseButtonPressed_
};
goog.ui.Container.prototype.setMouseButtonPressed = function(pressed) {
  this.mouseButtonPressed_ = pressed
};
// Input 77
goog.ui.MenuHeaderRenderer = function() {
};
goog.inherits(goog.ui.MenuHeaderRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.MenuHeaderRenderer);
goog.ui.MenuHeaderRenderer.CSS_CLASS = "charts-menuheader";
goog.ui.MenuHeaderRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuHeaderRenderer.CSS_CLASS
};
// Input 78
goog.ui.MenuHeader = function(content, opt_domHelper, opt_renderer) {
  goog.ui.Control.call(this, content, opt_renderer || goog.ui.MenuHeaderRenderer.getInstance(), opt_domHelper);
  this.setSupportedState(goog.ui.Component.State.DISABLED, !1);
  this.setSupportedState(goog.ui.Component.State.HOVER, !1);
  this.setSupportedState(goog.ui.Component.State.ACTIVE, !1);
  this.setSupportedState(goog.ui.Component.State.FOCUSED, !1);
  this.setStateInternal(goog.ui.Component.State.DISABLED)
};
goog.inherits(goog.ui.MenuHeader, goog.ui.Control);
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuHeaderRenderer.CSS_CLASS, function() {
  return new goog.ui.MenuHeader(null)
});
// Input 79
goog.ui.MenuSeparatorRenderer = function() {
};
goog.inherits(goog.ui.MenuSeparatorRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.MenuSeparatorRenderer);
goog.ui.MenuSeparatorRenderer.CSS_CLASS = "charts-menuseparator";
goog.ui.MenuSeparatorRenderer.prototype.createDom = function(separator) {
  return separator.getDomHelper().createDom("div", this.getCssClass())
};
goog.ui.MenuSeparatorRenderer.prototype.decorate = function(separator, element) {
  element.id && separator.setId(element.id);
  if("HR" == element.tagName) {
    var hr = element;
    element = this.createDom(separator);
    goog.dom.insertSiblingBefore(element, hr);
    goog.dom.removeNode(hr)
  }else {
    goog.dom.classes.add(element, this.getCssClass())
  }
  return element
};
goog.ui.MenuSeparatorRenderer.prototype.setContent = function() {
};
goog.ui.MenuSeparatorRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuSeparatorRenderer.CSS_CLASS
};
// Input 80
goog.ui.Separator = function(opt_renderer, opt_domHelper) {
  goog.ui.Control.call(this, null, opt_renderer || goog.ui.MenuSeparatorRenderer.getInstance(), opt_domHelper);
  this.setSupportedState(goog.ui.Component.State.DISABLED, !1);
  this.setSupportedState(goog.ui.Component.State.HOVER, !1);
  this.setSupportedState(goog.ui.Component.State.ACTIVE, !1);
  this.setSupportedState(goog.ui.Component.State.FOCUSED, !1);
  this.setStateInternal(goog.ui.Component.State.DISABLED)
};
goog.inherits(goog.ui.Separator, goog.ui.Control);
goog.ui.Separator.prototype.enterDocument = function() {
  goog.ui.Separator.superClass_.enterDocument.call(this);
  var element = this.getElement();
  goog.asserts.assert(element, "The DOM element for the separator cannot be null.");
  goog.a11y.aria.setRole(element, "separator")
};
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuSeparatorRenderer.CSS_CLASS, function() {
  return new goog.ui.Separator
});
// Input 81
goog.ui.MenuRenderer = function() {
};
goog.inherits(goog.ui.MenuRenderer, goog.ui.ContainerRenderer);
goog.addSingletonGetter(goog.ui.MenuRenderer);
goog.ui.MenuRenderer.CSS_CLASS = "charts-menu";
goog.ui.MenuRenderer.prototype.getAriaRole = function() {
  return goog.a11y.aria.Role.MENU
};
goog.ui.MenuRenderer.prototype.canDecorate = function(element) {
  return"UL" == element.tagName || goog.ui.MenuRenderer.superClass_.canDecorate.call(this, element)
};
goog.ui.MenuRenderer.prototype.getDecoratorForChild = function(element) {
  return"HR" == element.tagName ? new goog.ui.Separator : goog.ui.MenuRenderer.superClass_.getDecoratorForChild.call(this, element)
};
goog.ui.MenuRenderer.prototype.containsElement = function(menu, element) {
  return goog.dom.contains(menu.getElement(), element)
};
goog.ui.MenuRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuRenderer.CSS_CLASS
};
goog.ui.MenuRenderer.prototype.initializeDom = function(container) {
  goog.ui.MenuRenderer.superClass_.initializeDom.call(this, container);
  var element = container.getElement();
  goog.asserts.assert(element, "The menu DOM element cannot be null.");
  goog.a11y.aria.setState(element, goog.a11y.aria.State.HASPOPUP, "true")
};
// Input 82
goog.ui.MenuSeparator = function(opt_domHelper) {
  goog.ui.Separator.call(this, goog.ui.MenuSeparatorRenderer.getInstance(), opt_domHelper)
};
goog.inherits(goog.ui.MenuSeparator, goog.ui.Separator);
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuSeparatorRenderer.CSS_CLASS, function() {
  return new goog.ui.Separator
});
// Input 83
goog.ui.Menu = function(opt_domHelper, opt_renderer) {
  goog.ui.Container.call(this, goog.ui.Container.Orientation.VERTICAL, opt_renderer || goog.ui.MenuRenderer.getInstance(), opt_domHelper);
  this.setFocusable(!1)
};
goog.inherits(goog.ui.Menu, goog.ui.Container);
goog.ui.Menu.EventType = {BEFORE_SHOW:goog.ui.Component.EventType.BEFORE_SHOW, SHOW:goog.ui.Component.EventType.SHOW, BEFORE_HIDE:goog.ui.Component.EventType.HIDE, HIDE:goog.ui.Component.EventType.HIDE};
goog.ui.Menu.CSS_CLASS = goog.ui.MenuRenderer.CSS_CLASS;
goog.ui.Menu.prototype.allowAutoFocus_ = !0;
goog.ui.Menu.prototype.allowHighlightDisabled_ = !1;
goog.ui.Menu.prototype.getCssClass = function() {
  return this.getRenderer().getCssClass()
};
goog.ui.Menu.prototype.containsElement = function(element) {
  if(this.getRenderer().containsElement(this, element)) {
    return!0
  }
  for(var i = 0, count = this.getChildCount();i < count;i++) {
    var child = this.getChildAt(i);
    if("function" == typeof child.containsElement && child.containsElement(element)) {
      return!0
    }
  }
  return!1
};
goog.ui.Menu.prototype.addItem = function(item) {
  this.addChild(item, !0)
};
goog.ui.Menu.prototype.addItemAt = function(item, n) {
  this.addChildAt(item, n, !0)
};
goog.ui.Menu.prototype.removeItem = function(item) {
  var removedChild = this.removeChild(item, !0);
  removedChild && removedChild.dispose()
};
goog.ui.Menu.prototype.getItemAt = function(n) {
  return this.getChildAt(n)
};
goog.ui.Menu.prototype.getItemCount = function() {
  return this.getChildCount()
};
goog.ui.Menu.prototype.getItems = function() {
  var children = [];
  this.forEachChild(function(child) {
    children.push(child)
  });
  return children
};
goog.ui.Menu.prototype.setPosition = function(x, opt_y) {
  var visible = this.isVisible();
  visible || goog.style.setElementShown(this.getElement(), !0);
  goog.style.setPageOffset(this.getElement(), x, opt_y);
  visible || goog.style.setElementShown(this.getElement(), !1)
};
goog.ui.Menu.prototype.getPosition = function() {
  return this.isVisible() ? goog.style.getPageOffset(this.getElement()) : null
};
goog.ui.Menu.prototype.setAllowAutoFocus = function(allow) {
  (this.allowAutoFocus_ = allow) && this.setFocusable(!0)
};
goog.ui.Menu.prototype.setAllowHighlightDisabled = function(allow) {
  this.allowHighlightDisabled_ = allow
};
goog.ui.Menu.prototype.setVisible = function(show, opt_force, opt_e) {
  var visibilityChanged = goog.ui.Menu.superClass_.setVisible.call(this, show, opt_force);
  visibilityChanged && show && this.isInDocument() && this.allowAutoFocus_ && this.getKeyEventTarget().focus();
  this.openingCoords = show && opt_e && goog.isNumber(opt_e.clientX) ? new goog.math.Coordinate(opt_e.clientX, opt_e.clientY) : null;
  return visibilityChanged
};
goog.ui.Menu.prototype.handleEnterItem = function(e) {
  this.allowAutoFocus_ && this.getKeyEventTarget().focus();
  return goog.ui.Menu.superClass_.handleEnterItem.call(this, e)
};
goog.ui.Menu.prototype.canHighlightItem = function(item) {
  return(this.allowHighlightDisabled_ || item.isEnabled()) && item.isVisible() && item.isSupportedState(goog.ui.Component.State.HOVER)
};
goog.ui.Menu.prototype.decorateInternal = function(element) {
  this.decorateContent(element);
  goog.ui.Menu.superClass_.decorateInternal.call(this, element)
};
goog.ui.Menu.prototype.handleKeyEventInternal = function(e) {
  var handled = goog.ui.Menu.superClass_.handleKeyEventInternal.call(this, e);
  handled || this.forEachChild(function(menuItem) {
    !handled && menuItem.getMnemonic && menuItem.getMnemonic() == e.keyCode && (this.isEnabled() && this.setHighlighted(menuItem), handled = menuItem.handleKeyEvent(e))
  }, this);
  return handled
};
goog.ui.Menu.prototype.setHighlightedIndex = function(index) {
  goog.ui.Menu.superClass_.setHighlightedIndex.call(this, index);
  var child = this.getChildAt(index);
  child && goog.style.scrollIntoContainerView(child.getElement(), this.getElement())
};
goog.ui.Menu.prototype.decorateContent = function(element) {
  for(var renderer = this.getRenderer(), contentElements = this.getDomHelper().getElementsByTagNameAndClass("div", renderer.getCssClass() + "-content", element), length = contentElements.length, i = 0;i < length;i++) {
    renderer.decorateChildren(this, contentElements[i])
  }
};
// Input 84
goog.ui.INLINE_BLOCK_CLASSNAME = "charts-inline-block";
// Input 85
goog.ui.CustomButtonRenderer = function() {
};
goog.inherits(goog.ui.CustomButtonRenderer, goog.ui.ButtonRenderer);
goog.addSingletonGetter(goog.ui.CustomButtonRenderer);
goog.ui.CustomButtonRenderer.CSS_CLASS = "charts-custom-button";
goog.ui.CustomButtonRenderer.prototype.createDom = function(control) {
  var button = control, classNames = this.getClassNames(button), attributes = {"class":goog.ui.INLINE_BLOCK_CLASSNAME + " " + classNames.join(" ")}, buttonElement = button.getDomHelper().createDom("div", attributes, this.createButton(button.getContent(), button.getDomHelper()));
  this.setTooltip(buttonElement, button.getTooltip());
  this.setAriaStates(button, buttonElement);
  return buttonElement
};
goog.ui.CustomButtonRenderer.prototype.getAriaRole = function() {
  return goog.a11y.aria.Role.BUTTON
};
goog.ui.CustomButtonRenderer.prototype.getContentElement = function(element) {
  return element && element.firstChild.firstChild
};
goog.ui.CustomButtonRenderer.prototype.createButton = function(content, dom) {
  return dom.createDom("div", goog.ui.INLINE_BLOCK_CLASSNAME + " " + (this.getCssClass() + "-outer-box"), dom.createDom("div", goog.ui.INLINE_BLOCK_CLASSNAME + " " + (this.getCssClass() + "-inner-box"), content))
};
goog.ui.CustomButtonRenderer.prototype.canDecorate = function(element) {
  return"DIV" == element.tagName
};
goog.ui.CustomButtonRenderer.prototype.hasBoxStructure = function(button, element) {
  var outer = button.getDomHelper().getFirstElementChild(element), outerClassName = this.getCssClass() + "-outer-box";
  if(outer && goog.dom.classes.has(outer, outerClassName)) {
    var inner = button.getDomHelper().getFirstElementChild(outer), innerClassName = this.getCssClass() + "-inner-box";
    if(inner && goog.dom.classes.has(inner, innerClassName)) {
      return!0
    }
  }
  return!1
};
goog.ui.CustomButtonRenderer.prototype.decorate = function(control, element) {
  var button = control;
  goog.ui.CustomButtonRenderer.trimTextNodes_(element, !0);
  goog.ui.CustomButtonRenderer.trimTextNodes_(element, !1);
  this.hasBoxStructure(button, element) || element.appendChild(this.createButton(element.childNodes, button.getDomHelper()));
  goog.dom.classes.add(element, goog.ui.INLINE_BLOCK_CLASSNAME, this.getCssClass());
  return goog.ui.CustomButtonRenderer.superClass_.decorate.call(this, button, element)
};
goog.ui.CustomButtonRenderer.prototype.getCssClass = function() {
  return goog.ui.CustomButtonRenderer.CSS_CLASS
};
goog.ui.CustomButtonRenderer.trimTextNodes_ = function(element, fromStart) {
  if(element) {
    for(var node = fromStart ? element.firstChild : element.lastChild, next;node && node.parentNode == element;) {
      next = fromStart ? node.nextSibling : node.previousSibling;
      if(node.nodeType == goog.dom.NodeType.TEXT) {
        var text = node.nodeValue;
        if("" == goog.string.trim(text)) {
          element.removeChild(node)
        }else {
          node.nodeValue = fromStart ? goog.string.trimLeft(text) : goog.string.trimRight(text);
          break
        }
      }else {
        break
      }
      node = next
    }
  }
};
// Input 86
goog.ui.MenuButtonRenderer = function() {
};
goog.inherits(goog.ui.MenuButtonRenderer, goog.ui.CustomButtonRenderer);
goog.addSingletonGetter(goog.ui.MenuButtonRenderer);
goog.ui.MenuButtonRenderer.CSS_CLASS = "charts-menu-button";
goog.ui.MenuButtonRenderer.WRAPPER_PROP_ = "__goog_wrapper_div";
goog.userAgent.GECKO && (goog.ui.MenuButtonRenderer.prototype.setContent = function(element, content) {
  var caption = goog.ui.MenuButtonRenderer.superClass_.getContentElement.call(this, element && element.firstChild);
  caption && goog.dom.replaceNode(this.createCaption(content, goog.dom.getDomHelper(element)), caption)
});
goog.ui.MenuButtonRenderer.prototype.getContentElement = function(element) {
  var content = goog.ui.MenuButtonRenderer.superClass_.getContentElement.call(this, element && element.firstChild);
  goog.userAgent.GECKO && content && content[goog.ui.MenuButtonRenderer.WRAPPER_PROP_] && (content = content.firstChild);
  return content
};
goog.ui.MenuButtonRenderer.prototype.updateAriaState = function(element, state, enable) {
  goog.asserts.assert(element, "The menu button DOM element cannot be null.");
  goog.asserts.assert(goog.string.isEmpty(goog.a11y.aria.getState(element, goog.a11y.aria.State.EXPANDED)), "Menu buttons do not support the ARIA expanded attribute. Please use ARIA disabled instead." + goog.a11y.aria.getState(element, goog.a11y.aria.State.EXPANDED).length);
  state != goog.ui.Component.State.OPENED && goog.ui.MenuButtonRenderer.superClass_.updateAriaState.call(this, element, state, enable)
};
goog.ui.MenuButtonRenderer.prototype.decorate = function(control, element) {
  var button = control, menuElem = goog.dom.getElementsByTagNameAndClass("*", goog.ui.MenuRenderer.CSS_CLASS, element)[0];
  if(menuElem) {
    goog.style.setElementShown(menuElem, !1);
    goog.dom.appendChild(goog.dom.getOwnerDocument(menuElem).body, menuElem);
    var menu = new goog.ui.Menu;
    menu.decorate(menuElem);
    button.setMenu(menu)
  }
  return goog.ui.MenuButtonRenderer.superClass_.decorate.call(this, button, element)
};
goog.ui.MenuButtonRenderer.prototype.createButton = function(content, dom) {
  return goog.ui.MenuButtonRenderer.superClass_.createButton.call(this, [this.createCaption(content, dom), this.createDropdown(dom)], dom)
};
goog.ui.MenuButtonRenderer.prototype.createCaption = function(content, dom) {
  return goog.ui.MenuButtonRenderer.wrapCaption(content, this.getCssClass(), dom)
};
goog.ui.MenuButtonRenderer.wrapCaption = function(content, cssClass, dom) {
  return dom.createDom("div", goog.ui.INLINE_BLOCK_CLASSNAME + " " + (cssClass + "-caption"), content)
};
goog.ui.MenuButtonRenderer.prototype.createDropdown = function(dom) {
  return dom.createDom("div", goog.ui.INLINE_BLOCK_CLASSNAME + " " + (this.getCssClass() + "-dropdown"), "\u00a0")
};
goog.ui.MenuButtonRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuButtonRenderer.CSS_CLASS
};
// Input 87
goog.ui.MenuButton = function(opt_content, opt_menu, opt_renderer, opt_domHelper) {
  goog.ui.Button.call(this, opt_content, opt_renderer || goog.ui.MenuButtonRenderer.getInstance(), opt_domHelper);
  this.setSupportedState(goog.ui.Component.State.OPENED, !0);
  this.menuPosition_ = new goog.positioning.MenuAnchoredPosition(null, goog.positioning.Corner.BOTTOM_START);
  opt_menu && this.setMenu(opt_menu);
  this.menuMargin_ = null;
  this.timer_ = new goog.Timer(500);
  !goog.userAgent.product.IPHONE && !goog.userAgent.product.IPAD || goog.userAgent.isVersionOrHigher("533.17.9") || this.setFocusablePopupMenu(!0)
};
goog.inherits(goog.ui.MenuButton, goog.ui.Button);
goog.ui.MenuButton.prototype.isFocusablePopupMenu_ = !1;
goog.ui.MenuButton.prototype.renderMenuAsSibling_ = !1;
goog.ui.MenuButton.prototype.enterDocument = function() {
  goog.ui.MenuButton.superClass_.enterDocument.call(this);
  this.menu_ && this.attachMenuEventListeners_(this.menu_, !0);
  goog.a11y.aria.setState(this.getElementStrict(), goog.a11y.aria.State.HASPOPUP, !!this.menu_)
};
goog.ui.MenuButton.prototype.exitDocument = function() {
  goog.ui.MenuButton.superClass_.exitDocument.call(this);
  if(this.menu_) {
    this.setOpen(!1);
    this.menu_.exitDocument();
    this.attachMenuEventListeners_(this.menu_, !1);
    var menuElement = this.menu_.getElement();
    menuElement && goog.dom.removeNode(menuElement)
  }
};
goog.ui.MenuButton.prototype.disposeInternal = function() {
  goog.ui.MenuButton.superClass_.disposeInternal.call(this);
  this.menu_ && (this.menu_.dispose(), delete this.menu_);
  delete this.positionElement_;
  this.timer_.dispose()
};
goog.ui.MenuButton.prototype.handleMouseDown = function(e) {
  goog.ui.MenuButton.superClass_.handleMouseDown.call(this, e);
  this.isActive() && (this.setOpen(!this.isOpen(), e), this.menu_ && this.menu_.setMouseButtonPressed(this.isOpen()))
};
goog.ui.MenuButton.prototype.handleMouseUp = function(e) {
  goog.ui.MenuButton.superClass_.handleMouseUp.call(this, e);
  this.menu_ && !this.isActive() && this.menu_.setMouseButtonPressed(!1)
};
goog.ui.MenuButton.prototype.performActionInternal = function() {
  this.setActive(!1);
  return!0
};
goog.ui.MenuButton.prototype.handleDocumentMouseDown = function(e) {
  this.menu_ && this.menu_.isVisible() && !this.containsElement(e.target) && this.setOpen(!1)
};
goog.ui.MenuButton.prototype.containsElement = function(element) {
  return element && goog.dom.contains(this.getElement(), element) || this.menu_ && this.menu_.containsElement(element) || !1
};
goog.ui.MenuButton.prototype.handleKeyEventInternal = function(e) {
  if(e.keyCode == goog.events.KeyCodes.SPACE) {
    if(e.preventDefault(), e.type != goog.events.EventType.KEYUP) {
      return!0
    }
  }else {
    if(e.type != goog.events.KeyHandler.EventType.KEY) {
      return!1
    }
  }
  if(this.menu_ && this.menu_.isVisible()) {
    var handledByMenu = this.menu_.handleKeyEvent(e);
    return e.keyCode == goog.events.KeyCodes.ESC ? (this.setOpen(!1), !0) : handledByMenu
  }
  return e.keyCode == goog.events.KeyCodes.DOWN || e.keyCode == goog.events.KeyCodes.UP || e.keyCode == goog.events.KeyCodes.SPACE || e.keyCode == goog.events.KeyCodes.ENTER ? (this.setOpen(!0), !0) : !1
};
goog.ui.MenuButton.prototype.handleMenuAction = function() {
  this.setOpen(!1)
};
goog.ui.MenuButton.prototype.handleMenuBlur = function() {
  this.isActive() || this.setOpen(!1)
};
goog.ui.MenuButton.prototype.handleBlur = function(e) {
  this.isFocusablePopupMenu() || this.setOpen(!1);
  goog.ui.MenuButton.superClass_.handleBlur.call(this, e)
};
goog.ui.MenuButton.prototype.getMenu = function() {
  this.menu_ || this.setMenu(new goog.ui.Menu(this.getDomHelper()));
  return this.menu_ || null
};
goog.ui.MenuButton.prototype.setMenu = function(menu) {
  var oldMenu = this.menu_;
  menu != oldMenu && (oldMenu && (this.setOpen(!1), this.isInDocument() && this.attachMenuEventListeners_(oldMenu, !1), delete this.menu_), this.isInDocument() && goog.a11y.aria.setState(this.getElementStrict(), goog.a11y.aria.State.HASPOPUP, !!menu), menu && (this.menu_ = menu, menu.setParent(this), menu.setVisible(!1), menu.setAllowAutoFocus(this.isFocusablePopupMenu()), this.isInDocument() && this.attachMenuEventListeners_(menu, !0)));
  return oldMenu
};
goog.ui.MenuButton.prototype.addItem = function(item) {
  this.getMenu().addChild(item, !0)
};
goog.ui.MenuButton.prototype.addItemAt = function(item, index) {
  this.getMenu().addChildAt(item, index, !0)
};
goog.ui.MenuButton.prototype.removeItem = function(item) {
  var child = this.getMenu().removeChild(item, !0);
  child && child.dispose()
};
goog.ui.MenuButton.prototype.getItemAt = function(index) {
  return this.menu_ ? this.menu_.getChildAt(index) : null
};
goog.ui.MenuButton.prototype.getItemCount = function() {
  return this.menu_ ? this.menu_.getChildCount() : 0
};
goog.ui.MenuButton.prototype.setVisible = function(visible, opt_force) {
  var visibilityChanged = goog.ui.MenuButton.superClass_.setVisible.call(this, visible, opt_force);
  visibilityChanged && !this.isVisible() && this.setOpen(!1);
  return visibilityChanged
};
goog.ui.MenuButton.prototype.setEnabled = function(enable) {
  goog.ui.MenuButton.superClass_.setEnabled.call(this, enable);
  this.isEnabled() || this.setOpen(!1)
};
goog.ui.MenuButton.prototype.isScrollOnOverflow = function() {
  return this.menuPosition_.getLastResortOverflow && !!(this.menuPosition_.getLastResortOverflow() & goog.positioning.Overflow.RESIZE_HEIGHT)
};
goog.ui.MenuButton.prototype.isFocusablePopupMenu = function() {
  return this.isFocusablePopupMenu_
};
goog.ui.MenuButton.prototype.setFocusablePopupMenu = function(focusable) {
  this.isFocusablePopupMenu_ = focusable
};
goog.ui.MenuButton.prototype.showMenu = function() {
  this.setOpen(!0)
};
goog.ui.MenuButton.prototype.hideMenu = function() {
  this.setOpen(!1)
};
goog.ui.MenuButton.prototype.setOpen = function(open, opt_e) {
  goog.ui.MenuButton.superClass_.setOpen.call(this, open);
  if(this.menu_ && this.hasState(goog.ui.Component.State.OPENED) == open) {
    if(open) {
      this.menu_.isInDocument() || (this.renderMenuAsSibling_ ? this.menu_.render(this.getElement().parentNode) : this.menu_.render()), this.viewportBox_ = goog.style.getVisibleRectForElement(this.getElement()), this.buttonRect_ = goog.style.getBounds(this.getElement()), this.positionMenu(), this.menu_.setHighlightedIndex(-1)
    }else {
      this.setActive(!1);
      this.menu_.setMouseButtonPressed(!1);
      var element = this.getElement();
      element && goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, "");
      if(goog.isDefAndNotNull(this.originalSize_)) {
        this.originalSize_ = void 0;
        var elem = this.menu_.getElement();
        elem && goog.style.setSize(elem, "", "")
      }
    }
    this.menu_.setVisible(open, !1, opt_e);
    this.isDisposed() || this.attachPopupListeners_(open)
  }
};
goog.ui.MenuButton.prototype.positionMenu = function() {
  if(this.menu_.isInDocument()) {
    var positionElement = this.positionElement_ || this.getElement(), position = this.menuPosition_;
    this.menuPosition_.element = positionElement;
    var elem = this.menu_.getElement();
    this.menu_.isVisible() || (elem.style.visibility = "hidden", goog.style.setElementShown(elem, !0));
    !this.originalSize_ && this.isScrollOnOverflow() && (this.originalSize_ = goog.style.getSize(elem));
    var popupCorner = goog.positioning.flipCornerVertical(position.corner);
    position.reposition(elem, popupCorner, this.menuMargin_, this.originalSize_);
    this.menu_.isVisible() || (goog.style.setElementShown(elem, !1), elem.style.visibility = "visible")
  }
};
goog.ui.MenuButton.prototype.onTick_ = function() {
  var currentButtonRect = goog.style.getBounds(this.getElement()), currentViewport = goog.style.getVisibleRectForElement(this.getElement());
  goog.math.Rect.equals(this.buttonRect_, currentButtonRect) && goog.math.Box.equals(this.viewportBox_, currentViewport) || (this.buttonRect_ = currentButtonRect, this.viewportBox_ = currentViewport, this.positionMenu())
};
goog.ui.MenuButton.prototype.attachMenuEventListeners_ = function(menu, attach) {
  var handler = this.getHandler(), method = attach ? handler.listen : handler.unlisten;
  method.call(handler, menu, goog.ui.Component.EventType.ACTION, this.handleMenuAction);
  method.call(handler, menu, goog.ui.Component.EventType.HIGHLIGHT, this.handleHighlightItem);
  method.call(handler, menu, goog.ui.Component.EventType.UNHIGHLIGHT, this.handleUnHighlightItem)
};
goog.ui.MenuButton.prototype.handleHighlightItem = function(e) {
  var element = this.getElement();
  goog.asserts.assert(element, "The menu button DOM element cannot be null.");
  null != e.target.getElement() && goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, e.target.getElement().id)
};
goog.ui.MenuButton.prototype.handleUnHighlightItem = function() {
  if(!this.menu_.getHighlighted()) {
    var element = this.getElement();
    goog.asserts.assert(element, "The menu button DOM element cannot be null.");
    goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, "")
  }
};
goog.ui.MenuButton.prototype.attachPopupListeners_ = function(attach) {
  var handler = this.getHandler(), method = attach ? handler.listen : handler.unlisten;
  method.call(handler, this.getDomHelper().getDocument(), goog.events.EventType.MOUSEDOWN, this.handleDocumentMouseDown, !0);
  this.isFocusablePopupMenu() && method.call(handler, this.menu_, goog.ui.Component.EventType.BLUR, this.handleMenuBlur);
  method.call(handler, this.timer_, goog.Timer.TICK, this.onTick_);
  attach ? this.timer_.start() : this.timer_.stop()
};
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuButtonRenderer.CSS_CLASS, function() {
  return new goog.ui.MenuButton(null)
});
// Input 88
goog.ui.SelectionModel = function(opt_items) {
  goog.events.EventTarget.call(this);
  this.items_ = [];
  this.addItems(opt_items)
};
goog.inherits(goog.ui.SelectionModel, goog.events.EventTarget);
goog.ui.SelectionModel.prototype.selectedItem_ = null;
goog.ui.SelectionModel.prototype.selectionHandler_ = null;
goog.ui.SelectionModel.prototype.setSelectionHandler = function(handler) {
  this.selectionHandler_ = handler
};
goog.ui.SelectionModel.prototype.getItemCount = function() {
  return this.items_.length
};
goog.ui.SelectionModel.prototype.indexOfItem = function(item) {
  return item ? goog.array.indexOf(this.items_, item) : -1
};
goog.ui.SelectionModel.prototype.getItemAt = function(index) {
  return this.items_[index] || null
};
goog.ui.SelectionModel.prototype.addItems = function(items) {
  items && (goog.array.forEach(items, function(item) {
    this.selectItem_(item, !1)
  }, this), goog.array.extend(this.items_, items))
};
goog.ui.SelectionModel.prototype.addItem = function(item) {
  this.addItemAt(item, this.getItemCount())
};
goog.ui.SelectionModel.prototype.addItemAt = function(item, index) {
  item && (this.selectItem_(item, !1), goog.array.insertAt(this.items_, item, index))
};
goog.ui.SelectionModel.prototype.removeItem = function(item) {
  item && goog.array.remove(this.items_, item) && item == this.selectedItem_ && (this.selectedItem_ = null, this.dispatchEvent(goog.events.EventType.SELECT))
};
goog.ui.SelectionModel.prototype.getSelectedItem = function() {
  return this.selectedItem_
};
goog.ui.SelectionModel.prototype.getItems = function() {
  return goog.array.clone(this.items_)
};
goog.ui.SelectionModel.prototype.setSelectedItem = function(item) {
  item != this.selectedItem_ && (this.selectItem_(this.selectedItem_, !1), this.selectedItem_ = item, this.selectItem_(item, !0));
  this.dispatchEvent(goog.events.EventType.SELECT)
};
goog.ui.SelectionModel.prototype.getSelectedIndex = function() {
  return this.indexOfItem(this.selectedItem_)
};
goog.ui.SelectionModel.prototype.setSelectedIndex = function(index) {
  this.setSelectedItem(this.getItemAt(index))
};
goog.ui.SelectionModel.prototype.clear = function() {
  goog.array.clear(this.items_);
  this.selectedItem_ = null
};
goog.ui.SelectionModel.prototype.disposeInternal = function() {
  goog.ui.SelectionModel.superClass_.disposeInternal.call(this);
  delete this.items_;
  this.selectedItem_ = null
};
goog.ui.SelectionModel.prototype.selectItem_ = function(item, select) {
  item && ("function" == typeof this.selectionHandler_ ? this.selectionHandler_(item, select) : "function" == typeof item.setSelected && item.setSelected(select))
};
// Input 89
goog.ui.Select = function(opt_caption, opt_menu, opt_renderer, opt_domHelper) {
  goog.ui.MenuButton.call(this, opt_caption, opt_menu, opt_renderer, opt_domHelper);
  this.defaultCaption_ = this.getContent()
};
goog.inherits(goog.ui.Select, goog.ui.MenuButton);
goog.ui.Select.prototype.selectionModel_ = null;
goog.ui.Select.prototype.enterDocument = function() {
  goog.ui.Select.superClass_.enterDocument.call(this);
  this.updateCaption();
  this.listenToSelectionModelEvents_()
};
goog.ui.Select.prototype.decorateInternal = function(element) {
  goog.ui.Select.superClass_.decorateInternal.call(this, element);
  var caption = this.getCaption();
  caption ? this.setDefaultCaption(caption) : this.setSelectedIndex(0)
};
goog.ui.Select.prototype.disposeInternal = function() {
  goog.ui.Select.superClass_.disposeInternal.call(this);
  this.selectionModel_ && (this.selectionModel_.dispose(), this.selectionModel_ = null);
  this.defaultCaption_ = null
};
goog.ui.Select.prototype.handleMenuAction = function(e) {
  this.setSelectedItem(e.target);
  goog.ui.Select.superClass_.handleMenuAction.call(this, e);
  e.stopPropagation();
  this.dispatchEvent(goog.ui.Component.EventType.ACTION)
};
goog.ui.Select.prototype.handleSelectionChange = function() {
  var item = this.getSelectedItem();
  goog.ui.Select.superClass_.setValue.call(this, item && item.getValue());
  this.updateCaption()
};
goog.ui.Select.prototype.setMenu = function(menu) {
  var oldMenu = goog.ui.Select.superClass_.setMenu.call(this, menu);
  menu != oldMenu && (this.selectionModel_ && this.selectionModel_.clear(), menu && (this.selectionModel_ ? menu.forEachChild(function(child) {
    this.setCorrectAriaRole_(child);
    this.selectionModel_.addItem(child)
  }, this) : this.createSelectionModel_(menu)));
  return oldMenu
};
goog.ui.Select.prototype.getDefaultCaption = function() {
  return this.defaultCaption_
};
goog.ui.Select.prototype.setDefaultCaption = function(caption) {
  this.defaultCaption_ = caption;
  this.updateCaption()
};
goog.ui.Select.prototype.addItem = function(item) {
  this.setCorrectAriaRole_(item);
  goog.ui.Select.superClass_.addItem.call(this, item);
  this.selectionModel_ ? this.selectionModel_.addItem(item) : this.createSelectionModel_(this.getMenu())
};
goog.ui.Select.prototype.addItemAt = function(item, index) {
  this.setCorrectAriaRole_(item);
  goog.ui.Select.superClass_.addItemAt.call(this, item, index);
  this.selectionModel_ ? this.selectionModel_.addItemAt(item, index) : this.createSelectionModel_(this.getMenu())
};
goog.ui.Select.prototype.removeItem = function(item) {
  goog.ui.Select.superClass_.removeItem.call(this, item);
  this.selectionModel_ && this.selectionModel_.removeItem(item)
};
goog.ui.Select.prototype.setSelectedItem = function(item) {
  if(this.selectionModel_) {
    var prevItem = this.getSelectedItem();
    this.selectionModel_.setSelectedItem(item);
    item != prevItem && this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
  }
};
goog.ui.Select.prototype.setSelectedIndex = function(index) {
  this.selectionModel_ && this.setSelectedItem(this.selectionModel_.getItemAt(index))
};
goog.ui.Select.prototype.setValue = function(value) {
  if(goog.isDefAndNotNull(value) && this.selectionModel_) {
    for(var i = 0, item;item = this.selectionModel_.getItemAt(i);i++) {
      if(item && "function" == typeof item.getValue && item.getValue() == value) {
        this.setSelectedItem(item);
        return
      }
    }
  }
  this.setSelectedItem(null)
};
goog.ui.Select.prototype.getSelectedItem = function() {
  return this.selectionModel_ ? this.selectionModel_.getSelectedItem() : null
};
goog.ui.Select.prototype.getSelectedIndex = function() {
  return this.selectionModel_ ? this.selectionModel_.getSelectedIndex() : -1
};
goog.ui.Select.prototype.createSelectionModel_ = function(opt_component) {
  this.selectionModel_ = new goog.ui.SelectionModel;
  opt_component && opt_component.forEachChild(function(child) {
    this.setCorrectAriaRole_(child);
    this.selectionModel_.addItem(child)
  }, this);
  this.listenToSelectionModelEvents_()
};
goog.ui.Select.prototype.listenToSelectionModelEvents_ = function() {
  this.selectionModel_ && this.getHandler().listen(this.selectionModel_, goog.events.EventType.SELECT, this.handleSelectionChange)
};
goog.ui.Select.prototype.updateCaption = function() {
  var item = this.getSelectedItem();
  this.setContent(item ? item.getCaption() : this.defaultCaption_)
};
goog.ui.Select.prototype.setCorrectAriaRole_ = function(item) {
  item.setPreferredAriaRole(item instanceof goog.ui.MenuItem ? goog.a11y.aria.Role.OPTION : goog.a11y.aria.Role.SEPARATOR)
};
goog.ui.Select.prototype.setOpen = function(open, opt_e) {
  goog.ui.Select.superClass_.setOpen.call(this, open, opt_e);
  this.isOpen() && this.getMenu().setHighlightedIndex(this.getSelectedIndex())
};
goog.ui.registry.setDecoratorByClassName("charts-select", function() {
  return new goog.ui.Select(null)
});
// Input 90
gviz.Toolbar = function(container, components) {
  this.dom_ = goog.dom.getDomHelper();
  this.container_ = container;
  this.callbacksArray_ = [];
  this.draw_(components)
};
gviz.Toolbar.prototype.selectElement_ = null;
gviz.Toolbar.cssPrefix_ = "google-visualization-toolbar";
gviz.Toolbar.CSS_ = {TOOLBAR:gviz.Toolbar.cssPrefix_, EXPORT_IGOOGLE:gviz.Toolbar.cssPrefix_ + "-export-igoogle", EXPORT_DATA:gviz.Toolbar.cssPrefix_ + "-export-data", HTML_CODE:gviz.Toolbar.cssPrefix_ + "-html-code", DIALOG:gviz.Toolbar.cssPrefix_ + "-dialog", SMALL_DIALOG:gviz.Toolbar.cssPrefix_ + "-small-dialog", BIG_DIALOG:gviz.Toolbar.cssPrefix_ + "-big-dialog", HTML_CODE_EXPLANATION:gviz.Toolbar.cssPrefix_ + "-html-code-explanation", OK_BUTTON:gviz.Toolbar.cssPrefix_ + "-ok-button", CAPTION_TABLE:gviz.Toolbar.cssPrefix_ + 
"-caption-table"};
gviz.Toolbar.DIALOG_TYPES_ = {HTML_CODE:2, JS_CODE:3};
gviz.Toolbar.openDialog_ = function(type, attributes) {
  var dom = goog.dom.getDomHelper(), dialog, content, idForRange = null;
  switch(type) {
    case gviz.Toolbar.DIALOG_TYPES_.HTML_CODE:
      dialog = new goog.ui.Dialog(gviz.Toolbar.CSS_.SMALL_DIALOG);
      idForRange = "range" + dialog.getId();
      content = dom.createDom("div", null, dom.createDom("div", {"class":gviz.Toolbar.CSS_.HTML_CODE_EXPLANATION}, "Copy-Paste this code to an HTML page"), dom.createDom("br", null), dom.createDom("pre", null, dom.createDom("div", {id:idForRange}, attributes.message)));
      break;
    case gviz.Toolbar.DIALOG_TYPES_.JS_CODE:
      dialog = new goog.ui.Dialog(gviz.Toolbar.CSS_.BIG_DIALOG);
      content = dom.createDom("div", null, dom.createDom("div", {"class":gviz.Toolbar.CSS_.HTML_CODE_EXPLANATION}, "Copy-Paste this code to an HTML page"), dom.createDom("br", null));
      var splittedMessage = attributes.message, lineElement = dom.createDom("div", null, dom.createDom("pre", null, splittedMessage));
      dom.appendChild(content, lineElement)
  }
  dialog.setContent(content.innerHTML);
  dialog.getTitleTextElement().innerHTML = "Google Visualization";
  dialog.getButtonElement().innerHTML = "";
  dialog.setVisible(!0);
  if(idForRange) {
    var div = goog.dom.getElement(idForRange);
    goog.dom.Range.createFromNodes(div, 0, div, 1).select()
  }
};
gviz.Toolbar.prototype.draw_ = function(components) {
  components = components || [];
  var container = this.container_, dom = this.dom_;
  dom.removeChildren(container);
  if(!container) {
    throw Error("Container is not defined");
  }
  var span = dom.createDom("span", null), defaultCaption = [dom.createDom("span", null, "Chart options")];
  this.selectElement_ = new goog.ui.Select(defaultCaption);
  if(components) {
    for(var i = 0;i < components.length;i++) {
      var toolbarComponent = null, component = components[i], type = component.type, dataSource = component.datasource, gadget = component.gadget, userPrefs = component.userprefs, visualization$$0 = component.visualization, packageName = component["package"], style = component.style || "width: 700px; height: 500px;";
      switch(type) {
        case "csv":
          toolbarComponent = this.createComponent_(i, goog.partial(function(dataSource) {
            window.open((new goog.Uri(dataSource)).setParameterValue("tqx", "out:csv;"), "Google_Visualization")
          }, dataSource), "Export data as CSV", gviz.Toolbar.CSS_.EXPORT_DATA);
          break;
        case "htmlcode":
          toolbarComponent = this.createComponent_(i, goog.partial(function(gadget, dataSource) {
            var message = '<iframe style="' + style + '" src="http://www.google.com/ig/ifr?url=' + encodeURIComponent(gadget) + "&up__table_query_url=" + encodeURIComponent(dataSource) + gviz.Toolbar.encodeGadgetUserPrefs(userPrefs) + '" />';
            gviz.Toolbar.openDialog_(gviz.Toolbar.DIALOG_TYPES_.HTML_CODE, {message:message})
          }, gadget, dataSource), "Publish to web page", gviz.Toolbar.CSS_.HTML_CODE);
          break;
        case "jscode":
          toolbarComponent = this.createComponent_(i, goog.partial(function(dataSource, packageName, visualization) {
            var message = '<html>\n <head>\n  <title>Google Visualization API</title>\n  <script type="text/javascript" src="http://www.google.com/jsapi">\x3c/script>\n  <script type="text/javascript">\n   google.load(\'visualization\', \'1\', {packages: [\'' + encodeURIComponent(packageName) + "']});\n\n   function drawVisualization() {\n    new google.visualization.Query('" + dataSource + "').send(\n     function(response) {\n      new " + encodeURIComponent(visualization) + '(\n       document.getElementById(\'visualization\')).\n        draw(response.getDataTable(), null);\n      });\n   }\n\n   google.setOnLoadCallback(drawVisualization);\n  \x3c/script>\n </head>\n <body>\n  <div id="visualization" style="width: 500px; height: 500px;"></div>\n </body>\n</html>';
            gviz.Toolbar.openDialog_(gviz.Toolbar.DIALOG_TYPES_.JS_CODE, {message:message})
          }, dataSource, packageName, visualization$$0), "Javascript code", gviz.Toolbar.CSS_.HTML_CODE);
          break;
        case "html":
          toolbarComponent = this.createComponent_(i, goog.partial(function(dataSource) {
            window.open((new goog.Uri(dataSource)).setParameterValue("tqx", "out:html;"), "Google_Visualization")
          }, dataSource), "Export data as HTML", gviz.Toolbar.CSS_.EXPORT_DATA);
          break;
        case "igoogle":
          toolbarComponent = this.createComponent_(i, goog.partial(function(gadget, dataSource, userPrefs) {
            window.open("http://www.google.com/ig/adde?moduleurl=" + encodeURIComponent(gadget) + "&up__table_query_url=" + encodeURIComponent(dataSource) + gviz.Toolbar.encodeGadgetUserPrefs(userPrefs))
          }, gadget, dataSource, userPrefs), "Add to iGoogle", gviz.Toolbar.CSS_.EXPORT_IGOOGLE);
          break;
        default:
          throw Error("No such toolbar component as: " + component.toSource());
      }
      toolbarComponent && this.selectElement_.addItem(toolbarComponent)
    }
  }
  goog.events.listen(this.selectElement_, goog.ui.Component.EventType.ACTION, goog.bind(this.handleSubmit_, this));
  this.selectElement_.render(span);
  dom.appendChild(container, span)
};
gviz.Toolbar.prototype.setDefaultSelectCaption_ = function() {
  this.selectElement_.setSelectedIndex(-1)
};
gviz.Toolbar.prototype.handleSubmit_ = function() {
  var i = this.selectElement_.getSelectedIndex();
  this.callbacksArray_[i]();
  this.setDefaultSelectCaption_()
};
gviz.Toolbar.prototype.createComponent_ = function(id, callback, text) {
  var menuItem = new goog.ui.MenuItem(text);
  this.callbacksArray_[id] = callback;
  return menuItem
};
gviz.Toolbar.encodeGadgetUserPrefs = function(gadgetUserPrefs) {
  if(!gadgetUserPrefs) {
    return""
  }
  var out = "", pref;
  for(pref in gadgetUserPrefs) {
    out += "&up_" + pref + "=" + encodeURIComponent(gadgetUserPrefs[pref])
  }
  return out
};
google.visualization.drawToolbar = function(container, components) {
  new gviz.Toolbar(container, components)
};
// Input 91
goog.ui.CheckboxRenderer = function() {
};
goog.inherits(goog.ui.CheckboxRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.CheckboxRenderer);
goog.ui.CheckboxRenderer.CSS_CLASS = "charts-checkbox";
goog.ui.CheckboxRenderer.prototype.createDom = function(checkbox) {
  var element = checkbox.getDomHelper().createDom("span", this.getClassNames(checkbox).join(" ")), state = checkbox.getChecked();
  this.setCheckboxState(element, state);
  return element
};
goog.ui.CheckboxRenderer.prototype.decorate = function(checkbox, element) {
  element = goog.ui.CheckboxRenderer.superClass_.decorate.call(this, checkbox, element);
  var classes = goog.dom.classes.get(element), checked = goog.ui.Checkbox.State.UNCHECKED;
  goog.array.contains(classes, this.getClassForCheckboxState(goog.ui.Checkbox.State.UNDETERMINED)) ? checked = goog.ui.Checkbox.State.UNDETERMINED : goog.array.contains(classes, this.getClassForCheckboxState(goog.ui.Checkbox.State.CHECKED)) ? checked = goog.ui.Checkbox.State.CHECKED : goog.array.contains(classes, this.getClassForCheckboxState(goog.ui.Checkbox.State.UNCHECKED)) && (checked = goog.ui.Checkbox.State.UNCHECKED);
  checkbox.setCheckedInternal(checked);
  goog.asserts.assert(element, "The element cannot be null.");
  goog.a11y.aria.setState(element, goog.a11y.aria.State.CHECKED, this.ariaStateFromCheckState_(checked));
  return element
};
goog.ui.CheckboxRenderer.prototype.getAriaRole = function() {
  return goog.a11y.aria.Role.CHECKBOX
};
goog.ui.CheckboxRenderer.prototype.setCheckboxState = function(element, state$$0) {
  if(element) {
    var classToAdd = this.getClassForCheckboxState(state$$0);
    goog.asserts.assert(classToAdd);
    goog.dom.classes.has(element, classToAdd) || (goog.object.forEach(goog.ui.Checkbox.State, function(state) {
      var className = this.getClassForCheckboxState(state);
      goog.dom.classes.enable(element, className, className == classToAdd)
    }, this), goog.a11y.aria.setState(element, goog.a11y.aria.State.CHECKED, this.ariaStateFromCheckState_(state$$0)))
  }
};
goog.ui.CheckboxRenderer.prototype.ariaStateFromCheckState_ = function(state) {
  return state == goog.ui.Checkbox.State.UNDETERMINED ? "mixed" : state == goog.ui.Checkbox.State.CHECKED ? "true" : "false"
};
goog.ui.CheckboxRenderer.prototype.getCssClass = function() {
  return goog.ui.CheckboxRenderer.CSS_CLASS
};
goog.ui.CheckboxRenderer.prototype.getClassForCheckboxState = function(state) {
  var baseClass = this.getStructuralCssClass();
  if(state == goog.ui.Checkbox.State.CHECKED) {
    return baseClass + "-checked"
  }
  if(state == goog.ui.Checkbox.State.UNCHECKED) {
    return baseClass + "-unchecked"
  }
  if(state == goog.ui.Checkbox.State.UNDETERMINED) {
    return baseClass + "-undetermined"
  }
  throw Error("Invalid checkbox state: " + state);
};
// Input 92
goog.ui.Checkbox = function(opt_checked, opt_domHelper, opt_renderer) {
  var renderer = opt_renderer || goog.ui.CheckboxRenderer.getInstance();
  goog.ui.Control.call(this, null, renderer, opt_domHelper);
  this.checked_ = goog.isDef(opt_checked) ? opt_checked : goog.ui.Checkbox.State.UNCHECKED
};
goog.inherits(goog.ui.Checkbox, goog.ui.Control);
goog.ui.Checkbox.State = {CHECKED:!0, UNCHECKED:!1, UNDETERMINED:null};
goog.ui.Checkbox.prototype.label_ = null;
goog.ui.Checkbox.prototype.getChecked = function() {
  return this.checked_
};
goog.ui.Checkbox.prototype.isChecked = function() {
  return this.checked_ == goog.ui.Checkbox.State.CHECKED
};
goog.ui.Checkbox.prototype.isUndetermined = function() {
  return this.checked_ == goog.ui.Checkbox.State.UNDETERMINED
};
goog.ui.Checkbox.prototype.setChecked = function(checked) {
  checked != this.checked_ && (this.checked_ = checked, this.getRenderer().setCheckboxState(this.getElement(), this.checked_))
};
goog.ui.Checkbox.prototype.setCheckedInternal = function(checked) {
  this.checked_ = checked
};
goog.ui.Checkbox.prototype.setLabel = function(label) {
  this.isInDocument() ? (this.exitDocument(), this.label_ = label, this.enterDocument()) : this.label_ = label
};
goog.ui.Checkbox.prototype.toggle = function() {
  this.setChecked(this.checked_ ? goog.ui.Checkbox.State.UNCHECKED : goog.ui.Checkbox.State.CHECKED)
};
goog.ui.Checkbox.prototype.enterDocument = function() {
  goog.ui.Checkbox.superClass_.enterDocument.call(this);
  if(this.isHandleMouseEvents()) {
    var handler = this.getHandler();
    this.label_ && handler.listen(this.label_, goog.events.EventType.CLICK, this.handleClickOrSpace_).listen(this.label_, goog.events.EventType.MOUSEOVER, this.handleMouseOver).listen(this.label_, goog.events.EventType.MOUSEOUT, this.handleMouseOut).listen(this.label_, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).listen(this.label_, goog.events.EventType.MOUSEUP, this.handleMouseUp);
    handler.listen(this.getElement(), goog.events.EventType.CLICK, this.handleClickOrSpace_)
  }
  if(this.label_) {
    this.label_.id || (this.label_.id = this.makeId("lbl"));
    var checkboxElement = this.getElement();
    goog.asserts.assert(checkboxElement, "The checkbox DOM element cannot be null.");
    goog.a11y.aria.setState(checkboxElement, goog.a11y.aria.State.LABELLEDBY, this.label_.id)
  }
};
goog.ui.Checkbox.prototype.setEnabled = function(enabled) {
  goog.ui.Checkbox.superClass_.setEnabled.call(this, enabled);
  var el = this.getElement();
  el && (el.tabIndex = this.isEnabled() ? 0 : -1)
};
goog.ui.Checkbox.prototype.handleClickOrSpace_ = function(e) {
  e.stopPropagation();
  var eventType = this.checked_ ? goog.ui.Component.EventType.UNCHECK : goog.ui.Component.EventType.CHECK;
  this.isEnabled() && this.dispatchEvent(eventType) && (e.preventDefault(), this.toggle(), this.dispatchEvent(goog.ui.Component.EventType.CHANGE))
};
goog.ui.Checkbox.prototype.handleKeyEventInternal = function(e) {
  e.keyCode == goog.events.KeyCodes.SPACE && this.handleClickOrSpace_(e);
  return!1
};
goog.ui.registry.setDecoratorByClassName(goog.ui.CheckboxRenderer.CSS_CLASS, function() {
  return new goog.ui.Checkbox
});
// Input 93
goog.events.MouseWheelHandler = function(element, opt_capture) {
  goog.events.EventTarget.call(this);
  this.element_ = element;
  var rtlElement = goog.dom.isElement(this.element_) ? this.element_ : this.element_ ? this.element_.body : null;
  this.isRtl_ = !!rtlElement && goog.style.isRightToLeft(rtlElement);
  var type = goog.userAgent.GECKO ? "DOMMouseScroll" : "mousewheel";
  this.listenKey_ = goog.events.listen(this.element_, type, this, opt_capture)
};
goog.inherits(goog.events.MouseWheelHandler, goog.events.EventTarget);
goog.events.MouseWheelHandler.EventType = {MOUSEWHEEL:"mousewheel"};
goog.events.MouseWheelHandler.prototype.handleEvent = function(e) {
  var deltaX = 0, deltaY = 0, detail = 0, be = e.getBrowserEvent();
  if("mousewheel" == be.type) {
    var wheelDeltaScaleFactor = 1;
    if(goog.userAgent.IE || goog.userAgent.WEBKIT && (goog.userAgent.WINDOWS || goog.userAgent.isVersionOrHigher("532.0"))) {
      wheelDeltaScaleFactor = 40
    }
    detail = goog.events.MouseWheelHandler.smartScale_(-be.wheelDelta, wheelDeltaScaleFactor);
    goog.isDef(be.wheelDeltaX) ? (deltaX = goog.events.MouseWheelHandler.smartScale_(-be.wheelDeltaX, wheelDeltaScaleFactor), deltaY = goog.events.MouseWheelHandler.smartScale_(-be.wheelDeltaY, wheelDeltaScaleFactor)) : deltaY = detail
  }else {
    detail = be.detail, 100 < detail ? detail = 3 : -100 > detail && (detail = -3), goog.isDef(be.axis) && be.axis === be.HORIZONTAL_AXIS ? deltaX = detail : deltaY = detail
  }
  goog.isNumber(this.maxDeltaX_) && (deltaX = goog.math.clamp(deltaX, -this.maxDeltaX_, this.maxDeltaX_));
  goog.isNumber(this.maxDeltaY_) && (deltaY = goog.math.clamp(deltaY, -this.maxDeltaY_, this.maxDeltaY_));
  this.isRtl_ && (deltaX = -deltaX);
  var newEvent = new goog.events.MouseWheelEvent(detail, be, deltaX, deltaY);
  this.dispatchEvent(newEvent)
};
goog.events.MouseWheelHandler.smartScale_ = function(mouseWheelDelta, scaleFactor) {
  return goog.userAgent.WEBKIT && (goog.userAgent.MAC || goog.userAgent.LINUX) && 0 != mouseWheelDelta % scaleFactor ? mouseWheelDelta : mouseWheelDelta / scaleFactor
};
goog.events.MouseWheelHandler.prototype.disposeInternal = function() {
  goog.events.MouseWheelHandler.superClass_.disposeInternal.call(this);
  goog.events.unlistenByKey(this.listenKey_);
  this.listenKey_ = null
};
goog.events.MouseWheelEvent = function(detail, browserEvent, deltaX, deltaY) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.MouseWheelHandler.EventType.MOUSEWHEEL;
  this.detail = detail;
  this.deltaX = deltaX;
  this.deltaY = deltaY
};
goog.inherits(goog.events.MouseWheelEvent, goog.events.BrowserEvent);
// Input 94
goog.fx.TransitionBase = function() {
  goog.events.EventTarget.call(this);
  this.state_ = goog.fx.TransitionBase.State.STOPPED;
  this.endTime = this.startTime = null
};
goog.inherits(goog.fx.TransitionBase, goog.events.EventTarget);
goog.fx.TransitionBase.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.TransitionBase.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.TransitionBase.prototype.setStatePlaying = function() {
  this.state_ = goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.setStatePaused = function() {
  this.state_ = goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.setStateStopped = function() {
  this.state_ = goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.isPlaying = function() {
  return this.state_ == goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.isPaused = function() {
  return this.state_ == goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.isStopped = function() {
  return this.state_ == goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.onBegin = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.BEGIN)
};
goog.fx.TransitionBase.prototype.onEnd = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.END)
};
goog.fx.TransitionBase.prototype.onFinish = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.FINISH)
};
goog.fx.TransitionBase.prototype.onPause = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PAUSE)
};
goog.fx.TransitionBase.prototype.onPlay = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PLAY)
};
goog.fx.TransitionBase.prototype.onResume = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.RESUME)
};
goog.fx.TransitionBase.prototype.onStop = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.STOP)
};
goog.fx.TransitionBase.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(type)
};
// Input 95
goog.fx.AnimationQueue = function() {
  goog.fx.TransitionBase.call(this);
  this.queue = []
};
goog.inherits(goog.fx.AnimationQueue, goog.fx.TransitionBase);
goog.fx.AnimationQueue.prototype.add = function(animation) {
  goog.asserts.assert(this.isStopped(), "Not allowed to add animations to a running animation queue.");
  goog.array.contains(this.queue, animation) || (this.queue.push(animation), goog.events.listen(animation, goog.fx.Transition.EventType.FINISH, this.onAnimationFinish, !1, this))
};
goog.fx.AnimationQueue.prototype.remove = function(animation) {
  goog.asserts.assert(this.isStopped(), "Not allowed to remove animations from a running animation queue.");
  goog.array.remove(this.queue, animation) && goog.events.unlisten(animation, goog.fx.Transition.EventType.FINISH, this.onAnimationFinish, !1, this)
};
goog.fx.AnimationQueue.prototype.disposeInternal = function() {
  goog.array.forEach(this.queue, function(animation) {
    animation.dispose()
  });
  this.queue.length = 0;
  goog.fx.AnimationQueue.superClass_.disposeInternal.call(this)
};
goog.fx.AnimationParallelQueue = function() {
  goog.fx.AnimationQueue.call(this);
  this.finishedCounter_ = 0
};
goog.inherits(goog.fx.AnimationParallelQueue, goog.fx.AnimationQueue);
goog.fx.AnimationParallelQueue.prototype.play = function(opt_restart) {
  if(0 == this.queue.length) {
    return!1
  }
  if(opt_restart || this.isStopped()) {
    this.finishedCounter_ = 0, this.onBegin()
  }else {
    if(this.isPlaying()) {
      return!1
    }
  }
  this.onPlay();
  if(this.isPaused()) {
    this.onResume()
  }
  var resuming = this.isPaused() && !opt_restart;
  this.startTime = goog.now();
  this.endTime = null;
  this.setStatePlaying();
  goog.array.forEach(this.queue, function(anim) {
    resuming && !anim.isPaused() || anim.play(opt_restart)
  });
  return!0
};
goog.fx.AnimationParallelQueue.prototype.pause = function() {
  this.isPlaying() && (goog.array.forEach(this.queue, function(anim) {
    anim.isPlaying() && anim.pause()
  }), this.setStatePaused(), this.onPause())
};
goog.fx.AnimationParallelQueue.prototype.stop = function(opt_gotoEnd) {
  goog.array.forEach(this.queue, function(anim) {
    anim.isStopped() || anim.stop(opt_gotoEnd)
  });
  this.setStateStopped();
  this.endTime = goog.now();
  this.onStop();
  this.onEnd()
};
goog.fx.AnimationParallelQueue.prototype.onAnimationFinish = function() {
  this.finishedCounter_++;
  this.finishedCounter_ == this.queue.length && (this.endTime = goog.now(), this.setStateStopped(), this.onFinish(), this.onEnd())
};
goog.fx.AnimationSerialQueue = function() {
  goog.fx.AnimationQueue.call(this);
  this.current_ = 0
};
goog.inherits(goog.fx.AnimationSerialQueue, goog.fx.AnimationQueue);
goog.fx.AnimationSerialQueue.prototype.play = function(opt_restart) {
  if(0 == this.queue.length) {
    return!1
  }
  if(opt_restart || this.isStopped()) {
    this.current_ < this.queue.length && !this.queue[this.current_].isStopped() && this.queue[this.current_].stop(!1), this.current_ = 0, this.onBegin()
  }else {
    if(this.isPlaying()) {
      return!1
    }
  }
  this.onPlay();
  if(this.isPaused()) {
    this.onResume()
  }
  this.startTime = goog.now();
  this.endTime = null;
  this.setStatePlaying();
  this.queue[this.current_].play(opt_restart);
  return!0
};
goog.fx.AnimationSerialQueue.prototype.pause = function() {
  this.isPlaying() && (this.queue[this.current_].pause(), this.setStatePaused(), this.onPause())
};
goog.fx.AnimationSerialQueue.prototype.stop = function(opt_gotoEnd) {
  this.setStateStopped();
  this.endTime = goog.now();
  if(opt_gotoEnd) {
    for(var i = this.current_;i < this.queue.length;++i) {
      var anim = this.queue[i];
      anim.isStopped() && anim.play();
      anim.isStopped() || anim.stop(!0)
    }
  }else {
    this.current_ < this.queue.length && this.queue[this.current_].stop(!1)
  }
  this.onStop();
  this.onEnd()
};
goog.fx.AnimationSerialQueue.prototype.onAnimationFinish = function() {
  this.isPlaying() && (this.current_++, this.current_ < this.queue.length ? this.queue[this.current_].play() : (this.endTime = goog.now(), this.setStateStopped(), this.onFinish(), this.onEnd()))
};
// Input 96
goog.async = {};
goog.async.AnimationDelay = function(listener, opt_window, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.handler_ = opt_handler;
  this.win_ = opt_window || window;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.AnimationDelay, goog.Disposable);
goog.async.AnimationDelay.prototype.id_ = null;
goog.async.AnimationDelay.prototype.usingListeners_ = !1;
goog.async.AnimationDelay.TIMEOUT = 20;
goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_ = "MozBeforePaint";
goog.async.AnimationDelay.prototype.start = function() {
  this.stop();
  this.usingListeners_ = !1;
  var raf = this.getRaf_(), cancelRaf = this.getCancelRaf_();
  raf && !cancelRaf && this.win_.mozRequestAnimationFrame ? (this.id_ = goog.events.listen(this.win_, goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_, this.callback_), this.win_.mozRequestAnimationFrame(null), this.usingListeners_ = !0) : this.id_ = raf && cancelRaf ? raf.call(this.win_, this.callback_) : this.win_.setTimeout(goog.functions.lock(this.callback_), goog.async.AnimationDelay.TIMEOUT)
};
goog.async.AnimationDelay.prototype.stop = function() {
  if(this.isActive()) {
    var raf = this.getRaf_(), cancelRaf = this.getCancelRaf_();
    raf && !cancelRaf && this.win_.mozRequestAnimationFrame ? goog.events.unlistenByKey(this.id_) : raf && cancelRaf ? cancelRaf.call(this.win_, this.id_) : this.win_.clearTimeout(this.id_)
  }
  this.id_ = null
};
goog.async.AnimationDelay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.AnimationDelay.prototype.isActive = function() {
  return null != this.id_
};
goog.async.AnimationDelay.prototype.doAction_ = function() {
  this.usingListeners_ && this.id_ && goog.events.unlistenByKey(this.id_);
  this.id_ = null;
  this.listener_.call(this.handler_, goog.now())
};
goog.async.AnimationDelay.prototype.disposeInternal = function() {
  this.stop();
  goog.async.AnimationDelay.superClass_.disposeInternal.call(this)
};
goog.async.AnimationDelay.prototype.getRaf_ = function() {
  var win = this.win_;
  return win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || null
};
goog.async.AnimationDelay.prototype.getCancelRaf_ = function() {
  var win = this.win_;
  return win.cancelRequestAnimationFrame || win.webkitCancelRequestAnimationFrame || win.mozCancelRequestAnimationFrame || win.oCancelRequestAnimationFrame || win.msCancelRequestAnimationFrame || null
};
// Input 97
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  this.isActive() && goog.Timer.clear(this.id_);
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.isActive = function() {
  return 0 != this.id_
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  this.listener_ && this.listener_.call(this.handler_)
};
// Input 98
goog.fx.anim = {};
goog.fx.anim.Animated = function() {
};
goog.fx.anim.TIMEOUT = goog.async.AnimationDelay.TIMEOUT;
goog.fx.anim.activeAnimations_ = {};
goog.fx.anim.animationWindow_ = null;
goog.fx.anim.animationDelay_ = null;
goog.fx.anim.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  uid in goog.fx.anim.activeAnimations_ || (goog.fx.anim.activeAnimations_[uid] = animation);
  goog.fx.anim.requestAnimationFrame_()
};
goog.fx.anim.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.anim.activeAnimations_[uid];
  goog.object.isEmpty(goog.fx.anim.activeAnimations_) && goog.fx.anim.cancelAnimationFrame_()
};
goog.fx.anim.tearDown = function() {
  goog.fx.anim.animationWindow_ = null;
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.activeAnimations_ = {}
};
goog.fx.anim.setAnimationWindow = function(animationWindow) {
  var hasTimer = goog.fx.anim.animationDelay_ && goog.fx.anim.animationDelay_.isActive();
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.animationWindow_ = animationWindow;
  hasTimer && goog.fx.anim.requestAnimationFrame_()
};
goog.fx.anim.requestAnimationFrame_ = function() {
  goog.fx.anim.animationDelay_ || (goog.fx.anim.animationDelay_ = goog.fx.anim.animationWindow_ ? new goog.async.AnimationDelay(function(now) {
    goog.fx.anim.cycleAnimations_(now)
  }, goog.fx.anim.animationWindow_) : new goog.async.Delay(function() {
    goog.fx.anim.cycleAnimations_(goog.now())
  }, goog.fx.anim.TIMEOUT));
  var delay = goog.fx.anim.animationDelay_;
  delay.isActive() || delay.start()
};
goog.fx.anim.cancelAnimationFrame_ = function() {
  goog.fx.anim.animationDelay_ && goog.fx.anim.animationDelay_.stop()
};
goog.fx.anim.cycleAnimations_ = function(now) {
  goog.object.forEach(goog.fx.anim.activeAnimations_, function(anim) {
    anim.onAnimationFrame(now)
  });
  goog.object.isEmpty(goog.fx.anim.activeAnimations_) || goog.fx.anim.requestAnimationFrame_()
};
// Input 99
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.fx.TransitionBase.call(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = [];
  this.useRightPositioningForRtl_ = !1
};
goog.inherits(goog.fx.Animation, goog.fx.TransitionBase);
goog.fx.Animation.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl
};
goog.fx.Animation.prototype.isRightPositioningForRtlEnabled = function() {
  return this.useRightPositioningForRtl_
};
goog.fx.Animation.EventType = {PLAY:goog.fx.Transition.EventType.PLAY, BEGIN:goog.fx.Transition.EventType.BEGIN, RESUME:goog.fx.Transition.EventType.RESUME, END:goog.fx.Transition.EventType.END, STOP:goog.fx.Transition.EventType.STOP, FINISH:goog.fx.Transition.EventType.FINISH, PAUSE:goog.fx.Transition.EventType.PAUSE, ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.TIMEOUT = goog.fx.anim.TIMEOUT;
goog.fx.Animation.State = goog.fx.TransitionBase.State;
goog.fx.Animation.setAnimationWindow = function(animationWindow) {
  goog.fx.anim.setAnimationWindow(animationWindow)
};
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.isStopped()) {
    this.progress = 0, this.coords = this.startPoint
  }else {
    if(this.isPlaying()) {
      return!1
    }
  }
  goog.fx.anim.unregisterAnimation(this);
  var now = goog.now();
  this.startTime = now;
  this.isPaused() && (this.startTime -= this.duration * this.progress);
  this.endTime = this.startTime + this.duration;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.isPaused()) {
    this.onResume()
  }
  this.setStatePlaying();
  goog.fx.anim.registerAnimation(this);
  this.cycle(now);
  return!0
};
goog.fx.Animation.prototype.stop = function(opt_gotoEnd) {
  goog.fx.anim.unregisterAnimation(this);
  this.setStateStopped();
  opt_gotoEnd && (this.progress = 1);
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  this.isPlaying() && (goog.fx.anim.unregisterAnimation(this), this.setStatePaused(), this.onPause())
};
goog.fx.Animation.prototype.getProgress = function() {
  return this.progress
};
goog.fx.Animation.prototype.disposeInternal = function() {
  this.isStopped() || this.stop(!1);
  this.onDestroy();
  goog.fx.Animation.superClass_.disposeInternal.call(this)
};
goog.fx.Animation.prototype.onAnimationFrame = function(now) {
  this.cycle(now)
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  1 <= this.progress && (this.progress = 1);
  this.updateCoords_(this.progress);
  if(1 == this.progress) {
    this.setStateStopped(), goog.fx.anim.unregisterAnimation(this), this.onFinish(), this.onEnd()
  }else {
    if(this.isPlaying()) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  goog.isFunction(this.accel_) && (t = this.accel_(t));
  this.coords = Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.events.Event.call(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.getProgress();
  this.state = anim.getStateInternal();
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
// Input 100
goog.fx.dom = {};
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.isRightToLeft = function() {
  goog.isDef(this.rightToLeft_) || (this.rightToLeft_ = goog.style.isRightToLeft(this.element));
  return this.rightToLeft_
};
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(2 != start.length || 2 != end.length) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  var pos = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "right" : "left";
  this.element.style[pos] = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(element) : element.offsetLeft, start = [offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(this.element) : this.element.offsetLeft;
  this.startPoint = [offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(2 != start.length || 2 != end.length) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0], y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  var marginX = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "marginRight" : "marginLeft";
  this.element.style[marginX] = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(2 != start.length || 2 != end.length) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  this.isRightPositioningForRtlEnabled() ? goog.style.bidi.setScrollOffset(this.element, Math.round(this.coords[0])) : this.element.scrollLeft = Math.round(this.coords[0]);
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(2 != start.length || 2 != end.length) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  goog.isNumber(start) && (start = [start]);
  goog.isNumber(end) && (end = [end]);
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(1 != start.length || 1 != end.length) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(3 != start.length || 3 != end.length) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  for(var coordsAsInts = [], i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  var initialBgColor = element.style.backgroundColor || "", computedBgColor = goog.style.getBackgroundColor(element), end;
  end = computedBgColor && "transparent" != computedBgColor && "rgba(0, 0, 0, 0)" != computedBgColor ? goog.color.hexToRgb(goog.color.parse(computedBgColor).hex) : [255, 255, 255];
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  opt_eventHandler ? opt_eventHandler.listen(anim, goog.fx.Transition.EventType.END, setBgColor) : goog.events.listen(anim, goog.fx.Transition.EventType.END, setBgColor);
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(3 != start.length || 3 != end.length) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  for(var coordsAsInts = [], i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
// Input 101
goog.ui.RangeModel = function() {
  goog.events.EventTarget.call(this)
};
goog.inherits(goog.ui.RangeModel, goog.events.EventTarget);
goog.ui.RangeModel.prototype.value_ = 0;
goog.ui.RangeModel.prototype.minimum_ = 0;
goog.ui.RangeModel.prototype.maximum_ = 100;
goog.ui.RangeModel.prototype.extent_ = 0;
goog.ui.RangeModel.prototype.step_ = 1;
goog.ui.RangeModel.prototype.isChanging_ = !1;
goog.ui.RangeModel.prototype.mute_ = !1;
goog.ui.RangeModel.prototype.setMute = function(muteValue) {
  this.mute_ = muteValue
};
goog.ui.RangeModel.prototype.setValue = function(value) {
  value = this.roundToStepWithMin(value);
  this.value_ != value && (this.value_ = value + this.extent_ > this.maximum_ ? this.maximum_ - this.extent_ : value < this.minimum_ ? this.minimum_ : value, this.isChanging_ || this.mute_ || this.dispatchEvent(goog.ui.Component.EventType.CHANGE))
};
goog.ui.RangeModel.prototype.getValue = function() {
  return this.roundToStepWithMin(this.value_)
};
goog.ui.RangeModel.prototype.setExtent = function(extent) {
  extent = this.roundToStepWithMin(extent);
  this.extent_ != extent && (this.extent_ = 0 > extent ? 0 : this.value_ + extent > this.maximum_ ? this.maximum_ - this.value_ : extent, this.isChanging_ || this.mute_ || this.dispatchEvent(goog.ui.Component.EventType.CHANGE))
};
goog.ui.RangeModel.prototype.getExtent = function() {
  return this.roundToStep(this.extent_)
};
goog.ui.RangeModel.prototype.setMinimum = function(minimum) {
  if(this.minimum_ != minimum) {
    var oldIsChanging = this.isChanging_;
    this.isChanging_ = !0;
    this.minimum_ = minimum;
    minimum + this.extent_ > this.maximum_ && (this.extent_ = this.maximum_ - this.minimum_);
    minimum > this.value_ && this.setValue(minimum);
    minimum > this.maximum_ && (this.extent_ = 0, this.setMaximum(minimum), this.setValue(minimum));
    (this.isChanging_ = oldIsChanging) || this.mute_ || this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
  }
};
goog.ui.RangeModel.prototype.getMinimum = function() {
  return this.roundToStepWithMin(this.minimum_)
};
goog.ui.RangeModel.prototype.setMaximum = function(maximum) {
  maximum = this.roundToStepWithMin(maximum);
  if(this.maximum_ != maximum) {
    var oldIsChanging = this.isChanging_;
    this.isChanging_ = !0;
    this.maximum_ = maximum;
    maximum < this.value_ + this.extent_ && this.setValue(maximum - this.extent_);
    maximum < this.minimum_ && (this.extent_ = 0, this.setMinimum(maximum), this.setValue(this.maximum_));
    maximum < this.minimum_ + this.extent_ && (this.extent_ = this.maximum_ - this.minimum_);
    (this.isChanging_ = oldIsChanging) || this.mute_ || this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
  }
};
goog.ui.RangeModel.prototype.getMaximum = function() {
  return this.roundToStepWithMin(this.maximum_)
};
goog.ui.RangeModel.prototype.getStep = function() {
  return this.step_
};
goog.ui.RangeModel.prototype.setStep = function(step) {
  if(this.step_ != step) {
    this.step_ = step;
    var oldIsChanging = this.isChanging_;
    this.isChanging_ = !0;
    this.setMaximum(this.getMaximum());
    this.setExtent(this.getExtent());
    this.setValue(this.getValue());
    (this.isChanging_ = oldIsChanging) || this.mute_ || this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
  }
};
goog.ui.RangeModel.prototype.roundToStepWithMin = function(value) {
  return null == this.step_ ? value : this.minimum_ + Math.round((value - this.minimum_) / this.step_) * this.step_
};
goog.ui.RangeModel.prototype.roundToStep = function(value) {
  return null == this.step_ ? value : Math.round(value / this.step_) * this.step_
};
// Input 102
goog.ui.SliderBase = function(opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.additionalAnimations_ = null;
  this.rangeModel = new goog.ui.RangeModel;
  goog.events.listen(this.rangeModel, goog.ui.Component.EventType.CHANGE, this.handleRangeModelChange, !1, this)
};
goog.inherits(goog.ui.SliderBase, goog.ui.Component);
goog.ui.SliderBase.EventType = {DRAG_VALUE_START:"a", DRAG_VALUE_END:"b", DRAG_EXTENT_START:"c", DRAG_EXTENT_END:"d", DRAG_START:"e", DRAG_END:"f"};
goog.ui.SliderBase.Orientation = {VERTICAL:"vertical", HORIZONTAL:"horizontal"};
goog.ui.SliderBase.prototype.orientation_ = goog.ui.SliderBase.Orientation.HORIZONTAL;
goog.ui.SliderBase.MOUSE_DOWN_INCREMENT_INTERVAL_ = 200;
goog.ui.SliderBase.ANIMATION_INTERVAL_ = 100;
goog.ui.SliderBase.prototype.isAnimating_ = !1;
goog.ui.SliderBase.prototype.moveToPointEnabled_ = !1;
goog.ui.SliderBase.prototype.blockIncrement_ = 10;
goog.ui.SliderBase.prototype.minExtent_ = 0;
goog.ui.SliderBase.prototype.isHandleMouseWheel_ = !0;
goog.ui.SliderBase.prototype.enabled_ = !0;
goog.ui.SliderBase.prototype.flipForRtl_ = !1;
goog.ui.SliderBase.prototype.createDom = function() {
  goog.ui.SliderBase.superClass_.createDom.call(this);
  var element = this.getDomHelper().createDom("div", this.getCssClass(this.orientation_));
  this.decorateInternal(element)
};
goog.ui.SliderBase.SLIDER_DRAGGING_CSS_CLASS_ = "charts-slider-dragging";
goog.ui.SliderBase.THUMB_DRAGGING_CSS_CLASS_ = "charts-slider-thumb-dragging";
goog.ui.SliderBase.DISABLED_CSS_CLASS_ = "charts-slider-disabled";
goog.ui.SliderBase.prototype.decorateInternal = function(element) {
  goog.ui.SliderBase.superClass_.decorateInternal.call(this, element);
  goog.dom.classes.add(element, this.getCssClass(this.orientation_));
  this.createThumbs();
  this.setAriaRoles()
};
goog.ui.SliderBase.prototype.enterDocument = function() {
  goog.ui.SliderBase.superClass_.enterDocument.call(this);
  this.valueDragger_ = new goog.fx.Dragger(this.valueThumb);
  this.extentDragger_ = new goog.fx.Dragger(this.extentThumb);
  this.valueDragger_.enableRightPositioningForRtl(this.flipForRtl_);
  this.extentDragger_.enableRightPositioningForRtl(this.flipForRtl_);
  this.valueDragger_.defaultAction = this.extentDragger_.defaultAction = goog.nullFunction;
  this.keyHandler_ = new goog.events.KeyHandler(this.getElement());
  this.enableEventHandlers_(!0);
  this.getElement().tabIndex = 0;
  this.updateUi_()
};
goog.ui.SliderBase.prototype.enableEventHandlers_ = function(enable) {
  enable ? (this.getHandler().listen(this.valueDragger_, goog.fx.Dragger.EventType.BEFOREDRAG, this.handleBeforeDrag_).listen(this.extentDragger_, goog.fx.Dragger.EventType.BEFOREDRAG, this.handleBeforeDrag_).listen(this.valueDragger_, [goog.fx.Dragger.EventType.START, goog.fx.Dragger.EventType.END], this.handleThumbDragStartEnd_).listen(this.extentDragger_, [goog.fx.Dragger.EventType.START, goog.fx.Dragger.EventType.END], this.handleThumbDragStartEnd_).listen(this.keyHandler_, goog.events.KeyHandler.EventType.KEY, 
  this.handleKeyDown_).listen(this.getElement(), goog.events.EventType.MOUSEDOWN, this.handleMouseDown_), this.isHandleMouseWheel() && this.enableMouseWheelHandling_(!0)) : (this.getHandler().unlisten(this.valueDragger_, goog.fx.Dragger.EventType.BEFOREDRAG, this.handleBeforeDrag_).unlisten(this.extentDragger_, goog.fx.Dragger.EventType.BEFOREDRAG, this.handleBeforeDrag_).unlisten(this.valueDragger_, [goog.fx.Dragger.EventType.START, goog.fx.Dragger.EventType.END], this.handleThumbDragStartEnd_).unlisten(this.extentDragger_, 
  [goog.fx.Dragger.EventType.START, goog.fx.Dragger.EventType.END], this.handleThumbDragStartEnd_).unlisten(this.keyHandler_, goog.events.KeyHandler.EventType.KEY, this.handleKeyDown_).unlisten(this.getElement(), goog.events.EventType.MOUSEDOWN, this.handleMouseDown_), this.isHandleMouseWheel() && this.enableMouseWheelHandling_(!1))
};
goog.ui.SliderBase.prototype.exitDocument = function() {
  goog.ui.SliderBase.superClass_.exitDocument.call(this);
  goog.disposeAll(this.valueDragger_, this.extentDragger_, this.keyHandler_, this.mouseWheelHandler_)
};
goog.ui.SliderBase.prototype.handleBeforeDrag_ = function(e) {
  var thumbToDrag = e.dragger == this.valueDragger_ ? this.valueThumb : this.extentThumb, value;
  if(this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL) {
    var availHeight = this.getElement().clientHeight - thumbToDrag.offsetHeight;
    value = (availHeight - e.top) / availHeight * (this.getMaximum() - this.getMinimum()) + this.getMinimum()
  }else {
    var availWidth = this.getElement().clientWidth - thumbToDrag.offsetWidth;
    value = e.left / availWidth * (this.getMaximum() - this.getMinimum()) + this.getMinimum()
  }
  value = e.dragger == this.valueDragger_ ? Math.min(Math.max(value, this.getMinimum()), this.getValue() + this.getExtent()) : Math.min(Math.max(value, this.getValue()), this.getMaximum());
  this.setThumbPosition_(thumbToDrag, value)
};
goog.ui.SliderBase.prototype.handleThumbDragStartEnd_ = function(e) {
  var isDragStart = e.type == goog.fx.Dragger.EventType.START;
  goog.dom.classes.enable(this.getElement(), goog.ui.SliderBase.SLIDER_DRAGGING_CSS_CLASS_, isDragStart);
  goog.dom.classes.enable(e.target.handle, goog.ui.SliderBase.THUMB_DRAGGING_CSS_CLASS_, isDragStart);
  var isValueDragger = e.dragger == this.valueDragger_;
  isDragStart ? (this.dispatchEvent(goog.ui.SliderBase.EventType.DRAG_START), this.dispatchEvent(isValueDragger ? goog.ui.SliderBase.EventType.DRAG_VALUE_START : goog.ui.SliderBase.EventType.DRAG_EXTENT_START)) : (this.dispatchEvent(goog.ui.SliderBase.EventType.DRAG_END), this.dispatchEvent(isValueDragger ? goog.ui.SliderBase.EventType.DRAG_VALUE_END : goog.ui.SliderBase.EventType.DRAG_EXTENT_END))
};
goog.ui.SliderBase.prototype.handleKeyDown_ = function(e) {
  var handled = !0;
  switch(e.keyCode) {
    case goog.events.KeyCodes.HOME:
      this.animatedSetValue(this.getMinimum());
      break;
    case goog.events.KeyCodes.END:
      this.animatedSetValue(this.getMaximum());
      break;
    case goog.events.KeyCodes.PAGE_UP:
      this.moveThumbs(this.getBlockIncrement());
      break;
    case goog.events.KeyCodes.PAGE_DOWN:
      this.moveThumbs(-this.getBlockIncrement());
      break;
    case goog.events.KeyCodes.LEFT:
      var sign = this.flipForRtl_ && this.isRightToLeft() ? 1 : -1;
      this.moveThumbs(e.shiftKey ? sign * this.getBlockIncrement() : sign * this.getUnitIncrement());
      break;
    case goog.events.KeyCodes.DOWN:
      this.moveThumbs(e.shiftKey ? -this.getBlockIncrement() : -this.getUnitIncrement());
      break;
    case goog.events.KeyCodes.RIGHT:
      sign = this.flipForRtl_ && this.isRightToLeft() ? -1 : 1;
      this.moveThumbs(e.shiftKey ? sign * this.getBlockIncrement() : sign * this.getUnitIncrement());
      break;
    case goog.events.KeyCodes.UP:
      this.moveThumbs(e.shiftKey ? this.getBlockIncrement() : this.getUnitIncrement());
      break;
    default:
      handled = !1
  }
  handled && e.preventDefault()
};
goog.ui.SliderBase.prototype.handleMouseDown_ = function(e) {
  this.getElement().focus && this.getElement().focus();
  var target = e.target;
  goog.dom.contains(this.valueThumb, target) || goog.dom.contains(this.extentThumb, target) || (this.moveToPointEnabled_ ? this.animatedSetValue(this.getValueFromMousePosition(e)) : this.startBlockIncrementing_(e))
};
goog.ui.SliderBase.prototype.handleMouseWheel_ = function(e) {
  var direction = 0 < e.detail ? -1 : 1;
  this.moveThumbs(direction * this.getUnitIncrement());
  e.preventDefault()
};
goog.ui.SliderBase.prototype.startBlockIncrementing_ = function(e) {
  this.storeMousePos_(e);
  this.thumbToMove_ = this.getClosestThumb_(this.getValueFromMousePosition(e));
  this.incrementing_ = this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL ? this.lastMousePosition_ < this.thumbToMove_.offsetTop : this.lastMousePosition_ > this.getOffsetStart_(this.thumbToMove_) + this.thumbToMove_.offsetWidth;
  var doc = goog.dom.getOwnerDocument(this.getElement());
  this.getHandler().listen(doc, goog.events.EventType.MOUSEUP, this.stopBlockIncrementing_, !0).listen(this.getElement(), goog.events.EventType.MOUSEMOVE, this.storeMousePos_);
  this.incTimer_ || (this.incTimer_ = new goog.Timer(goog.ui.SliderBase.MOUSE_DOWN_INCREMENT_INTERVAL_), this.getHandler().listen(this.incTimer_, goog.Timer.TICK, this.handleTimerTick_));
  this.handleTimerTick_();
  this.incTimer_.start()
};
goog.ui.SliderBase.prototype.handleTimerTick_ = function() {
  var value;
  if(this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL) {
    var mouseY = this.lastMousePosition_, thumbY = this.thumbToMove_.offsetTop;
    if(this.incrementing_) {
      mouseY < thumbY && (value = this.getThumbPosition_(this.thumbToMove_) + this.getBlockIncrement())
    }else {
      var thumbH = this.thumbToMove_.offsetHeight;
      mouseY > thumbY + thumbH && (value = this.getThumbPosition_(this.thumbToMove_) - this.getBlockIncrement())
    }
  }else {
    var mouseX = this.lastMousePosition_, thumbX = this.getOffsetStart_(this.thumbToMove_);
    if(this.incrementing_) {
      var thumbW = this.thumbToMove_.offsetWidth;
      mouseX > thumbX + thumbW && (value = this.getThumbPosition_(this.thumbToMove_) + this.getBlockIncrement())
    }else {
      mouseX < thumbX && (value = this.getThumbPosition_(this.thumbToMove_) - this.getBlockIncrement())
    }
  }
  goog.isDef(value) && this.setThumbPosition_(this.thumbToMove_, value)
};
goog.ui.SliderBase.prototype.stopBlockIncrementing_ = function() {
  this.incTimer_ && this.incTimer_.stop();
  var doc = goog.dom.getOwnerDocument(this.getElement());
  this.getHandler().unlisten(doc, goog.events.EventType.MOUSEUP, this.stopBlockIncrementing_, !0).unlisten(this.getElement(), goog.events.EventType.MOUSEMOVE, this.storeMousePos_)
};
goog.ui.SliderBase.prototype.getRelativeMousePos_ = function(e) {
  var coord = goog.style.getRelativePosition(e, this.getElement());
  return this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL ? coord.y : this.flipForRtl_ && this.isRightToLeft() ? this.getElement().clientWidth - coord.x : coord.x
};
goog.ui.SliderBase.prototype.storeMousePos_ = function(e) {
  this.lastMousePosition_ = this.getRelativeMousePos_(e)
};
goog.ui.SliderBase.prototype.getValueFromMousePosition = function(e) {
  var min = this.getMinimum(), max = this.getMaximum();
  if(this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL) {
    var thumbH = this.valueThumb.offsetHeight, availH = this.getElement().clientHeight - thumbH, y = this.getRelativeMousePos_(e) - thumbH / 2;
    return(max - min) * (availH - y) / availH + min
  }
  var thumbW = this.valueThumb.offsetWidth, availW = this.getElement().clientWidth - thumbW, x = this.getRelativeMousePos_(e) - thumbW / 2;
  return(max - min) * x / availW + min
};
goog.ui.SliderBase.prototype.getThumbPosition_ = function(thumb) {
  if(thumb == this.valueThumb) {
    return this.rangeModel.getValue()
  }
  if(thumb == this.extentThumb) {
    return this.rangeModel.getValue() + this.rangeModel.getExtent()
  }
  throw Error("Illegal thumb element. Neither minThumb nor maxThumb");
};
goog.ui.SliderBase.prototype.moveThumbs = function(delta) {
  var newMinPos = this.getThumbPosition_(this.valueThumb) + delta, newMaxPos = this.getThumbPosition_(this.extentThumb) + delta, newMinPos = goog.math.clamp(newMinPos, this.getMinimum(), this.getMaximum() - this.minExtent_), newMaxPos = goog.math.clamp(newMaxPos, this.getMinimum() + this.minExtent_, this.getMaximum());
  this.setValueAndExtent(newMinPos, newMaxPos - newMinPos)
};
goog.ui.SliderBase.prototype.setThumbPosition_ = function(thumb, position) {
  var roundedPosition = this.rangeModel.roundToStepWithMin(position), value = thumb == this.valueThumb ? roundedPosition : this.rangeModel.getValue(), end = thumb == this.extentThumb ? roundedPosition : this.rangeModel.getValue() + this.rangeModel.getExtent();
  value >= this.getMinimum() && end >= value + this.minExtent_ && this.getMaximum() >= end && this.setValueAndExtent(value, end - value)
};
goog.ui.SliderBase.prototype.setValueAndExtent = function(value, extent) {
  this.getMinimum() <= value && value <= this.getMaximum() - extent && this.minExtent_ <= extent && extent <= this.getMaximum() - value && (value != this.getValue() || extent != this.getExtent()) && (this.rangeModel.setMute(!0), this.rangeModel.setExtent(0), this.rangeModel.setValue(value), this.rangeModel.setExtent(extent), this.rangeModel.setMute(!1), this.handleRangeModelChange(null))
};
goog.ui.SliderBase.prototype.getMinimum = function() {
  return this.rangeModel.getMinimum()
};
goog.ui.SliderBase.prototype.setMinimum = function(min) {
  this.rangeModel.setMinimum(min)
};
goog.ui.SliderBase.prototype.getMaximum = function() {
  return this.rangeModel.getMaximum()
};
goog.ui.SliderBase.prototype.setMaximum = function(max) {
  this.rangeModel.setMaximum(max)
};
goog.ui.SliderBase.prototype.getValueThumb = function() {
  return this.valueThumb
};
goog.ui.SliderBase.prototype.getExtentThumb = function() {
  return this.extentThumb
};
goog.ui.SliderBase.prototype.getClosestThumb_ = function(position) {
  return position <= this.rangeModel.getValue() + this.rangeModel.getExtent() / 2 ? this.valueThumb : this.extentThumb
};
goog.ui.SliderBase.prototype.handleRangeModelChange = function() {
  this.updateUi_();
  this.updateAriaStates();
  this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
};
goog.ui.SliderBase.prototype.updateUi_ = function() {
  if(this.valueThumb && !this.isAnimating_) {
    var minCoord = this.getThumbCoordinateForValue(this.getThumbPosition_(this.valueThumb)), maxCoord = this.getThumbCoordinateForValue(this.getThumbPosition_(this.extentThumb));
    if(this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL) {
      if(this.valueThumb.style.top = minCoord.y + "px", this.extentThumb.style.top = maxCoord.y + "px", this.rangeHighlight) {
        var highlightPositioning = this.calculateRangeHighlightPositioning_(maxCoord.y, minCoord.y, this.valueThumb.offsetHeight);
        this.rangeHighlight.style.top = highlightPositioning.offset + "px";
        this.rangeHighlight.style.height = highlightPositioning.size + "px"
      }
    }else {
      var pos = this.flipForRtl_ && this.isRightToLeft() ? "right" : "left";
      this.valueThumb.style[pos] = minCoord.x + "px";
      this.extentThumb.style[pos] = maxCoord.x + "px";
      this.rangeHighlight && (highlightPositioning = this.calculateRangeHighlightPositioning_(minCoord.x, maxCoord.x, this.valueThumb.offsetWidth), this.rangeHighlight.style[pos] = highlightPositioning.offset + "px", this.rangeHighlight.style.width = highlightPositioning.size + "px")
    }
  }
};
goog.ui.SliderBase.prototype.calculateRangeHighlightPositioning_ = function(firstThumbPos, secondThumbPos, thumbSize) {
  var highlightInset = Math.ceil(thumbSize / 2), size = secondThumbPos - firstThumbPos + thumbSize - 2 * highlightInset;
  return{offset:firstThumbPos + highlightInset, size:Math.max(size, 0)}
};
goog.ui.SliderBase.prototype.getThumbCoordinateForValue = function(val) {
  var coord = new goog.math.Coordinate;
  if(this.valueThumb) {
    var min = this.getMinimum(), max = this.getMaximum(), ratio = val == min && min == max ? 0 : (val - min) / (max - min);
    if(this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL) {
      var thumbHeight = this.valueThumb.offsetHeight, h = this.getElement().clientHeight - thumbHeight, bottom = Math.round(ratio * h);
      coord.x = this.getOffsetStart_(this.valueThumb);
      coord.y = h - bottom
    }else {
      var w = this.getElement().clientWidth - this.valueThumb.offsetWidth, left = Math.round(ratio * w);
      coord.x = left;
      coord.y = this.valueThumb.offsetTop
    }
  }
  return coord
};
goog.ui.SliderBase.prototype.animatedSetValue = function(v) {
  v = goog.math.clamp(v, this.getMinimum(), this.getMaximum());
  this.isAnimating_ && this.currentAnimation_.stop(!0);
  var animations = new goog.fx.AnimationParallelQueue, end, thumb = this.getClosestThumb_(v), previousValue = this.getValue(), previousExtent = this.getExtent(), previousThumbValue = this.getThumbPosition_(thumb), previousCoord = this.getThumbCoordinateForValue(previousThumbValue), stepSize = this.getStep();
  if(Math.abs(v - previousThumbValue) < stepSize) {
    var delta = v > previousThumbValue ? stepSize : -stepSize;
    v = previousThumbValue + delta;
    v = goog.math.clamp(v, this.getMinimum(), this.getMaximum())
  }
  this.setThumbPosition_(thumb, v);
  var coord = this.getThumbCoordinateForValue(this.getThumbPosition_(thumb));
  end = this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL ? [this.getOffsetStart_(thumb), coord.y] : [coord.x, thumb.offsetTop];
  var slide = new goog.fx.dom.Slide(thumb, [previousCoord.x, previousCoord.y], end, goog.ui.SliderBase.ANIMATION_INTERVAL_);
  slide.enableRightPositioningForRtl(this.flipForRtl_);
  animations.add(slide);
  this.rangeHighlight && this.addRangeHighlightAnimations_(thumb, previousValue, previousExtent, coord, animations);
  if(this.additionalAnimations_) {
    var additionalAnimations = this.additionalAnimations_.createAnimations(previousValue, v, goog.ui.SliderBase.ANIMATION_INTERVAL_);
    goog.array.forEach(additionalAnimations, function(animation) {
      animations.add(animation)
    })
  }
  this.currentAnimation_ = animations;
  this.getHandler().listen(animations, goog.fx.Transition.EventType.END, this.endAnimation_);
  this.isAnimating_ = !0;
  animations.play(!1)
};
goog.ui.SliderBase.prototype.addRangeHighlightAnimations_ = function(thumb, previousValue, previousExtent, newCoord, animations) {
  var previousMinCoord = this.getThumbCoordinateForValue(previousValue), previousMaxCoord = this.getThumbCoordinateForValue(previousValue + previousExtent), minCoord = previousMinCoord, maxCoord = previousMaxCoord;
  thumb == this.valueThumb ? minCoord = newCoord : maxCoord = newCoord;
  if(this.orientation_ == goog.ui.SliderBase.Orientation.VERTICAL) {
    var previousHighlightPositioning = this.calculateRangeHighlightPositioning_(previousMaxCoord.y, previousMinCoord.y, this.valueThumb.offsetHeight), highlightPositioning = this.calculateRangeHighlightPositioning_(maxCoord.y, minCoord.y, this.valueThumb.offsetHeight), slide = new goog.fx.dom.Slide(this.rangeHighlight, [this.getOffsetStart_(this.rangeHighlight), previousHighlightPositioning.offset], [this.getOffsetStart_(this.rangeHighlight), highlightPositioning.offset], goog.ui.SliderBase.ANIMATION_INTERVAL_), 
    resizeHeight = new goog.fx.dom.ResizeHeight(this.rangeHighlight, previousHighlightPositioning.size, highlightPositioning.size, goog.ui.SliderBase.ANIMATION_INTERVAL_);
    slide.enableRightPositioningForRtl(this.flipForRtl_);
    resizeHeight.enableRightPositioningForRtl(this.flipForRtl_);
    animations.add(slide);
    animations.add(resizeHeight)
  }else {
    var previousHighlightPositioning = this.calculateRangeHighlightPositioning_(previousMinCoord.x, previousMaxCoord.x, this.valueThumb.offsetWidth), highlightPositioning = this.calculateRangeHighlightPositioning_(minCoord.x, maxCoord.x, this.valueThumb.offsetWidth), slide = new goog.fx.dom.Slide(this.rangeHighlight, [previousHighlightPositioning.offset, this.rangeHighlight.offsetTop], [highlightPositioning.offset, this.rangeHighlight.offsetTop], goog.ui.SliderBase.ANIMATION_INTERVAL_), resizeWidth = 
    new goog.fx.dom.ResizeWidth(this.rangeHighlight, previousHighlightPositioning.size, highlightPositioning.size, goog.ui.SliderBase.ANIMATION_INTERVAL_);
    slide.enableRightPositioningForRtl(this.flipForRtl_);
    resizeWidth.enableRightPositioningForRtl(this.flipForRtl_);
    animations.add(slide);
    animations.add(resizeWidth)
  }
};
goog.ui.SliderBase.prototype.endAnimation_ = function() {
  this.isAnimating_ = !1
};
goog.ui.SliderBase.prototype.setOrientation = function(orient) {
  if(this.orientation_ != orient) {
    var oldCss = this.getCssClass(this.orientation_), newCss = this.getCssClass(orient);
    this.orientation_ = orient;
    if(this.getElement()) {
      goog.dom.classes.swap(this.getElement(), oldCss, newCss);
      var pos = this.flipForRtl_ && this.isRightToLeft() ? "right" : "left";
      this.valueThumb.style[pos] = this.valueThumb.style.top = "";
      this.extentThumb.style[pos] = this.extentThumb.style.top = "";
      this.rangeHighlight && (this.rangeHighlight.style[pos] = this.rangeHighlight.style.top = "", this.rangeHighlight.style.width = this.rangeHighlight.style.height = "");
      this.updateUi_()
    }
  }
};
goog.ui.SliderBase.prototype.getOrientation = function() {
  return this.orientation_
};
goog.ui.SliderBase.prototype.disposeInternal = function() {
  goog.ui.SliderBase.superClass_.disposeInternal.call(this);
  this.incTimer_ && this.incTimer_.dispose();
  delete this.incTimer_;
  this.currentAnimation_ && this.currentAnimation_.dispose();
  delete this.currentAnimation_;
  delete this.valueThumb;
  delete this.extentThumb;
  this.rangeHighlight && delete this.rangeHighlight;
  this.rangeModel.dispose();
  delete this.rangeModel;
  this.keyHandler_ && (this.keyHandler_.dispose(), delete this.keyHandler_);
  this.mouseWheelHandler_ && (this.mouseWheelHandler_.dispose(), delete this.mouseWheelHandler_);
  this.valueDragger_ && (this.valueDragger_.dispose(), delete this.valueDragger_);
  this.extentDragger_ && (this.extentDragger_.dispose(), delete this.extentDragger_)
};
goog.ui.SliderBase.prototype.getBlockIncrement = function() {
  return this.blockIncrement_
};
goog.ui.SliderBase.prototype.setBlockIncrement = function(value) {
  this.blockIncrement_ = value
};
goog.ui.SliderBase.prototype.unitIncrement_ = 1;
goog.ui.SliderBase.prototype.getUnitIncrement = function() {
  return this.unitIncrement_
};
goog.ui.SliderBase.prototype.setUnitIncrement = function(value) {
  this.unitIncrement_ = value
};
goog.ui.SliderBase.prototype.getStep = function() {
  return this.rangeModel.getStep()
};
goog.ui.SliderBase.prototype.setStep = function(step) {
  this.rangeModel.setStep(step)
};
goog.ui.SliderBase.prototype.getValue = function() {
  return this.rangeModel.getValue()
};
goog.ui.SliderBase.prototype.setValue = function(value) {
  this.setThumbPosition_(this.valueThumb, value)
};
goog.ui.SliderBase.prototype.getExtent = function() {
  return this.rangeModel.getExtent()
};
goog.ui.SliderBase.prototype.setExtent = function(extent) {
  this.setThumbPosition_(this.extentThumb, this.rangeModel.getValue() + extent)
};
goog.ui.SliderBase.prototype.setVisible = function(visible) {
  goog.style.setElementShown(this.getElement(), visible);
  visible && this.updateUi_()
};
goog.ui.SliderBase.prototype.setAriaRoles = function() {
  var el = this.getElement();
  goog.asserts.assert(el, "The DOM element for the slider base cannot be null.");
  goog.a11y.aria.setRole(el, goog.a11y.aria.Role.SLIDER);
  this.updateAriaStates()
};
goog.ui.SliderBase.prototype.updateAriaStates = function() {
  var element = this.getElement();
  element && (goog.a11y.aria.setState(element, goog.a11y.aria.State.VALUEMIN, this.getMinimum()), goog.a11y.aria.setState(element, goog.a11y.aria.State.VALUEMAX, this.getMaximum()), goog.a11y.aria.setState(element, goog.a11y.aria.State.VALUENOW, this.getValue()))
};
goog.ui.SliderBase.prototype.isHandleMouseWheel = function() {
  return this.isHandleMouseWheel_
};
goog.ui.SliderBase.prototype.enableMouseWheelHandling_ = function(enable) {
  enable ? (this.mouseWheelHandler_ || (this.mouseWheelHandler_ = new goog.events.MouseWheelHandler(this.getElement())), this.getHandler().listen(this.mouseWheelHandler_, goog.events.MouseWheelHandler.EventType.MOUSEWHEEL, this.handleMouseWheel_)) : this.getHandler().unlisten(this.mouseWheelHandler_, goog.events.MouseWheelHandler.EventType.MOUSEWHEEL, this.handleMouseWheel_)
};
goog.ui.SliderBase.prototype.setEnabled = function(enable) {
  if(this.enabled_ != enable) {
    var eventType = enable ? goog.ui.Component.EventType.ENABLE : goog.ui.Component.EventType.DISABLE;
    this.dispatchEvent(eventType) && (this.enabled_ = enable, this.enableEventHandlers_(enable), enable || this.stopBlockIncrementing_(), goog.dom.classes.enable(this.getElement(), goog.ui.SliderBase.DISABLED_CSS_CLASS_, !enable))
  }
};
goog.ui.SliderBase.prototype.isEnabled = function() {
  return this.enabled_
};
goog.ui.SliderBase.prototype.getOffsetStart_ = function(element) {
  return this.flipForRtl_ ? goog.style.bidi.getOffsetStart(element) : element.offsetLeft
};
goog.ui.SliderBase.AnimationFactory = function() {
};
// Input 103
goog.ui.Slider = function(opt_domHelper) {
  goog.ui.SliderBase.call(this, opt_domHelper);
  this.rangeModel.setExtent(0)
};
goog.inherits(goog.ui.Slider, goog.ui.SliderBase);
goog.ui.Slider.Orientation = goog.ui.SliderBase.Orientation;
goog.ui.Slider.CSS_CLASS_PREFIX = "charts-slider";
goog.ui.Slider.THUMB_CSS_CLASS = goog.ui.Slider.CSS_CLASS_PREFIX + "-thumb";
goog.ui.Slider.prototype.getCssClass = function(orient) {
  return orient == goog.ui.SliderBase.Orientation.VERTICAL ? goog.ui.Slider.CSS_CLASS_PREFIX + "-vertical" : goog.ui.Slider.CSS_CLASS_PREFIX + "-horizontal"
};
goog.ui.Slider.prototype.createThumbs = function() {
  var element = this.getElement(), thumb = goog.dom.getElementsByTagNameAndClass(null, goog.ui.Slider.THUMB_CSS_CLASS, element)[0];
  thumb || (thumb = this.createThumb_(), element.appendChild(thumb));
  this.valueThumb = this.extentThumb = thumb
};
goog.ui.Slider.prototype.createThumb_ = function() {
  var thumb = this.getDomHelper().createDom("div", goog.ui.Slider.THUMB_CSS_CLASS);
  goog.a11y.aria.setRole(thumb, goog.a11y.aria.Role.BUTTON);
  return thumb
};
// Input 104
goog.exportSymbol("google.visualization.drawToolbar", google.visualization.drawToolbar);
// Input 105
gviz.canviz = {};
// Input 106
gviz.canviz.Constants = {};
gviz.canviz.Constants.GOLDEN_RATIO = 1.618;
gviz.canviz.Constants.LOG_10 = Math.log(10);
// Input 107
gviz.canviz.idutils = {};
gviz.canviz.idutils.generateId = function(tokens) {
  return tokens.join(gviz.canviz.idutils.TOKEN_SEPARATOR)
};
gviz.canviz.idutils.Token = {ACTIONS_MENU_ENTRY:"action", ANNOTATION:"annotation", ANNOTATION_TEXT:"annotationtext", AREA:"area", AXIS_TICK:"axistick", AXIS_TITLE:"axistitle", BAR:"bar", BASELINE:"baseline", BUBBLE:"bubble", CANDLESTICK:"candlestick", CATEGORY_SENSITIVITY_AREA:"categorysensitivityarea", CHART:"chart", CHART_AREA:"chartarea", COLOR_BAR:"colorbar", GRIDLINE:"gridline", HISTOGRAM:"histogram", INTERVAL:"interval", LEGEND:"legend", LEGEND_ENTRY:"legendentry", LEGEND_SCROLL_BUTTON:"legendscrollbutton", 
LINE:"line", MINOR_GRIDLINE:"minorgridline", OVERLAY_BOX:"overlaybox", PATH_INTERVAL:"pathinterval", POINT:"point", POINT_SENSITIVITY_AREA:"pointsensitivityarea", REMOVE_SERIE_BUTTON:"removeseriebutton", SLICE:"slice", STEPPED_AREA_BAR:"steppedareabar", TITLE:"title", TOOLTIP:"tooltip"};
gviz.canviz.idutils.TOKEN_SEPARATOR = "#";
gviz.canviz.idutils.TOKEN_PRECEDENCE = [gviz.canviz.idutils.Token.MINOR_GRIDLINE, gviz.canviz.idutils.Token.GRIDLINE, gviz.canviz.idutils.Token.AREA, gviz.canviz.idutils.Token.STEPPED_AREA_BAR, gviz.canviz.idutils.Token.BAR, gviz.canviz.idutils.Token.PATH_INTERVAL, gviz.canviz.idutils.Token.BASELINE, gviz.canviz.idutils.Token.INTERVAL, gviz.canviz.idutils.Token.LINE, gviz.canviz.idutils.Token.CANDLESTICK, gviz.canviz.idutils.Token.BUBBLE, gviz.canviz.idutils.Token.ANNOTATION, gviz.canviz.idutils.Token.POINT_SENSITIVITY_AREA, 
gviz.canviz.idutils.Token.POINT, gviz.canviz.idutils.Token.TITLE, gviz.canviz.idutils.Token.AXIS_TICK, gviz.canviz.idutils.Token.AXIS_TITLE, gviz.canviz.idutils.Token.CATEGORY_SENSITIVITY_AREA, gviz.canviz.idutils.Token.ANNOTATION_TEXT, gviz.canviz.idutils.Token.LEGEND, gviz.canviz.idutils.Token.LEGEND_SCROLL_BUTTON, gviz.canviz.idutils.Token.LEGEND_ENTRY, gviz.canviz.idutils.Token.COLOR_BAR, gviz.canviz.idutils.Token.TOOLTIP, gviz.canviz.idutils.Token.ACTIONS_MENU_ENTRY];
// Input 108
gviz.util.tooltip = {};
gviz.util.tooltip.BodyEntryType = {LINE:"line", SEPARATOR:"separator", HTML:"html"};
gviz.util.tooltip.BodyItemType = {TEXT:"text", SQUARE:"square"};
// Input 109
gviz.util.tooltip.htmldefiner = {};
gviz.util.tooltip.htmldefiner.createTooltipDefinition = function(body, textMeasureFunction, attachHandle, boundaries, pivot) {
  return{html:gviz.util.tooltip.htmldefiner.toHtml_(body), customHtml:!1, pivot:pivot, anchor:pivot, boundaries:boundaries, spacing:gviz.util.tooltip.htmldefiner.SPACING, margin:gviz.util.tooltip.definer.DEFAULT_MARGINS}
};
gviz.util.tooltip.htmldefiner.toHtml_ = function(body) {
  if(0 == body.entries.length) {
    return{name:"div", content:[], properties:{className:"google-visualization-tooltip"}}
  }
  goog.asserts.assert(1 >= goog.array.filter(body.entries, function(entry) {
    return entry.type == gviz.util.tooltip.BodyEntryType.SEPARATOR
  }).length);
  var seperatorIndex = goog.array.findIndex(body.entries, function(entry) {
    return entry.type == gviz.util.tooltip.BodyEntryType.SEPARATOR
  }), entriesHtml;
  if(-1 == seperatorIndex) {
    entriesHtml = gviz.util.tooltip.htmldefiner.tooltipEntriesToHtml_(body.entries)
  }else {
    var tooltipHtml = gviz.util.tooltip.htmldefiner.tooltipEntriesToHtml_(goog.array.slice(body.entries, 0, seperatorIndex)), seperatorHtml = {name:"div", properties:{className:"google-visualization-tooltip-separator"}}, actionsMenuHtml = gviz.util.tooltip.htmldefiner.actionsMenuEntriesToHtml_(goog.array.slice(body.entries, seperatorIndex + 1));
    entriesHtml = goog.array.concat(tooltipHtml, seperatorHtml, actionsMenuHtml)
  }
  return{name:"div", content:entriesHtml, properties:{className:"google-visualization-tooltip"}}
};
gviz.util.tooltip.htmldefiner.tooltipEntriesToHtml_ = function(tooltipEntries) {
  return{name:"ul", properties:{className:"google-visualization-tooltip-item-list"}, content:goog.array.map(tooltipEntries, function(entry) {
    return{name:"li", content:gviz.util.tooltip.htmldefiner.itemListToHtml_(entry.data), properties:{className:"google-visualization-tooltip-item"}}
  })}
};
gviz.util.tooltip.htmldefiner.actionsMenuEntriesToHtml_ = function(actionsMenuEntries) {
  return{name:"ul", properties:{className:"google-visualization-tooltip-action-list"}, content:goog.array.map(actionsMenuEntries, function(entry) {
    return{name:"li", id:gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.ACTIONS_MENU_ENTRY, entry.data.id]), content:gviz.util.tooltip.htmldefiner.itemListToHtml_(entry.data), properties:{className:"google-visualization-tooltip-action"}}
  })}
};
gviz.util.tooltip.htmldefiner.itemListToHtml_ = function(line) {
  return goog.array.map(line.items, function(item, j) {
    switch(item.type) {
      case gviz.util.tooltip.BodyItemType.TEXT:
        return{name:"span", style:gviz.util.tooltip.htmldefiner.textStyleToHtmlStyle_(item.data.style), rawHtml:!!item.data.html, content:(0 == j ? "" : " ") + item.data.text};
      case gviz.util.tooltip.BodyItemType.SQUARE:
        return{name:"div", style:"background-color:" + (item.data.brush && item.data.brush.getFill()) + ";", properties:{className:"google-visualization-tooltip-square"}}
    }
  })
};
gviz.util.tooltip.htmldefiner.textStyleToHtmlStyle_ = function(textStyle) {
  return"font-family:" + textStyle.fontName + ";color: #333333;margin:0;font-style:" + (textStyle.italic ? "italic" : "none") + ";text-decoration:" + (textStyle.underline ? "underline" : "none") + ";font-weight:" + (textStyle.bold ? "bold" : "none") + ";"
};
gviz.util.tooltip.htmldefiner.SPACING = 20;
// Input 110
gviz.util.tooltip.definer = {};
gviz.util.tooltip.definer.createBodyTextLineEntry = function(text, style, opt_titleText, opt_titleStyle, opt_color, opt_opacity, opt_prefixText, opt_isHtml, opt_id) {
  var data = {items:[]};
  if(goog.isDefAndNotNull(opt_color)) {
    var squareItem = gviz.util.tooltip.definer.createBodySquareItem(style.fontSize / 2, gviz.graphics.Brush.createFillBrush(opt_color, opt_opacity));
    data.items.push(squareItem)
  }
  if(goog.isDefAndNotNull(opt_prefixText)) {
    var prefixTextItem = gviz.util.tooltip.definer.createBodyTextItem(opt_prefixText, style);
    data.items.push(prefixTextItem)
  }
  if(goog.isDefAndNotNull(opt_titleText)) {
    if(!goog.isDefAndNotNull(opt_titleStyle)) {
      throw Error("Line title is specified without a text style.");
    }
    var textItem = gviz.util.tooltip.definer.createBodyTextItem(opt_titleText + ":", opt_titleStyle);
    data.items.push(textItem)
  }
  textItem = gviz.util.tooltip.definer.createBodyTextItem(text, style, opt_isHtml);
  data.items.push(textItem);
  goog.isDefAndNotNull(opt_id) && (data.id = opt_id, data.background = {brush:gviz.graphics.Brush.TRANSPARENT_BRUSH});
  return{type:gviz.util.tooltip.BodyEntryType.LINE, data:data}
};
gviz.util.tooltip.definer.createBodySeparatorEntry = function() {
  return{type:gviz.util.tooltip.BodyEntryType.SEPARATOR, data:{brush:gviz.graphics.Brush.createStrokeBrush(gviz.util.tooltip.definer.SEPARATOR_COLOR, gviz.util.tooltip.definer.SEPARATOR_WIDTH)}}
};
gviz.util.tooltip.definer.createBodyTextItem = function(text, style, opt_customHtml) {
  var bodyItem = {type:gviz.util.tooltip.BodyItemType.TEXT, data:{text:text, style:style}};
  opt_customHtml && (bodyItem.data.html = !0);
  return bodyItem
};
gviz.util.tooltip.definer.createBodySquareItem = function(size, brush) {
  return{type:gviz.util.tooltip.BodyItemType.SQUARE, data:{size:size, brush:brush}}
};
gviz.util.tooltip.definer.createTooltipDefinition = function(body, textMeasureFunction, attachHandle, anchor, boundaries, pivot, opt_defaultBaseUnit, opt_isHtml) {
  if(opt_isHtml) {
    return gviz.util.tooltip.htmldefiner.createTooltipDefinition(body, textMeasureFunction, attachHandle, boundaries, pivot)
  }
  var baseUnit = gviz.util.tooltip.definer.calcBaseUnit_(body, opt_defaultBaseUnit), tooltipSize = gviz.util.tooltip.definer.calcTooltipSize_(body, baseUnit, textMeasureFunction), outline = gviz.util.tooltip.definer.calcTooltipOutline_(attachHandle, anchor, tooltipSize, baseUnit, boundaries, pivot), bodyLayout = gviz.util.tooltip.definer.calcTooltipBodyLayout_(outline, body, baseUnit, textMeasureFunction);
  return{outline:outline, bodyLayout:bodyLayout}
};
gviz.util.tooltip.definer.calcBaseUnit_ = function(body, opt_defaultBaseUnit) {
  for(var fontSize = 0, i = 0;i < body.entries.length;i++) {
    var entry = body.entries[i];
    if(entry.type == gviz.util.tooltip.BodyEntryType.LINE) {
      for(var line = entry.data, j = 0;j < line.items.length;j++) {
        var item = line.items[j];
        item.type == gviz.util.tooltip.BodyItemType.TEXT && (fontSize = Math.max(fontSize, item.data.style.fontSize))
      }
    }
  }
  return 0 == fontSize ? (opt_defaultBaseUnit = opt_defaultBaseUnit || 0, goog.asserts.assertNumber(opt_defaultBaseUnit), opt_defaultBaseUnit) : fontSize
};
gviz.util.tooltip.definer.calcTooltipSize_ = function(body, baseUnit, textMeasureFunction) {
  for(var width = 0, height = 0, i = 0;i < body.entries.length;i++) {
    var entry = body.entries[i];
    switch(entry.type) {
      case gviz.util.tooltip.BodyEntryType.LINE:
        var line = entry.data, lineSize = gviz.util.tooltip.definer.calcLineSize_(line, textMeasureFunction), height = height + (lineSize.height + (0 < i ? lineSize.topMargin : 0)), width = Math.max(width, lineSize.width);
        break;
      case gviz.util.tooltip.BodyEntryType.SEPARATOR:
        var separator = entry.data, height = height + (1.5 * baseUnit + separator.brush.getStrokeWidth());
        break;
      default:
        goog.asserts.fail('Invalid tooltip entry type "' + entry.type + '"')
    }
  }
  var width = Math.max(width, 2 * baseUnit), totalWidth = Math.round(width + 2 * baseUnit / gviz.canviz.Constants.GOLDEN_RATIO), totalHeight = Math.round(height + 2 * baseUnit / gviz.canviz.Constants.GOLDEN_RATIO);
  return new goog.math.Size(totalWidth, totalHeight)
};
gviz.util.tooltip.definer.calcLineSize_ = function(line, textMeasureFunction) {
  for(var width = 0, height = 0, marginHelper = 0, i = 0;i < line.items.length;i++) {
    var item = line.items[i], itemSize = gviz.util.tooltip.definer.calcItemSize_(item, textMeasureFunction), width = width + (itemSize.width + (0 < i ? itemSize.leftMargin : 0)), height = Math.max(height, itemSize.height), marginHelper = Math.max(marginHelper, itemSize.height / 2 + itemSize.topMargin)
  }
  var topMargin = marginHelper - height / 2;
  return{width:width, height:height, topMargin:topMargin}
};
gviz.util.tooltip.definer.calcItemSize_ = function(item, textMeasureFunction) {
  switch(item.type) {
    case gviz.util.tooltip.BodyItemType.TEXT:
      return gviz.util.tooltip.definer.calcTextItemSize_(item.data.text, item.data.style, textMeasureFunction);
    case gviz.util.tooltip.BodyItemType.SQUARE:
      var size = item.data.size, margin = size;
      return{width:size, height:size, topMargin:margin, leftMargin:margin};
    default:
      return goog.asserts.fail('Invalid tooltip item type "' + item.type + '"'), margin = size = item.data.size, {width:size, height:size, topMargin:margin, leftMargin:margin}
  }
};
gviz.util.tooltip.definer.calcTextItemSize_ = function(text, style, textMeasureFunction) {
  return{width:textMeasureFunction ? textMeasureFunction(String(text), style).width : 0, height:style.fontSize, topMargin:style.fontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO), leftMargin:style.fontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO)}
};
gviz.util.tooltip.definer.calcTooltipBodyLayout_ = function(outline, body, baseUnit, textMeasureFunction) {
  var bodyLayout = {}, outlineInnerMargin = baseUnit / gviz.canviz.Constants.GOLDEN_RATIO, bodyBoundingBox = new goog.math.Box(outline.box.top + outlineInnerMargin, outline.box.right - outlineInnerMargin, outline.box.bottom - outlineInnerMargin, outline.box.left + outlineInnerMargin), entriesLayout = [], entryTop = bodyBoundingBox.top, entryIndex, entriesLen = body.entries.length, alignColumns = !1;
  for(entryIndex = 0;entryIndex < entriesLen;entryIndex++) {
    if(body.entries[entryIndex].alignColumns) {
      alignColumns = !0;
      break
    }
  }
  var maximumItemsWidthInColumn = [], itemSizeMatrix = [];
  for(entryIndex = 0;entryIndex < entriesLen;entryIndex++) {
    var entry = body.entries[entryIndex];
    if(entry.type === gviz.util.tooltip.BodyEntryType.LINE) {
      var line = entry.data, lineItemsSize = [];
      itemSizeMatrix.push(lineItemsSize);
      for(var itemIndex = 0, lenItems = line.items.length;itemIndex < lenItems;itemIndex++) {
        var item = line.items[itemIndex], itemSize = gviz.util.tooltip.definer.calcItemSize_(item, textMeasureFunction);
        lineItemsSize.push(itemSize);
        if(entry.alignColumns) {
          if(itemIndex > maximumItemsWidthInColumn.length - 1) {
            maximumItemsWidthInColumn.push(itemSize.width)
          }else {
            var oldItemWidth = maximumItemsWidthInColumn[itemIndex];
            maximumItemsWidthInColumn[itemIndex] = Math.max(oldItemWidth, itemSize.width)
          }
        }
      }
    }
  }
  var lineWidthMargin = [], itemWidthMargin = [], lineIndex = 0;
  if(alignColumns) {
    for(entryIndex = 0;entryIndex < entriesLen;entryIndex++) {
      if(entry = body.entries[entryIndex], entry.type == gviz.util.tooltip.BodyEntryType.LINE) {
        var lineItemsMargin = [];
        itemWidthMargin.push(lineItemsMargin);
        var sumOfItemsMargins = 0;
        if(entry.alignColumns) {
          for(line = entry.data, itemIndex = 0, lenItems = line.items.length;itemIndex < lenItems;itemIndex++) {
            var itemSize = itemSizeMatrix[lineIndex][itemIndex], maximumItemWidth = maximumItemsWidthInColumn[itemIndex], margin = maximumItemWidth - itemSize.width;
            lineItemsMargin.push(margin);
            sumOfItemsMargins += margin
          }
        }
        lineWidthMargin.push(sumOfItemsMargins);
        lineIndex++
      }
    }
  }
  for(entryIndex = lineIndex = 0;entryIndex < entriesLen;entryIndex++) {
    var entry = body.entries[entryIndex], entryLayout = {entry:entry, data:{}};
    switch(entry.type) {
      case gviz.util.tooltip.BodyEntryType.LINE:
        var line = entry.data, lineLayout = entryLayout.data, lineSize = gviz.util.tooltip.definer.calcLineSize_(line, textMeasureFunction);
        entry.alignColumns && (lineSize.width += lineWidthMargin[lineIndex]);
        var lineTop = entryTop;
        0 < entryIndex && (lineTop += lineSize.topMargin);
        line.background && (lineLayout.background = {box:new goog.math.Box(lineTop - lineSize.topMargin / 2, outline.box.right, lineTop + lineSize.height + lineSize.topMargin, outline.box.left)});
        for(var itemsLayout = [], itemLeft = bodyBoundingBox.left, itemIndex = 0, lenItems = line.items.length;itemIndex < lenItems;itemIndex++) {
          var itemLayout = {}, itemSize = itemSizeMatrix[lineIndex][itemIndex];
          entry.alignColumns && (itemSize.width += itemWidthMargin[lineIndex][itemIndex]);
          0 < itemIndex && (itemLeft += itemSize.leftMargin);
          var itemTop = lineTop + (lineSize.height - itemSize.height) / 2;
          itemLayout.box = new goog.math.Box(Math.round(itemTop), Math.round(itemLeft + itemSize.width), Math.round(itemTop + itemSize.height), Math.round(itemLeft));
          itemsLayout.push(itemLayout);
          itemLeft += itemSize.width
        }
        lineLayout.items = itemsLayout;
        entryTop = lineTop + lineSize.height;
        lineIndex++;
        break;
      case gviz.util.tooltip.BodyEntryType.SEPARATOR:
        var separator = entry.data, separatorLayout = entryLayout.data, separatorY = entryTop + baseUnit + separator.brush.getStrokeWidth() / 2;
        separatorLayout.line = new goog.math.Line(outline.box.left, separatorY, outline.box.right, separatorY);
        entryTop += 1.5 * baseUnit + separator.brush.getStrokeWidth() / 2;
        break;
      default:
        goog.asserts.fail('Invalid tooltip entry type "' + entry.type + '"')
    }
    entriesLayout.push(entryLayout)
  }
  bodyLayout.entries = entriesLayout;
  return bodyLayout
};
gviz.util.tooltip.definer.calcTooltipOutline_ = function(attachHandle, anchor, tooltipSize, baseUnit, boundaries, pivot) {
  var hDirection = anchor.x >= pivot.x ? 1 : -1, vDirection = anchor.y > pivot.y ? 1 : -1, center = null, center = attachHandle ? new goog.math.Coordinate(anchor.x + hDirection * baseUnit, anchor.y + vDirection * (baseUnit + tooltipSize.height / 2)) : new goog.math.Coordinate(anchor.x + hDirection * tooltipSize.width / 2, anchor.y + vDirection * tooltipSize.height / 2), left = center.x - tooltipSize.width / 2, right = left + tooltipSize.width, top = center.y - tooltipSize.height / 2, bottom = top + 
  tooltipSize.height, outline = {};
  if(attachHandle) {
    var closePoint = new goog.math.Coordinate(center.x, goog.math.lerp(anchor.y, center.y, baseUnit / (baseUnit + tooltipSize.height / 2))), farPoint = new goog.math.Coordinate(goog.math.lerp(center.x, anchor.x, -1), closePoint.y);
    closePoint.x = Math.round(closePoint.x);
    closePoint.y = Math.round(closePoint.y);
    farPoint.x = Math.round(farPoint.x);
    farPoint.y = Math.round(farPoint.y);
    outline.handlePoints = 1 == hDirection * vDirection ? [closePoint, anchor, farPoint] : [farPoint, anchor, closePoint]
  }
  outline.box = new goog.math.Box(Math.round(top), Math.round(right), Math.round(bottom), Math.round(left));
  gviz.util.tooltip.definer.adjustTooltipHorizontally_(outline, boundaries, pivot);
  gviz.util.tooltip.definer.adjustTooltipVertically_(outline, boundaries, pivot);
  return outline
};
gviz.util.tooltip.definer.adjustTooltipHorizontally_ = function(outline, boundaries, pivot) {
  var DEFAULT_MARGINS = gviz.util.tooltip.definer.DEFAULT_MARGINS, leftBoundary = boundaries.left + DEFAULT_MARGINS, rightBoundary = boundaries.right - DEFAULT_MARGINS;
  if(!(outline.box.left >= leftBoundary && outline.box.right <= rightBoundary)) {
    var flipped = goog.object.unsafeClone(outline);
    gviz.util.tooltip.definer.flipTooltipHorizontally_(flipped, pivot);
    if(flipped.box.left >= leftBoundary && flipped.box.right <= rightBoundary) {
      outline.box = flipped.box, outline.handlePoints = flipped.handlePoints
    }else {
      if(outline.handlePoints) {
        var CORNER_RADIUS = gviz.util.tooltip.definer.CORNER_RADIUS, handleBoundaries = new goog.math.Range(leftBoundary + CORNER_RADIUS, rightBoundary - CORNER_RADIUS), handleRange = new goog.math.Range(outline.handlePoints[0].x, outline.handlePoints[2].x), flippedHandleRange = new goog.math.Range(flipped.handlePoints[0].x, flipped.handlePoints[2].x);
        !goog.math.Range.contains(handleBoundaries, handleRange) && goog.math.Range.contains(handleBoundaries, flippedHandleRange) && (outline.box = flipped.box, outline.handlePoints = flipped.handlePoints)
      }
      outline.box.right > rightBoundary && (outline.box.left -= outline.box.right - rightBoundary, outline.box.right = rightBoundary);
      outline.box.left < leftBoundary && (outline.box.right += leftBoundary - outline.box.left, outline.box.left = leftBoundary)
    }
  }
};
gviz.util.tooltip.definer.adjustTooltipVertically_ = function(outline, boundaries, pivot) {
  var DEFAULT_MARGINS = gviz.util.tooltip.definer.DEFAULT_MARGINS, topBoundary = boundaries.top + DEFAULT_MARGINS, bottomBoundary = boundaries.bottom - DEFAULT_MARGINS;
  if(!(outline.box.top >= topBoundary && outline.box.bottom <= bottomBoundary)) {
    var flipped = goog.object.unsafeClone(outline);
    gviz.util.tooltip.definer.flipTooltipVertically_(flipped, pivot);
    flipped.box.top >= topBoundary && flipped.box.bottom <= bottomBoundary ? (outline.box = flipped.box, outline.handlePoints = flipped.handlePoints) : (outline.box.bottom > bottomBoundary && (outline.box.top -= outline.box.bottom - bottomBoundary, outline.box.bottom = bottomBoundary), outline.box.top < topBoundary && (outline.box.bottom += topBoundary - outline.box.top, outline.box.top = topBoundary), delete outline.handlePoints)
  }
};
gviz.util.tooltip.definer.flipTooltipHorizontally_ = function(outline, pivot) {
  var originalLeft = outline.box.left;
  outline.box.left = goog.math.lerp(pivot.x, outline.box.right, -1);
  outline.box.right = goog.math.lerp(pivot.x, originalLeft, -1);
  var handlePoints = outline.handlePoints;
  if(handlePoints) {
    var tmp = handlePoints[0];
    handlePoints[0] = handlePoints[2];
    handlePoints[2] = tmp;
    handlePoints[0].x = goog.math.lerp(pivot.x, handlePoints[0].x, -1);
    handlePoints[1].x = goog.math.lerp(pivot.x, handlePoints[1].x, -1);
    handlePoints[2].x = goog.math.lerp(pivot.x, handlePoints[2].x, -1)
  }
};
gviz.util.tooltip.definer.flipTooltipVertically_ = function(outline, pivot) {
  var originalTop = outline.box.top;
  outline.box.top = goog.math.lerp(pivot.y, outline.box.bottom, -1);
  outline.box.bottom = goog.math.lerp(pivot.y, originalTop, -1);
  var handlePoints = outline.handlePoints;
  if(handlePoints) {
    var tmp = handlePoints[0];
    handlePoints[0] = handlePoints[2];
    handlePoints[2] = tmp;
    handlePoints[0].y = goog.math.lerp(pivot.y, handlePoints[0].y, -1);
    handlePoints[1].y = goog.math.lerp(pivot.y, handlePoints[1].y, -1);
    handlePoints[2].y = goog.math.lerp(pivot.y, handlePoints[2].y, -1)
  }
};
gviz.util.tooltip.definer.CORNER_RADIUS = 4;
gviz.util.tooltip.definer.DEFAULT_MARGINS = 5;
gviz.util.tooltip.definer.SEPARATOR_COLOR = "#eee";
gviz.util.tooltip.definer.SEPARATOR_WIDTH = 1;
// Input 111
gviz.util.Selection = function() {
  this.selectedRows_ = new goog.structs.Set;
  this.selectedColumns_ = new goog.structs.Set;
  this.selectedCells_ = new goog.structs.Set
};
gviz.util.Selection.CELL_INDEXES_SEPARATOR_ = ",";
gviz.util.Selection.propertyName_ = {ROW:"row", COLUMN:"column"};
gviz.util.Selection.prototype.clear = function() {
  this.selectedRows_ = new goog.structs.Set;
  this.selectedColumns_ = new goog.structs.Set;
  this.selectedCells_ = new goog.structs.Set
};
gviz.util.Selection.prototype.clone = function() {
  var cloned = new gviz.util.Selection;
  cloned.selectedRows_ = new goog.structs.Set(this.selectedRows_.getValues());
  cloned.selectedColumns_ = new goog.structs.Set(this.selectedColumns_.getValues());
  cloned.selectedCells_ = new goog.structs.Set(this.selectedCells_.getValues());
  return cloned
};
gviz.util.Selection.prototype.equals = function(other) {
  return this.selectedRows_.equals(other.selectedRows_) && this.selectedColumns_.equals(other.selectedColumns_) && this.selectedCells_.equals(other.selectedCells_)
};
gviz.util.Selection.prototype.getIndexes_ = function(propertyName) {
  var selectedProperties = propertyName == gviz.util.Selection.propertyName_.ROW ? this.selectedRows_ : this.selectedColumns_, selection = [];
  goog.iter.forEach(selectedProperties, function(ind) {
    selection.push(parseInt(ind, 10))
  });
  return selection
};
gviz.util.Selection.prototype.getRowIndexes = function() {
  return this.getIndexes_(gviz.util.Selection.propertyName_.ROW)
};
gviz.util.Selection.prototype.getColumnIndexes = function() {
  return this.getIndexes_(gviz.util.Selection.propertyName_.COLUMN)
};
gviz.util.Selection.prototype.getCells = function() {
  var selection = [];
  goog.iter.forEach(this.selectedCells_, function(ind) {
    var indexes = ind.split(gviz.util.Selection.CELL_INDEXES_SEPARATOR_);
    selection.push({row:parseInt(indexes[0], 10), column:parseInt(indexes[1], 10)})
  });
  return selection
};
gviz.util.Selection.prototype.getSelection = function() {
  for(var selection = [], rowIndexes = this.getRowIndexes(), columnIndexes = this.getColumnIndexes(), cellIndexes = this.getCells(), i = 0;i < rowIndexes.length;i++) {
    var o = {};
    o[gviz.util.Selection.propertyName_.ROW] = rowIndexes[i];
    o[gviz.util.Selection.propertyName_.COLUMN] = null;
    selection.push(o)
  }
  for(i = 0;i < columnIndexes.length;i++) {
    o = {}, o[gviz.util.Selection.propertyName_.ROW] = null, o[gviz.util.Selection.propertyName_.COLUMN] = columnIndexes[i], selection.push(o)
  }
  for(i = 0;i < cellIndexes.length;i++) {
    o = {}, o[gviz.util.Selection.propertyName_.ROW] = cellIndexes[i].row, o[gviz.util.Selection.propertyName_.COLUMN] = cellIndexes[i].column, selection.push(o)
  }
  return selection
};
gviz.util.Selection.prototype.contains_ = function(propertyName, indexes) {
  return propertyName == gviz.util.Selection.propertyName_.ROW ? this.containsRow(indexes[0]) : gviz.util.Selection.propertyName_.COLUMN ? this.containsColumn(indexes[0]) : this.containsCell(indexes[0], indexes[1])
};
gviz.util.Selection.prototype.containsRow = function(index) {
  return this.selectedRows_.contains(String(index))
};
gviz.util.Selection.prototype.containsColumn = function(index) {
  return this.selectedColumns_.contains(String(index))
};
gviz.util.Selection.prototype.containsCell = function(rowIndex, colIndex) {
  return this.selectedCells_.contains(String(rowIndex + gviz.util.Selection.CELL_INDEXES_SEPARATOR_ + colIndex))
};
gviz.util.Selection.prototype.add_ = function(propertyName, indexes) {
  if(this.contains_(propertyName, indexes)) {
    return!1
  }
  propertyName == gviz.util.Selection.propertyName_.ROW ? this.selectedRows_.add(String(indexes[0])) : propertyName == gviz.util.Selection.propertyName_.COLUMN ? this.selectedColumns_.add(String(indexes[0])) : this.selectedCells_.add(String(indexes[0] + gviz.util.Selection.CELL_INDEXES_SEPARATOR_ + indexes[1]));
  return!0
};
gviz.util.Selection.prototype.addRow = function(index) {
  return this.add_(gviz.util.Selection.propertyName_.ROW, [index])
};
gviz.util.Selection.prototype.addColumn = function(index) {
  return this.add_(gviz.util.Selection.propertyName_.COLUMN, [index])
};
gviz.util.Selection.prototype.addCell = function(rowIndex, colIndex) {
  return this.add_("cell", [rowIndex, colIndex])
};
gviz.util.Selection.prototype.toggleRow = function(index, opt_isSingleSelect) {
  var contains = this.containsRow(index);
  opt_isSingleSelect && this.clear();
  contains ? this.removeRow(index) : this.addRow(index);
  return!contains
};
gviz.util.Selection.prototype.toggleColumn = function(index, opt_isSingleSelect) {
  var contains = this.containsColumn(index);
  opt_isSingleSelect && this.clear();
  contains ? this.removeColumn(index) : this.addColumn(index);
  return!contains
};
gviz.util.Selection.prototype.toggleCell = function(rowIndex, colIndex, opt_isSingleSelect) {
  var contains = this.containsCell(rowIndex, colIndex);
  opt_isSingleSelect && this.clear();
  contains ? this.removeCell(rowIndex, colIndex) : this.addCell(rowIndex, colIndex);
  return!contains
};
gviz.util.Selection.prototype.removeRow = function(index) {
  if(!this.containsRow(index)) {
    return!1
  }
  this.selectedRows_.remove(String(index));
  return!0
};
gviz.util.Selection.prototype.removeColumn = function(index) {
  if(!this.containsColumn(index)) {
    return!1
  }
  this.selectedColumns_.remove(String(index));
  return!0
};
gviz.util.Selection.prototype.removeCell = function(rowIndex, colIndex) {
  if(!this.containsCell(rowIndex, colIndex)) {
    return!1
  }
  this.selectedCells_.remove(String(rowIndex + gviz.util.Selection.CELL_INDEXES_SEPARATOR_ + colIndex));
  return!0
};
gviz.util.Selection.prototype.removeAllCells = function() {
  this.selectedCells_ = new goog.structs.Set
};
gviz.util.Selection.prototype.setSelection = function(newSelection) {
  var newRowsSelectionSet = new goog.structs.Set, newColumnsSelectionSet = new goog.structs.Set, newCellsSelectionSet = new goog.structs.Set;
  newSelection || (newSelection = []);
  for(var i = 0;i < newSelection.length;i++) {
    var item = newSelection[i];
    null != item.row && null != item.column ? newCellsSelectionSet.add(String(item.row + gviz.util.Selection.CELL_INDEXES_SEPARATOR_ + item.column)) : null != item.row ? newRowsSelectionSet.add(String(item.row)) : null != item.column && newColumnsSelectionSet.add(String(item.column))
  }
  var addedRowsSet = this.getSetDifference_(newRowsSelectionSet, this.selectedRows_), addedColumnsSet = this.getSetDifference_(newColumnsSelectionSet, this.selectedColumns_), addedCellsSet = this.getSetDifference_(newCellsSelectionSet, this.selectedCells_), removedRowsSet = this.getSetDifference_(this.selectedRows_, newRowsSelectionSet), removedColumnsSet = this.getSetDifference_(this.selectedColumns_, newColumnsSelectionSet), removedCellsSet = this.getSetDifference_(this.selectedCells_, newCellsSelectionSet);
  this.selectedRows_ = newRowsSelectionSet;
  this.selectedColumns_ = newColumnsSelectionSet;
  this.selectedCells_ = newCellsSelectionSet;
  var addedSelection = new gviz.util.Selection;
  addedSelection.selectedRows_ = addedRowsSet;
  addedSelection.selectedColumns_ = addedColumnsSet;
  addedSelection.selectedCells_ = addedCellsSet;
  var removedSelection = new gviz.util.Selection;
  removedSelection.selectedRows_ = removedRowsSet;
  removedSelection.selectedColumns_ = removedColumnsSet;
  removedSelection.selectedCells_ = removedCellsSet;
  return new gviz.util.SelectionChange(addedSelection, removedSelection)
};
gviz.util.Selection.prototype.getSetDifference_ = function(firstSet, secondSet) {
  return firstSet.difference(secondSet)
};
gviz.util.SelectionChange = function(added, removed) {
  this.added_ = added;
  this.removed_ = removed
};
gviz.util.SelectionChange.prototype.getAdded = function() {
  return this.added_
};
gviz.util.SelectionChange.prototype.getRemoved = function() {
  return this.removed_
};
// Input 112
gviz.canviz.Messages = {};
gviz.canviz.Messages.MSG_THOUSAND_SEPARATOR = ",";
gviz.canviz.Messages.MSG_DECIMAL_POINT = ".";
gviz.canviz.Messages.MSG_MISSING_TEXT_INDICATION = "...";
gviz.canviz.Messages.MSG_OTHER = "Other";
gviz.canviz.Messages.MSG_NOT_SUPPORTED = "Your browser does not support charts";
gviz.canviz.Messages.MSG_NO_DATA = "No data";
// Input 113
gviz.canviz.textutils = {};
gviz.canviz.textutils.calcTextLayout = function(textMeasureFunction, text, textStyle, width, maxLines) {
  goog.isDefAndNotNull(maxLines) || (maxLines = 1);
  if(0 == maxLines) {
    return{lines:[], needTooltip:!1, maxLineWidth:0}
  }
  var getWidth = function(line) {
    return textMeasureFunction(line, textStyle).width
  }, lines = [], layoutResult = gviz.canviz.textutils.internalCalcTextLayout_(text, lines, width, maxLines, getWidth);
  return{lines:lines, needTooltip:layoutResult.tooltipNeeded, maxLineWidth:layoutResult.maxLineWidth}
};
gviz.canviz.textutils.internalCalcTextLayout_ = function(text, lines, width, remainingLines, getWidth) {
  var textWidth = getWidth(text);
  if(textWidth <= width) {
    return text && goog.array.extend(lines, text.toString().split("\n")), {tooltipNeeded:!1, maxLineWidth:textWidth}
  }
  if(1 < remainingLines) {
    for(var longestFit = 0, longestFitWidth = 0, i = 1;i < text.length;i++) {
      var character = text.charAt(i);
      if(" " == character || "\n" == character) {
        var substringWidth = getWidth(text.substr(0, i));
        if(substringWidth <= width) {
          if(longestFitWidth = substringWidth, longestFit = i, "\n" == character) {
            break
          }else {
            continue
          }
        }
        break
      }
    }
    if(0 < longestFit) {
      lines.push(text.substr(0, longestFit));
      var otherLines = gviz.canviz.textutils.internalCalcTextLayout_(text.substr(longestFit + 1), lines, width, remainingLines - 1, getWidth);
      return{tooltipNeeded:otherLines.tooltipNeeded, maxLineWidth:Math.max(longestFitWidth, otherLines.maxLineWidth)}
    }
  }
  var ellipsis = gviz.canviz.Messages.MSG_MISSING_TEXT_INDICATION, ellipsisWidth = getWidth(ellipsis);
  if(width < ellipsisWidth) {
    for(i = ellipsis.length - 1;1 <= i;i--) {
      var partialEllipsisWidth = getWidth(ellipsis.substr(0, i));
      if(partialEllipsisWidth <= width) {
        return lines.push(ellipsis.substr(0, i)), {tooltipNeeded:!0, maxLineWidth:partialEllipsisWidth}
      }
    }
    return{tooltipNeeded:!0, maxLineWidth:0}
  }
  for(i = text.length - 1;1 <= i;i--) {
    var newText = text.substr(0, i) + ellipsis, newTextWidth = getWidth(newText);
    if(newTextWidth <= width) {
      return lines.push(newText), {tooltipNeeded:!0, maxLineWidth:newTextWidth}
    }
  }
  lines.push(ellipsis);
  return{tooltipNeeded:!0, maxLineWidth:ellipsisWidth}
};
gviz.canviz.textutils.tooltipCssStyle = function(textStyle) {
  var cssStyle = {background:"infobackground", padding:"1px", border:"1px solid infotext"};
  goog.isDefAndNotNull(textStyle.fontSize) && (cssStyle.fontSize = textStyle.fontSize + "px", cssStyle.margin = textStyle.fontSize + "px");
  goog.isDefAndNotNull(textStyle.fontName) && (cssStyle.fontFamily = textStyle.fontName);
  return cssStyle
};
// Input 114
goog.math.Matrix = function(m, opt_n) {
  if(m instanceof goog.math.Matrix) {
    this.array_ = m.toArray()
  }else {
    if(goog.isArrayLike(m) && goog.math.Matrix.isValidArray(m)) {
      this.array_ = goog.array.clone(m)
    }else {
      if(m instanceof goog.math.Size) {
        this.array_ = goog.math.Matrix.createZeroPaddedArray_(m.height, m.width)
      }else {
        if(goog.isNumber(m) && goog.isNumber(opt_n) && 0 < m && 0 < opt_n) {
          this.array_ = goog.math.Matrix.createZeroPaddedArray_(m, opt_n)
        }else {
          throw Error("Invalid argument(s) for Matrix contructor");
        }
      }
    }
  }
  this.size_ = new goog.math.Size(this.array_[0].length, this.array_.length)
};
goog.math.Matrix.createIdentityMatrix = function(n) {
  for(var rv = [], i = 0;i < n;i++) {
    rv[i] = [];
    for(var j = 0;j < n;j++) {
      rv[i][j] = i == j ? 1 : 0
    }
  }
  return new goog.math.Matrix(rv)
};
goog.math.Matrix.forEach = function(matrix, fn, opt_obj) {
  for(var i = 0;i < matrix.getSize().height;i++) {
    for(var j = 0;j < matrix.getSize().width;j++) {
      fn.call(opt_obj, matrix.array_[i][j], i, j, matrix)
    }
  }
};
goog.math.Matrix.isValidArray = function(arr) {
  for(var len = 0, i = 0;i < arr.length;i++) {
    if(!goog.isArrayLike(arr[i]) || 0 < len && arr[i].length != len) {
      return!1
    }
    for(var j = 0;j < arr[i].length;j++) {
      if(!goog.isNumber(arr[i][j])) {
        return!1
      }
    }
    0 == len && (len = arr[i].length)
  }
  return 0 != len
};
goog.math.Matrix.map = function(matrix, fn, opt_obj) {
  var m = new goog.math.Matrix(matrix.getSize());
  goog.math.Matrix.forEach(matrix, function(value, i, j) {
    m.array_[i][j] = fn.call(opt_obj, value, i, j, matrix)
  });
  return m
};
goog.math.Matrix.createZeroPaddedArray_ = function(m, n) {
  for(var rv = [], i = 0;i < m;i++) {
    rv[i] = [];
    for(var j = 0;j < n;j++) {
      rv[i][j] = 0
    }
  }
  return rv
};
goog.math.Matrix.prototype.add = function(m) {
  if(!goog.math.Size.equals(this.size_, m.getSize())) {
    throw Error("Matrix summation is only supported on arrays of equal size");
  }
  return goog.math.Matrix.map(this, function(val, i, j) {
    return val + m.array_[i][j]
  })
};
goog.math.Matrix.prototype.appendColumns = function(m) {
  if(this.size_.height != m.getSize().height) {
    throw Error("The given matrix has height " + m.size_.height + ", but  needs to have height " + this.size_.height + ".");
  }
  var result = new goog.math.Matrix(this.size_.height, this.size_.width + m.size_.width);
  goog.math.Matrix.forEach(this, function(value, i, j) {
    result.array_[i][j] = value
  });
  goog.math.Matrix.forEach(m, function(value, i, j) {
    result.array_[i][this.size_.width + j] = value
  }, this);
  return result
};
goog.math.Matrix.prototype.equals = function(m, opt_tolerance) {
  if(this.size_.width != m.size_.width || this.size_.height != m.size_.height) {
    return!1
  }
  for(var tolerance = opt_tolerance || 0, i = 0;i < this.size_.height;i++) {
    for(var j = 0;j < this.size_.width;j++) {
      if(!goog.math.nearlyEquals(this.array_[i][j], m.array_[i][j], tolerance)) {
        return!1
      }
    }
  }
  return!0
};
goog.math.Matrix.prototype.getInverse = function() {
  if(!this.isSquare()) {
    throw Error("An inverse can only be taken on a square matrix.");
  }
  if(1 == this.getSize().width) {
    var a = this.getValueAt(0, 0);
    return 0 == a ? null : new goog.math.Matrix([[1 / a]])
  }
  var identity = goog.math.Matrix.createIdentityMatrix(this.size_.height), mi = this.appendColumns(identity).getReducedRowEchelonForm(), i = mi.getSubmatrixByCoordinates_(0, 0, identity.size_.width - 1, identity.size_.height - 1);
  return i.equals(identity) ? mi.getSubmatrixByCoordinates_(0, identity.size_.width) : null
};
goog.math.Matrix.prototype.getReducedRowEchelonForm = function() {
  for(var result = new goog.math.Matrix(this), col = 0, row = 0;row < result.size_.height && !(col >= result.size_.width);row++) {
    for(var i = row;0 == result.array_[i][col];) {
      if(i++, i == result.size_.height && (i = row, col++, col == result.size_.width)) {
        return result
      }
    }
    this.swapRows_(i, row);
    for(var divisor = result.array_[row][col], j = col;j < result.size_.width;j++) {
      result.array_[row][j] /= divisor
    }
    for(i = 0;i < result.size_.height;i++) {
      if(i != row) {
        for(var multiple = result.array_[i][col], j = col;j < result.size_.width;j++) {
          result.array_[i][j] -= multiple * result.array_[row][j]
        }
      }
    }
    col++
  }
  return result
};
goog.math.Matrix.prototype.getSize = function() {
  return this.size_
};
goog.math.Matrix.prototype.getTranspose = function() {
  var m = new goog.math.Matrix(this.size_.width, this.size_.height);
  goog.math.Matrix.forEach(this, function(value, i, j) {
    m.array_[j][i] = value
  });
  return m
};
goog.math.Matrix.prototype.getValueAt = function(i, j) {
  return this.isInBounds_(i, j) ? this.array_[i][j] : null
};
goog.math.Matrix.prototype.isSquare = function() {
  return this.size_.width == this.size_.height
};
goog.math.Matrix.prototype.setValueAt = function(i, j, value) {
  if(!this.isInBounds_(i, j)) {
    throw Error("Index out of bounds when setting matrix value, (" + i + "," + j + ") in size (" + this.size_.height + "," + this.size_.width + ")");
  }
  this.array_[i][j] = value
};
goog.math.Matrix.prototype.multiply = function(m) {
  if(m instanceof goog.math.Matrix) {
    if(this.size_.width != m.getSize().height) {
      throw Error("Invalid matrices for multiplication. Second matrix should have the same number of rows as the first has columns.");
    }
    return this.matrixMultiply_(m)
  }
  if(goog.isNumber(m)) {
    return this.scalarMultiply_(m)
  }
  throw Error("A matrix can only be multiplied by a number or another matrix.");
};
goog.math.Matrix.prototype.subtract = function(m) {
  if(!goog.math.Size.equals(this.size_, m.getSize())) {
    throw Error("Matrix subtraction is only supported on arrays of equal size.");
  }
  return goog.math.Matrix.map(this, function(val, i, j) {
    return val - m.array_[i][j]
  })
};
goog.math.Matrix.prototype.toArray = function() {
  return this.array_
};
goog.DEBUG && (goog.math.Matrix.prototype.toString = function() {
  var maxLen = 0;
  goog.math.Matrix.forEach(this, function(val) {
    var len = String(val).length;
    len > maxLen && (maxLen = len)
  });
  var sb = [];
  goog.array.forEach(this.array_, function(row) {
    sb.push("[ ");
    goog.array.forEach(row, function(val) {
      var strval = String(val);
      sb.push(goog.string.repeat(" ", maxLen - strval.length) + strval + " ")
    });
    sb.push("]\n")
  });
  return sb.join("")
});
goog.math.Matrix.prototype.getSubmatrixByCoordinates_ = function(i1, j1, opt_i2, opt_j2) {
  var i2 = opt_i2 ? opt_i2 : this.size_.height - 1, j2 = opt_j2 ? opt_j2 : this.size_.width - 1, result = new goog.math.Matrix(i2 - i1 + 1, j2 - j1 + 1);
  goog.math.Matrix.forEach(result, function(value, i, j) {
    result.array_[i][j] = this.array_[i1 + i][j1 + j]
  }, this);
  return result
};
goog.math.Matrix.prototype.isInBounds_ = function(i, j) {
  return 0 <= i && i < this.size_.height && 0 <= j && j < this.size_.width
};
goog.math.Matrix.prototype.matrixMultiply_ = function(m) {
  var resultMatrix = new goog.math.Matrix(this.size_.height, m.getSize().width);
  goog.math.Matrix.forEach(resultMatrix, function(val, x, y) {
    for(var newVal = 0, i = 0;i < this.size_.width;i++) {
      newVal += this.getValueAt(x, i) * m.getValueAt(i, y)
    }
    resultMatrix.setValueAt(x, y, newVal)
  }, this);
  return resultMatrix
};
goog.math.Matrix.prototype.scalarMultiply_ = function(m) {
  return goog.math.Matrix.map(this, function(val) {
    return val * m
  })
};
goog.math.Matrix.prototype.swapRows_ = function(i1, i2) {
  var tmp = this.array_[i1];
  this.array_[i1] = this.array_[i2];
  this.array_[i2] = tmp
};
// Input 115
gviz.canviz.Scheduler = function(callback) {
  goog.Disposable.call(this);
  this.callback_ = callback;
  this.countdown_ = Infinity;
  this.last_ = 0;
  var timer = new goog.Timer(15);
  this.registerDisposable(timer);
  goog.events.listen(timer, goog.Timer.TICK, goog.bind(this.tick_, this));
  timer.start()
};
goog.inherits(gviz.canviz.Scheduler, goog.Disposable);
gviz.canviz.Scheduler.prototype.updateCountdown = function(countdown) {
  this.countdown_ = Math.min(this.countdown_, countdown)
};
gviz.canviz.Scheduler.prototype.stopCountdown = function() {
  this.countdown_ = Infinity
};
gviz.canviz.Scheduler.prototype.tick_ = function() {
  var now = goog.now();
  this.countdown_ -= now - this.last_;
  this.last_ = now;
  0 >= this.countdown_ && (this.callback_(), this.countdown_ = Infinity)
};
// Input 116
gviz.fw = {};
gviz.fw.Factory = function() {
};
gviz.fw.Factory.prototype.createChartRenderer = function() {
};
gviz.fw.Factory.prototype.createDefiner = function() {
};
gviz.fw.Factory.prototype.createEventHandler = function() {
};
gviz.fw.Factory.prototype.createEventDispatcher = function() {
};
gviz.fw.Factory.prototype.createInteractivityDefiner = function() {
};
gviz.fw.Factory.prototype.createInteractivityHandlers = function() {
};
gviz.fw.Factory.prototype.createRunner = function() {
};
// Input 117
gviz.fw.render = {};
gviz.fw.render.LayerName = {BACKGROUND:"background", GRID:"grid", LINKS:"links", ROWS:"rows", SELECTED_ROWS:"selected-rows", ROW_LABELS:"rowlabels", FRONT_GRID:"fgrid", SELECTED_LABELS:"_selectedLabels", FOCUSED_LABELS:"_focusedLabels"};
gviz.fw.render.LayerName.isSpecialLayer = function(layerName) {
  return"_" === layerName[0]
};
gviz.fw.render.DrawHelper = function() {
};
gviz.fw.render.DrawHelper.prototype.getRenderer = function() {
};
gviz.fw.render.DrawHelper.prototype.drawElement = function() {
};
gviz.fw.render.DrawHelper.prototype.appendElement = function() {
};
gviz.fw.render.DrawHelper.prototype.replaceElement = function() {
};
gviz.fw.render.DrawHelper.prototype.removeElement = function() {
};
// Input 118
gviz.fw.Definer = function() {
};
gviz.fw.Definer.prototype.getDefinition = function() {
};
// Input 119
gviz.fw.FeatureType = {BACKGROUND:"BACKGROUND", ROW_FEATURE:"ROW", COLUMN_FEATURE:"COLUMN", CELL_FEATURE:"CELL"};
gviz.fw.Aspects = {ROW_INDEX:"ROW_INDEX", COLUMN_INDEX:"COLUMN_INDEX", SUBTYPE:"SUBTYPE"};
gviz.fw.FeatureId = function(type, opt_identifiers) {
  this.type_ = type;
  this.identifiers_ = goog.isDefAndNotNull(opt_identifiers) && goog.object.clone(opt_identifiers) || {}
};
gviz.fw.FeatureId.createRowFeatureId = function(rowIndex, opt_subType) {
  var featureId = (new gviz.fw.FeatureId(gviz.fw.FeatureType.ROW_FEATURE)).setAspect(gviz.fw.Aspects.ROW_INDEX, rowIndex);
  goog.isDefAndNotNull(opt_subType) && featureId.setAspect(gviz.fw.Aspects.SUBTYPE, opt_subType);
  return featureId
};
gviz.fw.FeatureId.createColumnFeatureId = function(columnIndex, opt_subType) {
  var featureId = (new gviz.fw.FeatureId(gviz.fw.FeatureType.COLUMN_FEATURE)).setAspect(gviz.fw.Aspects.COLUMN_INDEX, columnIndex);
  goog.isDefAndNotNull(opt_subType) && featureId.setAspect(gviz.fw.Aspects.SUBTYPE, opt_subType);
  return featureId
};
gviz.fw.FeatureId.createCellFeatureId = function(colIndex, rowIndex, opt_subType) {
  var featureId = (new gviz.fw.FeatureId(gviz.fw.FeatureType.CELL_FEATURE)).setAspect(gviz.fw.Aspects.ROW_INDEX, rowIndex).setAspect(gviz.fw.Aspects.COLUMN_INDEX, colIndex);
  goog.isDefAndNotNull(opt_subType) && featureId.setAspect(gviz.fw.Aspects.SUBTYPE, opt_subType);
  return featureId
};
gviz.fw.FeatureId.parse = function(str) {
  var o = goog.json.parse(str);
  return new gviz.fw.FeatureId(o.type_, o.identifiers_)
};
gviz.fw.FeatureId.prototype.clone = function() {
  return gviz.fw.FeatureId.parse(this.serialize())
};
gviz.fw.FeatureId.prototype.equals = function(other) {
  if(!other || this.type_ != other.type_) {
    return!1
  }
  var myKeys = goog.object.getKeys(this.identifiers_);
  return myKeys.length !== goog.object.getKeys(other.identifiers_).length ? !1 : goog.array.every(goog.array.map(myKeys, goog.bind(function(key) {
    return this.identifiers_[key] === other.identifiers_[key]
  }, this)), goog.functions.identity)
};
gviz.fw.FeatureId.prototype.setAspect = function(name, value) {
  this.identifiers_[name] = value;
  return this
};
gviz.fw.FeatureId.prototype.getAspect = function(name) {
  return this.identifiers_[name]
};
gviz.fw.FeatureId.prototype.type = function() {
  return this.type_
};
gviz.fw.FeatureId.prototype.serialize = function() {
  return goog.json.serialize(this)
};
// Input 120
gviz.fw.interactionEvents = {};
gviz.fw.interactionEvents.OperationType = {HOVER_IN:"hoverIn", HOVER_OUT:"hoverOut", CLICK:"click"};
// Input 121
gviz.fw.EffectType = {FOCUS:"focus", SELECTION:"select", TOOLTIP:"tooltip"};
gviz.fw.Effect = function(type, data) {
  this.type = type;
  this.data = data
};
gviz.fw.TargetedEffect = function(effect, opt_featureId) {
  goog.isString(effect) && (effect = new gviz.fw.Effect(effect, null));
  this.effect = effect;
  this.targets = [];
  opt_featureId && this.targets.push(opt_featureId)
};
gviz.fw.EffectsDiff = function() {
  this.effectsToAdd = [];
  this.effectsToRemove = [];
  this.clearTooltip = !1
};
// Input 122
gviz.fw.State = function() {
  this.selected = new gviz.util.Selection;
  this.tooltipFeature = this.focusedFeature = null
};
gviz.fw.State.prototype.clone = function() {
  var cloned = new gviz.fw.State;
  cloned.selected = this.selected.clone();
  cloned.focusedFeature = this.focusedFeature ? this.focusedFeature.clone() : null;
  cloned.tooltipFeature = this.tooltipFeature ? this.tooltipFeature.clone() : null;
  return cloned
};
gviz.fw.State.prototype.equals = function(other) {
  return this.selected.equals(other.selected) && (this.focusedFeature ? this.focusedFeature.equals(other.focusedFeature) : !other.focusedFeature) && (this.tooltipFeature ? this.tooltipFeature.equals(other.tooltipFeature) : !other.tooltipFeature)
};
// Input 123
gviz.fw.InteractivityDefiner = function(handlers) {
  this.state_ = null;
  this.effects_ = [];
  this.handlers_ = handlers
};
gviz.fw.InteractivityDefiner.prototype.calcEffectsDiff = function(state) {
  goog.asserts.assert(this.state_);
  if(this.state_.equals(state)) {
    return{clearTooltip:!1, effectsToAdd:[], effectsToRemove:[]}
  }
  var oldEffects = this.effects_, newEffects = this.calcEffects(state), result = this.compareEffects_(newEffects, oldEffects);
  return result
};
gviz.fw.InteractivityDefiner.prototype.calcEffects = function(state) {
  if(!goog.isDefAndNotNull(this.handlers_)) {
    return[]
  }
  var effects = goog.array.reduce(this.handlers_, function(result, handler) {
    goog.array.extend(result, handler.calcEffects(state));
    return result
  }, [], this);
  this.effects_ = effects;
  this.state_ = state.clone();
  return effects
};
gviz.fw.InteractivityDefiner.prototype.compareEffects_ = function(newEffects, currentEffects) {
  var newEffectsSet = this.buildEffectsSet_(newEffects), currentEffectsSet = this.buildEffectsSet_(currentEffects), effectsToAddSet = newEffectsSet.difference(currentEffectsSet), effectsToRemoveSet = currentEffectsSet.difference(newEffectsSet), result = new gviz.fw.EffectsDiff;
  result.effectsToAdd = this.parseEffectsSet_(effectsToAddSet);
  result.effectsToRemove = this.parseEffectsSet_(effectsToRemoveSet);
  return result
};
gviz.fw.InteractivityDefiner.prototype.buildEffectsSet_ = function(effects) {
  var serializedEffects = goog.array.map(effects, function(effect) {
    return goog.json.serialize(effect)
  });
  return new goog.structs.Set(serializedEffects)
};
gviz.fw.InteractivityDefiner.prototype.parseEffectsSet_ = function(effectsSet) {
  var serializedEffects = effectsSet.getValues();
  return goog.array.map(serializedEffects, function(serializedEffect) {
    var effect = goog.json.parse(serializedEffect);
    effect.targets = goog.array.map(effect.targets, function(o) {
      return new gviz.fw.FeatureId(o.type_, o.identifiers_)
    });
    return effect
  })
};
// Input 124
gviz.fw.interactivity = {};
gviz.fw.interactivity.BaseHandler = function(featureTypes, operationTypes) {
  this.featureTypes = new goog.structs.Set(featureTypes);
  this.operationTypes = new goog.structs.Set(operationTypes)
};
gviz.fw.interactivity.BaseHandler.prototype.eventApplies = function(featureId, operationType) {
  return this.featureTypes.contains(featureId.type()) && this.operationTypes.contains(operationType)
};
// Input 125
gviz.fw.interactivity.FocusHandler = function(featureTypes) {
  gviz.fw.interactivity.BaseHandler.call(this, featureTypes, [gviz.fw.interactionEvents.OperationType.HOVER_IN, gviz.fw.interactionEvents.OperationType.HOVER_OUT])
};
goog.inherits(gviz.fw.interactivity.FocusHandler, gviz.fw.interactivity.BaseHandler);
gviz.fw.interactivity.FocusHandler.prototype.changeState = function(featureId, operationType, state) {
  if(operationType == gviz.fw.interactionEvents.OperationType.HOVER_IN) {
    if(!featureId.equals(state.focusedFeature)) {
      return state.focusedFeature = featureId, !0
    }
  }else {
    if(null != state.focusedFeature) {
      return state.focusedFeature = null, !0
    }
  }
  return!1
};
gviz.fw.interactivity.FocusHandler.prototype.calcEffects = function(state) {
  return goog.isDefAndNotNull(state.focusedFeature) ? [new gviz.fw.TargetedEffect(gviz.fw.EffectType.FOCUS, state.focusedFeature)] : []
};
// Input 126
gviz.fw.render.ChartRenderer = function() {
};
gviz.fw.render.ChartRenderer.prototype.draw = function() {
};
gviz.fw.render.ChartRenderer.prototype.getSize = function() {
};
gviz.fw.render.ChartRenderer.prototype.setEffect = function() {
};
// Input 127
gviz.fw.Builder = function(factory, renderer, overlayArea, eventHandler, asyncWrapper) {
  this.factory = factory;
  this.renderer = renderer;
  this.overlayArea = overlayArea;
  this.layerGroups = null;
  this.layerPrecedence = gviz.fw.Builder.DEFAULT_LAYER_PRECEDENCE;
  this.eventHandler = eventHandler;
  this.asyncWrapper = asyncWrapper;
  this.chartRenderer = null
};
gviz.fw.Builder.prototype.draw = function(definition) {
  this.layerGroups = {};
  var renderer = this.renderer;
  renderer.clear();
  this.chartRenderer = this.factory.createChartRenderer(definition, this.overlayArea);
  for(var size = this.chartRenderer.getSize(), canvas = renderer.createCanvas(size.width, size.height), i = 0;i < this.layerPrecedence.length;i++) {
    var layerName = this.layerPrecedence[i], layerGroup = renderer.createGroup();
    renderer.appendChild(canvas, layerGroup);
    this.layerGroups[layerName] = layerGroup
  }
  this.chartRenderer.draw(this);
  this.setEventHandlers(canvas)
};
gviz.fw.Builder.prototype.setLayerPrecedence = function(layerPrecedence) {
  this.layerPrecedence = layerPrecedence
};
gviz.fw.Builder.prototype.refresh = function(effectsDiff) {
  this.setEffects(effectsDiff.effectsToRemove, !1);
  this.setEffects(effectsDiff.effectsToAdd, !0);
  this.chartRenderer.draw(this)
};
gviz.fw.Builder.prototype.setEffects = function(visualEffects, enable) {
  for(var i = 0;i < visualEffects.length;i++) {
    for(var visualEffect = visualEffects[i], targets = visualEffect.targets, j = 0;j < targets.length;j++) {
      var targetId = targets[j];
      this.chartRenderer.setEffect(targetId, visualEffect.effect, enable)
    }
  }
};
gviz.fw.Builder.prototype.setEventHandlers = function(canvas) {
  var renderer = this.renderer;
  renderer.setEventHandler(canvas, goog.events.EventType.CONTEXTMENU, goog.events.Event.preventDefault);
  renderer.setEventHandler(canvas, goog.events.EventType.MOUSEOVER, this.asyncWrapper(goog.bind(this.handleEvent, this, gviz.fw.interactionEvents.OperationType.HOVER_IN)));
  renderer.setEventHandler(canvas, goog.events.EventType.MOUSEOUT, this.asyncWrapper(goog.bind(this.handleEvent, this, gviz.fw.interactionEvents.OperationType.HOVER_OUT)));
  renderer.setEventHandler(canvas, goog.events.EventType.CLICK, this.asyncWrapper(goog.bind(this.handleEvent, this, gviz.fw.interactionEvents.OperationType.CLICK)))
};
gviz.fw.Builder.prototype.handleEvent = function(operationType, event) {
  event.stopPropagation && event.stopPropagation();
  var eventTarget = event.target, targetFeatureIdStr = this.renderer.getLogicalName(eventTarget);
  if(targetFeatureIdStr != gviz.graphics.logicalname.DEFAULT_NAME) {
    var targetFeatureId = gviz.fw.FeatureId.parse(targetFeatureIdStr);
    goog.asserts.assert(targetFeatureId);
    this.eventHandler(targetFeatureId, operationType)
  }
};
gviz.fw.Builder.prototype.getRenderer = function() {
  return this.renderer
};
gviz.fw.Builder.prototype.drawElement = function(newElement, oldElement, featureId, layerName) {
  goog.isDefAndNotNull(oldElement) ? (goog.asserts.assert(this.renderer.getLogicalName(oldElement) == featureId.serialize()), goog.asserts.assert(goog.dom.getParentElement(oldElement) == this.layerGroups[layerName].getElement()), this.replaceElement(newElement, oldElement)) : this.appendElement(newElement, featureId, layerName)
};
gviz.fw.Builder.prototype.appendElement = function(element, featureId, layerName) {
  var layerGroup = this.layerGroups[layerName];
  goog.asserts.assert(layerGroup);
  this.renderer.appendChild(layerGroup, element);
  this.renderer.setLogicalName(element, featureId.serialize())
};
gviz.fw.Builder.prototype.replaceElement = function(newElement, oldElement) {
  var parentElement = goog.dom.getParentElement(oldElement);
  parentElement.replaceChild(newElement, oldElement);
  var elementId = this.renderer.getLogicalName(oldElement);
  this.renderer.setLogicalName(newElement, elementId)
};
gviz.fw.Builder.prototype.removeElement = function(element) {
  this.renderer.removeElement(element)
};
gviz.fw.Builder.DEFAULT_LAYER_PRECEDENCE = [gviz.fw.render.LayerName.BACKGROUND, gviz.fw.render.LayerName.ROWS, gviz.fw.render.LayerName.ROW_LABELS, gviz.fw.render.LayerName.SELECTED_LABELS, gviz.fw.render.LayerName.FOCUSED_LABELS];
// Input 128
gviz.fw.EventDispatcher = function(eventSource) {
  this.eventSource_ = eventSource;
  this.state_ = null
};
gviz.fw.EventDispatcher.prototype.setState = function(state) {
  this.state_ = state.clone()
};
gviz.fw.EventDispatcher.prototype.dispatchByStateChange = function(state) {
  goog.asserts.assert(this.state_);
  var drawnState = this.state_;
  state.selected.equals(drawnState.selected) || this.dispatchEvent(gviz.ChartEventType.SELECT, null);
  var newFeature = state.focusedFeature, oldFeature = drawnState.focusedFeature;
  if(!newFeature && oldFeature || newFeature && !newFeature.equals(oldFeature)) {
    var eventType = gviz.ChartEventType.FOCUS_IN, rowIndex;
    if(!oldFeature) {
      rowIndex = newFeature.getAspect(gviz.fw.Aspects.ROW_INDEX)
    }else {
      if(!newFeature) {
        eventType = gviz.ChartEventType.FOCUS_OUT, rowIndex = oldFeature.getAspect(gviz.fw.Aspects.ROW_INDEX)
      }else {
        if(oldFeature.type() !== newFeature.type() || oldFeature.getAspect(gviz.fw.Aspects.ROW_INDEX) !== newFeature.getAspect(gviz.fw.Aspects.ROW_INDEX)) {
          rowIndex = newFeature.getAspect(gviz.fw.Aspects.ROW_INDEX)
        }
      }
    }
    this.dispatchEvent(eventType, {row:rowIndex})
  }
  this.state_ = state.clone()
};
gviz.fw.EventDispatcher.prototype.dispatchEvent = function(eventType, eventData) {
  google.visualization.events.trigger(this.eventSource_, eventType, eventData)
};
// Input 129
gviz.fw.EventHandler = function(callback, handlers) {
  goog.Disposable.call(this);
  this.state_ = null;
  this.handlers_ = handlers;
  this.scheduler_ = new gviz.canviz.Scheduler(callback);
  this.registerDisposable(this.scheduler_)
};
goog.inherits(gviz.fw.EventHandler, goog.Disposable);
gviz.fw.EventHandler.prototype.setState = function(state) {
  this.state_ = state
};
gviz.fw.EventHandler.prototype.getHandlerFunc = function() {
  return goog.bind(this.handleEvent, this)
};
gviz.fw.EventHandler.prototype.handleEvent = function(featureId, operationType) {
  if(goog.isDefAndNotNull(this.handlers_)) {
    goog.asserts.assert(this.state_);
    var changed = !1;
    goog.array.forEach(this.handlers_, function(handler) {
      if(handler.eventApplies(featureId, operationType)) {
        var localChanged = handler.changeState(featureId, operationType, this.state_);
        changed = changed || localChanged
      }
    }, this);
    changed && this.tickleScheduler()
  }
};
gviz.fw.EventHandler.prototype.tickleScheduler = function() {
  this.scheduler_.updateCountdown(50)
};
// Input 130
gviz.fw.Runner = function(factory, renderer, overlayArea, eventSource, asyncWrapper) {
  goog.Disposable.call(this);
  this.factory = factory;
  this.drawnState = this.state = null;
  var handlers = this.factory.createInteractivityHandlers();
  this.interactivityDefiner = this.factory.createInteractivityDefiner(handlers);
  var refreshAndDispatchEvents = asyncWrapper(goog.bind(this.refresh_, this, !0));
  this.eventHandler = this.factory.createEventHandler(refreshAndDispatchEvents, handlers);
  this.registerDisposable(this.eventHandler);
  this.builder = this.factory.createBuilder(renderer, overlayArea, this.eventHandler.getHandlerFunc(), asyncWrapper);
  this.eventDispatcher = this.factory.createEventDispatcher(eventSource)
};
goog.inherits(gviz.fw.Runner, goog.Disposable);
gviz.fw.Runner.prototype.draw = function(definition, initialState) {
  this.state = initialState.clone();
  this.eventHandler.setState(this.state);
  this.eventDispatcher.setState(this.state);
  var effects = this.interactivityDefiner.calcEffects(this.state);
  this.builder.draw(definition, effects);
  this.drawnState = this.state.clone();
  this.eventDispatcher.dispatchEvent(gviz.ChartEventType.READY, null)
};
gviz.fw.Runner.prototype.refresh_ = function(dispatchEvents) {
  goog.asserts.assert(this.state);
  var effectsDiff = this.interactivityDefiner.calcEffectsDiff(this.state);
  this.builder.refresh(effectsDiff);
  this.drawnState = this.state.clone();
  dispatchEvents && this.eventDispatcher.dispatchByStateChange(this.state)
};
gviz.fw.Runner.prototype.setSelection = function(selected) {
  this.refresh_(!0);
  this.state.selected.setSelection(selected);
  this.refresh_(!1)
};
gviz.fw.Runner.prototype.getSelection = function() {
  return this.drawnState.selected.getSelection()
};
// Input 131
gviz.fw.FrameworkVisualization = function(container) {
  google.visualization.AbstractVisualization.call(this, container)
};
goog.inherits(gviz.fw.FrameworkVisualization, google.visualization.AbstractVisualization);
gviz.fw.FrameworkVisualization.prototype.getFactory = function() {
  return this
};
gviz.fw.FrameworkVisualization.prototype.createBuilder = function(renderer, overlayArea, eventHandler, asyncWrapper) {
  return new gviz.fw.Builder(this, renderer, overlayArea, eventHandler, asyncWrapper)
};
gviz.fw.FrameworkVisualization.prototype.createEventHandler = function(callback, handlers) {
  return new gviz.fw.EventHandler(callback, handlers)
};
gviz.fw.FrameworkVisualization.prototype.createEventDispatcher = function(eventSource) {
  return new gviz.fw.EventDispatcher(eventSource)
};
gviz.fw.FrameworkVisualization.prototype.createInteractivityHandlers = function() {
  return null
};
gviz.fw.FrameworkVisualization.prototype.createInteractivityDefiner = function(handlers) {
  return new gviz.fw.InteractivityDefiner(handlers)
};
gviz.fw.FrameworkVisualization.prototype.createRunner = function(renderer, overlayArea, eventSource, asyncWrapper) {
  return new gviz.fw.Runner(this, renderer, overlayArea, eventSource, asyncWrapper)
};
gviz.fw.FrameworkVisualization.prototype.drawInternal = function(asyncWrapper, dataTable, opt_options) {
  google.visualization.errors.removeAll(this.container);
  var userOptions = opt_options || {}, defaultOptions = this.getDefaultOptions() || {}, options = new gviz.Options([userOptions, defaultOptions]), width = gviz.util.VisCommon.getWidth(this.container, options), height = gviz.util.VisCommon.getHeight(this.container, options), chartSize = new goog.math.Size(width, height), forceIFrame = options.inferBooleanValue("forceIFrame");
  this.createOrUpdateDrawingFrame_(chartSize, asyncWrapper, forceIFrame);
  this.drawingFrame_.waitUntilReady(goog.bind(this.completeTheDraw_, this, dataTable, options, chartSize, asyncWrapper), asyncWrapper)
};
gviz.fw.FrameworkVisualization.prototype.createOrUpdateDrawingFrame_ = function(chartSize, asyncWrapper, forceIFrame) {
  goog.isDefAndNotNull(this.drawingFrame_) ? this.drawingFrame_.update(chartSize, asyncWrapper) : this.drawingFrame_ = new gviz.graphics.DrawingFrame(this.container, chartSize, asyncWrapper, forceIFrame)
};
gviz.fw.FrameworkVisualization.prototype.completeTheDraw_ = function(dataTable, options, chartSize, asyncWrapper) {
  var renderer = this.drawingFrame_.getRenderer();
  goog.asserts.assert(renderer);
  var overlayArea = this.drawingFrame_.getOverlayArea();
  goog.asserts.assert(overlayArea);
  var chartDefiner = this.getFactory().createDefiner(dataTable, options, goog.bind(renderer.getTextSize, renderer), chartSize), definition = chartDefiner.getDefinition();
  goog.dispose(this.runner_);
  this.runner_ = this.getFactory().createRunner(renderer, overlayArea, this, asyncWrapper);
  var initialState = new gviz.fw.State(options.inferObjectValue("state"));
  this.runner_.draw(definition, initialState)
};
gviz.fw.FrameworkVisualization.prototype.clearInternal = function() {
  goog.dispose(this.drawingFrame_);
  this.drawingFrame_ = null;
  goog.dispose(this.runner_);
  this.runner_ = null
};
gviz.fw.FrameworkVisualization.prototype.setSelection = function(selection) {
  this.runner_ && this.runner_.setSelection(selection)
};
gviz.fw.FrameworkVisualization.prototype.getSelection = function() {
  return this.runner_ ? this.runner_.getSelection() : []
};
// Input 132
var nightingale = {CategoryPalette:function(totalColors, opt_highContrast) {
  var max = nightingale.CategoryPalette.BASE_COLORS_.length;
  this.palette_ = [];
  for(var numBrightnessVariations = 1 + Math.floor(totalColors / max), baseSize = Math.ceil(totalColors / numBrightnessVariations), baseRGB = [], i = 0;i < max;i++) {
    nightingale.CategoryPalette.BASE_COLORS_[i][1] < baseSize && baseRGB.push(nightingale.CategoryPalette.BASE_COLORS_[i][0])
  }
  for(i = 0;i < totalColors;i++) {
    var baseIndex = opt_highContrast ? i % baseSize : Math.floor(i / numBrightnessVariations), base = baseRGB[baseIndex], fadeStep = opt_highContrast ? Math.floor(i / baseSize) : i % numBrightnessVariations, blendType = opt_highContrast ? nightingale.CategoryPalette.HIGH_CONTRAST_BLEND_ : nightingale.CategoryPalette.NORMAL_BLEND_, blend = blendType * fadeStep / numBrightnessVariations;
    this.palette_[i] = base.map(function(x) {
      return~~(255 * blend + (1 - blend) * x)
    })
  }
}};
nightingale.CategoryPalette.BASE_COLORS_ = [[[67, 69, 157], 6], [[67, 116, 224], 0], [[83, 168, 251], 1], [[26, 135, 99], 7], [[95, 150, 84], 4], [[185, 194, 70], 9], [[241, 202, 58], 2], [[228, 147, 7], 3], [[231, 113, 27], 8], [[211, 54, 45], 5], [[135, 27, 71], 10], [[92, 50, 146], 11]];
nightingale.CategoryPalette.NORMAL_BLEND_ = 0.3;
nightingale.CategoryPalette.HIGH_CONTRAST_BLEND_ = 0.5;
nightingale.CategoryPalette.prototype.getSize = function() {
  return this.palette_.length
};
nightingale.CategoryPalette.prototype.getColor = function(n) {
  return"rgb(" + this.palette_[n] + ")"
};
nightingale.CategoryPalette.prototype.getHex = function(n) {
  function hex(a) {
    var s = a.toString(16);
    1 == s.length && (s = "0" + s);
    return s
  }
  var t = this.palette_[n];
  return"#" + (hex(t[0]) + hex(t[1]) + hex(t[2])).toUpperCase()
};
// Input 133
gviz.fw.render.RenderedElement = function(el, featureId, layer) {
  this.el = el;
  this.featureId = featureId.clone();
  this.layer = layer
};
// Input 134
gviz.fw.render.ChartAssembler = function() {
  this.renderedElements_ = new goog.structs.Map;
  this.renderedStaticElements_ = !1
};
gviz.fw.render.ChartAssembler.prototype.assembleStaticElements = function() {
  return[]
};
gviz.fw.render.ChartAssembler.prototype.draw = function(drawHelper) {
  if(!this.renderedStaticElements_) {
    var staticElements = this.assembleStaticElements(drawHelper);
    goog.array.forEach(staticElements, goog.bind(this.renderElement, this, drawHelper))
  }
  var elements = this.assembleElements(drawHelper);
  goog.array.forEach(elements, goog.bind(this.renderElement, this, drawHelper))
};
gviz.fw.render.ChartAssembler.prototype.renderElement = function(drawHelper, newEl) {
  var serializedId = newEl.featureId.serialize(), oldEl = this.renderedElements_.get(serializedId, null);
  oldEl && oldEl.specialEl && drawHelper.removeElement(oldEl.specialEl);
  gviz.fw.render.LayerName.isSpecialLayer(newEl.layer) ? (goog.style.setElementShown(oldEl.el, !1), oldEl.specialEl = newEl.el, oldEl.specialLayer = newEl.layer, drawHelper.appendElement(oldEl.specialEl, oldEl.featureId, oldEl.specialLayer)) : (null === oldEl || oldEl.layer !== newEl.layer ? (null != oldEl && drawHelper.removeElement(oldEl.el), drawHelper.appendElement(newEl.el, newEl.featureId, newEl.layer)) : drawHelper.drawElement(newEl.el, oldEl.el, newEl.featureId, newEl.layer), this.renderedElements_.set(serializedId, 
  newEl))
};
// Input 135
gviz.tree = {};
gviz.tree.aggregation = {};
gviz.tree.aggregation.sumNoOverride = function(value, childValues) {
  gviz.tree.aggregation.assertNumberOrNullInput_(value, childValues);
  if(0 == childValues.length) {
    return goog.isNull(value) ? 0 : value
  }
  var sum$$0 = goog.array.reduce(childValues, function(sum, childValue) {
    return sum + childValue
  }, 0);
  return sum$$0
};
gviz.tree.aggregation.averageNoOverride = function(value$$0, childValues) {
  gviz.tree.aggregation.assertNumberOrNullInput_(value$$0, childValues);
  if(0 == childValues.length) {
    return value$$0
  }
  var nonNullChilds = goog.array.filter(childValues, function(value) {
    return null != value
  });
  return 0 == nonNullChilds.length ? null : gviz.tree.aggregation.sumNoOverride(value$$0, nonNullChilds) / nonNullChilds.length
};
gviz.tree.aggregation.assertNumberOrNull_ = function(value) {
  goog.asserts.assert(goog.isNull(value) || goog.isNumber(value))
};
gviz.tree.aggregation.assertNumberOrNullInput_ = function(value, childValues) {
  gviz.tree.aggregation.assertNumberOrNull_(value);
  goog.array.forEach(childValues, function(childValue) {
    gviz.tree.aggregation.assertNumberOrNull_(childValue)
  })
};
// Input 136
gviz.tree.Node = function() {
};
gviz.tree.Node.prototype.getId = function() {
};
gviz.tree.Node.prototype.getName = function() {
};
gviz.tree.Node.prototype.getParent = function() {
};
gviz.tree.Node.prototype.isLeaf = function() {
};
gviz.tree.Node.prototype.getChildren = function() {
};
gviz.tree.Node.prototype.getChildAt = function() {
};
gviz.tree.Node.prototype.getChildCount = function() {
};
gviz.tree.Node.prototype.getDepth = function() {
};
gviz.tree.Node.prototype.getHeight = function() {
};
gviz.tree.Node.prototype.getAncestors = function() {
};
gviz.tree.Node.prototype.getRoot = function() {
};
gviz.tree.Node.prototype.contains = function() {
};
gviz.tree.Node.prototype.traverse = function() {
};
gviz.tree.Node.prototype.find = function() {
};
gviz.tree.Node.prototype.calcAggregatedValue = function() {
};
// Input 137
gviz.tree.DataNode = function() {
};
gviz.tree.DataNode.prototype.getRow = function() {
};
gviz.tree.DataNode.prototype.getDataTable = function() {
};
gviz.tree.DataNode.prototype.getFormattedName = function() {
};
gviz.tree.DataNode.prototype.getRowProperty = function() {
};
gviz.tree.DataNode.prototype.getValue = function() {
};
gviz.tree.DataNode.prototype.getFormattedValue = function() {
};
// Input 138
gviz.util.LayeredObject = function(numberOfLayers) {
  goog.asserts.assert(0 < numberOfLayers, "Expecting one or more layers, got " + numberOfLayers);
  this.layers_ = goog.array.repeat({}, numberOfLayers);
  this.compact_ = goog.array.repeat({}, numberOfLayers)
};
gviz.util.LayeredObject.prototype.setLayer = function(index, layer) {
  var numberOfLayers = this.layers_.length;
  goog.asserts.assert(0 <= index && index < numberOfLayers, "Index %s is out of range [0,%s]", index, numberOfLayers - 1);
  this.layers_[index] = layer;
  for(var i = index;i < numberOfLayers;++i) {
    this.compact_[i] = this.recursivelyAddSubLayer_(0 == i ? {} : this.compact_[i - 1], this.layers_[i])
  }
};
gviz.util.LayeredObject.prototype.isLeaf_ = function(v) {
  var typeOfValue = goog.typeOf(v);
  return"object" != typeOfValue && "array" != typeOfValue || "object" == typeOfValue && goog.isFunction(v.clone) || goog.isDateLike(v)
};
gviz.util.LayeredObject.prototype.recursivelyAddSubLayer_ = function(subCompact, subLayer) {
  if(this.isLeaf_(subLayer) || this.isLeaf_(subCompact) || "array" == goog.typeOf(subLayer)) {
    return subLayer
  }
  var subLayerObject = subLayer;
  if("object" == goog.typeOf(subCompact)) {
    var subCompactObject = subCompact, ret = goog.object.clone(subCompactObject);
    goog.object.forEach(subLayerObject, function(val, key) {
      goog.object.containsKey(subCompactObject, key) && null != subCompact[key] ? ret[key] = this.recursivelyAddSubLayer_(subCompact[key], val) : ret[key] = val
    }, this)
  }else {
    ret = goog.array.clone(subCompact), goog.object.forEach(subLayerObject, function(val, key) {
      ret[key] = this.recursivelyAddSubLayer_(subCompact[key], val)
    }, this)
  }
  return ret
};
gviz.util.LayeredObject.prototype.compact = function() {
  return goog.array.peek(this.compact_)
};
// Input 139
gviz.tree.NodeBase = function(id, name) {
  goog.Disposable.call(this);
  this.id_ = id;
  this.name_ = name
};
goog.inherits(gviz.tree.NodeBase, goog.Disposable);
gviz.tree.NodeBase.EMPTY_ARRAY_ = [];
gviz.tree.NodeBase.prototype.parent_ = null;
gviz.tree.NodeBase.prototype.children_ = null;
gviz.tree.NodeBase.prototype.setId = function(id) {
  this.id_ = id
};
gviz.tree.NodeBase.prototype.getId = function() {
  return this.id_
};
gviz.tree.NodeBase.prototype.getName = function() {
  return this.name_
};
gviz.tree.NodeBase.prototype.getParent = function() {
  return this.parent_
};
gviz.tree.NodeBase.prototype.isLeaf = function() {
  return!this.getChildCount()
};
gviz.tree.NodeBase.prototype.getChildren = function() {
  return this.children_ || gviz.tree.NodeBase.EMPTY_ARRAY_
};
gviz.tree.NodeBase.prototype.getChildAt = function(index) {
  return this.getChildren()[index] || null
};
gviz.tree.NodeBase.prototype.getChildCount = function() {
  return this.getChildren().length
};
gviz.tree.NodeBase.prototype.getDepth = function() {
  for(var depth = 0, node = this;node.getParent();) {
    depth++, node = node.getParent()
  }
  return depth
};
gviz.tree.NodeBase.prototype.getHeight = function() {
  var childs = this.getChildren(), maxChildHeight = goog.array.reduce(childs, function(height, child) {
    return Math.max(height, child.getHeight())
  }, -1);
  return maxChildHeight + 1
};
gviz.tree.NodeBase.prototype.getAncestors = function() {
  for(var ancestors = [], node = this.getParent();node;) {
    ancestors.push(node), node = node.getParent()
  }
  return ancestors
};
gviz.tree.NodeBase.prototype.getRoot = function() {
  for(var root = this;root.getParent();) {
    root = root.getParent()
  }
  return root
};
gviz.tree.NodeBase.prototype.contains = function(node) {
  var current = node;
  do {
    current = current.getParent()
  }while(current && current != this);
  return Boolean(current)
};
gviz.tree.NodeBase.findCommonAncestor = function(var_args) {
  if(0 == arguments.length) {
    return null
  }
  for(var ret = arguments[0], retDepth = ret.getDepth(), i = 1;i < arguments.length;i++) {
    for(var node = arguments[i], depth = node.getDepth();node != ret;) {
      depth <= retDepth && (ret = ret.getParent(), retDepth--), depth > retDepth && (node = node.getParent(), depth--)
    }
  }
  return ret
};
gviz.tree.NodeBase.prototype.traverse = function(f, opt_this) {
  var traverse = function(node, depth) {
    !1 !== f.call(opt_this, node, depth) && goog.array.forEach(node.getChildren(), function(child) {
      traverse(child, depth + 1)
    })
  };
  traverse(this, 0)
};
gviz.tree.NodeBase.prototype.find = function(f, opt_this) {
  var nodes = [];
  this.traverse(function(node) {
    f.call(opt_this, node) && nodes.push(node)
  });
  return nodes
};
gviz.tree.NodeBase.prototype.calcAggregatedValue = function(getter, aggregator, opt_setter, opt_this) {
  for(var nodeValue = getter.call(opt_this, this), aggregatedChilds = [], childs = this.getChildren(), i = 0;i < childs.length;i++) {
    var child = childs[i], aggregatedChild = child.calcAggregatedValue(getter, aggregator, opt_setter, opt_this);
    aggregatedChilds.push(aggregatedChild)
  }
  var aggregatedValue = aggregator.call(opt_this, nodeValue, aggregatedChilds);
  opt_setter && opt_setter.call(opt_this, this, aggregatedValue);
  return aggregatedValue
};
gviz.tree.NodeBase.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
gviz.tree.NodeBase.prototype.addChild = function(child) {
  goog.asserts.assert(!child.getParent());
  child.setParent_(this);
  this.children_ = this.children_ || [];
  this.children_.push(child);
  this.registerDisposable(child)
};
// Input 140
gviz.tree.DataNodeImpl = function(name, dataTable, rowIndex) {
  gviz.tree.NodeBase.call(this, rowIndex, name);
  this.dataTable_ = dataTable
};
goog.inherits(gviz.tree.DataNodeImpl, gviz.tree.NodeBase);
gviz.tree.DataNodeImpl.NAME_COLUMN_ = 0;
gviz.tree.DataNodeImpl.prototype.setRow = function(rowIndex) {
  this.setId(rowIndex)
};
gviz.tree.DataNodeImpl.prototype.getRow = function() {
  return this.getId()
};
gviz.tree.DataNodeImpl.prototype.getDataTable = function() {
  return this.dataTable_
};
gviz.tree.DataNodeImpl.prototype.getFormattedName = function() {
  var formattedName = this.getFormattedValue(gviz.tree.DataNodeImpl.NAME_COLUMN_);
  return formattedName || this.getName()
};
gviz.tree.DataNodeImpl.prototype.getRowProperty = function(property) {
  return this.getRowRelatedData_(this.dataTable_.getRowProperty, property)
};
gviz.tree.DataNodeImpl.prototype.getValue = function(columnIndex) {
  return this.getRowRelatedData_(this.dataTable_.getValue, columnIndex)
};
gviz.tree.DataNodeImpl.prototype.getFormattedValue = function(columnIndex) {
  return this.getRowRelatedData_(this.dataTable_.getFormattedValue, columnIndex)
};
gviz.tree.DataNodeImpl.prototype.getRowRelatedData_ = function(getter, var_args) {
  var row = this.getRow();
  if(goog.isDefAndNotNull(row)) {
    var fullArgs = [row];
    goog.array.extend(fullArgs, goog.array.slice(arguments, 1));
    return getter.apply(this.dataTable_, fullArgs)
  }
  return null
};
// Input 141
gviz.tree.Tree = function() {
};
gviz.tree.Tree.prototype.getRootNodes = function() {
};
gviz.tree.Tree.prototype.getTreeCount = function() {
};
gviz.tree.Tree.prototype.isForest = function() {
};
gviz.tree.Tree.prototype.getNodeById = function() {
};
gviz.tree.Tree.prototype.getHeight = function() {
};
gviz.tree.Tree.prototype.traverse = function() {
};
gviz.tree.Tree.prototype.find = function() {
};
gviz.tree.Tree.prototype.calcAggregatedValue = function() {
};
// Input 142
gviz.tree.TreeBase = function() {
  goog.Disposable.call(this);
  this.rootNodes_ = [];
  this.nodeById_ = {}
};
goog.inherits(gviz.tree.TreeBase, goog.Disposable);
gviz.tree.TreeBase.prototype.addRootNode = function(rootNode) {
  this.rootNodes_.push(rootNode);
  this.registerDisposable(rootNode);
  this.addNode(rootNode)
};
gviz.tree.TreeBase.prototype.addNode = function(node) {
  var id = node.getId();
  goog.isDefAndNotNull(id) && (goog.asserts.assert(!goog.isDef(this.nodeById_[id])), this.nodeById_[id] = node)
};
gviz.tree.TreeBase.prototype.getRootNodes = function() {
  return this.rootNodes_
};
gviz.tree.TreeBase.prototype.getTreeCount = function() {
  return this.rootNodes_.length
};
gviz.tree.TreeBase.prototype.isForest = function() {
  return 1 < this.getTreeCount()
};
gviz.tree.TreeBase.prototype.getNodeById = function(id) {
  return this.nodeById_[id] || null
};
gviz.tree.TreeBase.prototype.getHeight = function() {
  var rootNodes = this.getRootNodes(), height$$0 = goog.array.reduce(rootNodes, function(height, rootNode) {
    return Math.max(height, rootNode.getHeight())
  }, -1);
  return height$$0
};
gviz.tree.TreeBase.prototype.traverse = function(f, opt_this) {
  for(var rootNodes = this.getRootNodes(), i = 0;i < rootNodes.length;i++) {
    var rootNode = rootNodes[i];
    rootNode.traverse(f, opt_this)
  }
};
gviz.tree.TreeBase.prototype.find = function(f, opt_this) {
  for(var nodes = [], rootNodes = this.getRootNodes(), i = 0;i < rootNodes.length;i++) {
    var rootNode = rootNodes[i];
    goog.array.extend(nodes, rootNode.find(f, opt_this))
  }
  return nodes
};
gviz.tree.TreeBase.prototype.calcAggregatedValue = function(getter, aggregator, setter, opt_this) {
  for(var rootNodes = this.getRootNodes(), i = 0;i < rootNodes.length;i++) {
    var rootNode = rootNodes[i];
    rootNode.calcAggregatedValue(getter, aggregator, setter, opt_this)
  }
};
// Input 143
gviz.tree.DataTree = function(dataTable, opt_options) {
  gviz.tree.TreeBase.call(this);
  if(2 > dataTable.getNumberOfColumns()) {
    throw Error("Data table should have at least 2 columns");
  }
  if("string" != dataTable.getColumnType(0)) {
    throw Error("Column 0 must be of type string");
  }
  if("string" != dataTable.getColumnType(1)) {
    throw Error("Column 1 must be of type string");
  }
  for(var options = this.parseOptions_(opt_options), errorOnCycle = options.errorOnCycle, errorOnDuplicateId = options.errorOnDuplicateId, forceParentExists = options.forceParentExists, nameToNode = {}, nodes = [], row = 0;row < dataTable.getNumberOfRows();row++) {
    var name = dataTable.getValue(row, gviz.tree.DataTree.NAME_COLUMN_);
    if(name) {
      var node = nameToNode[name];
      node ? goog.isDefAndNotNull(node.getRow()) || node.setRow(row) : (nameToNode[name] = node = new gviz.tree.DataNodeImpl(name, dataTable, row), nodes.push(node));
      var parentName = node.getValue(gviz.tree.DataTree.PARENT_COLUMN_);
      if(parentName) {
        var parentNode = nameToNode[parentName];
        parentNode || (nameToNode[parentName] = parentNode = new gviz.tree.DataNodeImpl(parentName, dataTable, null), nodes.push(parentNode));
        if(node.getParent()) {
          if(errorOnDuplicateId) {
            throw Error("More than one row with the same id (" + node.getName() + ").");
          }
        }else {
          if(node != parentNode && !node.contains(parentNode)) {
            parentNode.addChild(node)
          }else {
            if(errorOnCycle) {
              throw Error("Data contains a cycle: " + this.nodesToString_(goog.array.concat(parentNode, parentNode.getAncestors())) + ".");
            }
          }
        }
      }
    }
  }
  for(var i = 0;i < nodes.length;i++) {
    node = nodes[i];
    if(forceParentExists && goog.isNull(node.getRow())) {
      throw Error('Failed to find row with id "' + node.getName() + '".');
    }
    node.getParent() ? this.addNode(node) : this.addRootNode(node)
  }
};
goog.inherits(gviz.tree.DataTree, gviz.tree.TreeBase);
gviz.tree.DataTree.NAME_COLUMN_ = 0;
gviz.tree.DataTree.PARENT_COLUMN_ = 1;
gviz.tree.DataTree.prototype.nodesToString_ = function(nodes) {
  return goog.array.map(nodes, function(node) {
    return node.getName()
  }).toString()
};
gviz.tree.DataTree.prototype.parseOptions_ = function(opt_options) {
  var options = new gviz.util.LayeredObject(2);
  options.setLayer(0, {errorOnCycle:!0, errorOnDuplicateId:!0, forceParentExists:!0});
  goog.isDefAndNotNull(opt_options) && options.setLayer(1, opt_options);
  return options.compact()
};
// Input 144
gviz.tree.ProjectedTree = function(tree, nodeFactory, opt_this) {
  gviz.tree.TreeBase.call(this);
  for(var rootNodes = tree.getRootNodes(), i = 0;i < rootNodes.length;i++) {
    var rootNode = rootNodes[i], newRootNode = this.projectNode_(rootNode, nodeFactory, opt_this);
    this.addRootNode(newRootNode)
  }
};
goog.inherits(gviz.tree.ProjectedTree, gviz.tree.TreeBase);
gviz.tree.ProjectedTree.prototype.projectNode_ = function(node, nodeFactory, opt_this) {
  for(var newNode = nodeFactory.call(opt_this, node), childs = node.getChildren(), i = 0;i < childs.length;i++) {
    var child = childs[i], newChild = this.projectNode_(child, nodeFactory, opt_this);
    this.addNode(newChild);
    newNode.addChild(newChild)
  }
  return newNode
};
// Input 145
gviz.math = {};
gviz.math.expression = {};
gviz.math.expression.tokens = {};
gviz.math.expression.tokens.Symbol = {NUMBER:"number", IDENTIFIER:"identifier", EQUALS:"=", PLUS:"+", MINUS:"-", NEGATE:"--", TIMES:"*", OPEN_PAREN:"(", CLOSE_PAREN:")", SEPARATOR_COMMA:",", POWER:"^"};
// Input 146
gviz.math.expression.tokens.Token = function() {
};
// Input 147
gviz.math.expression.renderer = {};
gviz.math.expression.renderer.StringRenderer = function(opt_numberFormatter) {
  this.formatter = opt_numberFormatter || String
};
gviz.math.expression.renderer.StringRenderer.renderers = {};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.NUMBER] = function(token, renderer) {
  return renderer.formatter(token.value)
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.IDENTIFIER] = function(token) {
  return token.name
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.PLUS] = function() {
  return" + "
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.MINUS] = function() {
  return" - "
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.NEGATE] = function() {
  return"-"
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.EQUALS] = function() {
  return" = "
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.TIMES] = function() {
  return" * "
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.OPEN_PAREN] = function() {
  return"("
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.CLOSE_PAREN] = function() {
  return")"
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.SEPARATOR_COMMA] = function() {
  return", "
};
gviz.math.expression.renderer.StringRenderer.renderers[gviz.math.expression.tokens.Symbol.POWER] = function() {
  return"^"
};
gviz.math.expression.renderer.StringRenderer.prototype.render = function(tokens) {
  return goog.array.map(tokens, function(token) {
    var symbol = token.getSymbol();
    return gviz.math.expression.renderer.StringRenderer.renderers[symbol](token, this)
  }, this).join("")
};
// Input 148
gviz.math.expression.tokens.Minus = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.Minus, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.Minus.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.MINUS
};
// Input 149
gviz.math.expression.tokens.Plus = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.Plus, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.Plus.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.PLUS
};
// Input 150
gviz.math.expression.Expression = goog.nullFunction;
gviz.math.expression.Expression.prototype.simplify = function() {
  return this
};
gviz.math.expression.Expression.prototype.isNegative = function() {
  return!1
};
gviz.math.expression.Expression.prototype.isNumber = function() {
  return!1
};
// Input 151
gviz.math.expression.NaryOperator = function(components) {
  gviz.math.expression.Expression.call(this);
  this.components = components
};
goog.inherits(gviz.math.expression.NaryOperator, gviz.math.expression.Expression);
gviz.math.expression.NaryOperator.prototype.join = function(token) {
  var joined = [];
  goog.array.forEach(this.components, function(component, index) {
    0 < index && joined.push(token);
    goog.array.extend(joined, component.compose())
  });
  return joined
};
gviz.math.expression.NaryOperator.prototype.simplify = function() {
  if(1 === this.components.length) {
    return this.components[0]
  }
  var components = [];
  goog.array.forEach(this.components, function(component) {
    components.push(component.simplify())
  });
  this.components = components;
  return this
};
gviz.math.expression.NaryOperator.prototype.getComponent = function(opt_index) {
  var index = opt_index || 0;
  return this.components[index]
};
// Input 152
gviz.math.expression.Add = function(components) {
  gviz.math.expression.NaryOperator.call(this, components)
};
goog.inherits(gviz.math.expression.Add, gviz.math.expression.NaryOperator);
gviz.math.expression.Add.prototype.compose = function() {
  var composed = [];
  goog.array.forEach(this.components, function(component) {
    var isNegative = component.isNegative();
    0 < composed.length && isNegative ? (composed.push(new gviz.math.expression.tokens.Minus), component = (new gviz.math.expression.Neg(component)).simplify()) : 0 < composed.length && composed.push(new gviz.math.expression.tokens.Plus);
    composed = goog.array.concat(composed, component.compose())
  });
  return composed
};
// Input 153
gviz.math.expression.tokens.CloseParen = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.CloseParen, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.CloseParen.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.CLOSE_PAREN
};
// Input 154
gviz.math.expression.tokens.Identifier = function(name) {
  gviz.math.expression.tokens.Token.call(this);
  this.name = name
};
goog.inherits(gviz.math.expression.tokens.Identifier, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.Identifier.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.IDENTIFIER
};
// Input 155
gviz.math.expression.tokens.OpenParen = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.OpenParen, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.OpenParen.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.OPEN_PAREN
};
// Input 156
gviz.math.expression.tokens.SeparatorComma = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.SeparatorComma, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.SeparatorComma.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.SEPARATOR_COMMA
};
// Input 157
gviz.math.expression.Call = function(name, args) {
  gviz.math.expression.NaryOperator.call(this, args);
  this.name = name
};
goog.inherits(gviz.math.expression.Call, gviz.math.expression.NaryOperator);
gviz.math.expression.Call.prototype.simplify = function() {
  return this
};
gviz.math.expression.Call.prototype.compose = function() {
  var composed = [new gviz.math.expression.tokens.Identifier(this.name), new gviz.math.expression.tokens.OpenParen];
  goog.array.extend(composed, this.join(new gviz.math.expression.tokens.SeparatorComma), [new gviz.math.expression.tokens.CloseParen]);
  return composed
};
// Input 158
gviz.math.expression.tokens.Equals = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.Equals, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.Equals.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.EQUALS
};
// Input 159
gviz.math.expression.Eq = function(components) {
  gviz.math.expression.NaryOperator.call(this, components)
};
goog.inherits(gviz.math.expression.Eq, gviz.math.expression.NaryOperator);
gviz.math.expression.Eq.prototype.compose = function() {
  return this.join(new gviz.math.expression.tokens.Equals)
};
// Input 160
gviz.math.expression.tokens.Times = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.Times, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.Times.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.TIMES
};
// Input 161
gviz.math.expression.tokens.Negate = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.Negate, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.Negate.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.NEGATE
};
// Input 162
gviz.math.expression.UnaryOperator = function(component) {
  gviz.math.expression.NaryOperator.call(this, [component])
};
goog.inherits(gviz.math.expression.UnaryOperator, gviz.math.expression.NaryOperator);
// Input 163
gviz.math.expression.Neg = function(component) {
  gviz.math.expression.UnaryOperator.call(this, component)
};
goog.inherits(gviz.math.expression.Neg, gviz.math.expression.UnaryOperator);
gviz.math.expression.Neg.prototype.simplify = function() {
  var r = this.getComponent().simplify();
  if(r.isNegative()) {
    if(r instanceof gviz.math.expression.Neg) {
      return r.getComponent()
    }
    if(r instanceof gviz.math.expression.Number) {
      return new gviz.math.expression.Number(-r.getValue())
    }
    throw Error("Unknown type of negative.");
  }
  return new gviz.math.expression.Neg(r)
};
gviz.math.expression.Neg.prototype.compose = function() {
  return goog.array.concat([new gviz.math.expression.tokens.Negate], this.getComponent().compose())
};
gviz.math.expression.Neg.prototype.isNegative = function() {
  var simplified = this.simplify();
  return simplified instanceof gviz.math.expression.Neg
};
// Input 164
gviz.math.expression.tokens.Number = function(number) {
  goog.asserts.assert(goog.isNumber(number));
  this.value = number
};
goog.inherits(gviz.math.expression.tokens.Number, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.Number.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.NUMBER
};
// Input 165
gviz.math.expression.Number = function(value) {
  gviz.math.expression.Expression.call(this);
  goog.asserts.assert(goog.isNumber(value));
  this.value = value
};
goog.inherits(gviz.math.expression.Number, gviz.math.expression.Expression);
gviz.math.expression.Number.prototype.compose = function() {
  return[new gviz.math.expression.tokens.Number(this.value)]
};
gviz.math.expression.Number.prototype.isNegative = function() {
  return 0 > this.value
};
gviz.math.expression.Number.prototype.getValue = function() {
  return this.value
};
gviz.math.expression.Number.prototype.isNumber = function() {
  return!0
};
// Input 166
gviz.math.expression.Mul = function(components, opt_collapseTerms) {
  gviz.math.expression.NaryOperator.call(this, components);
  this.collapseTerms_ = goog.isDefAndNotNull(opt_collapseTerms) ? opt_collapseTerms : !1
};
goog.inherits(gviz.math.expression.Mul, gviz.math.expression.NaryOperator);
gviz.math.expression.Mul.prototype.simplify = function() {
  gviz.math.expression.Mul.superClass_.simplify.call(this);
  var negCount = 0, newcomponents = [], constant = 1;
  goog.array.forEach(this.components, function(component) {
    component.isNegative() && (component = (new gviz.math.expression.Neg(component)).simplify(), negCount++);
    component.isNumber() && (constant *= component.getValue(), component = null);
    component && newcomponents.push(component)
  });
  1 !== constant && goog.array.splice(newcomponents, 0, 0, new gviz.math.expression.Number(constant));
  var r = new gviz.math.expression.Mul(newcomponents, this.collapseTerms_);
  negCount % 2 && (r = new gviz.math.expression.Neg(r));
  return r
};
gviz.math.expression.Mul.prototype.compose = function() {
  return this.collapseTerms_ ? goog.array.concat.apply(null, goog.array.map(this.components, function(component) {
    return component.compose()
  })) : this.join(new gviz.math.expression.tokens.Times)
};
gviz.math.expression.Mul.prototype.isNegative = function() {
  var negCount = 0;
  goog.array.forEach(this.components, function(component) {
    component.isNegative() && negCount++
  });
  return!!(negCount % 2)
};
// Input 167
gviz.canviz.trendlines = {};
gviz.canviz.trendlines.DataBuilder = function(maxgap, yFunction) {
  this.data_ = [];
  this.maxgap_ = maxgap;
  this.yFunction_ = yFunction
};
gviz.canviz.trendlines.DataBuilder.prototype.addData_ = function(x) {
  this.data_.push([x, this.yFunction_(x)])
};
gviz.canviz.trendlines.DataBuilder.prototype.addData = function(x) {
  if(0 < this.data_.length) {
    var lastData = this.data_[this.data_.length - 1][0], gap = x - lastData;
    if(gap > this.maxgap_) {
      var insertCount = Math.round(gap / this.maxgap_);
      if(1 < insertCount) {
        for(var i = 1;i < insertCount;i++) {
          this.addData_((x - lastData) * (i / insertCount) + lastData)
        }
      }
    }
  }
  this.addData_(x)
};
gviz.canviz.trendlines.DataBuilder.prototype.build = function() {
  return this.data_
};
// Input 168
gviz.canviz.trendlines.LinearDataBuilder = function(maxgap, slope, offset) {
  gviz.canviz.trendlines.DataBuilder.call(this, maxgap, function(x) {
    return offset + slope * x
  })
};
goog.inherits(gviz.canviz.trendlines.LinearDataBuilder, gviz.canviz.trendlines.DataBuilder);
// Input 169
gviz.canviz.trendlines.linearRegression = function(size, domainGetter, dataGetter, options) {
  var range = options.range, sumx = 0, sumy = 0, sumxy = 0, sumx2 = 0, count = 0, data = [], gapSum = 0, uniqueXs = {}, ySum = 0, originalDataMap = [], i;
  for(i = 0;i < size;i++) {
    var x = domainGetter(i), y = dataGetter(i);
    goog.isDefAndNotNull(x) && goog.isDefAndNotNull(y) && (x in uniqueXs || (uniqueXs[x] = !0, 0 < data.length && (gapSum += x - data[data.length - 1]), originalDataMap.push({x:x, y:y}), ySum += y, data.push(x)), sumx2 += x * x, sumx += x, sumy += y, sumxy += x * y, count++)
  }
  var yMean = ySum / data.length, slopeDivisor = sumx2 - sumx * sumx / count, averageGap = options.maxGap || range && (range.max - range.min) / 100 || void 0, slope = (sumxy - sumx * sumy / count) / slopeDivisor, offset = sumy / count - slope * (sumx / count);
  if(isNaN(slope) || isNaN(offset)) {
    return null
  }
  goog.isDefAndNotNull(averageGap) && !isNaN(averageGap) && goog.math.isFiniteNumber(averageGap) && (!goog.isDefAndNotNull(range) || goog.isDefAndNotNull(range.min) && goog.isDefAndNotNull(range.max)) || (averageGap = gapSum / (data.length - 1));
  goog.array.sort(data);
  var dataBuilder = new gviz.canviz.trendlines.LinearDataBuilder(averageGap, slope, offset);
  goog.isDefAndNotNull(range) && goog.isDefAndNotNull(range.min) && range.min < data[0] && -Infinity < range.min && dataBuilder.addData(range.min);
  var ssRes = 0, ssTot = 0;
  for(i = 0;i < data.length;i++) {
    dataBuilder.addData(data[i]), ssRes += Math.pow(originalDataMap[i].y - (slope * data[i] + offset), 2), ssTot += Math.pow(originalDataMap[i].y - yMean, 2)
  }
  var r2 = 1 - ssRes / ssTot;
  goog.isDefAndNotNull(range) && goog.isDefAndNotNull(range.max) && range.max > data[data.length - 1] && Infinity > range.max && dataBuilder.addData(range.max);
  return{data:dataBuilder.build(), r2:r2, equation:{offset:offset, slope:slope}}
};
// Input 170
gviz.canviz.trendlines.exponentialTrendline = function(dataSize, domainGetter, dataGetter, options) {
  for(var minimum = Infinity, i$$0 = 0;i$$0 < dataSize;i$$0++) {
    var x = domainGetter(i$$0), y = dataGetter(i$$0);
    null != y && y < minimum && (minimum = y)
  }
  var minimum = 0 < minimum ? null : minimum - 1, trendline = gviz.canviz.trendlines.linearRegression(dataSize, domainGetter, function(i) {
    var value = dataGetter(i);
    if(null == value) {
      return null
    }
    null != minimum && (value -= minimum);
    return Math.log(value)
  }, options);
  if(goog.isNull(trendline)) {
    return null
  }
  for(var outdata = [], i$$0 = 0;i$$0 < trendline.data.length;i$$0++) {
    x = trendline.data[i$$0][0], y = Math.exp(trendline.data[i$$0][1]), null != minimum && (y += minimum), outdata.push([x, y])
  }
  var equation = new gviz.math.expression.Call("exp", [new gviz.math.expression.Add([new gviz.math.expression.Mul([new gviz.math.expression.Number(trendline.equation.slope), new gviz.math.expression.Variable("x")]), new gviz.math.expression.Number(trendline.equation.offset)])]);
  goog.isNull(minimum) || (equation = new gviz.math.expression.Add([equation, new gviz.math.expression.Number(minimum)]));
  equation = (new gviz.math.expression.Eq([new gviz.math.expression.Variable("y"), equation])).simplify();
  return{data:outdata, r2:trendline.r2, equation:equation}
};
// Input 171
gviz.canviz.axis = {};
gviz.canviz.axis.Pow10Math = {};
gviz.canviz.axis.Pow10Math.exactScientific = function(significand, exponent) {
  return 0 > exponent ? significand / gviz.canviz.axis.Pow10Math.powerOf(-exponent) : significand * gviz.canviz.axis.Pow10Math.powerOf(exponent)
};
gviz.canviz.axis.Pow10Math.powerOf = function(value) {
  return Math.pow(10, value)
};
gviz.canviz.axis.Pow10Math.exponentOf = function(value) {
  var log10e = 0.4342944819032518;
  return Math.log(value) * log10e
};
gviz.canviz.axis.Pow10Math.isPowerOf10 = function(value) {
  var x = Math.abs(gviz.canviz.axis.Pow10Math.exponentOf(value));
  return 1E-7 > Math.abs(x - Math.round(x))
};
gviz.canviz.axis.Pow10Math.floor = function(value) {
  return gviz.canviz.axis.Pow10Math.exactScientific(1, gviz.canviz.axis.Pow10Math.floorExponent(value))
};
gviz.canviz.axis.Pow10Math.ceil = function(value) {
  return gviz.canviz.axis.Pow10Math.exactScientific(1, gviz.canviz.axis.Pow10Math.ceilExponent(value))
};
gviz.canviz.axis.Pow10Math.round = function(value) {
  var ceiled = gviz.canviz.axis.Pow10Math.exactScientific(1, gviz.canviz.axis.Pow10Math.ceilExponent(value)), floored = ceiled / 10;
  return value - floored < ceiled - value ? floored : ceiled
};
gviz.canviz.axis.Pow10Math.floorExponent = function(value) {
  return Math.floor(gviz.canviz.axis.Pow10Math.exponentOf(value))
};
gviz.canviz.axis.Pow10Math.ceilExponent = function(value) {
  return Math.ceil(gviz.canviz.axis.Pow10Math.exponentOf(value))
};
gviz.canviz.axis.Pow10Math.roundExponent = function(value) {
  return Math.round(gviz.canviz.axis.Pow10Math.exponentOf(value))
};
// Input 172
gviz.NumberScaleUtil = {};
gviz.NumberScaleUtil.getIdentityScale = function() {
  return{transform:function(v) {
    return v
  }, inverse:function(v) {
    return v
  }}
};
gviz.NumberScaleUtil.getPiecewiseLinearScale_ = function(gaps) {
  var wires = gviz.NumberScaleUtil.gapsToWires_(gaps);
  return{transform:function(v) {
    var wire = gviz.NumberScaleUtil.findWire_(wires, v, function(wire) {
      return wire.source
    });
    if(goog.isNull(wire)) {
      return v
    }
    var wireDiff = v - wire.source;
    return wire.target + wireDiff * wire.gapRatio
  }, inverse:function(v) {
    var wire$$0 = gviz.NumberScaleUtil.findWire_(wires, v, function(wire) {
      return wire.target
    });
    if(goog.isNull(wire$$0)) {
      return v
    }
    if(0 == wire$$0.gapRatio) {
      return wire$$0.source
    }
    var wireDiff = v - wire$$0.target;
    return wire$$0.source + wireDiff / wire$$0.gapRatio
  }}
};
gviz.NumberScaleUtil.gapsToWires_ = function(gaps) {
  for(var wires = [], offset = 0, prevEnd = null, i = 0;i < gaps.length;i++) {
    var gap = gaps[i], gapSize = gap.gapSize, start = gap.start, end = gap.end;
    goog.asserts.assert(0 <= gapSize);
    goog.asserts.assert(start < end);
    goog.asserts.assert(goog.isNull(prevEnd) || prevEnd <= start);
    var gapRatio = gapSize / (end - start);
    if(goog.isNull(prevEnd) || prevEnd != start) {
      var startWire = {source:start, target:start + offset, gapRatio:gapRatio};
      wires.push(startWire)
    }else {
      startWire = wires[wires.length - 1], startWire.gapRatio = gapRatio
    }
    var endWire = {source:end, target:start + offset + gapSize, gapRatio:1};
    wires.push(endWire);
    offset += gapSize - (end - start);
    prevEnd = end
  }
  return wires
};
gviz.NumberScaleUtil.findWire_ = function(wires, number, wireNumberGetter) {
  var pseudoWire = {source:number, target:number}, index = goog.array.binarySearch(wires, pseudoWire, function(aw, bw) {
    var a = wireNumberGetter(aw), b = wireNumberGetter(bw);
    return a < b ? -1 : a > b ? 1 : 0
  });
  0 > index && (index = -index - 2);
  return 0 > index ? null : wires[index]
};
gviz.NumberScaleUtil.getLogScale = function() {
  return{transform:function(v) {
    return Math.log(v) / Math.LN10
  }, inverse:function(v) {
    return Math.pow(10, v)
  }}
};
gviz.NumberScaleUtil.getMirroredLogScale = function(zeroThreshold) {
  goog.asserts.assert(0 < zeroThreshold);
  return{transform:function(v) {
    return v > zeroThreshold ? Math.log(v / zeroThreshold) / Math.LN10 : v < -zeroThreshold ? -Math.log(-v / zeroThreshold) / Math.LN10 : 0
  }, inverse:function(v) {
    return 0 < v ? Math.pow(10, v) * zeroThreshold : 0 > v ? -Math.pow(10, -v) * zeroThreshold : 0
  }}
};
gviz.NumberScaleUtil.SCALE_TYPE = {PIECEWISE_LINEAR:"piecewiseLinear", LOG:"log", MIRROR_LOG:"mirrorLog"};
gviz.NumberScaleUtil.getScaleType = function(options, logOptionsPath, scaleOptionsPath) {
  var scaleType = options.inferOptionalEnumValue(scaleOptionsPath, gviz.NumberScaleUtil.SCALE_TYPE);
  return scaleType ? scaleType : options.inferBooleanValue(logOptionsPath) ? gviz.NumberScaleUtil.SCALE_TYPE.LOG : gviz.NumberScaleUtil.SCALE_TYPE.PIECEWISE_LINEAR
};
gviz.NumberScaleUtil.getScale = function(scaleType, valueToZeroDistance, gaps) {
  switch(scaleType) {
    case gviz.NumberScaleUtil.SCALE_TYPE.PIECEWISE_LINEAR:
      return goog.array.isEmpty(gaps) ? gviz.NumberScaleUtil.getIdentityScale() : gviz.NumberScaleUtil.getPiecewiseLinearScale_(gaps);
    case gviz.NumberScaleUtil.SCALE_TYPE.LOG:
      return gviz.NumberScaleUtil.getLogScale();
    case gviz.NumberScaleUtil.SCALE_TYPE.MIRROR_LOG:
      return gviz.NumberScaleUtil.getMirroredLogScale(valueToZeroDistance);
    default:
      return gviz.NumberScaleUtil.getIdentityScale()
  }
};
gviz.NumberScaleUtil.LOG_SCALE_OPTIONS_KEY = "logScale";
gviz.NumberScaleUtil.SCALE_TYPE_OPTIONS_KEY = "scaleType";
// Input 173
gviz.canviz.util = {};
gviz.canviz.util.STRING_ZEROES = "0000000000000000";
gviz.canviz.util.PRECISION_THRESHOLD = 1E-7;
gviz.canviz.util.ICU_PATTERN_DECIMAL_SEPARATOR = ".";
gviz.canviz.util.removeFirstElement = function(array) {
  return goog.array.slice(array, 1)
};
gviz.canviz.util.removeLastElement = function(array) {
  return goog.array.slice(array, 0, array.length - 1)
};
gviz.canviz.util.absNumericDiff = function(value1, value2) {
  return Math.abs(value1 - value2)
};
gviz.canviz.util.arraysAlmostEqual = function(a1, a2, tolerance, opt_diffFunc) {
  if(!a1 && !a2) {
    return!0
  }
  if(!a1 || !a2 || a1.length != a2.length) {
    return!1
  }
  var diffFunc = opt_diffFunc || gviz.canviz.util.absNumericDiff;
  return goog.array.every(a1, function(obj, i) {
    return diffFunc(a1[i], a2[i]) <= tolerance
  })
};
gviz.canviz.util.objectsAlmostEqual = function(obj1, obj2, tolerance, opt_diffFunc) {
  if(!obj1 || !obj2) {
    return!0
  }
  var diffFunc = opt_diffFunc || gviz.canviz.util.absNumericDiff;
  return goog.object.every(obj1, function(value1, key) {
    var value2 = obj2[key];
    return!goog.isDef(obj2[key]) || diffFunc(value1, value2) <= tolerance
  })
};
gviz.canviz.util.getKeyEnsureDefault = function(object, key, defaultValue) {
  goog.isDefAndNotNull(object[key]) || (object[key] = defaultValue);
  return object[key]
};
gviz.canviz.util.createLogger = function(className, opt_divName) {
  return gviz.util.VisCommon.createLogger(className, opt_divName)
};
gviz.canviz.util.functionTangentCalculator_ = function(vectorFromPrevious, vectorToNext, smoothingFactor) {
  if(0 == vectorFromPrevious.x || 0 == vectorToNext.x) {
    var dy;
    dy = 0 == vectorFromPrevious.x && 0 == vectorToNext.x ? 0 : 0 == vectorFromPrevious.x ? vectorFromPrevious.y : vectorToNext.y;
    return{x:0, y:dy * smoothingFactor / 6}
  }
  var dx = smoothingFactor / 3 * Math.min(Math.abs(vectorFromPrevious.x), Math.abs(vectorToNext.x)), slope = (vectorFromPrevious.y / vectorFromPrevious.x + vectorToNext.y / vectorToNext.x) / 2;
  return 0 < vectorFromPrevious.x ? {x:dx, y:dx * slope} : {x:-dx, y:-dx * slope}
};
gviz.canviz.util.phaseTangentCalculator_ = function(vectorFromPrevious, vectorToNext, smoothingFactor) {
  var magnitudeFromPrevious = vectorFromPrevious.magnitude(), magnitudeToNext = vectorToNext.magnitude();
  if(0 == magnitudeFromPrevious || 0 == magnitudeToNext) {
    return new goog.math.Vec2(0, 0)
  }
  var srqtRatio = Math.sqrt(magnitudeFromPrevious / magnitudeToNext), vectorSum = goog.math.Vec2.sum(vectorFromPrevious.clone().scale(1 / srqtRatio), vectorToNext.clone().scale(srqtRatio));
  vectorSum.scale(smoothingFactor / 6);
  return vectorSum
};
gviz.canviz.util.calculateControlPoints = function(points, smoothingFactor, isFunction, isClosed, interpolateNulls) {
  for(var tangentCalculator = isFunction ? gviz.canviz.util.functionTangentCalculator_ : gviz.canviz.util.phaseTangentCalculator_, result = [], i = 0;i < points.length;++i) {
    var nextIndex, previousIndex;
    interpolateNulls ? (nextIndex = gviz.canviz.util.nextNonNull(points, i, 1, isClosed), previousIndex = gviz.canviz.util.nextNonNull(points, i, -1, isClosed)) : (nextIndex = isClosed ? (i + 1) % points.length : i + 1, previousIndex = isClosed ? (points.length + i - 1) % points.length : i - 1);
    if(goog.isDefAndNotNull(nextIndex) && goog.isDefAndNotNull(previousIndex) && goog.isDefAndNotNull(points[i]) && goog.isDefAndNotNull(points[previousIndex]) && goog.isDefAndNotNull(points[nextIndex])) {
      var tangent = tangentCalculator(goog.math.Vec2.difference(points[i], points[previousIndex]), goog.math.Vec2.difference(points[nextIndex], points[i]), smoothingFactor);
      result.push([goog.math.Vec2.difference(points[i], tangent), goog.math.Vec2.sum(points[i], tangent)])
    }else {
      goog.isDefAndNotNull(points[i]) ? result.push([points[i].clone(), points[i].clone()]) : result.push(null)
    }
  }
  return result
};
gviz.canviz.util.nextNonNull = function(array, index, direction, isCircular) {
  var result = index + direction;
  for(isCircular && (result = (result + array.length) % array.length);result != index && 0 <= result && result < array.length;) {
    if(goog.isDefAndNotNull(array[result])) {
      return result
    }
    result += direction;
    isCircular && (result = (result + array.length) % array.length)
  }
  return null
};
gviz.canviz.util.closestValueTo = function(number, table, opt_index) {
  opt_index = opt_index || 0;
  var i = goog.array.findIndex(table, function(record) {
    return record[opt_index] > number
  });
  return-1 == i ? table.length - 1 : 0 == i ? 0 : table[i][opt_index] - number < number - table[i - 1][opt_index] ? i : i - 1
};
gviz.canviz.util.extrapolatedClosestValueTo = function(target, table, opt_numOfRepeatingSubIntervals, opt_index) {
  opt_index = opt_index || 0;
  var subIntervalsPerInterval = opt_numOfRepeatingSubIntervals || 0;
  if(0 < table.length && target <= goog.array.peek(table)) {
    var closest = gviz.canviz.util.closestValueTo(target, table, opt_index);
    return[closest, table[closest][opt_index]]
  }
  var firstPariticipatingIndex = table.length - 1 - subIntervalsPerInterval, highestValueInTable = goog.array.peek(table)[opt_index], lowestValueInRepeatingInterval = table[firstPariticipatingIndex][opt_index], totalRepeatingInterval = highestValueInTable - lowestValueInRepeatingInterval, numberOfIntervalsToExtend = Math.floor((target - highestValueInTable) / totalRepeatingInterval), actualResidue = target - highestValueInTable - numberOfIntervalsToExtend * totalRepeatingInterval, possibleResidueTable = 
  goog.array.map(goog.array.slice(table, firstPariticipatingIndex), function(value) {
    return[value[opt_index] - lowestValueInRepeatingInterval]
  }), closestResidueIndex = gviz.canviz.util.closestValueTo(actualResidue, possibleResidueTable, 0), indexInExtrapoledTableOfRoundedTarget = table.length - 1 + numberOfIntervalsToExtend * subIntervalsPerInterval + closestResidueIndex, roundedTarget = highestValueInTable + numberOfIntervalsToExtend * totalRepeatingInterval + possibleResidueTable[closestResidueIndex][0];
  return[indexInExtrapoledTableOfRoundedTarget, roundedTarget]
};
gviz.canviz.util.rangeMap = function(length, f, opt_obj) {
  for(var res = [], i = 0;i < length;i++) {
    res[i] = f.call(opt_obj, i)
  }
  return res
};
gviz.canviz.util.getPieChartColorMapping = function(numberOfColors, numberOfSlices) {
  if(numberOfColors >= numberOfSlices) {
    return function(sliceIndex) {
      return sliceIndex
    }
  }
  if(2 >= numberOfColors) {
    return function(sliceIndex) {
      return sliceIndex % numberOfColors
    }
  }
  var residue = numberOfSlices % numberOfColors, residueSequenceOffset = Math.floor((numberOfColors - residue) / 2), firstSliceOfResidue = numberOfSlices - residue;
  return function(sliceIndex) {
    return sliceIndex < firstSliceOfResidue ? sliceIndex % numberOfColors : (sliceIndex + residueSequenceOffset) % numberOfColors
  }
};
gviz.canviz.util.getMaxOrMin_ = function(object) {
  return goog.isDefAndNotNull(object.max) ? object.max : object.min
};
gviz.canviz.util.fillFirstNBuckets = function(buckets, total, opt_dropPenalty, opt_penaltyIndex) {
  goog.isDef(opt_dropPenalty) || (opt_dropPenalty = 0);
  goog.isDef(opt_penaltyIndex) || (opt_penaltyIndex = buckets.length);
  for(var penaltyTotal = total - opt_dropPenalty, idx = 0, resWithPenalty = 0 <= penaltyTotal ? 0 : null, sum = 0, sumWithPenalty = 0, last = null, lastWithPenalty = null;idx < buckets.length;) {
    var bucketMin = buckets[idx].min;
    goog.asserts.assert(0 <= bucketMin, "bucket.min size must be a non-negative number");
    var bucketMax = gviz.canviz.util.getMaxOrMin_(buckets[idx]);
    goog.asserts.assert(bucketMax >= bucketMin, "bucket.max size must be larger than or equal to bucket.min");
    var diff = bucketMax - bucketMin, sum = sum + bucketMin;
    if(sum <= penaltyTotal) {
      var resWithPenalty = idx + 1, cappedDiff = Math.min(penaltyTotal - sum, diff), sumWithPenalty = sum + cappedDiff, lastWithPenalty = bucketMin + cappedDiff
    }
    if(sum > total) {
      return idx >= opt_penaltyIndex ? {n:idx, last:last, remainder:total - (sum - bucketMin)} : goog.isNull(resWithPenalty) ? null : {n:resWithPenalty, last:lastWithPenalty, remainder:penaltyTotal - sumWithPenalty}
    }
    cappedDiff = Math.min(total - sum, diff);
    sum += cappedDiff;
    last = bucketMin + cappedDiff;
    idx++
  }
  return{n:idx, last:last, remainder:total - sum}
};
gviz.canviz.util.fillCommunicatingVessels = function(buckets, total, opt_getSize) {
  var getSize = opt_getSize || goog.functions.identity, sizes = goog.array.map(buckets, getSize);
  goog.array.sort(sizes);
  for(var waterLevel = 0, i = 0;i < sizes.length;i++) {
    var step = sizes[i] - waterLevel, numOfItemsForThisStep = sizes.length - i, totalSizeForStep = step * numOfItemsForThisStep;
    if(totalSizeForStep <= total) {
      waterLevel = sizes[i], total -= totalSizeForStep
    }else {
      waterLevel += total / numOfItemsForThisStep;
      total = 0;
      break
    }
  }
  return{waterLevel:waterLevel, remainder:total}
};
gviz.canviz.util.distributeRealEstate = function(items, total, opt_dropPenalty, opt_penaltyIndex) {
  var fillFirstNBucketsResult = gviz.canviz.util.fillFirstNBuckets(items, total, opt_dropPenalty, opt_penaltyIndex);
  if(!fillFirstNBucketsResult) {
    return null
  }
  var fitItemsCount = fillFirstNBucketsResult.n, totalMargin = fillFirstNBucketsResult.remainder, fitItems = goog.array.slice(items, 0, fitItemsCount), largestLengthOfExtraArray = goog.array.reduce(fitItems, function(res, item) {
    return Math.max(res, item.extra.length)
  }, 0), result = goog.array.map(fitItems, gviz.canviz.util.getMaxOrMin_);
  0 < result.length && (result[result.length - 1] = fillFirstNBucketsResult.last);
  for(var i = 0;i < largestLengthOfExtraArray;i++) {
    for(var getIthExtra = function(item) {
      return item.extra[i] || 0
    }, fillCommunicatingVesselsResult = gviz.canviz.util.fillCommunicatingVessels(fitItems, totalMargin, getIthExtra), totalMargin = fillCommunicatingVesselsResult.remainder, j = 0;j < result.length;j++) {
      result[j] += Math.min(fillCommunicatingVesselsResult.waterLevel, items[j].extra[i] || 0)
    }
    if(0 == totalMargin) {
      break
    }
  }
  return result
};
gviz.canviz.util.distributeRealEstateWithKeys = function(items, total, opt_dropPenalty, opt_penaltyIndex) {
  var tempResult = gviz.canviz.util.distributeRealEstate(items, total, opt_dropPenalty, opt_penaltyIndex), result = {};
  goog.array.forEach(items, function(item, i) {
    var key = item.key;
    goog.isDefAndNotNull(result[key]) || (result[key] = []);
    i < tempResult.length && result[key].push(tempResult[i])
  });
  return result
};
gviz.canviz.util.arrayMultiSlice = function(arr, var_args) {
  var sliceArgs = goog.array.slice(arguments, 1);
  goog.asserts.assert(0 == sliceArgs.length % 2);
  for(var result = [], i = 0;i < sliceArgs.length;i += 2) {
    var beginIdx = Math.min(sliceArgs[i], arr.length), endIdx = Math.min(sliceArgs[i + 1], arr.length), slice = goog.array.slice(arr, beginIdx, endIdx);
    goog.array.extend(result, slice)
  }
  return result
};
gviz.canviz.util.countRequiredDecimalPrecision = function(number) {
  if(0 == number) {
    return 0
  }
  for(var x = Math.abs(number), i = 0;16 > i;++i) {
    if(Math.abs(x - Math.round(x)) < x * gviz.canviz.util.PRECISION_THRESHOLD) {
      return i
    }
    x *= 10
  }
  return 16
};
gviz.canviz.util.getExponent_ = function(value) {
  return Math.floor(Math.log(value) / gviz.canviz.Constants.LOG_10)
};
gviz.canviz.util.roundToNumSignificantDigits = function(numSignificantDigits, value) {
  if(0 == value) {
    return value
  }
  goog.asserts.assert(0 < numSignificantDigits, "numSignificantDigits must be > 0");
  goog.asserts.assert(isFinite(numSignificantDigits), "numSignificantDigits must be > 0");
  var valueExponent = gviz.canviz.util.getExponent_(Math.abs(value)) + 1;
  if(valueExponent > numSignificantDigits) {
    var normalizer = Math.pow(10, valueExponent - numSignificantDigits);
    return Math.round(value / normalizer) * normalizer
  }
  normalizer = Math.pow(10, numSignificantDigits - valueExponent);
  return Math.round(value * normalizer) / normalizer
};
gviz.canviz.util.getNumDecimalsPattern = function(numDecimals) {
  var decimalPattern = google.visualization.NumberFormat.DECIMAL_PATTERN;
  if(0 >= numDecimals) {
    return decimalPattern.substr(0, decimalPattern.lastIndexOf(gviz.canviz.util.ICU_PATTERN_DECIMAL_SEPARATOR))
  }
  for(var decimalPattern = decimalPattern.substr(0, decimalPattern.lastIndexOf(gviz.canviz.util.ICU_PATTERN_DECIMAL_SEPARATOR) + 1), i = 0;i < numDecimals;i++) {
    decimalPattern += "#"
  }
  return decimalPattern
};
gviz.canviz.util.getNumDecimalsFormatter = function(numDecimals) {
  return new google.visualization.NumberFormat({pattern:gviz.canviz.util.getNumDecimalsPattern(numDecimals)})
};
gviz.canviz.util.concatSuffix = function(rootPath, property) {
  return goog.isString(rootPath) ? [rootPath + "." + property] : goog.array.map(rootPath, function(singleRootPath) {
    return singleRootPath + "." + property
  })
};
gviz.canviz.util.getArray2dValue_ = function(array2d, i1, i2) {
  return 0 > i1 || 0 > i2 ? null : array2d[i1][i2]
};
gviz.canviz.util.calcEditDistanceStep_ = function(array1, array2, array2d, i1, i2, equals) {
  var results = [], lower1 = gviz.canviz.util.getArray2dValue_(array2d, i1 - 1, i2);
  lower1 && results.push({pathLink:lower1, score:lower1.score + 1, key1:i1 - 1, value1:null, key2:null, value2:null});
  var lower2 = gviz.canviz.util.getArray2dValue_(array2d, i1, i2 - 1);
  lower2 && results.push({pathLink:lower2, score:lower2.score + 1, key1:null, value1:null, key2:i2 - 1, value2:null});
  var lower12 = gviz.canviz.util.getArray2dValue_(array2d, i1 - 1, i2 - 1);
  lower12 && equals(array1[i1 - 1], array2[i2 - 1]) && results.push({pathLink:lower12, score:lower12.score, key1:i1 - 1, value1:i2 - 1, key2:i2 - 1, value2:i1 - 1});
  goog.array.sort(results, function(r1, r2) {
    return r1.score - r2.score
  });
  return 0 < results.length ? results[0] : {pathLink:null, score:0, key1:null, value1:null, key2:null, value2:null}
};
gviz.canviz.util.calcEditDistance = function(array1, array2, opt_equals) {
  for(var equals = opt_equals || function(v1, v2) {
    return v1 == v2
  }, array2d = [], i1 = 0;i1 <= array1.length;i1++) {
    array2d[i1] = array2d[i1] || [];
    for(var i2 = 0;i2 <= array2.length;i2++) {
      array2d[i1][i2] = gviz.canviz.util.calcEditDistanceStep_(array1, array2, array2d, i1, i2, equals)
    }
  }
  var map1 = {}, map2 = {}, pathElement = array2d[array1.length][array2.length];
  goog.asserts.assert(pathElement);
  for(var score = pathElement.score;pathElement;) {
    goog.isDefAndNotNull(pathElement.key1) && (map1[pathElement.key1] = pathElement.value1), goog.isDefAndNotNull(pathElement.key2) && (map2[pathElement.key2] = pathElement.value2), pathElement = pathElement.pathLink
  }
  return{score:score, map1:map1, map2:map2}
};
gviz.canviz.util.findClosestValues = function(srcArray, dstArray, opt_getValue) {
  if(!srcArray || !dstArray) {
    return null
  }
  var result = {};
  if(0 == srcArray.length || 0 == dstArray.length) {
    return result
  }
  for(var getValue = opt_getValue || goog.functions.identity, dstIdx = 0, srcIdx = 0;srcIdx < srcArray.length;srcIdx++) {
    var currentMinDistance = null, srcValue = getValue(srcArray[srcIdx]);
    for(goog.asserts.assert(0 == srcIdx || srcValue >= getValue(srcArray[srcIdx - 1]));dstIdx < dstArray.length;) {
      var dstValue = getValue(dstArray[dstIdx]);
      goog.asserts.assert(0 == dstIdx || dstValue >= getValue(dstArray[dstIdx - 1]));
      var distance = Math.abs(srcValue - dstValue);
      if(!goog.isDefAndNotNull(currentMinDistance) || distance < currentMinDistance) {
        currentMinDistance = distance, result[srcIdx] = dstIdx, dstIdx++
      }else {
        if(distance == currentMinDistance) {
          dstIdx++
        }else {
          break
        }
      }
    }
    dstIdx--
  }
  return result
};
gviz.canviz.util.containsNoOtherProperties = function(obj, permittedProperties) {
  for(var property in obj) {
    if(!goog.array.contains(permittedProperties, property)) {
      return!1
    }
  }
  return!0
};
gviz.canviz.util.calcCompensatedPointRadius = function(brush, desiredRadius) {
  var radius = desiredRadius - brush.getVisibleStrokeWidth() / 2;
  return Math.max(radius, 0)
};
gviz.canviz.util.simulateForceSystem = function(initialState, getForceFuncs, applyForceFunc, diffFunc, diffLimit, relaxationCoefDecreaseFactor, maxIterationCount) {
  for(var state = initialState, relaxationCoef = 1, i = 0;i < maxIterationCount;i++) {
    var newState = gviz.canviz.util.calcForceSystemNewState_(state, getForceFuncs, applyForceFunc, relaxationCoef), newStateWithZeroRelaxation = gviz.canviz.util.calcForceSystemNewState_(state, getForceFuncs, applyForceFunc, 0), newStateAlmostEqual = gviz.canviz.util.objectsAlmostEqual(state, newState, diffLimit, diffFunc), zeroRelaxStateAlmostEqual = gviz.canviz.util.objectsAlmostEqual(state, newStateWithZeroRelaxation, diffLimit, diffFunc);
    if(newStateAlmostEqual && zeroRelaxStateAlmostEqual) {
      break
    }
    state = newState;
    relaxationCoef *= relaxationCoefDecreaseFactor
  }
  return state
};
gviz.canviz.util.calcForceSystemNewState_ = function(state, getForceFuncs, applyForceFunc, relaxationCoef) {
  var newState = {};
  goog.object.forEach(state, function(value, key) {
    for(var newValue = value, i = 0;i < getForceFuncs.length;i++) {
      var getForceFunc = getForceFuncs[i], force = getForceFunc(state, key, relaxationCoef), newValue = applyForceFunc(newValue, force)
    }
    newState[key] = newValue
  });
  return newState
};
gviz.canviz.util.piecewiseLinearInterpolation = function(coordinates, x, interpolateNulls) {
  if(interpolateNulls) {
    return gviz.canviz.util.piecewiseLinearInterpolation_(goog.array.filter(coordinates, goog.isDefAndNotNull), x)
  }
  for(var prevNull = -1, i = 0;i < coordinates.length;i++) {
    var coordinate = coordinates[i];
    if(goog.isNull(coordinate)) {
      var component = goog.array.slice(coordinates, prevNull + 1, i), y = gviz.canviz.util.piecewiseLinearInterpolation_(component, x);
      if(!goog.isNull(y)) {
        return y
      }
      prevNull = i
    }
  }
  var lastComponent = goog.array.slice(coordinates, prevNull + 1);
  return gviz.canviz.util.piecewiseLinearInterpolation_(lastComponent, x)
};
gviz.canviz.util.piecewiseLinearInterpolation_ = function(coordinates, x$$0) {
  var compareFn = function(x, coordinate) {
    return goog.array.defaultCompare(x, coordinate.x)
  }, i = goog.array.binarySearch(coordinates, x$$0, compareFn);
  if(0 <= i) {
    return coordinates[i].y
  }
  var insertionIndex = -(i + 1);
  if(0 == insertionIndex || insertionIndex == coordinates.length) {
    return null
  }
  var prev = coordinates[insertionIndex - 1], next = coordinates[insertionIndex], line = new goog.math.Line(prev.x, prev.y, next.x, next.y), t = (x$$0 - prev.x) / (next.x - prev.x);
  return line.getInterpolatedPoint(t).y
};
// Input 174
gviz.canviz.ValueScale = function() {
};
gviz.canviz.ValueScale.prototype.init = function(options, optionsPath, numberOfTicks) {
  this.options_ = options;
  this.optionsPath_ = optionsPath;
  this.numberOfSections = goog.isNull(numberOfTicks) ? this.getDefaultNumberOfSections() : 1 === numberOfTicks ? -1 : numberOfTicks - 1;
  this.ticks = [];
  this.numericMinValue = Infinity;
  this.numericMaxValue = -Infinity;
  this.format = options.inferOptionalStringValue(this.getAbsoluteOptionsPath("format"));
  this.userDefinedValueFormatter_ = options.inferValue(this.getAbsoluteOptionsPath("valueFormatter"), function(value, suggestion) {
    return suggestion
  });
  this.numericPreCalculator_ = null
};
gviz.canviz.ValueScale.prototype.initPreCalculator = function(distanceToZero, gaps) {
  var scaleType = gviz.NumberScaleUtil.getScaleType(this.options_, this.getAbsoluteOptionsPath(gviz.NumberScaleUtil.LOG_SCALE_OPTIONS_KEY), this.getAbsoluteOptionsPath(gviz.NumberScaleUtil.SCALE_TYPE_OPTIONS_KEY));
  if(!goog.array.isEmpty(gaps) && scaleType != gviz.NumberScaleUtil.SCALE_TYPE.PIECEWISE_LINEAR) {
    throw Error("Non-linear scale with gaps is not supported.");
  }
  for(var numericGaps = [], i = 0;i < gaps.length;i++) {
    var numericGap = this.gapToNumeric_(gaps[i]);
    numericGap && numericGaps.push(numericGap)
  }
  this.numericPreCalculator_ = gviz.NumberScaleUtil.getScale(scaleType, gviz.canviz.axis.Pow10Math.floor(distanceToZero), numericGaps)
};
gviz.canviz.ValueScale.prototype.gapToNumeric_ = function(gap) {
  var gapSize = this.gapValueToNumberInternal(gap.gapValue), start = this.valueToNumberInternal(gap.startValue), end = this.valueToNumberInternal(gap.endValue);
  if(0 < gapSize) {
    if(start + gapSize < end) {
      start += gapSize
    }else {
      return null
    }
  }
  return{gapSize:0, start:start, end:end}
};
gviz.canviz.ValueScale.prototype.getAbsoluteOptionsPath = function(property) {
  return gviz.canviz.util.concatSuffix(this.optionsPath_, property)
};
gviz.canviz.ValueScale.prototype.getDefaultNumberOfSections = function() {
  return-1
};
gviz.canviz.ValueScale.prototype.calibrate = function(minValue, maxValue, shouldExpand) {
  this.calibrateMinMax(minValue, maxValue, shouldExpand);
  this.calibrateInternal(this.numericMinValue, this.numericMaxValue, shouldExpand);
  this.numberOfSections = Math.max(1, this.ticks.length - 1)
};
gviz.canviz.ValueScale.prototype.calibrateMinMax = function(minValue, maxValue, shouldExpand) {
  shouldExpand && (this.extendRangeToIncludeValue(minValue), this.extendRangeToIncludeValue(maxValue));
  Infinity == this.numericMinValue && -Infinity == this.numericMaxValue && (this.numericMinValue = 0, this.numericMaxValue = 1);
  Infinity == this.numericMinValue && (this.numericMinValue = this.numericMaxValue);
  -Infinity == this.numericMaxValue && (this.numericMaxValue = this.numericMinValue);
  this.numericMinValue == this.numericMaxValue && (0 == this.numericMinValue ? (this.numericMinValue = -1, this.numericMaxValue = 1) : 0 < this.numericMinValue ? (this.numericMinValue /= 2, this.numericMaxValue *= 2) : (this.numericMinValue *= 2, this.numericMaxValue /= 2));
  goog.asserts.assert(Infinity > this.numericMinValue, "numericMinValue is Infinity");
  goog.asserts.assert(-Infinity < this.numericMaxValue, "numericMaxValue is -Infinity")
};
gviz.canviz.ValueScale.prototype.valueToString = function(value) {
  var suggestion = this.valueToStringInternal(value);
  return this.userDefinedValueFormatter_(value, suggestion)
};
gviz.canviz.ValueScale.prototype.valueToNumber = function(v) {
  var number = this.valueToUnscaledNumber(v);
  if(!goog.isDefAndNotNull(number)) {
    return null
  }
  var result = this.scaleNumericValue(number);
  return isFinite(result) ? result : null
};
gviz.canviz.ValueScale.prototype.valueToUnscaledNumber = function(value) {
  return goog.isDefAndNotNull(value) ? this.valueToNumberInternal(value) : null
};
gviz.canviz.ValueScale.prototype.extendRangeToIncludeNumber = function(num) {
  goog.isDefAndNotNull(num) && (this.numericMinValue = Math.min(this.numericMinValue, num), this.numericMaxValue = Math.max(this.numericMaxValue, num))
};
gviz.canviz.ValueScale.prototype.extendRangeToIncludeValue = function(v) {
  this.extendRangeToIncludeNumber(this.valueToNumber(v))
};
gviz.canviz.ValueScale.prototype.numberToValue = function(value) {
  return this.numberToValueInternal(this.unscaleNumericValue(value))
};
gviz.canviz.ValueScale.prototype.unscaledNumberToValue = function(value) {
  return goog.isDefAndNotNull(value) ? this.numberToValueInternal(value) : null
};
gviz.canviz.ValueScale.prototype.scaleNumericValue = function(value) {
  goog.asserts.assert(this.numericPreCalculator_);
  return this.numericPreCalculator_.transform(value)
};
gviz.canviz.ValueScale.prototype.unscaleNumericValue = function(value) {
  goog.asserts.assert(this.numericPreCalculator_);
  return this.numericPreCalculator_.inverse(value)
};
gviz.canviz.ValueScale.prototype.compareValues = function(value1, value2) {
  return value1 < value2 ? -1 : value1 > value2 ? 1 : 0
};
gviz.canviz.ValueScale.prototype.valueToStringInternal = function(value) {
  return value.toString()
};
// Input 175
gviz.math.expression.Variable = function(name) {
  gviz.math.expression.Expression.call(this);
  this.name = name
};
goog.inherits(gviz.math.expression.Variable, gviz.math.expression.Expression);
gviz.math.expression.Variable.prototype.compose = function() {
  return[new gviz.math.expression.tokens.Identifier(this.name)]
};
gviz.math.expression.Variable.prototype.getName = function() {
  return this.name
};
// Input 176
gviz.canviz.trendlines.linearTrendline = function(dataSize, domainGetter, dataGetter, options) {
  var trendline = gviz.canviz.trendlines.linearRegression(dataSize, domainGetter, dataGetter, options);
  if(goog.isNull(trendline)) {
    return null
  }
  var equation = new gviz.math.expression.Eq([new gviz.math.expression.Variable("y"), new gviz.math.expression.Add([new gviz.math.expression.Mul([new gviz.math.expression.Number(trendline.equation.slope), new gviz.math.expression.Variable("x")]), new gviz.math.expression.Number(trendline.equation.offset)])]);
  return{data:trendline.data, r2:trendline.r2, equation:equation.simplify()}
};
// Input 177
gviz.math.expression.tokens.Power = function() {
  gviz.math.expression.tokens.Token.call(this)
};
goog.inherits(gviz.math.expression.tokens.Power, gviz.math.expression.tokens.Token);
gviz.math.expression.tokens.Power.prototype.getSymbol = function() {
  return gviz.math.expression.tokens.Symbol.POWER
};
// Input 178
gviz.math.expression.Pow = function(components) {
  gviz.math.expression.NaryOperator.call(this, components)
};
goog.inherits(gviz.math.expression.Pow, gviz.math.expression.NaryOperator);
gviz.math.expression.Pow.prototype.compose = function() {
  return this.join(new gviz.math.expression.tokens.Power)
};
// Input 179
gviz.canviz.trendlines.PolynomialTrendlineDefiner = function(options) {
  this.degree_ = options.degree + 1;
  this.range_ = options.range;
  this.maxGap_ = options.maxGap;
  this.ySum_ = this.gapSum_ = 0;
  this.data_ = []
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.add = function(x, y) {
  goog.asserts.assert(goog.math.isFiniteNumber(x));
  goog.asserts.assert(goog.math.isFiniteNumber(y));
  if(0 < this.data_.length) {
    var gap = x - this.data_[this.data_.length - 1].x;
    0 < gap && (this.gapSum_ += gap)
  }
  this.ySum_ += y;
  this.data_.push({x:x, y:y})
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.hasValidRangeMin = function() {
  return goog.isDefAndNotNull(this.range_) && goog.isDefAndNotNull(this.range_.min) && goog.math.isFiniteNumber(this.range_.min)
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.hasValidRangeMax = function() {
  return goog.isDefAndNotNull(this.range_) && goog.isDefAndNotNull(this.range_.max) && goog.math.isFiniteNumber(this.range_.max)
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.hasValidRange = function() {
  return goog.isDefAndNotNull(this.range_) && goog.isDefAndNotNull(this.range_.min) && goog.math.isFiniteNumber(this.range_.min) && goog.isDefAndNotNull(this.range_.max) && goog.math.isFiniteNumber(this.range_.max)
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.calculateGapSize_ = function() {
  var gap = this.maxGap_ || this.hasValidRange() && (this.range_.max - this.range_.min) / 100 || void 0;
  goog.isDefAndNotNull(gap) && goog.math.isFiniteNumber(gap) || (gap = this.gapSum_ / (this.data_.length - 1));
  return gap
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.getMatrixCoefficient_ = function(exponent) {
  return goog.array.reduce(this.data_, function(r, v) {
    return r + Math.pow(v.x, exponent)
  }, 0)
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.getMatrixRHSCoefficient_ = function(exponent) {
  return goog.array.reduce(this.data_, function(r, v) {
    return r + Math.pow(v.x, exponent) * v.y
  }, 0)
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.getMatrix_ = function() {
  for(var rows = [], degree = this.degree_, matrixRowIndex = 0;matrixRowIndex < degree;matrixRowIndex++) {
    for(var row = Array(degree + 1), matrixColumnIndex = 0;matrixColumnIndex <= degree;matrixColumnIndex++) {
      row[matrixColumnIndex] = matrixColumnIndex < degree ? this.getMatrixCoefficient_(matrixRowIndex + matrixColumnIndex) : this.getMatrixRHSCoefficient_(matrixRowIndex)
    }
    rows.push(row)
  }
  return new goog.math.Matrix(rows)
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.getSolutionCoefficients_ = function() {
  var solutionMatrix = this.getMatrix_().getReducedRowEchelonForm();
  return goog.array.map(goog.array.range(this.degree_), function(d) {
    return solutionMatrix.getValueAt(d, this.degree_)
  }, this)
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.getEvaluationFunction_ = function(coefficients) {
  var degree = this.degree_;
  return function(x) {
    for(var sum = 0, i = 0;i < degree;i++) {
      sum += coefficients[i] * Math.pow(x, i)
    }
    return sum
  }
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.constructEquation_ = function(coefficients) {
  for(var terms = [], c = coefficients.length - 1;0 <= c;c--) {
    var coefficient = coefficients[c];
    if(goog.isDefAndNotNull(coefficient) && 0 < coefficient) {
      var term = new gviz.math.expression.Number(coefficient);
      if(0 < c) {
        var variable = new gviz.math.expression.Variable("x");
        1 < c && (variable = new gviz.math.expression.Pow([variable, new gviz.math.expression.Number(c)]));
        term = new gviz.math.expression.Mul([term, variable], !0)
      }
      terms.push(term)
    }
  }
  return new gviz.math.expression.Eq([new gviz.math.expression.Variable("y"), new gviz.math.expression.Add(terms)])
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.constructTrendlineData_ = function(coefficients) {
  var evaluateEquationAt = this.getEvaluationFunction_(coefficients), dataBuilder = new gviz.canviz.trendlines.DataBuilder(this.calculateGapSize_(), evaluateEquationAt), data = this.data_, yMean = this.ySum_ / data.length, range = this.range_;
  this.hasValidRangeMin() && range.min < data[0].x && dataBuilder.addData(range.min);
  for(var ssRes = 0, ssTot = 0, i = 0;i < data.length;i++) {
    var x = data[i].x, y = data[i].y;
    dataBuilder.addData(x);
    ssRes += Math.pow(y - evaluateEquationAt(x), 2);
    ssTot += Math.pow(y - yMean, 2)
  }
  var r2 = 1 - ssRes / ssTot;
  this.hasValidRangeMax() && range.max > data[data.length - 1].x && dataBuilder.addData(range.max);
  return{data:dataBuilder.build(), r2:r2}
};
gviz.canviz.trendlines.PolynomialTrendlineDefiner.prototype.getTrendline = function() {
  var coefficients = this.getSolutionCoefficients_(), equation = this.constructEquation_(coefficients), trendline = this.constructTrendlineData_(coefficients);
  return{data:trendline.data, r2:trendline.r2, equation:equation.simplify()}
};
// Input 180
gviz.canviz.trendlines.polynomialTrendline = function(dataSize, domainGetter, dataGetter, options) {
  var trendlineDefiner = new gviz.canviz.trendlines.PolynomialTrendlineDefiner(options);
  goog.iter.forEach(goog.iter.range(dataSize), function(i) {
    var x = domainGetter(i), y = dataGetter(i);
    goog.isDefAndNotNull(x) && goog.math.isFiniteNumber(x) && goog.isDefAndNotNull(y) && goog.math.isFiniteNumber(y) && trendlineDefiner.add(x, y)
  });
  return trendlineDefiner.getTrendline()
};
// Input 181
gviz.canviz.trendlines.TrendlineType = {LINEAR:"linear", EXPONENTIAL:"exponential", POLYNOMIAL:"polynomial"};
gviz.canviz.trendlines.Trendline = {};
gviz.canviz.trendlines.Trendline[gviz.canviz.trendlines.TrendlineType.LINEAR] = gviz.canviz.trendlines.linearTrendline;
gviz.canviz.trendlines.Trendline[gviz.canviz.trendlines.TrendlineType.EXPONENTIAL] = gviz.canviz.trendlines.exponentialTrendline;
gviz.canviz.trendlines.Trendline[gviz.canviz.trendlines.TrendlineType.POLYNOMIAL] = gviz.canviz.trendlines.polynomialTrendline;
// Input 182
gviz.canviz.Options = {};
gviz.canviz.Options.ChartType = {NONE:"none", PIE:"pie", FUNCTION:"function", SCATTER:"scatter", BUBBLE:"bubble", HISTOGRAM:"histogram"};
gviz.canviz.Options.SerieType = {NONE:"none", LINE:"line", AREA:"area", STEPPED_AREA:"steppedArea", BARS:"bars", CANDLESTICKS:"candlesticks", SCATTER:"scatter", BUBBLES:"bubbles"};
gviz.canviz.Options.IntervalStyle = {BARS:"bars", STICKS:"sticks", BOXES:"boxes", POINTS:"points", LINE:"line", AREA:"area", NONE:"none"};
gviz.canviz.Options.SeriesRelativeColor = {DARK:"series-color-dark", LIGHT:"series-color-light", COLOR:"series-color"};
gviz.canviz.Options.AxisType = {CATEGORY:"category", VALUE:"value", CATEGORY_POINT:"categorypoint"};
gviz.canviz.Options.ViewWindowMode = {PRETTY:"pretty", MAXIMIZED:"maximized", EXPLICIT:"explicit"};
gviz.canviz.Options.LegendPosition = {NONE:"none", RIGHT:"right", LEFT:"left", TOP:"top", BOTTOM:"bottom", INSIDE:"in", LABELED:"labeled"};
gviz.canviz.Options.ColorBarPosition = {NONE:"none", TOP:"top", BOTTOM:"bottom", INSIDE:"in"};
gviz.canviz.Options.Orientation = {VERTICAL:"vertical", HORIZONTAL:"horizontal"};
gviz.canviz.Options.Alignment = {START:"start", CENTER:"center", END:"end"};
gviz.canviz.Options.InOutPosition = {NONE:"none", INSIDE:"in", OUTSIDE:"out"};
gviz.canviz.Options.BoundUnboundPosition = {BOUND:"bound", UNBOUND:"unbound"};
gviz.canviz.Options.HighLowPosition = {HIGH:"high", LOW:"low"};
gviz.canviz.Options.PieSliceText = {NONE:"none", LABEL:"label", VALUE:"value", PERCENTAGE:"percentage", VALUE_AND_PERCENTAGE:"value-and-percentage"};
gviz.canviz.Options.PieValueText = {BOTH:"both", VALUE:"value", PERCENTAGE:"percentage"};
gviz.canviz.Options.InteractivityModel = {DEFAULT:"default", DIVE:"dive"};
gviz.canviz.Options.FocusTarget = {DATUM:"datum", CATEGORY:"category", SERIES:"series"};
gviz.canviz.Options.AggregationTarget = {AUTO:"auto", CATEGORY:"category", SERIES:"series", NONE:"none"};
gviz.canviz.Options.CurveType = {NONE:"none", FUNCTION:"function", PHASE:"phase", CLOSED_PHASE:"closedPhase"};
gviz.canviz.Options.TextSkipMode = {ATTACH_TO_START:"attachToStart", ATTACH_TO_END:"attachToEnd"};
gviz.canviz.Options.AnnotationStyle = {LETTER:"letter", LINE:"line"};
gviz.canviz.Options.DEFAULT_TRENDLINE_TYPE = gviz.canviz.trendlines.TrendlineType.LINEAR;
gviz.canviz.Options.DEFAULT_DISCRETE_COLORS = [{color:"#3366CC", lighter:"#45AFE2"}, {color:"#DC3912", lighter:"#FF3300"}, {color:"#FF9900", lighter:"#FFCC00"}, {color:"#109618", lighter:"#14C21D"}, {color:"#990099", lighter:"#DF51FD"}, {color:"#0099C6", lighter:"#15CBFF"}, {color:"#DD4477", lighter:"#FF97D2"}, {color:"#66AA00", lighter:"#97FB00"}, {color:"#B82E2E", lighter:"#DB6651"}, {color:"#316395", lighter:"#518BC6"}, {color:"#994499", lighter:"#BD6CBD"}, {color:"#22AA99", lighter:"#35D7C2"}, 
{color:"#AAAA11", lighter:"#E9E91F"}, {color:"#6633CC", lighter:"#9877DD"}, {color:"#E67300", lighter:"#FF8F20"}, {color:"#8B0707", lighter:"#D20B0B"}, {color:"#651067", lighter:"#B61DBA"}, {color:"#329262", lighter:"#40BD7E"}, {color:"#5574A6", lighter:"#6AA7C4"}, {color:"#3B3EAC", lighter:"#6D70CD"}, {color:"#B77322", lighter:"#DA9136"}, {color:"#16D620", lighter:"#2DEA36"}, {color:"#B91383", lighter:"#E81EA6"}, {color:"#F4359E", lighter:"#F558AE"}, {color:"#9C5935", lighter:"#C07145"}, {color:"#A9C413", 
lighter:"#D7EE53"}, {color:"#2A778D", lighter:"#3EA7C6"}, {color:"#668D1C", lighter:"#97D129"}, {color:"#BEA413", lighter:"#E9CA1D"}, {color:"#0C5922", lighter:"#149638"}, {color:"#743411", lighter:"#C5571D"}];
gviz.canviz.Options.DEFAULT_DIFF_NEW_DATA_PREFIX_TEXT = "Current: ";
gviz.canviz.Options.DEFAULT_DIFF_OLD_DATA_PREFIX_TEXT = "Previous: ";
gviz.canviz.Options.DEFAULT_SCATTER_TOOLTIP_X_PREFIX_TEXT = "X";
gviz.canviz.Options.DEFAULT_SCATTER_TOOLTIP_Y_PREFIX_TEXT = "Y";
gviz.canviz.Options.DEFAULT_DIFF_SERIES_BACKGROUND_COLOR = {color:"#EEEEEE", lighter:"#FEFEFE"};
gviz.canviz.Options.DEFAULT_DIFF_OLD_DATA_OPACITY = 0.5;
gviz.canviz.Options.DEFAULT_DIFF_NEW_DATA_OPACITY = 1;
gviz.canviz.Options.DEFAULT_DIFF_NEW_DATA_WIDTH_FACTOR = 0.3;
gviz.canviz.Options.DEFAULT_PIE_DIFF_INNER_OUTER_RADIUS_RATIO = 0.6;
gviz.canviz.Options.DEFAULT_PIE_DIFF_INNER_BORDER_RATIO = 0.01;
gviz.canviz.Options.DEFAULT_PIE_DIFF_IS_OLD_DATA_IN_CENTER = !0;
gviz.canviz.Options.DEFAULT_DIFF_LEGEND_ICON_WIDTH_SCALE_FACTOR = 2;
gviz.canviz.Options.LEGEND_ICON_WIDTH_SCALE_FACTOR_MIN = 1;
gviz.canviz.Options.LEGEND_ICON_WIDTH_SCALE_FACTOR_MAX = 2;
gviz.canviz.Options.DEFAULT_LINE_WIDTH = 2;
gviz.canviz.Options.DEFAULT_POINT_SIZE_FOR_SCATTER = 7;
gviz.canviz.Options.DEFAULT_POINT_SIZE_FOR_LINE = 6;
gviz.canviz.Options.DEFAULT_POINT_SENSITIVITY_AREA_RADIUS = 12;
gviz.canviz.Options.DEFAULT_FONT_SIZE = 13;
gviz.canviz.Options.DEFAULT_LOG_MINOR_TICK_ALTERNATIVES = [[5], [2, 5], [2, 5], [2, 4, 6, 8], [2, 4, 6, 8], [2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7, 8], [2, 3, 4, 5, 6, 7, 8, 9]];
gviz.canviz.Options.DEFAULT_AXIS_OPTIONS = {titleTextStyle:{color:"#222222", italic:!0}, gridlines:{baseline:"auto", minorTextOpacity:0.7, minorGridlineOpacity:0.4, newTimeline:!1, allowMinor:!0, minStrongLineDistance:40, minWeakLineDistance:40, minStrongToWeakLineDistance:5, minNotchDistance:10, minMajorTextDistance:10, minMinorTextDistance:5, unitThreshold:1.5}};
gviz.canviz.Options.DEFAULTS = {vAxis:gviz.canviz.Options.DEFAULT_AXIS_OPTIONS, hAxis:gviz.canviz.Options.DEFAULT_AXIS_OPTIONS, sizeAxis:{minSize:5, maxSize:30}, fontName:"Arial", titleTextStyle:{color:"#000000", bold:!0}, bubble:{textStyle:{color:"#000000"}}, candlestick:{hollowIsRising:!1}, annotations:{datum:{textStyle:{color:gviz.canviz.Options.SeriesRelativeColor.COLOR}, stemColor:"#999999"}, domain:{textStyle:{color:"#222222"}, stemColor:"#999999"}}, majorAxisTextColor:"#222222", minorAxisTextColor:"#444444", 
backgroundColor:{fill:"#fff", stroke:"#666666", strokeWidth:0}, chartArea:{backgroundColor:{fill:"none"}}, tooltip:{textStyle:{color:"#000000"}}, baselineColor:"#333333", gridlineColor:"#cccccc", pieSliceBorderColor:"#ffffff", pieResidueSliceColor:"#cccccc", pieSliceTextStyle:{color:"#ffffff"}, areaOpacity:0.3, intervals:{style:gviz.canviz.Options.IntervalStyle.BARS, color:gviz.canviz.Options.SeriesRelativeColor.DARK, lineWidth:gviz.canviz.Options.DEFAULT_LINE_WIDTH / 2, fillOpacity:0.3, barWidth:0.25, 
shortBarWidth:0.1, boxWidth:0.25, dataOpacity:1, pointSize:gviz.canviz.Options.DEFAULT_POINT_SIZE_FOR_LINE}, actionsMenu:{textStyle:{color:"#000000"}, disabledTextStyle:{color:"#c0c0c0"}}, legend:{textStyle:{color:"#222222"}, pagingTextStyle:{color:"#0011cc"}, scrollArrows:{activeColor:"#0011cc", inactiveColor:"#cccccc"}}, aggregationTarget:gviz.canviz.Options.AggregationTarget.AUTO, colorAxis:{legend:{textStyle:{color:"#000000"}}}, bar:{groupWidth:100 / gviz.canviz.Constants.GOLDEN_RATIO + "%"}};
// Input 183
gviz.fw.util = {};
gviz.fw.util.NGCategoryPaletteWrapper = function() {
  this.palette_ = null;
  this.categoryMap_ = new goog.structs.Map
};
gviz.fw.util.NGCategoryPaletteWrapper.prototype.addCategory = function(category) {
  goog.asserts.assert(null === this.palette_, "You must add all categories before getting any colors.");
  this.categoryMap_.containsKey(category) || this.categoryMap_.set(category, this.categoryMap_.getCount())
};
gviz.fw.util.NGCategoryPaletteWrapper.prototype.hexColor = function(category) {
  null == this.palette_ && (this.palette_ = new nightingale.CategoryPalette(this.categoryMap_.getCount()));
  goog.asserts.assert(this.categoryMap_.containsKey(category), "Color requested for unknown category");
  return this.palette_.getHex(this.categoryMap_.get(category))
};
// Input 184
goog.graphics = {};
goog.graphics.Path = function() {
  this.segments_ = [];
  this.count_ = [];
  this.arguments_ = []
};
goog.graphics.Path.prototype.closePoint_ = null;
goog.graphics.Path.prototype.currentPoint_ = null;
goog.graphics.Path.prototype.simple_ = !0;
goog.graphics.Path.Segment = {MOVETO:0, LINETO:1, CURVETO:2, ARCTO:3, CLOSE:4};
goog.graphics.Path.segmentArgCounts_ = function() {
  var counts = [];
  counts[goog.graphics.Path.Segment.MOVETO] = 2;
  counts[goog.graphics.Path.Segment.LINETO] = 2;
  counts[goog.graphics.Path.Segment.CURVETO] = 6;
  counts[goog.graphics.Path.Segment.ARCTO] = 6;
  counts[goog.graphics.Path.Segment.CLOSE] = 0;
  return counts
}();
goog.graphics.Path.getSegmentCount = function(segment) {
  return goog.graphics.Path.segmentArgCounts_[segment]
};
goog.graphics.Path.prototype.appendPath = function(path) {
  path.currentPoint_ && (Array.prototype.push.apply(this.segments_, path.segments_), Array.prototype.push.apply(this.count_, path.count_), Array.prototype.push.apply(this.arguments_, path.arguments_), this.currentPoint_ = path.currentPoint_.concat(), this.closePoint_ = path.closePoint_.concat(), this.simple_ = this.simple_ && path.simple_);
  return this
};
goog.graphics.Path.prototype.clear = function() {
  this.segments_.length = 0;
  this.count_.length = 0;
  this.arguments_.length = 0;
  delete this.closePoint_;
  delete this.currentPoint_;
  delete this.simple_;
  return this
};
goog.graphics.Path.prototype.moveTo = function(x, y) {
  goog.array.peek(this.segments_) == goog.graphics.Path.Segment.MOVETO ? this.arguments_.length -= 2 : (this.segments_.push(goog.graphics.Path.Segment.MOVETO), this.count_.push(1));
  this.arguments_.push(x, y);
  this.currentPoint_ = this.closePoint_ = [x, y];
  return this
};
goog.graphics.Path.prototype.lineTo = function(var_args) {
  var lastSegment = goog.array.peek(this.segments_);
  if(null == lastSegment) {
    throw Error("Path cannot start with lineTo");
  }
  lastSegment != goog.graphics.Path.Segment.LINETO && (this.segments_.push(goog.graphics.Path.Segment.LINETO), this.count_.push(0));
  for(var i = 0;i < arguments.length;i += 2) {
    var x = arguments[i], y = arguments[i + 1];
    this.arguments_.push(x, y)
  }
  this.count_[this.count_.length - 1] += i / 2;
  this.currentPoint_ = [x, y];
  return this
};
goog.graphics.Path.prototype.curveTo = function(var_args) {
  var lastSegment = goog.array.peek(this.segments_);
  if(null == lastSegment) {
    throw Error("Path cannot start with curve");
  }
  lastSegment != goog.graphics.Path.Segment.CURVETO && (this.segments_.push(goog.graphics.Path.Segment.CURVETO), this.count_.push(0));
  for(var i = 0;i < arguments.length;i += 6) {
    var x = arguments[i + 4], y = arguments[i + 5];
    this.arguments_.push(arguments[i], arguments[i + 1], arguments[i + 2], arguments[i + 3], x, y)
  }
  this.count_[this.count_.length - 1] += i / 6;
  this.currentPoint_ = [x, y];
  return this
};
goog.graphics.Path.prototype.close = function() {
  var lastSegment = goog.array.peek(this.segments_);
  if(null == lastSegment) {
    throw Error("Path cannot start with close");
  }
  lastSegment != goog.graphics.Path.Segment.CLOSE && (this.segments_.push(goog.graphics.Path.Segment.CLOSE), this.count_.push(1), this.currentPoint_ = this.closePoint_);
  return this
};
goog.graphics.Path.prototype.arc = function(cx, cy, rx, ry, fromAngle, extent, connect) {
  var startX = cx + goog.math.angleDx(fromAngle, rx), startY = cy + goog.math.angleDy(fromAngle, ry);
  connect ? this.currentPoint_ && startX == this.currentPoint_[0] && startY == this.currentPoint_[1] || this.lineTo(startX, startY) : this.moveTo(startX, startY);
  return this.arcTo(rx, ry, fromAngle, extent)
};
goog.graphics.Path.prototype.arcTo = function(rx, ry, fromAngle, extent) {
  var cx = this.currentPoint_[0] - goog.math.angleDx(fromAngle, rx), cy = this.currentPoint_[1] - goog.math.angleDy(fromAngle, ry), ex = cx + goog.math.angleDx(fromAngle + extent, rx), ey = cy + goog.math.angleDy(fromAngle + extent, ry);
  this.segments_.push(goog.graphics.Path.Segment.ARCTO);
  this.count_.push(1);
  this.arguments_.push(rx, ry, fromAngle, extent, ex, ey);
  this.simple_ = !1;
  this.currentPoint_ = [ex, ey];
  return this
};
goog.graphics.Path.prototype.arcToAsCurves = function(rx, ry, fromAngle, extent) {
  for(var cx = this.currentPoint_[0] - goog.math.angleDx(fromAngle, rx), cy = this.currentPoint_[1] - goog.math.angleDy(fromAngle, ry), extentRad = goog.math.toRadians(extent), arcSegs = Math.ceil(2 * (Math.abs(extentRad) / Math.PI)), inc = extentRad / arcSegs, angle = goog.math.toRadians(fromAngle), j = 0;j < arcSegs;j++) {
    var relX = Math.cos(angle), relY = Math.sin(angle), z = 4 / 3 * Math.sin(inc / 2) / (1 + Math.cos(inc / 2)), c0 = cx + (relX - z * relY) * rx, c1 = cy + (relY + z * relX) * ry, angle = angle + inc, relX = Math.cos(angle), relY = Math.sin(angle);
    this.curveTo(c0, c1, cx + (relX + z * relY) * rx, cy + (relY - z * relX) * ry, cx + relX * rx, cy + relY * ry)
  }
  return this
};
goog.graphics.Path.prototype.forEachSegment = function(callback) {
  for(var points = this.arguments_, index = 0, i = 0, length = this.segments_.length;i < length;i++) {
    var seg = this.segments_[i], n = goog.graphics.Path.segmentArgCounts_[seg] * this.count_[i];
    callback(seg, points.slice(index, index + n));
    index += n
  }
};
goog.graphics.Path.prototype.clone = function() {
  var path = new this.constructor;
  path.segments_ = this.segments_.concat();
  path.count_ = this.count_.concat();
  path.arguments_ = this.arguments_.concat();
  path.closePoint_ = this.closePoint_ && this.closePoint_.concat();
  path.currentPoint_ = this.currentPoint_ && this.currentPoint_.concat();
  path.simple_ = this.simple_;
  return path
};
goog.graphics.Path.prototype.isSimple = function() {
  return this.simple_
};
goog.graphics.Path.simplifySegmentMap_ = function() {
  var map = {};
  map[goog.graphics.Path.Segment.MOVETO] = goog.graphics.Path.prototype.moveTo;
  map[goog.graphics.Path.Segment.LINETO] = goog.graphics.Path.prototype.lineTo;
  map[goog.graphics.Path.Segment.CLOSE] = goog.graphics.Path.prototype.close;
  map[goog.graphics.Path.Segment.CURVETO] = goog.graphics.Path.prototype.curveTo;
  map[goog.graphics.Path.Segment.ARCTO] = goog.graphics.Path.prototype.arcToAsCurves;
  return map
}();
goog.graphics.Path.createSimplifiedPath = function(src) {
  if(src.isSimple()) {
    return src.clone()
  }
  var path = new goog.graphics.Path;
  src.forEachSegment(function(segment, args) {
    goog.graphics.Path.simplifySegmentMap_[segment].apply(path, args)
  });
  return path
};
goog.graphics.Path.prototype.transform = function(tx) {
  if(!this.isSimple()) {
    throw Error("Non-simple path");
  }
  tx.transform(this.arguments_, 0, this.arguments_, 0, this.arguments_.length / 2);
  this.closePoint_ && tx.transform(this.closePoint_, 0, this.closePoint_, 0, 1);
  this.currentPoint_ && this.closePoint_ != this.currentPoint_ && tx.transform(this.currentPoint_, 0, this.currentPoint_, 0, 1);
  return this
};
goog.graphics.Path.prototype.isEmpty = function() {
  return 0 == this.segments_.length
};
// Input 185
goog.graphics.AbstractGraphics = function(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.width = width;
  this.height = height;
  this.coordWidth = opt_coordWidth || null;
  this.coordHeight = opt_coordHeight || null
};
goog.inherits(goog.graphics.AbstractGraphics, goog.ui.Component);
goog.graphics.AbstractGraphics.prototype.canvasElement = null;
goog.graphics.AbstractGraphics.prototype.coordLeft = 0;
goog.graphics.AbstractGraphics.prototype.coordTop = 0;
goog.graphics.AbstractGraphics.prototype.getCanvasElement = function() {
  return this.canvasElement
};
goog.graphics.AbstractGraphics.prototype.getCoordSize = function() {
  return this.coordWidth ? new goog.math.Size(this.coordWidth, this.coordHeight) : this.getPixelSize()
};
goog.graphics.AbstractGraphics.prototype.getSize = function() {
  return this.getPixelSize()
};
goog.graphics.AbstractGraphics.prototype.getPixelSize = function() {
  return this.isInDocument() ? goog.style.getSize(this.getElement()) : goog.isNumber(this.width) && goog.isNumber(this.height) ? new goog.math.Size(this.width, this.height) : null
};
goog.graphics.AbstractGraphics.prototype.getPixelScaleX = function() {
  var pixelSize = this.getPixelSize();
  return pixelSize ? pixelSize.width / this.getCoordSize().width : 0
};
goog.graphics.AbstractGraphics.prototype.getPixelScaleY = function() {
  var pixelSize = this.getPixelSize();
  return pixelSize ? pixelSize.height / this.getCoordSize().height : 0
};
goog.graphics.AbstractGraphics.prototype.removeElement = function(element) {
  goog.dom.removeNode(element.getElement())
};
goog.graphics.AbstractGraphics.prototype.drawCircle = function(cx, cy, r, stroke, fill, opt_group) {
  return this.drawEllipse(cx, cy, r, r, stroke, fill, opt_group)
};
goog.graphics.AbstractGraphics.prototype.drawText = function(text, x, y, width, height, align, vAlign, font, stroke, fill, opt_group) {
  var baseline = font.size / 2, textY;
  textY = "bottom" == vAlign ? y + height - baseline : "center" == vAlign ? y + height / 2 : y + baseline;
  return this.drawTextOnLine(text, x, textY, x + width, textY, align, font, stroke, fill, opt_group)
};
goog.graphics.AbstractGraphics.prototype.createPath = function() {
  return new goog.graphics.Path
};
// Input 186
goog.graphics.AffineTransform = function(opt_m00, opt_m10, opt_m01, opt_m11, opt_m02, opt_m12) {
  if(6 == arguments.length) {
    this.setTransform(opt_m00, opt_m10, opt_m01, opt_m11, opt_m02, opt_m12)
  }else {
    if(0 != arguments.length) {
      throw Error("Insufficient matrix parameters");
    }
    this.m00_ = this.m11_ = 1;
    this.m10_ = this.m01_ = this.m02_ = this.m12_ = 0
  }
};
goog.graphics.AffineTransform.prototype.clone = function() {
  return new goog.graphics.AffineTransform(this.m00_, this.m10_, this.m01_, this.m11_, this.m02_, this.m12_)
};
goog.graphics.AffineTransform.prototype.setTransform = function(m00, m10, m01, m11, m02, m12) {
  if(!(goog.isNumber(m00) && goog.isNumber(m10) && goog.isNumber(m01) && goog.isNumber(m11) && goog.isNumber(m02) && goog.isNumber(m12))) {
    throw Error("Invalid transform parameters");
  }
  this.m00_ = m00;
  this.m10_ = m10;
  this.m01_ = m01;
  this.m11_ = m11;
  this.m02_ = m02;
  this.m12_ = m12;
  return this
};
goog.graphics.AffineTransform.prototype.copyFrom = function(tx) {
  this.m00_ = tx.m00_;
  this.m10_ = tx.m10_;
  this.m01_ = tx.m01_;
  this.m11_ = tx.m11_;
  this.m02_ = tx.m02_;
  this.m12_ = tx.m12_;
  return this
};
goog.graphics.AffineTransform.prototype.scale = function(sx, sy) {
  this.m00_ *= sx;
  this.m10_ *= sx;
  this.m01_ *= sy;
  this.m11_ *= sy;
  return this
};
goog.graphics.AffineTransform.prototype.translate = function(dx, dy) {
  this.m02_ += dx * this.m00_ + dy * this.m01_;
  this.m12_ += dx * this.m10_ + dy * this.m11_;
  return this
};
goog.graphics.AffineTransform.prototype.rotate = function(theta, x, y) {
  return this.concatenate(goog.graphics.AffineTransform.getRotateInstance(theta, x, y))
};
goog.graphics.AffineTransform.prototype.toString = function() {
  return"matrix(" + [this.m00_, this.m10_, this.m01_, this.m11_, this.m02_, this.m12_].join() + ")"
};
goog.graphics.AffineTransform.prototype.getTranslateX = function() {
  return this.m02_
};
goog.graphics.AffineTransform.prototype.getTranslateY = function() {
  return this.m12_
};
goog.graphics.AffineTransform.prototype.getShearY = function() {
  return this.m10_
};
goog.graphics.AffineTransform.prototype.concatenate = function(tx) {
  var m0 = this.m00_, m1 = this.m01_;
  this.m00_ = tx.m00_ * m0 + tx.m10_ * m1;
  this.m01_ = tx.m01_ * m0 + tx.m11_ * m1;
  this.m02_ += tx.m02_ * m0 + tx.m12_ * m1;
  m0 = this.m10_;
  m1 = this.m11_;
  this.m10_ = tx.m00_ * m0 + tx.m10_ * m1;
  this.m11_ = tx.m01_ * m0 + tx.m11_ * m1;
  this.m12_ += tx.m02_ * m0 + tx.m12_ * m1;
  return this
};
goog.graphics.AffineTransform.prototype.transform = function(src, srcOff, dst, dstOff, numPts) {
  for(var i = srcOff, j = dstOff, srcEnd = srcOff + 2 * numPts;i < srcEnd;) {
    var x = src[i++], y = src[i++];
    dst[j++] = x * this.m00_ + y * this.m01_ + this.m02_;
    dst[j++] = x * this.m10_ + y * this.m11_ + this.m12_
  }
};
goog.graphics.AffineTransform.getScaleInstance = function(sx, sy) {
  return(new goog.graphics.AffineTransform).setToScale(sx, sy)
};
goog.graphics.AffineTransform.getTranslateInstance = function(dx, dy) {
  return(new goog.graphics.AffineTransform).setToTranslation(dx, dy)
};
goog.graphics.AffineTransform.getShearInstance = function(shx, shy) {
  return(new goog.graphics.AffineTransform).setToShear(shx, shy)
};
goog.graphics.AffineTransform.getRotateInstance = function(theta, x, y) {
  return(new goog.graphics.AffineTransform).setToRotation(theta, x, y)
};
goog.graphics.AffineTransform.prototype.setToScale = function(sx, sy) {
  return this.setTransform(sx, 0, 0, sy, 0, 0)
};
goog.graphics.AffineTransform.prototype.setToTranslation = function(dx, dy) {
  return this.setTransform(1, 0, 0, 1, dx, dy)
};
goog.graphics.AffineTransform.prototype.setToShear = function(shx, shy) {
  return this.setTransform(1, shy, shx, 1, 0, 0)
};
goog.graphics.AffineTransform.prototype.setToRotation = function(theta, x, y) {
  var cos = Math.cos(theta), sin = Math.sin(theta);
  return this.setTransform(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos)
};
goog.graphics.AffineTransform.prototype.equals = function(tx) {
  return this == tx ? !0 : tx ? this.m00_ == tx.m00_ && this.m01_ == tx.m01_ && this.m02_ == tx.m02_ && this.m10_ == tx.m10_ && this.m11_ == tx.m11_ && this.m12_ == tx.m12_ : !1
};
// Input 187
goog.graphics.Element = function(element, graphics) {
  goog.events.EventTarget.call(this);
  this.element_ = element;
  this.graphics_ = graphics;
  this[goog.events.Listenable.IMPLEMENTED_BY_PROP] = !1
};
goog.inherits(goog.graphics.Element, goog.events.EventTarget);
goog.graphics.Element.prototype.graphics_ = null;
goog.graphics.Element.prototype.element_ = null;
goog.graphics.Element.prototype.transform_ = null;
goog.graphics.Element.prototype.getElement = function() {
  return this.element_
};
goog.graphics.Element.prototype.getGraphics = function() {
  return this.graphics_
};
goog.graphics.Element.prototype.getTransform = function() {
  return this.transform_ ? this.transform_.clone() : new goog.graphics.AffineTransform
};
goog.graphics.Element.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this.element_, type, handler, opt_capture, opt_handlerScope)
};
goog.graphics.Element.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this.element_, type, handler, opt_capture, opt_handlerScope)
};
goog.graphics.Element.prototype.disposeInternal = function() {
  goog.graphics.Element.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this.element_)
};
// Input 188
goog.graphics.StrokeAndFillElement = function(element, graphics, stroke, fill) {
  goog.graphics.Element.call(this, element, graphics);
  this.setStroke(stroke);
  this.setFill(fill)
};
goog.inherits(goog.graphics.StrokeAndFillElement, goog.graphics.Element);
goog.graphics.StrokeAndFillElement.prototype.fill = null;
goog.graphics.StrokeAndFillElement.prototype.stroke_ = null;
goog.graphics.StrokeAndFillElement.prototype.setFill = function(fill) {
  this.fill = fill;
  this.getGraphics().setElementFill(this, fill)
};
goog.graphics.StrokeAndFillElement.prototype.getFill = function() {
  return this.fill
};
goog.graphics.StrokeAndFillElement.prototype.setStroke = function(stroke) {
  this.stroke_ = stroke;
  this.getGraphics().setElementStroke(this, stroke)
};
goog.graphics.StrokeAndFillElement.prototype.getStroke = function() {
  return this.stroke_
};
// Input 189
goog.graphics.EllipseElement = function(element, graphics, stroke, fill) {
  goog.graphics.StrokeAndFillElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.EllipseElement, goog.graphics.StrokeAndFillElement);
// Input 190
goog.graphics.GroupElement = function(element, graphics) {
  goog.graphics.Element.call(this, element, graphics)
};
goog.inherits(goog.graphics.GroupElement, goog.graphics.Element);
// Input 191
goog.graphics.ImageElement = function(element, graphics) {
  goog.graphics.Element.call(this, element, graphics)
};
goog.inherits(goog.graphics.ImageElement, goog.graphics.Element);
// Input 192
goog.graphics.PathElement = function(element, graphics, stroke, fill) {
  goog.graphics.StrokeAndFillElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.PathElement, goog.graphics.StrokeAndFillElement);
// Input 193
goog.graphics.RectElement = function(element, graphics, stroke, fill) {
  goog.graphics.StrokeAndFillElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.RectElement, goog.graphics.StrokeAndFillElement);
// Input 194
goog.graphics.TextElement = function(element, graphics, stroke, fill) {
  goog.graphics.StrokeAndFillElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.TextElement, goog.graphics.StrokeAndFillElement);
// Input 195
goog.graphics.CanvasGroupElement = function(graphics) {
  goog.graphics.GroupElement.call(this, null, graphics);
  this.children_ = []
};
goog.inherits(goog.graphics.CanvasGroupElement, goog.graphics.GroupElement);
goog.graphics.CanvasGroupElement.prototype.clear = function() {
  this.children_.length && (this.children_.length = 0, this.getGraphics().redraw())
};
goog.graphics.CanvasGroupElement.prototype.setSize = function() {
};
goog.graphics.CanvasGroupElement.prototype.appendChild = function(element) {
  this.children_.push(element)
};
goog.graphics.CanvasGroupElement.prototype.draw = function() {
  for(var i = 0, len = this.children_.length;i < len;i++) {
    this.getGraphics().drawElement(this.children_[i])
  }
};
goog.graphics.CanvasEllipseElement = function(element, graphics, cx, cy, rx, ry, stroke, fill) {
  goog.graphics.EllipseElement.call(this, element, graphics, stroke, fill);
  this.cx_ = cx;
  this.cy_ = cy;
  this.rx_ = rx;
  this.ry_ = ry;
  this.path_ = new goog.graphics.Path;
  this.setUpPath_();
  this.pathElement_ = new goog.graphics.CanvasPathElement(null, graphics, this.path_, stroke, fill)
};
goog.inherits(goog.graphics.CanvasEllipseElement, goog.graphics.EllipseElement);
goog.graphics.CanvasEllipseElement.prototype.setUpPath_ = function() {
  this.path_.clear();
  this.path_.moveTo(this.cx_ + goog.math.angleDx(0, this.rx_), this.cy_ + goog.math.angleDy(0, this.ry_));
  this.path_.arcTo(this.rx_, this.ry_, 0, 360);
  this.path_.close()
};
goog.graphics.CanvasEllipseElement.prototype.setCenter = function(cx, cy) {
  this.cx_ = cx;
  this.cy_ = cy;
  this.setUpPath_();
  this.pathElement_.setPath(this.path_)
};
goog.graphics.CanvasEllipseElement.prototype.setRadius = function(rx, ry) {
  this.rx_ = rx;
  this.ry_ = ry;
  this.setUpPath_();
  this.pathElement_.setPath(this.path_)
};
goog.graphics.CanvasEllipseElement.prototype.draw = function(ctx) {
  this.pathElement_.draw(ctx)
};
goog.graphics.CanvasRectElement = function(element, graphics, x, y, w, h, stroke, fill) {
  goog.graphics.RectElement.call(this, element, graphics, stroke, fill);
  this.x_ = x;
  this.y_ = y;
  this.w_ = w;
  this.h_ = h
};
goog.inherits(goog.graphics.CanvasRectElement, goog.graphics.RectElement);
goog.graphics.CanvasRectElement.prototype.setPosition = function(x, y) {
  this.x_ = x;
  this.y_ = y;
  this.drawn_ && this.getGraphics().redraw()
};
goog.graphics.CanvasRectElement.prototype.drawn_ = !1;
goog.graphics.CanvasRectElement.prototype.setSize = function(width, height) {
  this.w_ = width;
  this.h_ = height;
  this.drawn_ && this.getGraphics().redraw()
};
goog.graphics.CanvasRectElement.prototype.draw = function(ctx) {
  this.drawn_ = !0;
  ctx.beginPath();
  ctx.moveTo(this.x_, this.y_);
  ctx.lineTo(this.x_, this.y_ + this.h_);
  ctx.lineTo(this.x_ + this.w_, this.y_ + this.h_);
  ctx.lineTo(this.x_ + this.w_, this.y_);
  ctx.closePath()
};
goog.graphics.CanvasPathElement = function(element, graphics, path, stroke, fill) {
  goog.graphics.PathElement.call(this, element, graphics, stroke, fill);
  this.setPath(path)
};
goog.inherits(goog.graphics.CanvasPathElement, goog.graphics.PathElement);
goog.graphics.CanvasPathElement.prototype.drawn_ = !1;
goog.graphics.CanvasPathElement.prototype.setPath = function(path) {
  this.path_ = path.isSimple() ? path : goog.graphics.Path.createSimplifiedPath(path);
  this.drawn_ && this.getGraphics().redraw()
};
goog.graphics.CanvasPathElement.prototype.draw = function(ctx) {
  this.drawn_ = !0;
  ctx.beginPath();
  this.path_.forEachSegment(function(segment, args) {
    switch(segment) {
      case goog.graphics.Path.Segment.MOVETO:
        ctx.moveTo(args[0], args[1]);
        break;
      case goog.graphics.Path.Segment.LINETO:
        for(var i = 0;i < args.length;i += 2) {
          ctx.lineTo(args[i], args[i + 1])
        }
        break;
      case goog.graphics.Path.Segment.CURVETO:
        for(i = 0;i < args.length;i += 6) {
          ctx.bezierCurveTo(args[i], args[i + 1], args[i + 2], args[i + 3], args[i + 4], args[i + 5])
        }
        break;
      case goog.graphics.Path.Segment.ARCTO:
        throw Error("Canvas paths cannot contain arcs");;
      case goog.graphics.Path.Segment.CLOSE:
        ctx.closePath()
    }
  })
};
goog.graphics.CanvasTextElement = function(graphics, text, x1, y1, x2, y2, align, font, stroke, fill) {
  var element = goog.dom.createDom(goog.dom.TagName.DIV, {style:"display:table;position:absolute;padding:0;margin:0;border:0"});
  goog.graphics.TextElement.call(this, element, graphics, stroke, fill);
  this.text_ = text;
  this.x1_ = x1;
  this.y1_ = y1;
  this.x2_ = x2;
  this.y2_ = y2;
  this.align_ = align || "left";
  this.font_ = font;
  this.innerElement_ = goog.dom.createDom("DIV", {style:"display:table-cell;padding: 0;margin: 0;border: 0"});
  this.updateStyle_();
  this.updateText_();
  graphics.getElement().appendChild(element);
  element.appendChild(this.innerElement_)
};
goog.inherits(goog.graphics.CanvasTextElement, goog.graphics.TextElement);
goog.graphics.CanvasTextElement.prototype.setText = function(text) {
  this.text_ = text;
  this.updateText_()
};
goog.graphics.CanvasTextElement.prototype.setFill = function(fill) {
  this.fill = fill;
  var element = this.getElement();
  element && (element.style.color = fill.getColor() || fill.getColor1())
};
goog.graphics.CanvasTextElement.prototype.setStroke = function() {
};
goog.graphics.CanvasTextElement.prototype.draw = function() {
};
goog.graphics.CanvasTextElement.prototype.updateStyle_ = function() {
  var x1 = this.x1_, x2 = this.x2_, y1 = this.y1_, y2 = this.y2_, align = this.align_, font = this.font_, style = this.getElement().style, scaleX = this.getGraphics().getPixelScaleX(), scaleY = this.getGraphics().getPixelScaleY();
  if(x1 == x2) {
    style.lineHeight = "90%";
    this.innerElement_.style.verticalAlign = "center" == align ? "middle" : "left" == align ? y1 < y2 ? "top" : "bottom" : y1 < y2 ? "bottom" : "top";
    style.textAlign = "center";
    var w = font.size * scaleX;
    style.top = Math.round(Math.min(y1, y2) * scaleY) + "px";
    style.left = Math.round((x1 - w / 2) * scaleX) + "px";
    style.width = Math.round(w) + "px";
    style.height = Math.abs(y1 - y2) * scaleY + "px";
    style.fontSize = 0.6 * font.size * scaleY + "pt"
  }else {
    style.lineHeight = "100%", this.innerElement_.style.verticalAlign = "top", style.textAlign = align, style.top = Math.round(((y1 + y2) / 2 - 2 * font.size / 3) * scaleY) + "px", style.left = Math.round(x1 * scaleX) + "px", style.width = Math.round(Math.abs(x2 - x1) * scaleX) + "px", style.height = "auto", style.fontSize = font.size * scaleY + "pt"
  }
  style.fontWeight = font.bold ? "bold" : "normal";
  style.fontStyle = font.italic ? "italic" : "normal";
  style.fontFamily = font.family;
  var fill = this.getFill();
  style.color = fill.getColor() || fill.getColor1()
};
goog.graphics.CanvasTextElement.prototype.updateText_ = function() {
  this.innerElement_.innerHTML = this.x1_ == this.x2_ ? goog.array.map(this.text_.split(""), function(entry) {
    return goog.string.htmlEscape(entry)
  }).join("<br>") : goog.string.htmlEscape(this.text_)
};
goog.graphics.CanvasImageElement = function(element, graphics, x, y, w, h, src) {
  goog.graphics.ImageElement.call(this, element, graphics);
  this.x_ = x;
  this.y_ = y;
  this.w_ = w;
  this.h_ = h;
  this.src_ = src
};
goog.inherits(goog.graphics.CanvasImageElement, goog.graphics.ImageElement);
goog.graphics.CanvasImageElement.prototype.drawn_ = !1;
goog.graphics.CanvasImageElement.prototype.setPosition = function(x, y) {
  this.x_ = x;
  this.y_ = y;
  this.drawn_ && this.getGraphics().redraw()
};
goog.graphics.CanvasImageElement.prototype.setSize = function(width, height) {
  this.w_ = width;
  this.h_ = height;
  this.drawn_ && this.getGraphics().redraw()
};
goog.graphics.CanvasImageElement.prototype.draw = function(ctx) {
  if(this.img_) {
    this.w_ && this.h_ && ctx.drawImage(this.img_, this.x_, this.y_, this.w_, this.h_), this.drawn_ = !0
  }else {
    var img = new Image;
    img.onload = goog.bind(this.handleImageLoad_, this, img);
    img.src = this.src_
  }
};
goog.graphics.CanvasImageElement.prototype.handleImageLoad_ = function(img) {
  this.img_ = img;
  this.getGraphics().redraw()
};
// Input 196
goog.graphics.Fill = function() {
};
// Input 197
goog.graphics.SolidFill = function(color, opt_opacity) {
  this.color_ = color;
  this.opacity_ = null == opt_opacity ? 1 : opt_opacity
};
goog.inherits(goog.graphics.SolidFill, goog.graphics.Fill);
goog.graphics.SolidFill.prototype.getColor = function() {
  return this.color_
};
goog.graphics.SolidFill.prototype.getOpacity = function() {
  return this.opacity_
};
// Input 198
goog.graphics.CanvasGraphics = function(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper) {
  goog.graphics.AbstractGraphics.call(this, width, height, opt_coordWidth, opt_coordHeight, opt_domHelper)
};
goog.inherits(goog.graphics.CanvasGraphics, goog.graphics.AbstractGraphics);
goog.graphics.CanvasGraphics.prototype.setElementFill = function() {
  this.redraw()
};
goog.graphics.CanvasGraphics.prototype.setElementStroke = function() {
  this.redraw()
};
goog.graphics.CanvasGraphics.prototype.pushElementTransform = function(element) {
  var ctx = this.getContext();
  ctx.save();
  var transform = element.getTransform(), tx = transform.getTranslateX(), ty = transform.getTranslateY();
  (tx || ty) && ctx.translate(tx, ty);
  var sinTheta = transform.getShearY();
  sinTheta && ctx.rotate(Math.asin(sinTheta))
};
goog.graphics.CanvasGraphics.prototype.popElementTransform = function() {
  this.getContext().restore()
};
goog.graphics.CanvasGraphics.prototype.createDom = function() {
  var element = this.dom_.createDom("div", {style:"position:relative;overflow:hidden"});
  this.setElementInternal(element);
  this.canvas_ = this.dom_.createDom("canvas");
  element.appendChild(this.canvas_);
  this.lastGroup_ = this.canvasElement = new goog.graphics.CanvasGroupElement(this);
  this.redrawTimeout_ = 0;
  this.updateSize()
};
goog.graphics.CanvasGraphics.prototype.clearContext_ = function() {
  this.context_ = null
};
goog.graphics.CanvasGraphics.prototype.getContext = function() {
  this.getElement() || this.createDom();
  this.context_ || (this.context_ = this.canvas_.getContext("2d"), this.context_.save());
  return this.context_
};
goog.graphics.CanvasGraphics.prototype.setSize = function(pixelWidth, pixelHeight) {
  this.width = pixelWidth;
  this.height = pixelHeight;
  this.updateSize();
  this.redraw()
};
goog.graphics.CanvasGraphics.prototype.getPixelSize = function() {
  var width = this.width, height = this.height, computeWidth = goog.isString(width) && -1 != width.indexOf("%"), computeHeight = goog.isString(height) && -1 != height.indexOf("%");
  if(!this.isInDocument() && (computeWidth || computeHeight)) {
    return null
  }
  var parent, parentSize;
  computeWidth && (parent = this.getElement().parentNode, parentSize = goog.style.getSize(parent), width = parseFloat(width) * parentSize.width / 100);
  computeHeight && (parent = parent || this.getElement().parentNode, parentSize = parentSize || goog.style.getSize(parent), height = parseFloat(height) * parentSize.height / 100);
  return new goog.math.Size(width, height)
};
goog.graphics.CanvasGraphics.prototype.updateSize = function() {
  goog.style.setSize(this.getElement(), this.width, this.height);
  var pixels = this.getPixelSize();
  pixels && (goog.style.setSize(this.canvas_, pixels.width, pixels.height), this.canvas_.width = pixels.width, this.canvas_.height = pixels.height, this.clearContext_())
};
goog.graphics.CanvasGraphics.prototype.reset = function() {
  var ctx = this.getContext();
  ctx.restore();
  var size = this.getPixelSize();
  size.width && size.height && ctx.clearRect(0, 0, size.width, size.height);
  ctx.save()
};
goog.graphics.CanvasGraphics.prototype.clear = function() {
  this.reset();
  this.canvasElement.clear();
  for(var el = this.getElement();1 < el.childNodes.length;) {
    el.removeChild(el.lastChild)
  }
};
goog.graphics.CanvasGraphics.prototype.redraw = function() {
  if(!this.preventRedraw_ && this.isInDocument()) {
    this.reset();
    if(this.coordWidth) {
      var pixels = this.getPixelSize();
      this.getContext().scale(pixels.width / this.coordWidth, pixels.height / this.coordHeight)
    }
    (this.coordLeft || this.coordTop) && this.getContext().translate(-this.coordLeft, -this.coordTop);
    this.pushElementTransform(this.canvasElement);
    this.canvasElement.draw(this.context_);
    this.popElementTransform()
  }
};
goog.graphics.CanvasGraphics.prototype.drawElement = function(element) {
  if(!(element instanceof goog.graphics.CanvasTextElement)) {
    var ctx = this.getContext();
    this.pushElementTransform(element);
    if(element.getFill && element.getStroke) {
      var fill = element.getFill();
      if(fill) {
        if(fill instanceof goog.graphics.SolidFill) {
          0 != fill.getOpacity() && (ctx.globalAlpha = fill.getOpacity(), ctx.fillStyle = fill.getColor(), element.draw(ctx), ctx.fill(), ctx.globalAlpha = 1)
        }else {
          var linearGradient = ctx.createLinearGradient(fill.getX1(), fill.getY1(), fill.getX2(), fill.getY2());
          linearGradient.addColorStop(0, fill.getColor1());
          linearGradient.addColorStop(1, fill.getColor2());
          ctx.fillStyle = linearGradient;
          element.draw(ctx);
          ctx.fill()
        }
      }
      var stroke = element.getStroke();
      if(stroke) {
        element.draw(ctx);
        ctx.strokeStyle = stroke.getColor();
        var width = stroke.getWidth();
        goog.isString(width) && -1 != width.indexOf("px") && (width = parseFloat(width) / this.getPixelScaleX());
        ctx.lineWidth = width;
        ctx.stroke()
      }
    }else {
      element.draw(ctx)
    }
    this.popElementTransform()
  }
};
goog.graphics.CanvasGraphics.prototype.append_ = function(element, group) {
  this.append(element, group)
};
goog.graphics.CanvasGraphics.prototype.append = function(element, group) {
  group = group || this.canvasElement;
  group.appendChild(element);
  this.isDrawable(group) && this.drawElement(element)
};
goog.graphics.CanvasGraphics.prototype.drawEllipse = function(cx, cy, rx, ry, stroke, fill, opt_group) {
  var element = new goog.graphics.CanvasEllipseElement(null, this, cx, cy, rx, ry, stroke, fill);
  this.append(element, opt_group);
  return element
};
goog.graphics.CanvasGraphics.prototype.drawRect = function(x, y, width, height, stroke, fill, opt_group) {
  var element = new goog.graphics.CanvasRectElement(null, this, x, y, width, height, stroke, fill);
  this.append(element, opt_group);
  return element
};
goog.graphics.CanvasGraphics.prototype.drawImage = function(x, y, width, height, src, opt_group) {
  var element = new goog.graphics.CanvasImageElement(null, this, x, y, width, height, src);
  this.append(element, opt_group);
  return element
};
goog.graphics.CanvasGraphics.prototype.drawTextOnLine = function(text, x1, y1, x2, y2, align, font, stroke, fill, opt_group) {
  var element = new goog.graphics.CanvasTextElement(this, text, x1, y1, x2, y2, align, font, stroke, fill);
  this.append(element, opt_group);
  return element
};
goog.graphics.CanvasGraphics.prototype.drawPath = function(path, stroke, fill, opt_group) {
  var element = new goog.graphics.CanvasPathElement(null, this, path, stroke, fill);
  this.append(element, opt_group);
  return element
};
goog.graphics.CanvasGraphics.prototype.isDrawable = function(group) {
  return this.isInDocument() && !this.redrawTimeout_ && !this.isRedrawRequired(group)
};
goog.graphics.CanvasGraphics.prototype.isRedrawRequired = function(group) {
  return group != this.canvasElement && group != this.lastGroup_
};
goog.graphics.CanvasGraphics.prototype.createGroup = function(opt_group) {
  var group = new goog.graphics.CanvasGroupElement(this);
  opt_group = opt_group || this.canvasElement;
  if(opt_group == this.canvasElement || opt_group == this.lastGroup_) {
    this.lastGroup_ = group
  }
  this.append(group, opt_group);
  return group
};
goog.graphics.CanvasGraphics.prototype.disposeInternal = function() {
  this.context_ = null;
  goog.graphics.CanvasGraphics.superClass_.disposeInternal.call(this)
};
goog.graphics.CanvasGraphics.prototype.enterDocument = function() {
  var oldPixelSize = this.getPixelSize();
  goog.graphics.CanvasGraphics.superClass_.enterDocument.call(this);
  oldPixelSize || (this.updateSize(), this.dispatchEvent(goog.events.EventType.RESIZE));
  this.redraw()
};
// Input 199
goog.graphics.LinearGradient = function(x1, y1, x2, y2, color1, color2, opt_opacity1, opt_opacity2) {
  this.x1_ = x1;
  this.y1_ = y1;
  this.x2_ = x2;
  this.y2_ = y2;
  this.color1_ = color1;
  this.color2_ = color2;
  goog.asserts.assert(goog.isNumber(opt_opacity1) == goog.isNumber(opt_opacity2), "Both or neither of opt_opacity1 and opt_opacity2 have to be set.");
  this.opacity1_ = goog.isDef(opt_opacity1) ? opt_opacity1 : null;
  this.opacity2_ = goog.isDef(opt_opacity2) ? opt_opacity2 : null
};
goog.inherits(goog.graphics.LinearGradient, goog.graphics.Fill);
goog.graphics.LinearGradient.prototype.getX1 = function() {
  return this.x1_
};
goog.graphics.LinearGradient.prototype.getY1 = function() {
  return this.y1_
};
goog.graphics.LinearGradient.prototype.getX2 = function() {
  return this.x2_
};
goog.graphics.LinearGradient.prototype.getY2 = function() {
  return this.y2_
};
goog.graphics.LinearGradient.prototype.getColor1 = function() {
  return this.color1_
};
goog.graphics.LinearGradient.prototype.getColor2 = function() {
  return this.color2_
};
goog.graphics.LinearGradient.prototype.getOpacity1 = function() {
  return this.opacity1_
};
goog.graphics.LinearGradient.prototype.getOpacity2 = function() {
  return this.opacity2_
};
// Input 200
goog.graphics.Stroke = function(width, color) {
  this.width_ = width;
  this.color_ = color
};
goog.graphics.Stroke.prototype.getWidth = function() {
  return this.width_
};
goog.graphics.Stroke.prototype.getColor = function() {
  return this.color_
};
// Input 201
goog.graphics.SvgGroupElement = function(element, graphics) {
  goog.graphics.GroupElement.call(this, element, graphics)
};
goog.inherits(goog.graphics.SvgGroupElement, goog.graphics.GroupElement);
goog.graphics.SvgGroupElement.prototype.clear = function() {
  goog.dom.removeChildren(this.getElement())
};
goog.graphics.SvgGroupElement.prototype.setSize = function(width, height) {
  this.getGraphics().setElementAttributes(this.getElement(), {width:width, height:height})
};
goog.graphics.SvgEllipseElement = function(element, graphics, stroke, fill) {
  goog.graphics.EllipseElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.SvgEllipseElement, goog.graphics.EllipseElement);
goog.graphics.SvgEllipseElement.prototype.setCenter = function(cx, cy) {
  this.getGraphics().setElementAttributes(this.getElement(), {cx:cx, cy:cy})
};
goog.graphics.SvgEllipseElement.prototype.setRadius = function(rx, ry) {
  this.getGraphics().setElementAttributes(this.getElement(), {rx:rx, ry:ry})
};
goog.graphics.SvgRectElement = function(element, graphics, stroke, fill) {
  goog.graphics.RectElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.SvgRectElement, goog.graphics.RectElement);
goog.graphics.SvgRectElement.prototype.setPosition = function(x, y) {
  this.getGraphics().setElementAttributes(this.getElement(), {x:x, y:y})
};
goog.graphics.SvgRectElement.prototype.setSize = function(width, height) {
  this.getGraphics().setElementAttributes(this.getElement(), {width:width, height:height})
};
goog.graphics.SvgPathElement = function(element, graphics, stroke, fill) {
  goog.graphics.PathElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.SvgPathElement, goog.graphics.PathElement);
goog.graphics.SvgPathElement.prototype.setPath = function(path) {
  this.getGraphics().setElementAttributes(this.getElement(), {d:goog.graphics.SvgGraphics.getSvgPath(path)})
};
goog.graphics.SvgTextElement = function(element, graphics, stroke, fill) {
  goog.graphics.TextElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.SvgTextElement, goog.graphics.TextElement);
goog.graphics.SvgTextElement.prototype.setText = function(text) {
  this.getElement().firstChild.data = text
};
goog.graphics.SvgImageElement = function(element, graphics) {
  goog.graphics.ImageElement.call(this, element, graphics)
};
goog.inherits(goog.graphics.SvgImageElement, goog.graphics.ImageElement);
goog.graphics.SvgImageElement.prototype.setPosition = function(x, y) {
  this.getGraphics().setElementAttributes(this.getElement(), {x:x, y:y})
};
goog.graphics.SvgImageElement.prototype.setSize = function(width, height) {
  this.getGraphics().setElementAttributes(this.getElement(), {width:width, height:height})
};
// Input 202
goog.graphics.SvgGraphics = function(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper) {
  goog.graphics.AbstractGraphics.call(this, width, height, opt_coordWidth, opt_coordHeight, opt_domHelper);
  this.defs_ = {};
  this.useManualViewbox_ = goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher(526);
  this.handler_ = new goog.events.EventHandler(this)
};
goog.inherits(goog.graphics.SvgGraphics, goog.graphics.AbstractGraphics);
goog.graphics.SvgGraphics.SVG_NS_ = "http://www.w3.org/2000/svg";
goog.graphics.SvgGraphics.DEF_ID_PREFIX_ = "_svgdef_";
goog.graphics.SvgGraphics.nextDefId_ = 0;
goog.graphics.SvgGraphics.prototype.createSvgElement_ = function(tagName, opt_attributes) {
  var element = this.dom_.getDocument().createElementNS(goog.graphics.SvgGraphics.SVG_NS_, tagName);
  opt_attributes && this.setElementAttributes(element, opt_attributes);
  return element
};
goog.graphics.SvgGraphics.prototype.setElementAttributes = function(element, attributes) {
  for(var key in attributes) {
    element.setAttribute(key, attributes[key])
  }
};
goog.graphics.SvgGraphics.prototype.append_ = function(element, opt_group) {
  var parent = opt_group || this.canvasElement;
  parent.getElement().appendChild(element.getElement())
};
goog.graphics.SvgGraphics.prototype.setElementFill = function(element, fill) {
  var svgElement = element.getElement();
  if(fill instanceof goog.graphics.SolidFill) {
    svgElement.setAttribute("fill", fill.getColor()), svgElement.setAttribute("fill-opacity", fill.getOpacity())
  }else {
    if(fill instanceof goog.graphics.LinearGradient) {
      var defKey = "lg-" + fill.getX1() + "-" + fill.getY1() + "-" + fill.getX2() + "-" + fill.getY2() + "-" + fill.getColor1() + "-" + fill.getColor2(), id = this.getDef(defKey);
      if(!id) {
        var gradient = this.createSvgElement_("linearGradient", {x1:fill.getX1(), y1:fill.getY1(), x2:fill.getX2(), y2:fill.getY2(), gradientUnits:"userSpaceOnUse"}), gstyle = "stop-color:" + fill.getColor1();
        goog.isNumber(fill.getOpacity1()) && (gstyle += ";stop-opacity:" + fill.getOpacity1());
        var stop1 = this.createSvgElement_("stop", {offset:"0%", style:gstyle});
        gradient.appendChild(stop1);
        gstyle = "stop-color:" + fill.getColor2();
        goog.isNumber(fill.getOpacity2()) && (gstyle += ";stop-opacity:" + fill.getOpacity2());
        var stop2 = this.createSvgElement_("stop", {offset:"100%", style:gstyle});
        gradient.appendChild(stop2);
        id = this.addDef(defKey, gradient)
      }
      svgElement.setAttribute("fill", "url(#" + id + ")")
    }else {
      svgElement.setAttribute("fill", "none")
    }
  }
};
goog.graphics.SvgGraphics.prototype.setElementStroke = function(element, stroke) {
  var svgElement = element.getElement();
  if(stroke) {
    svgElement.setAttribute("stroke", stroke.getColor());
    var width = stroke.getWidth();
    goog.isString(width) && -1 != width.indexOf("px") ? svgElement.setAttribute("stroke-width", parseFloat(width) / this.getPixelScaleX()) : svgElement.setAttribute("stroke-width", width)
  }else {
    svgElement.setAttribute("stroke", "none")
  }
};
goog.graphics.SvgGraphics.prototype.createDom = function() {
  var attributes = {width:this.width, height:this.height, overflow:"hidden"}, svgElement = this.createSvgElement_("svg", attributes), groupElement = this.createSvgElement_("g");
  this.defsElement_ = this.createSvgElement_("defs");
  this.canvasElement = new goog.graphics.SvgGroupElement(groupElement, this);
  svgElement.appendChild(this.defsElement_);
  svgElement.appendChild(groupElement);
  this.setElementInternal(svgElement);
  this.setViewBox_()
};
goog.graphics.SvgGraphics.prototype.getViewBox_ = function() {
  return this.coordLeft + " " + this.coordTop + " " + (this.coordWidth ? this.coordWidth + " " + this.coordHeight : "")
};
goog.graphics.SvgGraphics.prototype.setViewBox_ = function() {
  if(this.coordWidth || this.coordLeft || this.coordTop) {
    this.getElement().setAttribute("preserveAspectRatio", "none"), this.useManualViewbox_ ? this.updateManualViewBox_() : this.getElement().setAttribute("viewBox", this.getViewBox_())
  }
};
goog.graphics.SvgGraphics.prototype.updateManualViewBox_ = function() {
  if(this.isInDocument() && (this.coordWidth || this.coordLeft || !this.coordTop)) {
    var size = this.getPixelSize();
    if(0 == size.width) {
      this.getElement().style.visibility = "hidden"
    }else {
      this.getElement().style.visibility = "";
      var offsetX = -this.coordLeft, offsetY = -this.coordTop, scaleX = size.width / this.coordWidth, scaleY = size.height / this.coordHeight;
      this.canvasElement.getElement().setAttribute("transform", "scale(" + scaleX + " " + scaleY + ") translate(" + offsetX + " " + offsetY + ")")
    }
  }
};
goog.graphics.SvgGraphics.prototype.setSize = function(pixelWidth, pixelHeight) {
  goog.style.setSize(this.getElement(), pixelWidth, pixelHeight)
};
goog.graphics.SvgGraphics.prototype.getPixelSize = function() {
  if(!goog.userAgent.GECKO) {
    return this.isInDocument() ? goog.style.getSize(this.getElement()) : goog.graphics.SvgGraphics.superClass_.getPixelSize.call(this)
  }
  var width = this.width, height = this.height, computeWidth = goog.isString(width) && -1 != width.indexOf("%"), computeHeight = goog.isString(height) && -1 != height.indexOf("%");
  if(!this.isInDocument() && (computeWidth || computeHeight)) {
    return null
  }
  var parent, parentSize;
  computeWidth && (parent = this.getElement().parentNode, parentSize = goog.style.getSize(parent), width = parseFloat(width) * parentSize.width / 100);
  computeHeight && (parent = parent || this.getElement().parentNode, parentSize = parentSize || goog.style.getSize(parent), height = parseFloat(height) * parentSize.height / 100);
  return new goog.math.Size(width, height)
};
goog.graphics.SvgGraphics.prototype.clear = function() {
  this.canvasElement.clear();
  goog.dom.removeChildren(this.defsElement_);
  this.defs_ = {}
};
goog.graphics.SvgGraphics.prototype.drawEllipse = function(cx, cy, rx, ry, stroke, fill, opt_group) {
  var element = this.createSvgElement_("ellipse", {cx:cx, cy:cy, rx:rx, ry:ry}), wrapper = new goog.graphics.SvgEllipseElement(element, this, stroke, fill);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.SvgGraphics.prototype.drawRect = function(x, y, width, height, stroke, fill, opt_group) {
  var element = this.createSvgElement_("rect", {x:x, y:y, width:width, height:height}), wrapper = new goog.graphics.SvgRectElement(element, this, stroke, fill);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.SvgGraphics.prototype.drawImage = function(x, y, width, height, src, opt_group) {
  var element = this.createSvgElement_("image", {x:x, y:y, width:width, height:height, "image-rendering":"optimizeQuality", preserveAspectRatio:"none"});
  element.setAttributeNS("http://www.w3.org/1999/xlink", "href", src);
  var wrapper = new goog.graphics.SvgImageElement(element, this);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.SvgGraphics.prototype.drawTextOnLine = function(text, x1, y1, x2, y2, align, font, stroke, fill, opt_group) {
  var angle = Math.round(goog.math.angle(x1, y1, x2, y2)), dx = x2 - x1, dy = y2 - y1, lineLength = Math.round(Math.sqrt(dx * dx + dy * dy)), fontSize = font.size, attributes = {"font-family":font.family, "font-size":fontSize}, baseline = Math.round(0.85 * fontSize), textY = Math.round(y1 - fontSize / 2 + baseline), textX = x1;
  "center" == align ? (textX += Math.round(lineLength / 2), attributes["text-anchor"] = "middle") : "right" == align && (textX += lineLength, attributes["text-anchor"] = "end");
  attributes.x = textX;
  attributes.y = textY;
  font.bold && (attributes["font-weight"] = "bold");
  font.italic && (attributes["font-style"] = "italic");
  0 != angle && (attributes.transform = "rotate(" + angle + " " + x1 + " " + y1 + ")");
  var element = this.createSvgElement_("text", attributes);
  element.appendChild(this.dom_.getDocument().createTextNode(text));
  if(null == stroke && goog.userAgent.GECKO && goog.userAgent.MAC) {
    var color = "black";
    fill instanceof goog.graphics.SolidFill && (color = fill.getColor());
    stroke = new goog.graphics.Stroke(1, color)
  }
  var wrapper = new goog.graphics.SvgTextElement(element, this, stroke, fill);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.SvgGraphics.prototype.drawPath = function(path, stroke, fill, opt_group) {
  var element = this.createSvgElement_("path", {d:goog.graphics.SvgGraphics.getSvgPath(path)}), wrapper = new goog.graphics.SvgPathElement(element, this, stroke, fill);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.SvgGraphics.getSvgPath = function(path) {
  var list = [];
  path.forEachSegment(function(segment, args) {
    switch(segment) {
      case goog.graphics.Path.Segment.MOVETO:
        list.push("M");
        Array.prototype.push.apply(list, args);
        break;
      case goog.graphics.Path.Segment.LINETO:
        list.push("L");
        Array.prototype.push.apply(list, args);
        break;
      case goog.graphics.Path.Segment.CURVETO:
        list.push("C");
        Array.prototype.push.apply(list, args);
        break;
      case goog.graphics.Path.Segment.ARCTO:
        var extent = args[3];
        list.push("A", args[0], args[1], 0, 180 < Math.abs(extent) ? 1 : 0, 0 < extent ? 1 : 0, args[4], args[5]);
        break;
      case goog.graphics.Path.Segment.CLOSE:
        list.push("Z")
    }
  });
  return list.join(" ")
};
goog.graphics.SvgGraphics.prototype.createGroup = function(opt_group) {
  var element = this.createSvgElement_("g"), parent = opt_group || this.canvasElement;
  parent.getElement().appendChild(element);
  return new goog.graphics.SvgGroupElement(element, this)
};
goog.graphics.SvgGraphics.prototype.getTextWidth = function() {
};
goog.graphics.SvgGraphics.prototype.addDef = function(defKey, defElement) {
  if(defKey in this.defs_) {
    return this.defs_[defKey]
  }
  var id = goog.graphics.SvgGraphics.DEF_ID_PREFIX_ + goog.graphics.SvgGraphics.nextDefId_++;
  defElement.setAttribute("id", id);
  this.defs_[defKey] = id;
  var defs = this.defsElement_;
  defs.appendChild(defElement);
  return id
};
goog.graphics.SvgGraphics.prototype.getDef = function(defKey) {
  return defKey in this.defs_ ? this.defs_[defKey] : null
};
goog.graphics.SvgGraphics.prototype.enterDocument = function() {
  var oldPixelSize = this.getPixelSize();
  goog.graphics.SvgGraphics.superClass_.enterDocument.call(this);
  oldPixelSize || this.dispatchEvent(goog.events.EventType.RESIZE);
  if(this.useManualViewbox_) {
    var width = this.width, height = this.height;
    "string" == typeof width && -1 != width.indexOf("%") && "string" == typeof height && -1 != height.indexOf("%") && this.handler_.listen(goog.graphics.SvgGraphics.getResizeCheckTimer_(), goog.Timer.TICK, this.updateManualViewBox_);
    this.updateManualViewBox_()
  }
};
goog.graphics.SvgGraphics.prototype.exitDocument = function() {
  goog.graphics.SvgGraphics.superClass_.exitDocument.call(this);
  this.useManualViewbox_ && this.handler_.unlisten(goog.graphics.SvgGraphics.getResizeCheckTimer_(), goog.Timer.TICK, this.updateManualViewBox_)
};
goog.graphics.SvgGraphics.prototype.disposeInternal = function() {
  delete this.defs_;
  delete this.defsElement_;
  delete this.canvasElement;
  goog.graphics.SvgGraphics.superClass_.disposeInternal.call(this)
};
goog.graphics.SvgGraphics.getResizeCheckTimer_ = function() {
  goog.graphics.SvgGraphics.resizeCheckTimer_ || (goog.graphics.SvgGraphics.resizeCheckTimer_ = new goog.Timer(400), goog.graphics.SvgGraphics.resizeCheckTimer_.start());
  return goog.graphics.SvgGraphics.resizeCheckTimer_
};
// Input 203
goog.graphics.vmlGetElement_ = function() {
  return this.element_ = this.getGraphics().getVmlElement(this.id_) || this.element_
};
goog.graphics.VmlGroupElement = function(element, graphics) {
  this.id_ = element.id;
  goog.graphics.GroupElement.call(this, element, graphics)
};
goog.inherits(goog.graphics.VmlGroupElement, goog.graphics.GroupElement);
goog.graphics.VmlGroupElement.prototype.getElement = goog.graphics.vmlGetElement_;
goog.graphics.VmlGroupElement.prototype.clear = function() {
  goog.dom.removeChildren(this.getElement())
};
goog.graphics.VmlGroupElement.prototype.isRootElement_ = function() {
  return this.getGraphics().getCanvasElement() == this
};
goog.graphics.VmlGroupElement.prototype.setSize = function(width, height) {
  var element = this.getElement(), style = element.style;
  style.width = goog.graphics.VmlGraphics.toSizePx(width);
  style.height = goog.graphics.VmlGraphics.toSizePx(height);
  element.coordsize = goog.graphics.VmlGraphics.toSizeCoord(width) + " " + goog.graphics.VmlGraphics.toSizeCoord(height);
  this.isRootElement_() || (element.coordorigin = "0 0")
};
goog.graphics.VmlEllipseElement = function(element, graphics, cx, cy, rx, ry, stroke, fill) {
  this.id_ = element.id;
  goog.graphics.EllipseElement.call(this, element, graphics, stroke, fill);
  this.cx = cx;
  this.cy = cy;
  this.rx = rx;
  this.ry = ry
};
goog.inherits(goog.graphics.VmlEllipseElement, goog.graphics.EllipseElement);
goog.graphics.VmlEllipseElement.prototype.getElement = goog.graphics.vmlGetElement_;
goog.graphics.VmlEllipseElement.prototype.setCenter = function(cx, cy) {
  this.cx = cx;
  this.cy = cy;
  goog.graphics.VmlGraphics.setPositionAndSize(this.getElement(), cx - this.rx, cy - this.ry, 2 * this.rx, 2 * this.ry)
};
goog.graphics.VmlEllipseElement.prototype.setRadius = function(rx, ry) {
  this.rx = rx;
  this.ry = ry;
  goog.graphics.VmlGraphics.setPositionAndSize(this.getElement(), this.cx - rx, this.cy - ry, 2 * rx, 2 * ry)
};
goog.graphics.VmlRectElement = function(element, graphics, stroke, fill) {
  this.id_ = element.id;
  goog.graphics.RectElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.VmlRectElement, goog.graphics.RectElement);
goog.graphics.VmlRectElement.prototype.getElement = goog.graphics.vmlGetElement_;
goog.graphics.VmlRectElement.prototype.setPosition = function(x, y) {
  var style = this.getElement().style;
  style.left = goog.graphics.VmlGraphics.toPosPx(x);
  style.top = goog.graphics.VmlGraphics.toPosPx(y)
};
goog.graphics.VmlRectElement.prototype.setSize = function(width, height) {
  var style = this.getElement().style;
  style.width = goog.graphics.VmlGraphics.toSizePx(width);
  style.height = goog.graphics.VmlGraphics.toSizePx(height)
};
goog.graphics.VmlPathElement = function(element, graphics, stroke, fill) {
  this.id_ = element.id;
  goog.graphics.PathElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.VmlPathElement, goog.graphics.PathElement);
goog.graphics.VmlPathElement.prototype.getElement = goog.graphics.vmlGetElement_;
goog.graphics.VmlPathElement.prototype.setPath = function(path) {
  goog.graphics.VmlGraphics.setAttribute(this.getElement(), "path", goog.graphics.VmlGraphics.getVmlPath(path))
};
goog.graphics.VmlTextElement = function(element, graphics, stroke, fill) {
  this.id_ = element.id;
  goog.graphics.TextElement.call(this, element, graphics, stroke, fill)
};
goog.inherits(goog.graphics.VmlTextElement, goog.graphics.TextElement);
goog.graphics.VmlTextElement.prototype.getElement = goog.graphics.vmlGetElement_;
goog.graphics.VmlTextElement.prototype.setText = function(text) {
  goog.graphics.VmlGraphics.setAttribute(this.getElement().childNodes[1], "string", text)
};
goog.graphics.VmlImageElement = function(element, graphics) {
  this.id_ = element.id;
  goog.graphics.ImageElement.call(this, element, graphics)
};
goog.inherits(goog.graphics.VmlImageElement, goog.graphics.ImageElement);
goog.graphics.VmlImageElement.prototype.getElement = goog.graphics.vmlGetElement_;
goog.graphics.VmlImageElement.prototype.setPosition = function(x, y) {
  var style = this.getElement().style;
  style.left = goog.graphics.VmlGraphics.toPosPx(x);
  style.top = goog.graphics.VmlGraphics.toPosPx(y)
};
goog.graphics.VmlImageElement.prototype.setSize = function(width, height) {
  var style = this.getElement().style;
  style.width = goog.graphics.VmlGraphics.toPosPx(width);
  style.height = goog.graphics.VmlGraphics.toPosPx(height)
};
// Input 204
goog.graphics.VmlGraphics = function(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper) {
  goog.graphics.AbstractGraphics.call(this, width, height, opt_coordWidth, opt_coordHeight, opt_domHelper);
  this.handler_ = new goog.events.EventHandler(this)
};
goog.inherits(goog.graphics.VmlGraphics, goog.graphics.AbstractGraphics);
goog.graphics.VmlGraphics.VML_PREFIX_ = "g_vml_";
goog.graphics.VmlGraphics.VML_NS_ = "urn:schemas-microsoft-com:vml";
goog.graphics.VmlGraphics.VML_IMPORT_ = "#default#VML";
goog.graphics.VmlGraphics.IE8_MODE_ = document.documentMode && 8 <= document.documentMode;
goog.graphics.VmlGraphics.COORD_MULTIPLIER = 100;
goog.graphics.VmlGraphics.toCssSize = function(size) {
  return goog.isString(size) && goog.string.endsWith(size, "%") ? size : parseFloat(size.toString()) + "px"
};
goog.graphics.VmlGraphics.toPosCoord = function(number) {
  return Math.round((parseFloat(number.toString()) - 0.5) * goog.graphics.VmlGraphics.COORD_MULTIPLIER)
};
goog.graphics.VmlGraphics.toPosPx = function(number) {
  return goog.graphics.VmlGraphics.toPosCoord(number) + "px"
};
goog.graphics.VmlGraphics.toSizeCoord = function(number) {
  return Math.round(parseFloat(number.toString()) * goog.graphics.VmlGraphics.COORD_MULTIPLIER)
};
goog.graphics.VmlGraphics.toSizePx = function(number) {
  return goog.graphics.VmlGraphics.toSizeCoord(number) + "px"
};
goog.graphics.VmlGraphics.setAttribute = function(element, name, value) {
  goog.graphics.VmlGraphics.IE8_MODE_ ? element[name] = value : element.setAttribute(name, value)
};
goog.graphics.VmlGraphics.prototype.createVmlElement = function(tagName) {
  var element = this.dom_.createElement(goog.graphics.VmlGraphics.VML_PREFIX_ + ":" + tagName);
  element.id = goog.string.createUniqueString();
  return element
};
goog.graphics.VmlGraphics.prototype.getVmlElement = function(id) {
  return this.dom_.getElement(id)
};
goog.graphics.VmlGraphics.prototype.updateGraphics_ = function() {
  goog.graphics.VmlGraphics.IE8_MODE_ && this.isInDocument() && (this.getElement().innerHTML = this.getElement().innerHTML)
};
goog.graphics.VmlGraphics.prototype.append_ = function(element, opt_group) {
  var parent = opt_group || this.canvasElement;
  parent.getElement().appendChild(element.getElement());
  this.updateGraphics_()
};
goog.graphics.VmlGraphics.prototype.setElementFill = function(element, fill) {
  var vmlElement = element.getElement();
  this.removeFill(vmlElement);
  if(fill instanceof goog.graphics.SolidFill) {
    if("transparent" == fill.getColor()) {
      vmlElement.filled = !1
    }else {
      if(1 != fill.getOpacity()) {
        vmlElement.filled = !0;
        var fillNode = this.createVmlElement("fill");
        fillNode.opacity = Math.round(100 * fill.getOpacity()) + "%";
        fillNode.color = fill.getColor();
        vmlElement.appendChild(fillNode)
      }else {
        vmlElement.filled = !0, vmlElement.fillcolor = fill.getColor()
      }
    }
  }else {
    if(fill instanceof goog.graphics.LinearGradient) {
      vmlElement.filled = !0;
      var gradient = this.createVmlElement("fill");
      gradient.color = fill.getColor1();
      gradient.color2 = fill.getColor2();
      goog.isNumber(fill.getOpacity1()) && (gradient.opacity = fill.getOpacity1());
      goog.isNumber(fill.getOpacity2()) && (gradient.opacity2 = fill.getOpacity2());
      var angle = goog.math.angle(fill.getX1(), fill.getY1(), fill.getX2(), fill.getY2()), angle = Math.round(goog.math.standardAngle(270 - angle));
      gradient.angle = angle;
      gradient.type = "gradient";
      vmlElement.appendChild(gradient)
    }else {
      vmlElement.filled = !1
    }
  }
  this.updateGraphics_()
};
goog.graphics.VmlGraphics.prototype.setElementStroke = function(element, stroke) {
  var vmlElement = element.getElement();
  if(stroke) {
    vmlElement.stroked = !0;
    var width = stroke.getWidth(), width = goog.isString(width) && -1 == width.indexOf("px") ? parseFloat(width) : width * this.getPixelScaleX(), strokeElement = vmlElement.getElementsByTagName("stroke")[0];
    1 > width ? (strokeElement = strokeElement || this.createVmlElement("stroke"), strokeElement.opacity = width, strokeElement.weight = "1px", strokeElement.color = stroke.getColor(), vmlElement.appendChild(strokeElement)) : (strokeElement && vmlElement.removeChild(strokeElement), vmlElement.strokecolor = stroke.getColor(), vmlElement.strokeweight = width + "px")
  }else {
    vmlElement.stroked = !1
  }
  this.updateGraphics_()
};
goog.graphics.VmlGraphics.prototype.removeFill = function(element) {
  element.fillcolor = "";
  for(var i = 0;i < element.childNodes.length;i++) {
    var child = element.childNodes[i];
    "fill" == child.tagName && element.removeChild(child)
  }
};
goog.graphics.VmlGraphics.setPositionAndSize = function(element, left, top, width, height) {
  var style = element.style;
  style.position = "absolute";
  style.left = goog.graphics.VmlGraphics.toPosPx(left);
  style.top = goog.graphics.VmlGraphics.toPosPx(top);
  style.width = goog.graphics.VmlGraphics.toSizePx(width);
  style.height = goog.graphics.VmlGraphics.toSizePx(height);
  "shape" == element.tagName && (element.coordsize = goog.graphics.VmlGraphics.toSizeCoord(width) + " " + goog.graphics.VmlGraphics.toSizeCoord(height))
};
goog.graphics.VmlGraphics.prototype.createFullSizeElement_ = function(type) {
  var element = this.createVmlElement(type), size = this.getCoordSize();
  goog.graphics.VmlGraphics.setPositionAndSize(element, 0, 0, size.width, size.height);
  return element
};
try {
  eval("document.namespaces")
}catch(ex$$13) {
}
goog.graphics.VmlGraphics.prototype.createDom = function() {
  var doc = this.dom_.getDocument();
  if(!doc.namespaces[goog.graphics.VmlGraphics.VML_PREFIX_]) {
    goog.graphics.VmlGraphics.IE8_MODE_ ? doc.namespaces.add(goog.graphics.VmlGraphics.VML_PREFIX_, goog.graphics.VmlGraphics.VML_NS_, goog.graphics.VmlGraphics.VML_IMPORT_) : doc.namespaces.add(goog.graphics.VmlGraphics.VML_PREFIX_, goog.graphics.VmlGraphics.VML_NS_);
    var ss = doc.createStyleSheet();
    ss.cssText = goog.graphics.VmlGraphics.VML_PREFIX_ + "\\:*{behavior:url(#default#VML)}"
  }
  var pixelWidth = this.width, pixelHeight = this.height, divElement = this.dom_.createDom("div", {style:"overflow:hidden;position:relative;width:" + goog.graphics.VmlGraphics.toCssSize(pixelWidth) + ";height:" + goog.graphics.VmlGraphics.toCssSize(pixelHeight)});
  this.setElementInternal(divElement);
  var group = this.createVmlElement("group"), style = group.style;
  style.position = "absolute";
  style.left = style.top = 0;
  style.width = this.width;
  style.height = this.height;
  group.coordsize = this.coordWidth ? goog.graphics.VmlGraphics.toSizeCoord(this.coordWidth) + " " + goog.graphics.VmlGraphics.toSizeCoord(this.coordHeight) : goog.graphics.VmlGraphics.toSizeCoord(pixelWidth) + " " + goog.graphics.VmlGraphics.toSizeCoord(pixelHeight);
  group.coordorigin = goog.isDef(this.coordLeft) ? goog.graphics.VmlGraphics.toSizeCoord(this.coordLeft) + " " + goog.graphics.VmlGraphics.toSizeCoord(this.coordTop) : "0 0";
  divElement.appendChild(group);
  this.canvasElement = new goog.graphics.VmlGroupElement(group, this);
  goog.events.listen(divElement, goog.events.EventType.RESIZE, goog.bind(this.handleContainerResize_, this))
};
goog.graphics.VmlGraphics.prototype.handleContainerResize_ = function() {
  var size = goog.style.getSize(this.getElement()), style = this.canvasElement.getElement().style;
  if(size.width) {
    style.width = size.width + "px", style.height = size.height + "px"
  }else {
    for(var current = this.getElement();current && current.currentStyle && "none" != current.currentStyle.display;) {
      current = current.parentNode
    }
    current && current.currentStyle && this.handler_.listen(current, "propertychange", this.handleContainerResize_)
  }
  this.dispatchEvent(goog.events.EventType.RESIZE)
};
goog.graphics.VmlGraphics.prototype.setSize = function(pixelWidth, pixelHeight) {
  goog.style.setSize(this.getElement(), pixelWidth, pixelHeight)
};
goog.graphics.VmlGraphics.prototype.getPixelSize = function() {
  var el = this.getElement();
  return new goog.math.Size(el.style.pixelWidth || el.offsetWidth || 1, el.style.pixelHeight || el.offsetHeight || 1)
};
goog.graphics.VmlGraphics.prototype.clear = function() {
  this.canvasElement.clear()
};
goog.graphics.VmlGraphics.prototype.drawEllipse = function(cx, cy, rx, ry, stroke, fill, opt_group) {
  var element = this.createVmlElement("oval");
  goog.graphics.VmlGraphics.setPositionAndSize(element, cx - rx, cy - ry, 2 * rx, 2 * ry);
  var wrapper = new goog.graphics.VmlEllipseElement(element, this, cx, cy, rx, ry, stroke, fill);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.VmlGraphics.prototype.drawRect = function(x, y, width, height, stroke, fill, opt_group) {
  var element = this.createVmlElement("rect");
  goog.graphics.VmlGraphics.setPositionAndSize(element, x, y, width, height);
  var wrapper = new goog.graphics.VmlRectElement(element, this, stroke, fill);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.VmlGraphics.prototype.drawImage = function(x, y, width, height, src, opt_group) {
  var element = this.createVmlElement("image");
  goog.graphics.VmlGraphics.setPositionAndSize(element, x, y, width, height);
  goog.graphics.VmlGraphics.setAttribute(element, "src", src);
  var wrapper = new goog.graphics.VmlImageElement(element, this);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.VmlGraphics.prototype.drawTextOnLine = function(text, x1, y1, x2, y2, align, font, stroke, fill, opt_group) {
  var shape = this.createFullSizeElement_("shape"), pathElement = this.createVmlElement("path"), path = "M" + goog.graphics.VmlGraphics.toPosCoord(x1) + "," + goog.graphics.VmlGraphics.toPosCoord(y1) + "L" + goog.graphics.VmlGraphics.toPosCoord(x2) + "," + goog.graphics.VmlGraphics.toPosCoord(y2) + "E";
  goog.graphics.VmlGraphics.setAttribute(pathElement, "v", path);
  goog.graphics.VmlGraphics.setAttribute(pathElement, "textpathok", "true");
  var textPathElement = this.createVmlElement("textpath");
  textPathElement.setAttribute("on", "true");
  var style = textPathElement.style;
  style.fontSize = font.size * this.getPixelScaleX();
  style.fontFamily = font.family;
  null != align && (style["v-text-align"] = align);
  font.bold && (style.fontWeight = "bold");
  font.italic && (style.fontStyle = "italic");
  goog.graphics.VmlGraphics.setAttribute(textPathElement, "string", text);
  shape.appendChild(pathElement);
  shape.appendChild(textPathElement);
  var wrapper = new goog.graphics.VmlTextElement(shape, this, stroke, fill);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.VmlGraphics.prototype.drawPath = function(path, stroke, fill, opt_group) {
  var element = this.createFullSizeElement_("shape");
  goog.graphics.VmlGraphics.setAttribute(element, "path", goog.graphics.VmlGraphics.getVmlPath(path));
  var wrapper = new goog.graphics.VmlPathElement(element, this, stroke, fill);
  this.append_(wrapper, opt_group);
  return wrapper
};
goog.graphics.VmlGraphics.getVmlPath = function(path) {
  var list = [];
  path.forEachSegment(function(segment, args) {
    switch(segment) {
      case goog.graphics.Path.Segment.MOVETO:
        list.push("m");
        Array.prototype.push.apply(list, goog.array.map(args, goog.graphics.VmlGraphics.toSizeCoord));
        break;
      case goog.graphics.Path.Segment.LINETO:
        list.push("l");
        Array.prototype.push.apply(list, goog.array.map(args, goog.graphics.VmlGraphics.toSizeCoord));
        break;
      case goog.graphics.Path.Segment.CURVETO:
        list.push("c");
        Array.prototype.push.apply(list, goog.array.map(args, goog.graphics.VmlGraphics.toSizeCoord));
        break;
      case goog.graphics.Path.Segment.CLOSE:
        list.push("x");
        break;
      case goog.graphics.Path.Segment.ARCTO:
        var toAngle = args[2] + args[3], cx = goog.graphics.VmlGraphics.toSizeCoord(args[4] - goog.math.angleDx(toAngle, args[0])), cy = goog.graphics.VmlGraphics.toSizeCoord(args[5] - goog.math.angleDy(toAngle, args[1])), rx = goog.graphics.VmlGraphics.toSizeCoord(args[0]), ry = goog.graphics.VmlGraphics.toSizeCoord(args[1]), fromAngle = Math.round(-65536 * args[2]), extent = Math.round(-65536 * args[3]);
        list.push("ae", cx, cy, rx, ry, fromAngle, extent)
    }
  });
  return list.join(" ")
};
goog.graphics.VmlGraphics.prototype.createGroup = function(opt_group) {
  var element = this.createFullSizeElement_("group"), parent = opt_group || this.canvasElement;
  parent.getElement().appendChild(element);
  return new goog.graphics.VmlGroupElement(element, this)
};
goog.graphics.VmlGraphics.prototype.getTextWidth = function() {
  return 0
};
goog.graphics.VmlGraphics.prototype.enterDocument = function() {
  goog.graphics.VmlGraphics.superClass_.enterDocument.call(this);
  this.handleContainerResize_();
  this.updateGraphics_()
};
goog.graphics.VmlGraphics.prototype.disposeInternal = function() {
  this.canvasElement = null;
  goog.graphics.VmlGraphics.superClass_.disposeInternal.call(this)
};
// Input 205
goog.graphics.createGraphics = function(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper) {
  var graphics;
  graphics = goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9") ? new goog.graphics.VmlGraphics(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper) : !goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("420") && !goog.userAgent.MOBILE ? new goog.graphics.SvgGraphics(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper) : new goog.graphics.CanvasGraphics(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper);
  graphics.createDom();
  return graphics
};
goog.graphics.createSimpleGraphics = function(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper) {
  if(goog.userAgent.MAC && goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("1.9a")) {
    var graphics = new goog.graphics.CanvasGraphics(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper);
    graphics.createDom();
    return graphics
  }
  return goog.graphics.createGraphics(width, height, opt_coordWidth, opt_coordHeight, opt_domHelper)
};
goog.graphics.isBrowserSupported = function() {
  return goog.userAgent.IE ? goog.userAgent.isVersionOrHigher("5.5") : goog.userAgent.GECKO ? goog.userAgent.isVersionOrHigher("1.8") : goog.userAgent.OPERA ? goog.userAgent.isVersionOrHigher("9.0") : goog.userAgent.WEBKIT ? goog.userAgent.isVersionOrHigher("412") : !1
};
// Input 206
goog.ui.ServerChart = function(type, opt_width, opt_height, opt_domHelper, opt_uri) {
  goog.ui.Component.call(this, opt_domHelper);
  this.uri_ = new goog.Uri(opt_uri || goog.ui.ServerChart.CHART_SERVER_SCHEME_INDEPENDENT_URI);
  this.encodingType_ = goog.ui.ServerChart.EncodingType.AUTOMATIC;
  this.dataSets_ = [];
  this.setColors_ = [];
  this.setLegendTexts_ = [];
  this.xLabels_ = [];
  this.leftLabels_ = [];
  this.rightLabels_ = [];
  this.multiAxisType_ = [];
  this.multiAxisLabelText_ = {};
  this.multiAxisLabelPosition_ = {};
  this.multiAxisRange_ = {};
  this.multiAxisLabelStyle_ = {};
  this.setType(type);
  this.setSize(opt_width, opt_height);
  this.minValue_ = this.isPieChart() ? 0 : Infinity
};
goog.inherits(goog.ui.ServerChart, goog.ui.Component);
goog.ui.ServerChart.CHART_SERVER_SCHEME_INDEPENDENT_URI = "//chart.googleapis.com/chart";
goog.ui.ServerChart.CHART_SERVER_HTTP_URI = "http://chart.googleapis.com/chart";
goog.ui.ServerChart.CHART_SERVER_HTTPS_URI = "https://chart.googleapis.com/chart";
goog.ui.ServerChart.CHART_SERVER_URI = goog.ui.ServerChart.CHART_SERVER_HTTP_URI;
goog.ui.ServerChart.DEFAULT_NORMALIZATION = 0.5;
goog.ui.ServerChart.prototype.uriLengthLimit_ = 2048;
goog.ui.ServerChart.prototype.gridX_ = 0;
goog.ui.ServerChart.prototype.gridY_ = 0;
goog.ui.ServerChart.prototype.maxValue_ = -Infinity;
goog.ui.ServerChart.prototype.title_ = null;
goog.ui.ServerChart.prototype.numVisibleDataSets_ = null;
goog.ui.ServerChart.prototype.createDom = function() {
  var size = this.getSize();
  this.setElementInternal(this.getDomHelper().createDom("img", {src:this.getUri(), "class":"charts-serverchart-image", width:size[0], height:size[1]}))
};
goog.ui.ServerChart.prototype.decorateInternal = function(img) {
  img.src = this.getUri();
  this.setElementInternal(img)
};
goog.ui.ServerChart.prototype.getUri = function() {
  this.computeDataString_();
  return this.uri_
};
goog.ui.ServerChart.prototype.getUriLengthLimit = function() {
  return this.uriLengthLimit_
};
goog.ui.ServerChart.prototype.setMarkerParameter = function(value) {
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.MARKERS, value)
};
goog.ui.ServerChart.prototype.getMarkerParameter = function() {
  return this.uri_.getParameterValue(goog.ui.ServerChart.UriParam.MARKERS)
};
goog.ui.ServerChart.EncodingType = {AUTOMATIC:"", EXTENDED:"e", SIMPLE:"s", TEXT:"t"};
goog.ui.ServerChart.ChartType = {BAR:"br", CLOCK:"cf", CONCENTRIC_PIE:"pc", FILLEDLINE:"lr", FINANCE:"lfi", GOOGLEOMETER:"gom", HORIZONTAL_GROUPED_BAR:"bhg", HORIZONTAL_STACKED_BAR:"bhs", LINE:"lc", MAP:"t", MAPUSA:"tuss", MAPWORLD:"twoc", PIE:"p", PIE3D:"p3", RADAR:"rs", SCATTER:"s", SPARKLINE:"ls", VENN:"v", VERTICAL_GROUPED_BAR:"bvg", VERTICAL_STACKED_BAR:"bvs", XYLINE:"lxy"};
goog.ui.ServerChart.MultiAxisType = {X_AXIS:"x", LEFT_Y_AXIS:"y", RIGHT_Y_AXIS:"r", TOP_AXIS:"t"};
goog.ui.ServerChart.MultiAxisAlignment = {ALIGN_LEFT:-1, ALIGN_CENTER:0, ALIGN_RIGHT:1};
goog.ui.ServerChart.LegendPosition = {TOP:"t", BOTTOM:"b", LEFT:"l", RIGHT:"r"};
goog.ui.ServerChart.AxisDisplayType = {LINE_AND_TICKS:"lt", LINE:"l", TICKS:"t"};
goog.ui.ServerChart.MaximumValue = {WIDTH:1E3, HEIGHT:1E3, MAP_WIDTH:440, MAP_HEIGHT:220, TOTAL_AREA:3E5};
goog.ui.ServerChart.UriParam = {BACKGROUND_FILL:"chf", BAR_HEIGHT:"chbh", DATA:"chd", DATA_COLORS:"chco", DATA_LABELS:"chld", DATA_SCALING:"chds", DIGITAL_SIGNATURE:"sig", GEOGRAPHICAL_REGION:"chtm", GRID:"chg", LABEL_COLORS:"chlc", LEFT_Y_LABELS:"chly", LEGEND:"chdl", LEGEND_POSITION:"chdlp", LEGEND_TEXTS:"chdl", LINE_STYLES:"chls", MARGINS:"chma", MARKERS:"chm", MISC_PARAMS:"chp", MULTI_AXIS_LABEL_POSITION:"chxp", MULTI_AXIS_LABEL_TEXT:"chxl", MULTI_AXIS_RANGE:"chxr", MULTI_AXIS_STYLE:"chxs", MULTI_AXIS_TYPES:"chxt", 
RIGHT_LABELS:"chlr", RIGHT_LABEL_POSITIONS:"chlrp", SIZE:"chs", TITLE:"chtt", TITLE_FORMAT:"chts", TYPE:"cht", X_AXIS_STYLE:"chx", X_LABELS:"chl"};
goog.ui.ServerChart.prototype.setBackgroundFill = function(fill) {
  var value = [];
  goog.array.forEach(fill, function(spec) {
    spec.area = spec.area || "bg";
    spec.effect = spec.effect || "s";
    value.push([spec.area, spec.effect, spec.color].join())
  });
  value = value.join("|");
  this.setParameterValue(goog.ui.ServerChart.UriParam.BACKGROUND_FILL, value)
};
goog.ui.ServerChart.prototype.setEncodingType = function(type) {
  this.encodingType_ = type
};
goog.ui.ServerChart.prototype.setType = function(type) {
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.TYPE, type)
};
goog.ui.ServerChart.prototype.getType = function() {
  return this.uri_.getParameterValue(goog.ui.ServerChart.UriParam.TYPE)
};
goog.ui.ServerChart.prototype.setSize = function(opt_width, opt_height) {
  var sizeString = [opt_width || 300, opt_height || 150].join("x");
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.SIZE, sizeString)
};
goog.ui.ServerChart.prototype.getSize = function() {
  var sizeStr = this.uri_.getParameterValue(goog.ui.ServerChart.UriParam.SIZE);
  return sizeStr.split("x")
};
goog.ui.ServerChart.prototype.setMinValue = function(minValue) {
  this.minValue_ = minValue
};
goog.ui.ServerChart.prototype.getMinValue = function() {
  return this.minValue_
};
goog.ui.ServerChart.prototype.setMaxValue = function(maxValue) {
  this.maxValue_ = maxValue
};
goog.ui.ServerChart.prototype.getMaxValue = function() {
  return this.maxValue_
};
goog.ui.ServerChart.prototype.setMargins = function(leftMargin, rightMargin, topMargin, bottomMargin) {
  var margins = [leftMargin, rightMargin, topMargin, bottomMargin].join(), UriParam = goog.ui.ServerChart.UriParam;
  this.uri_.setParameterValue(UriParam.MARGINS, margins)
};
goog.ui.ServerChart.prototype.setXLabels = function(labels) {
  this.xLabels_ = labels;
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.X_LABELS, this.xLabels_.join("|"))
};
goog.ui.ServerChart.prototype.isBarChart = function() {
  var type = this.getType();
  return type == goog.ui.ServerChart.ChartType.BAR || type == goog.ui.ServerChart.ChartType.HORIZONTAL_GROUPED_BAR || type == goog.ui.ServerChart.ChartType.HORIZONTAL_STACKED_BAR || type == goog.ui.ServerChart.ChartType.VERTICAL_GROUPED_BAR || type == goog.ui.ServerChart.ChartType.VERTICAL_STACKED_BAR
};
goog.ui.ServerChart.prototype.isPieChart = function() {
  var type = this.getType();
  return type == goog.ui.ServerChart.ChartType.PIE || type == goog.ui.ServerChart.ChartType.PIE3D || type == goog.ui.ServerChart.ChartType.CONCENTRIC_PIE
};
goog.ui.ServerChart.prototype.isHorizontalBarChart = function() {
  var type = this.getType();
  return type == goog.ui.ServerChart.ChartType.BAR || type == goog.ui.ServerChart.ChartType.HORIZONTAL_GROUPED_BAR || type == goog.ui.ServerChart.ChartType.HORIZONTAL_STACKED_BAR
};
goog.ui.ServerChart.prototype.isLineChart = function() {
  var type = this.getType();
  return type == goog.ui.ServerChart.ChartType.FILLEDLINE || type == goog.ui.ServerChart.ChartType.LINE || type == goog.ui.ServerChart.ChartType.SPARKLINE || type == goog.ui.ServerChart.ChartType.XYLINE
};
goog.ui.ServerChart.prototype.isMap = function() {
  var type = this.getType();
  return type == goog.ui.ServerChart.ChartType.MAP || type == goog.ui.ServerChart.ChartType.MAPUSA || type == goog.ui.ServerChart.ChartType.MAPWORLD
};
goog.ui.ServerChart.prototype.isStackedBarChart = function() {
  var type = this.getType();
  return type == goog.ui.ServerChart.ChartType.BAR || type == goog.ui.ServerChart.ChartType.HORIZONTAL_STACKED_BAR || type == goog.ui.ServerChart.ChartType.VERTICAL_STACKED_BAR
};
goog.ui.ServerChart.prototype.setParameterValue = function(key, value) {
  this.uri_.setParameterValue(key, value)
};
goog.ui.ServerChart.prototype.removeParameter = function(key) {
  this.uri_.removeParameter(key)
};
goog.ui.ServerChart.prototype.setLegendPosition = function(value) {
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.LEGEND_POSITION, value)
};
goog.ui.ServerChart.prototype.setNumVisibleDataSets = function(n) {
  this.numVisibleDataSets_ = n
};
goog.ui.ServerChart.prototype.setTitle = function(title) {
  this.title_ = title;
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.TITLE, this.title_.replace(/\n/g, "|"))
};
goog.ui.ServerChart.prototype.setAutomaticBarWidth = function(opt_spaceBars, opt_spaceGroups) {
  var widths = ["a"];
  goog.isDef(opt_spaceBars) && widths.push(opt_spaceBars);
  goog.isDef(opt_spaceGroups) && widths.push(opt_spaceGroups);
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.BAR_HEIGHT, widths.join(","))
};
goog.ui.ServerChart.prototype.addMultiAxis = function(axisType) {
  this.multiAxisType_.push(axisType);
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.MULTI_AXIS_TYPES, this.multiAxisType_.join(","));
  return this.multiAxisType_.length - 1
};
goog.ui.ServerChart.prototype.setMultiAxisLabelText = function(axisNumber, labelText) {
  this.multiAxisLabelText_[axisNumber] = labelText;
  var axisString = this.computeMultiAxisDataString_(this.multiAxisLabelText_, ":|", "|", "|");
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.MULTI_AXIS_LABEL_TEXT, axisString)
};
goog.ui.ServerChart.prototype.setMultiAxisRange = function(axisNumber, rangeStart, rangeEnd, opt_interval) {
  goog.asserts.assert(rangeStart != rangeEnd, "Range start and end cannot be the same value.");
  goog.asserts.assert(isFinite(rangeStart) && isFinite(rangeEnd), "Range start and end must be finite numbers.");
  this.multiAxisRange_[axisNumber] = [rangeStart, rangeEnd];
  goog.isDef(opt_interval) && this.multiAxisRange_[axisNumber].push(opt_interval);
  var rangeString = this.computeMultiAxisDataString_(this.multiAxisRange_, ",", ",", "|");
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.MULTI_AXIS_RANGE, rangeString)
};
goog.ui.ServerChart.prototype.addDataSet = function(data, color, opt_legendText) {
  var dataMin = this.arrayMin_(data);
  dataMin < this.minValue_ && (this.minValue_ = dataMin);
  var dataMax = this.arrayMax_(data);
  dataMax > this.maxValue_ && (this.maxValue_ = dataMax);
  if(goog.isDef(opt_legendText)) {
    if(this.setLegendTexts_.length < this.dataSets_.length) {
      throw Error("Cannot start adding legends text after first element.");
    }
    this.setLegendTexts_.push(opt_legendText);
    this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.LEGEND_TEXTS, this.setLegendTexts_.join("|"))
  }
  this.dataSets_.push(data);
  this.setColors_.push(color);
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.DATA_COLORS, this.setColors_.join(","))
};
goog.ui.ServerChart.prototype.getData = function(opt_setNumber) {
  return goog.isDef(opt_setNumber) ? this.dataSets_[opt_setNumber] : this.dataSets_
};
goog.ui.ServerChart.prototype.computeDataString_ = function() {
  var ok;
  this.encodingType_ != goog.ui.ServerChart.EncodingType.AUTOMATIC ? ok = this.computeDataStringForEncoding_(this.encodingType_) : (ok = this.computeDataStringForEncoding_(goog.ui.ServerChart.EncodingType.EXTENDED)) || (ok = this.computeDataStringForEncoding_(goog.ui.ServerChart.EncodingType.SIMPLE));
  ok || this.dispatchEvent(new goog.ui.ServerChart.UriTooLongEvent(this.uri_.toString()))
};
goog.ui.ServerChart.prototype.computeDataStringForEncoding_ = function(encoding) {
  for(var dataStrings = [], i = 0, setLen = this.dataSets_.length;i < setLen;++i) {
    dataStrings[i] = this.getChartServerValues_(this.dataSets_[i], this.minValue_, this.maxValue_, encoding)
  }
  var delimiter = encoding == goog.ui.ServerChart.EncodingType.TEXT ? "|" : ",", dataStrings = dataStrings.join(delimiter), data;
  data = null == this.numVisibleDataSets_ ? goog.string.buildString(encoding, ":", dataStrings) : goog.string.buildString(encoding, this.numVisibleDataSets_, ":", dataStrings);
  this.uri_.setParameterValue(goog.ui.ServerChart.UriParam.DATA, data);
  return this.uri_.toString().length < this.uriLengthLimit_
};
goog.ui.ServerChart.prototype.computeMultiAxisDataString_ = function(data, indexSeparator, elementSeparator, axisSeparator) {
  for(var elementStrings = [], i = 0, setLen = this.multiAxisType_.length;i < setLen;++i) {
    data[i] && elementStrings.push(i + indexSeparator + data[i].join(elementSeparator))
  }
  return elementStrings.join(axisSeparator)
};
goog.ui.ServerChart.CHART_VALUES = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
goog.ui.ServerChart.CHART_VALUES_EXTENDED = goog.ui.ServerChart.CHART_VALUES + "-.";
goog.ui.ServerChart.EXTENDED_UPPER_BOUND = Math.pow(goog.ui.ServerChart.CHART_VALUES_EXTENDED.length, 2) - 1;
goog.ui.ServerChart.prototype.getConvertedValue_ = function(value, minValue, maxValue, encoding) {
  goog.asserts.assert(minValue <= maxValue, "minValue should be less than or equal to maxValue");
  var isExtended = encoding == goog.ui.ServerChart.EncodingType.EXTENDED;
  if(goog.isNull(value) || !goog.isDef(value) || isNaN(value) || value < minValue || value > maxValue) {
    return isExtended ? "__" : "_"
  }
  if(encoding == goog.ui.ServerChart.EncodingType.TEXT) {
    return String(value)
  }
  var frac = goog.ui.ServerChart.DEFAULT_NORMALIZATION;
  maxValue > minValue && (frac = (value - minValue) / (maxValue - minValue));
  if(isExtended) {
    var maxIndex = goog.ui.ServerChart.CHART_VALUES_EXTENDED.length, upperBound = goog.ui.ServerChart.EXTENDED_UPPER_BOUND, index1 = Math.floor(frac * upperBound / maxIndex), index2 = Math.floor(frac * upperBound % maxIndex), extendedVals = goog.ui.ServerChart.CHART_VALUES_EXTENDED;
    return extendedVals.charAt(index1) + extendedVals.charAt(index2)
  }
  var index = Math.round(frac * (goog.ui.ServerChart.CHART_VALUES.length - 1));
  return goog.ui.ServerChart.CHART_VALUES.charAt(index)
};
goog.ui.ServerChart.prototype.getChartServerValues_ = function(values, minValue, maxValue, encoding) {
  for(var s = [], i = 0, valuesLen = values.length;i < valuesLen;++i) {
    s.push(this.getConvertedValue_(values[i], minValue, maxValue, encoding))
  }
  return s.join(this.encodingType_ == goog.ui.ServerChart.EncodingType.TEXT ? "," : "")
};
goog.ui.ServerChart.prototype.arrayMin_ = function(ary) {
  for(var min = Infinity, i = 0, aryLen = ary.length;i < aryLen;++i) {
    var value = ary[i];
    null != value && value < min && (min = value)
  }
  return min
};
goog.ui.ServerChart.prototype.arrayMax_ = function(ary) {
  for(var max = -Infinity, i = 0, aryLen = ary.length;i < aryLen;++i) {
    var value = ary[i];
    null != value && value > max && (max = value)
  }
  return max
};
goog.ui.ServerChart.prototype.disposeInternal = function() {
  goog.ui.ServerChart.superClass_.disposeInternal.call(this);
  delete this.xLabels_;
  delete this.leftLabels_;
  delete this.rightLabels_;
  delete this.gridX_;
  delete this.gridY_;
  delete this.setColors_;
  delete this.setLegendTexts_;
  delete this.dataSets_;
  this.uri_ = null;
  delete this.minValue_;
  delete this.maxValue_;
  this.title_ = null;
  delete this.multiAxisType_;
  delete this.multiAxisLabelText_;
  delete this.multiAxisLabelPosition_;
  delete this.multiAxisRange_;
  delete this.multiAxisLabelStyle_
};
goog.ui.ServerChart.Event = {URI_TOO_LONG:"uritoolong"};
goog.ui.ServerChart.UriTooLongEvent = function(uri) {
  goog.events.Event.call(this, goog.ui.ServerChart.Event.URI_TOO_LONG);
  this.uri = uri
};
goog.inherits(goog.ui.ServerChart.UriTooLongEvent, goog.events.Event);
// Input 207
gviz.util.tooltip.htmlbuilder = {};
gviz.util.tooltip.htmlbuilder.draw = function(tooltipDef, container) {
  var tooltip = gviz.util.tooltip.htmlbuilder.createOverlayHtml(container, tooltipDef.html);
  tooltipDef.customHtml && (tooltip.innerHTML = tooltipDef.html.content);
  var size = new goog.math.Size(tooltip.clientWidth, tooltip.clientHeight), topLeft = gviz.util.tooltip.htmlbuilder.positionTooltip(tooltipDef.pivot, tooltipDef.boundaries, tooltipDef.spacing, tooltipDef.margin, size);
  tooltip.style.width = tooltip.clientWidth + 1 + "px";
  tooltip.style.height = tooltip.clientHeight + "px";
  tooltip.style.left = topLeft.x + "px";
  tooltip.style.top = topLeft.y + "px";
  return tooltip
};
gviz.util.tooltip.htmlbuilder.positionTooltip = function(point, boundaries, spacing, margin, size) {
  var east = boundaries.right - point.x >= size.width + margin, west = point.x - boundaries.left >= size.width + margin, south = boundaries.bottom - point.y >= size.height + margin, north = point.y - boundaries.top >= size.height + margin, dx = !west || east || south || north ? 1 : -1, dy = north || east ? -1 : 1, cx = point.x + (spacing + size.width / 2) * dx, cy = point.y + (spacing + size.height / 2) * dy, left = goog.math.clamp(cx - size.width / 2, boundaries.left + margin, boundaries.right - 
  margin - size.width), top = goog.math.clamp(cy - size.height / 2, boundaries.top + margin, boundaries.bottom - margin - size.height);
  return new goog.math.Coordinate(left, top)
};
gviz.util.tooltip.htmlbuilder.createOverlayHtml = function(container, htmlStructure) {
  var element = gviz.graphics.util.createDom(goog.dom.getDomHelper(container), htmlStructure);
  container.appendChild(element);
  return element
};
// Input 208
goog.string.format = function(formatString, var_args) {
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if("%" == type) {
      return"%"
    }
    var value = args.shift();
    if("undefined" == typeof value) {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  var args = Array.prototype.slice.call(arguments), template = args.shift();
  if("undefined" == typeof template) {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_.s = function(value, flags, width) {
  var replacement = value;
  return isNaN(width) || "" == width || replacement.length >= width ? replacement : replacement = -1 < flags.indexOf("-", 0) ? replacement + goog.string.repeat(" ", width - replacement.length) : goog.string.repeat(" ", width - replacement.length) + replacement
};
goog.string.format.demuxes_.f = function(value, flags, width, dotp, precision) {
  var replacement = value.toString();
  isNaN(precision) || "" == precision || (replacement = value.toFixed(precision));
  var sign;
  sign = 0 > value ? "-" : 0 <= flags.indexOf("+") ? "+" : 0 <= flags.indexOf(" ") ? " " : "";
  0 <= value && (replacement = sign + replacement);
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  var replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision), padCount = width - replacement.length - sign.length;
  if(0 <= flags.indexOf("-", 0)) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = 0 <= flags.indexOf("0", 0) ? "0" : " ", replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_.d = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_.f(parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_.i = goog.string.format.demuxes_.d;
goog.string.format.demuxes_.u = goog.string.format.demuxes_.d;
// Input 209
gviz.staticrepository = {};
gviz.staticrepository.ROOT_URI_FORMAT_ = "%s://www.gstatic.com/charts/%s/%s/";
gviz.staticrepository.getScheme_ = function() {
  var location = gviz.util.VisCommon.getLocation();
  return goog.string.isEmptySafe(location) || "http" != goog.uri.utils.getScheme(location) ? "https" : "http"
};
gviz.staticrepository.getRootUri = function(packageName, version) {
  var scheme = gviz.staticrepository.getScheme_();
  return goog.string.format(gviz.staticrepository.ROOT_URI_FORMAT_, scheme, packageName, version)
};
// Input 210
gviz.colorbar = {};
gviz.colorbar.Scale = function(valuesScale, colorsScale) {
  if(valuesScale) {
    if(colorsScale.length != valuesScale.length) {
      throw Error("colorsScale and valuesScale must be of the same length");
    }
  }else {
    if(1 != colorsScale.length) {
      throw Error("colorsScale must contain exactly one element when no valueScale is provided");
    }
  }
  this.valuesScale_ = valuesScale;
  this.colorsScale_ = goog.array.map(colorsScale, function(color) {
    return goog.color.parse(color).hex
  })
};
gviz.colorbar.Scale.ONE_SIDED_DEFAULT_COLORS_ = ["#EFE6DC", "#109618"];
gviz.colorbar.Scale.OPTIONS_PATH = "colorAxis";
gviz.colorbar.Scale.TWO_SIDED_DEFAULT_COLORS_ = ["#DC3912", "#EFE6DC", "#109618"];
gviz.colorbar.Scale.prototype.getValuesScale = function() {
  return this.valuesScale_
};
gviz.colorbar.Scale.prototype.getColorsScale = function() {
  return this.colorsScale_
};
gviz.colorbar.Scale.prototype.getColorFor = function(value) {
  if(!this.valuesScale_) {
    return this.colorsScale_[0]
  }
  if(value >= this.valuesScale_[this.valuesScale_.length - 1]) {
    return this.colorsScale_[this.colorsScale_.length - 1]
  }
  if(value <= this.valuesScale_[0]) {
    return this.colorsScale_[0]
  }
  var valuePos = goog.array.binarySearch(this.valuesScale_, value);
  if(0 <= valuePos) {
    return this.colorsScale_[valuePos]
  }
  var lowColorIndex = -valuePos - 2, highColorIndex = -valuePos - 1, gradientRange = this.valuesScale_[highColorIndex] - this.valuesScale_[lowColorIndex], gradientSpread = (value - this.valuesScale_[lowColorIndex]) / gradientRange, blendedColor = gviz.util.blendHexColors(this.colorsScale_[highColorIndex], this.colorsScale_[lowColorIndex], gradientSpread);
  return blendedColor
};
gviz.colorbar.Scale.getCtorArgs_ = function(values, colors) {
  colors && 0 != colors.length ? 1 == colors.length && (colors = [gviz.colorbar.Scale.ONE_SIDED_DEFAULT_COLORS_[0], colors[0]]) : colors = values && 3 == values.length ? gviz.colorbar.Scale.TWO_SIDED_DEFAULT_COLORS_ : gviz.colorbar.Scale.ONE_SIDED_DEFAULT_COLORS_;
  if(!values || 2 > values.length) {
    return{values:null, colors:[goog.array.peek(colors)]}
  }
  var minValue = values[0], maxValue = values[values.length - 1], rangeWidth = maxValue - minValue;
  if(0 == rangeWidth) {
    return{values:[maxValue], colors:[goog.array.peek(colors)]}
  }
  if(2 == values.length) {
    values = [];
    for(var step = rangeWidth / (colors.length - 1), i = 0;i < colors.length;i++) {
      values.push(minValue + step * i)
    }
  }
  return{values:values, colors:colors}
};
gviz.colorbar.Scale.create = function(options, valueRange) {
  var optionsPath = gviz.colorbar.Scale.OPTIONS_PATH + ".", values = null, valuesOptionPath = optionsPath + "values", userValues = options.inferValue(valuesOptionPath);
  if(userValues && 0 < userValues.length) {
    1 == userValues.length && (userValues = [userValues[0], userValues[0]]);
    valueRange && (goog.isDefAndNotNull(userValues[0]) || (userValues[0] = valueRange.start), goog.isDefAndNotNull(userValues[userValues.length - 1]) || (userValues[userValues.length - 1] = valueRange.end));
    if(!goog.isDefAndNotNull(userValues[0])) {
      throw Error(valuesOptionPath + " must not contain nulls");
    }
    for(var i = 1;i < userValues.length;i++) {
      if(!goog.isDefAndNotNull(userValues[i])) {
        throw Error(valuesOptionPath + " must not contain nulls");
      }
      if(userValues[i] < userValues[i - 1]) {
        throw Error(valuesOptionPath + " must be a monotonically increasing series");
      }
    }
    values = userValues
  }else {
    var minValueOptionPath = optionsPath + "minValue", maxValueOptionPath = optionsPath + "maxValue", userMinValue = options.inferOptionalNumberValue(minValueOptionPath), userMaxValue = options.inferOptionalNumberValue(maxValueOptionPath);
    if(goog.isDefAndNotNull(userMinValue) && goog.isDefAndNotNull(userMaxValue) && userMinValue > userMaxValue) {
      throw Error(minValueOptionPath + " (" + userMinValue + ") must be at most " + maxValueOptionPath + " (" + userMaxValue + ")");
    }
    var newValueRange = gviz.util.getOverridenRange(valueRange, userMinValue, userMaxValue);
    newValueRange && (values = [newValueRange.start, newValueRange.end])
  }
  var colors = options.inferValue("colors"), colors = options.inferValue(optionsPath + "colors", colors), colorScaleArgs = gviz.colorbar.Scale.getCtorArgs_(values, colors);
  return new gviz.colorbar.Scale(colorScaleArgs.values, colorScaleArgs.colors)
};
// Input 211
gviz.util.tooltip.builder = {};
gviz.util.tooltip.builder.draw = function(tooltipDef, renderer, drawingGroup) {
  var group = renderer.createGroup();
  gviz.util.tooltip.builder.drawTooltipOutline_(tooltipDef, renderer, group);
  gviz.util.tooltip.builder.drawTooltipBody_(tooltipDef, renderer, group);
  renderer.appendChild(drawingGroup, group);
  return group
};
gviz.util.tooltip.builder.drawTooltipOutline_ = function(tooltipDef, renderer, drawingGroup) {
  for(var path = gviz.util.tooltip.builder.createOutlinePath_(tooltipDef.outline, gviz.util.tooltip.builder.CORNER_RADIUS_), outlineColor = "#ccc", brushes = [new gviz.graphics.Brush({fill:"white", stroke:outlineColor, strokeWidth:1}), new gviz.graphics.Brush({fill:outlineColor, strokeWidth:0, fillOpacity:0.6}), new gviz.graphics.Brush({fill:outlineColor, strokeWidth:0, fillOpacity:0.4})], i = brushes.length - 1;0 <= i;--i) {
    var pathElement = renderer.drawPath(path, brushes[i], drawingGroup);
    renderer.setOffset(pathElement, i, i)
  }
};
gviz.util.tooltip.builder.drawTooltipBody_ = function(tooltipDef, renderer, drawingGroup) {
  for(var bodyLayout = tooltipDef.bodyLayout, i = 0;i < bodyLayout.entries.length;i++) {
    var entryLayout = bodyLayout.entries[i], entry = entryLayout.entry, entryDrawingGroup = renderer.createGroup();
    renderer.appendChild(drawingGroup, entryDrawingGroup);
    switch(entry.type) {
      case gviz.util.tooltip.BodyEntryType.LINE:
        var line = entry.data, lineLayout = entryLayout.data;
        lineLayout.background && renderer.drawRect(lineLayout.background.box.left, lineLayout.background.box.top, lineLayout.background.box.right - lineLayout.background.box.left, lineLayout.background.box.bottom - lineLayout.background.box.top, line.background.brush, entryDrawingGroup);
        for(var j = 0;j < lineLayout.items.length;j++) {
          var item = line.items[j], itemLayout = lineLayout.items[j];
          switch(item.type) {
            case gviz.util.tooltip.BodyItemType.TEXT:
              renderer.drawText(item.data.text, itemLayout.box.left, itemLayout.box.top, 1, gviz.graphics.TextAlign.START, gviz.graphics.TextAlign.START, item.data.style, entryDrawingGroup);
              break;
            case gviz.util.tooltip.BodyItemType.SQUARE:
              renderer.drawRect(itemLayout.box.left, itemLayout.box.top, itemLayout.box.right - itemLayout.box.left, itemLayout.box.bottom - itemLayout.box.top, item.data.brush, entryDrawingGroup);
              break;
            default:
              goog.asserts.fail('Invalid tooltip item type "' + item.type + '"')
          }
        }
        if(goog.isDefAndNotNull(line.id)) {
          var lineID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.ACTIONS_MENU_ENTRY, line.id]);
          renderer.setLogicalName(entryDrawingGroup, lineID)
        }
        break;
      case gviz.util.tooltip.BodyEntryType.SEPARATOR:
        var separator = entry.data, separatorLayout = entryLayout.data, separatorPath = new gviz.graphics.PathSegments;
        separatorPath.move(separatorLayout.line.x0, separatorLayout.line.y0);
        separatorPath.addLine(separatorLayout.line.x1, separatorLayout.line.y1);
        renderer.drawPath(separatorPath, separator.brush, entryDrawingGroup);
        break;
      default:
        goog.asserts.fail('Invalid tooltip entry type "' + entry.type + '"')
    }
  }
};
gviz.util.tooltip.builder.createOutlinePath_ = function(outline, cornerRadius) {
  var path = new gviz.graphics.PathSegments, box = new goog.math.Box(outline.box.top + 0.5, outline.box.right + 0.5, outline.box.bottom + 0.5, outline.box.left + 0.5), handlePoints = outline.handlePoints;
  path.move(box.left + cornerRadius, box.bottom);
  path.addArc(box.left + cornerRadius, box.bottom - cornerRadius, cornerRadius, cornerRadius, 180, 270, !0);
  path.addLine(box.left, box.top + cornerRadius);
  path.addArc(box.left + cornerRadius, box.top + cornerRadius, cornerRadius, cornerRadius, 270, 0, !0);
  if(goog.isDefAndNotNull(handlePoints) && handlePoints[0].y == outline.box.top) {
    for(var i = 0;3 > i;++i) {
      path.addLine(handlePoints[i].x + 0.5, handlePoints[i].y + 0.5)
    }
  }
  path.addLine(box.right - cornerRadius, box.top);
  path.addArc(box.right - cornerRadius, box.top + cornerRadius, cornerRadius, cornerRadius, 0, 90, !0);
  path.addLine(box.right, box.bottom - cornerRadius);
  path.addArc(box.right - cornerRadius, box.bottom - cornerRadius, cornerRadius, cornerRadius, 90, 180, !0);
  if(goog.isDefAndNotNull(handlePoints) && handlePoints[0].y == outline.box.bottom) {
    for(i = 0;3 > i;++i) {
      path.addLine(handlePoints[i].x + 0.5, handlePoints[i].y + 0.5)
    }
  }
  path.close();
  return path
};
gviz.util.tooltip.builder.EDGE_MINIMUM_DISTANCE_ = 5;
gviz.util.tooltip.builder.CORNER_RADIUS_ = 1;
// Input 212
gviz.math.Coordinate = function(opt_x, opt_y) {
  this.x = opt_x || 0;
  this.y = opt_y || 0
};
gviz.math.Coordinate.clone = function(c) {
  return new gviz.math.Coordinate(c.x, c.y)
};
// Input 213
gviz.canviz.TextBlockUtil = {};
gviz.canviz.TextBlockUtil.calcLineBoundingBox = function(textLine, textBlock) {
  goog.asserts.assert(!goog.isDefAndNotNull(textBlock.angle) || 0 == textBlock.angle, "Can only calculate the bounding box of axis aligned texts (angle is 0)");
  var anchor = textBlock.anchor ? textBlock.anchor : {x:0, y:0}, xStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(textLine.x + anchor.x, textLine.length, textBlock.paralAlign), yStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(textLine.y + anchor.y, textBlock.textStyle.fontSize, textBlock.perpenAlign);
  return xStartEnd.start == xStartEnd.end || yStartEnd.start == yStartEnd.end ? null : new goog.math.Box(yStartEnd.start, xStartEnd.end, yStartEnd.end, xStartEnd.start)
};
gviz.canviz.TextBlockUtil.calcBoundingBox = function(textBlock) {
  var linesBoundingBoxes = goog.array.map(textBlock.lines, function(line) {
    return gviz.canviz.TextBlockUtil.calcLineBoundingBox(line, textBlock)
  }), linesBoundingBoxes = goog.array.filter(linesBoundingBoxes, goog.isDefAndNotNull);
  return gviz.util.calcBoundingBox(linesBoundingBoxes)
};
// Input 214
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.hadError_ = this.fired_ = !1;
  this.result_ = void 0;
  this.silentlyCanceled_ = this.blocking_ = this.blocked_ = !1;
  this.unhandledExceptionTimeoutId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if(goog.async.Deferred.LONG_STACK_TRACES && (this.constructorStack_ = null, Error.captureStackTrace)) {
    var target = {stack:""};
    Error.captureStackTrace(target, goog.async.Deferred);
    "string" == typeof target.stack && (this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, ""))
  }
};
goog.async.Deferred.STRICT_ERRORS = !1;
goog.async.Deferred.LONG_STACK_TRACES = goog.DEBUG;
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if(this.hasFired()) {
    this.result_ instanceof goog.async.Deferred && this.result_.cancel()
  }else {
    if(this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      opt_deepCancel ? parent.cancel(opt_deepCancel) : parent.branchCancel_()
    }
    this.onCancelFunction_ ? this.onCancelFunction_.call(this.defaultScope_, this) : this.silentlyCanceled_ = !0;
    this.hasFired() || this.errback(new goog.async.Deferred.CanceledError(this))
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  0 >= this.branches_ && this.cancel()
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = !1;
  this.updateResult_(isSuccess, res)
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = !0;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_()
};
goog.async.Deferred.prototype.check_ = function() {
  if(this.hasFired()) {
    if(!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = !1
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(!0, opt_result)
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(!1, opt_result)
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  goog.async.Deferred.LONG_STACK_TRACES && this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack) && (error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_)
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.")
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope)
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope)
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope)
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  this.hasFired() && this.fire_();
  return this
};
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  opt_propagateCancel && (d.parent_ = this, this.branches_++);
  return d
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1])
  })
};
goog.async.Deferred.prototype.fire_ = function() {
  this.unhandledExceptionTimeoutId_ && this.hasFired() && this.hasErrback_() && (goog.global.clearTimeout(this.unhandledExceptionTimeoutId_), delete this.unhandledExceptionTimeoutId_);
  this.parent_ && (this.parent_.branches_--, delete this.parent_);
  for(var res = this.result_, unhandledException = !1, isNewlyBlocked = !1;this.sequence_.length && !this.blocked_;) {
    var sequenceEntry = this.sequence_.shift(), callback = sequenceEntry[0], errback = sequenceEntry[1], scope = sequenceEntry[2], f = this.hadError_ ? errback : callback;
    if(f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        goog.isDef(ret) && (this.hadError_ = this.hadError_ && (ret == res || this.isError(ret)), this.result_ = res = ret);
        res instanceof goog.async.Deferred && (this.blocked_ = isNewlyBlocked = !0)
      }catch(ex) {
        res = ex, this.hadError_ = !0, this.makeStackTraceLong_(res), this.hasErrback_() || (unhandledException = !0)
      }
    }
  }
  this.result_ = res;
  isNewlyBlocked ? (res.addCallbacks(goog.bind(this.continue_, this, !0), goog.bind(this.continue_, this, !1)), res.blocking_ = !0) : !goog.async.Deferred.STRICT_ERRORS || !this.isError(res) || res instanceof goog.async.Deferred.CanceledError || (unhandledException = this.hadError_ = !0);
  unhandledException && (this.unhandledExceptionTimeoutId_ = goog.global.setTimeout(goog.functions.fail(res), 0))
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  return value instanceof goog.async.Deferred ? value.branch(!0).addCallback(callback, opt_scope) : goog.async.Deferred.succeed(value).addCallback(callback, opt_scope)
};
goog.async.Deferred.AlreadyCalledError = function() {
  goog.debug.Error.call(this)
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function() {
  goog.debug.Error.call(this)
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
// Input 215
goog.net.jsloader = {};
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5E3;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.loadMany = function(uris, opt_options) {
  if(uris.length) {
    var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
    goog.array.extend(goog.net.jsloader.scriptsToLoad_, uris);
    if(!isAnotherModuleLoading) {
      uris = goog.net.jsloader.scriptsToLoad_;
      var popAndLoadNextScript = function() {
        var uri = uris.shift(), deferred = goog.net.jsloader.load(uri, opt_options);
        uris.length && deferred.addBoth(popAndLoadNextScript)
      };
      popAndLoadNextScript()
    }
  }
};
goog.net.jsloader.load = function(uri, opt_options) {
  var options = opt_options || {}, doc = options.document || document, script = goog.dom.createElement(goog.dom.TagName.SCRIPT), request = {script_:script, timeout_:void 0}, deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request), timeout = null, timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  0 < timeoutDuration && (timeout = window.setTimeout(function() {
    goog.net.jsloader.cleanup_(script, !0);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri))
  }, timeoutDuration), request.timeout_ = timeout);
  script.onload = script.onreadystatechange = function() {
    if(!script.readyState || "loaded" == script.readyState || "complete" == script.readyState) {
      var removeScriptNode = options.cleanupWhenDone || !1;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null)
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, !0, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri))
  };
  goog.dom.setProperties(script, {type:"text/javascript", charset:"UTF-8", src:uri});
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred
};
goog.net.jsloader.loadAndVerify = function(uri, verificationObjName, options) {
  goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] || (goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {});
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  if(goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."))
  }
  var sendDeferred = goog.net.jsloader.load(uri, options), deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    goog.isDef(result) ? (deferred.callback(result), delete verifyObjs[verificationObjName]) : deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."))
  });
  sendDeferred.addErrback(function(error) {
    goog.isDef(verifyObjs[verificationObjName]) && delete verifyObjs[verificationObjName];
    deferred.errback(error)
  });
  return deferred
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = doc.getElementsByTagName(goog.dom.TagName.HEAD);
  return!headElements || goog.array.isEmpty(headElements) ? doc.documentElement : headElements[0]
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if(request && request.script_) {
    var scriptNode = request.script_;
    scriptNode && "SCRIPT" == scriptNode.tagName && goog.net.jsloader.cleanup_(scriptNode, !0, request.timeout_)
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  goog.isDefAndNotNull(opt_timeout) && goog.global.clearTimeout(opt_timeout);
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  removeScriptNode && window.setTimeout(function() {
    goog.dom.removeNode(scriptNode)
  }, 0)
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  opt_message && (msg += ": " + opt_message);
  goog.debug.Error.call(this, msg);
  this.code = code
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
// Input 216
var __flash_unloadHandler, __flash_savedUnloadHandler;
// Input 217
/*
 SWFObject v1.5: Flash Player detection and embed -
 http://blog.deconcept.com/swfobject/

 SWFObject is (c) 2007 Geoff Stearns and is released under the MIT License:
 http://www.opensource.org/licenses/mit-license.php

*/
var deconcept = {SWFObjectUtil:{}, SWFObject:function(swf, id, w, h, ver, c, quality, xiRedirectUrl, redirectUrl, detectKey) {
  if(document.getElementById) {
    this.DETECT_KEY = detectKey ? detectKey : "detectflash";
    this.skipDetect = deconcept.util.getRequestParameter(this.DETECT_KEY);
    this.params = {};
    this.variables = {};
    this.attributes = [];
    swf && this.setAttribute("swf", swf);
    id && this.setAttribute("id", id);
    w && this.setAttribute("width", w);
    h && this.setAttribute("height", h);
    ver && this.setAttribute("version", new deconcept.PlayerVersion(ver.toString().split(".")));
    this.installedVer = deconcept.SWFObjectUtil.getPlayerVersion();
    !window.opera && document.all && 7 < this.installedVer.major && (deconcept.SWFObject.doPrepUnload = !0);
    c && this.addParam("bgcolor", c);
    var q = quality ? quality : "high";
    this.addParam("quality", q);
    this.setAttribute("useExpressInstall", !1);
    this.setAttribute("doExpressInstall", !1);
    var xir = xiRedirectUrl ? xiRedirectUrl : window.location;
    this.setAttribute("xiRedirectUrl", xir);
    this.setAttribute("redirectUrl", "");
    redirectUrl && this.setAttribute("redirectUrl", redirectUrl)
  }
}};
deconcept.SWFObject.prototype = {setAttribute:function(name, value) {
  this.attributes[name] = value
}, getAttribute:function(name) {
  return this.attributes[name]
}, addParam:function(name, value) {
  this.params[name] = value
}, getParams:function() {
  return this.params
}, addVariable:function(name, value) {
  this.variables[name] = value
}, getVariables:function() {
  return this.variables
}, getVariablePairs:function() {
  var variablePairs = [], key, variables = this.getVariables();
  for(key in variables) {
    variablePairs[variablePairs.length] = key + "=" + variables[key]
  }
  return variablePairs
}, getSWFHTML:function() {
  var swfNode = "";
  if(navigator.plugins && navigator.mimeTypes && navigator.mimeTypes.length) {
    this.getAttribute("doExpressInstall") && (this.addVariable("MMplayerType", "PlugIn"), this.setAttribute("swf", this.xiSWFPath));
    var swfNode = '<embed type="application/x-shockwave-flash" src="' + this.getAttribute("swf") + '" width="' + this.getAttribute("width") + '" height="' + this.getAttribute("height") + '" style="' + this.getAttribute("style") + '"', swfNode = swfNode + (' id="' + this.getAttribute("id") + '" name="' + this.getAttribute("id") + '" '), params = this.getParams(), key;
    for(key in params) {
      swfNode += [key] + '="' + params[key] + '" '
    }
    var pairs = this.getVariablePairs().join("&");
    0 < pairs.length && (swfNode += 'flashvars="' + pairs + '"');
    swfNode += "/>"
  }else {
    this.getAttribute("doExpressInstall") && (this.addVariable("MMplayerType", "ActiveX"), this.setAttribute("swf", this.xiSWFPath));
    swfNode = '<object id="' + this.getAttribute("id") + '" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="' + this.getAttribute("width") + '" height="' + this.getAttribute("height") + '" style="' + this.getAttribute("style") + '">';
    swfNode += '<param name="movie" value="' + this.getAttribute("swf") + '" />';
    params = this.getParams();
    for(key in params) {
      swfNode += '<param name="' + key + '" value="' + params[key] + '" />'
    }
    pairs = this.getVariablePairs().join("&");
    0 < pairs.length && (swfNode += '<param name="flashvars" value="' + pairs + '" />');
    swfNode += "</object>"
  }
  return swfNode
}, write:function(elementId) {
  if(this.getAttribute("useExpressInstall")) {
    var expressInstallReqVer = new deconcept.PlayerVersion([6, 0, 65]);
    this.installedVer.versionIsValid(expressInstallReqVer) && !this.installedVer.versionIsValid(this.getAttribute("version")) && (this.setAttribute("doExpressInstall", !0), this.addVariable("MMredirectURL", escape(this.getAttribute("xiRedirectUrl"))), document.title = document.title.slice(0, 47) + " - Flash Player Installation", this.addVariable("MMdoctitle", document.title))
  }
  if(this.skipDetect || this.getAttribute("doExpressInstall") || this.installedVer.versionIsValid(this.getAttribute("version"))) {
    var n = "string" == typeof elementId ? document.getElementById(elementId) : elementId;
    n.innerHTML = this.getSWFHTML();
    return!0
  }
  "" != this.getAttribute("redirectUrl") && document.location.replace(this.getAttribute("redirectUrl"));
  return!1
}};
deconcept.SWFObjectUtil.getPlayerVersion = function() {
  var PlayerVersion = new deconcept.PlayerVersion([0, 0, 0]);
  if(navigator.plugins && navigator.mimeTypes.length) {
    var x = navigator.plugins["Shockwave Flash"];
    x && x.description && (PlayerVersion = new deconcept.PlayerVersion(x.description.replace(/([a-zA-Z]|\s)+/, "").replace(/(\s+r|\s+b[0-9]+)/, ".").split(".")))
  }else {
    if(navigator.userAgent && 0 <= navigator.userAgent.indexOf("Windows CE")) {
      for(var axo = 1, counter = 3;axo;) {
        try {
          counter++, axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + counter), PlayerVersion = new deconcept.PlayerVersion([counter, 0, 0])
        }catch(e) {
          axo = null
        }
      }
    }else {
      axo = null;
      try {
        axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7")
      }catch(e$$0) {
        try {
          axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"), PlayerVersion = new deconcept.PlayerVersion([6, 0, 21]), axo.AllowScriptAccess = "always"
        }catch(e$$1) {
          if(6 == PlayerVersion.major) {
            return PlayerVersion
          }
        }
        try {
          axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash")
        }catch(e$$2) {
        }
      }
      null != axo && (PlayerVersion = new deconcept.PlayerVersion(axo.GetVariable("$version").split(" ")[1].split(",")))
    }
  }
  return PlayerVersion
};
deconcept.PlayerVersion = function(arrVersion) {
  this.major = null != arrVersion[0] ? parseInt(arrVersion[0], 10) : 0;
  this.minor = null != arrVersion[1] ? parseInt(arrVersion[1], 10) : 0;
  this.rev = null != arrVersion[2] ? parseInt(arrVersion[2], 10) : 0
};
deconcept.PlayerVersion.prototype.versionIsValid = function(fv) {
  return this.major < fv.major ? !1 : this.major > fv.major ? !0 : this.minor < fv.minor ? !1 : this.minor > fv.minor ? !0 : this.rev < fv.rev ? !1 : !0
};
deconcept.util = {getRequestParameter:function(param) {
  var q = document.location.search || document.location.hash;
  if(null == param) {
    return q
  }
  if(q) {
    for(var pairs = q.substring(1).split("&"), i = 0;i < pairs.length;i++) {
      if(pairs[i].substring(0, pairs[i].indexOf("=")) == param) {
        return pairs[i].substring(pairs[i].indexOf("=") + 1)
      }
    }
  }
  return""
}};
deconcept.SWFObjectUtil.cleanupSWFs = function() {
  for(var objects = document.getElementsByTagName("OBJECT"), i = objects.length - 1;0 <= i;i--) {
    objects[i].style.display = "none";
    for(var x in objects[i]) {
      "function" == typeof objects[i][x] && (objects[i][x] = function() {
      })
    }
  }
};
deconcept.SWFObject.doPrepUnload && !deconcept.unloadSet && (deconcept.SWFObjectUtil.prepUnload = function() {
  __flash_unloadHandler = function() {
  };
  __flash_savedUnloadHandler = function() {
  };
  window.attachEvent("onunload", deconcept.SWFObjectUtil.cleanupSWFs)
}, window.attachEvent("onbeforeunload", deconcept.SWFObjectUtil.prepUnload), deconcept.unloadSet = !0);
!document.getElementById && document.all && (document.getElementById = function(id) {
  return document.all[id]
});
// Input 218
gviz.geochart = {};
gviz.geochart.interactionEvents = {};
gviz.geochart.interactionEvents.EventType = {FEATURE_CLICK:"featureClick", FEATURE_HOVER:"featureHover", FEATURE_MOVE:"featureMove", MARKER_HOVER:"markerHover", MARKER_CLICK:"markerClick", MARKER_MOVE:"markerMove"};
gviz.geochart.interactionEvents.ElementType = {FEATURE:"feature", MARKER:"marker", OCEAN:"ocean", MAGNIFYING_GLASS_BORDER:"magnifyingGlassBorder", MAGNIFYING_GLASS_TRIANGLE:"magnifyingGlassTriangle"};
gviz.geochart.interactionEvents.isFeatureEvent = function(event) {
  return event.elementType == gviz.geochart.interactionEvents.ElementType.FEATURE
};
gviz.geochart.interactionEvents.isMarkerEvent = function(event) {
  return event.elementType == gviz.geochart.interactionEvents.ElementType.MARKER
};
// Input 219
gviz.util.RegionCoder = function(dictionary) {
  this.dictionary_ = dictionary
};
gviz.util.RegionCoder.logger_ = goog.debug.Logger.getLogger("gviz.util.RegionCoder");
gviz.util.RegionCoder.logger_.setLevel(goog.debug.Logger.Level.ALL);
gviz.util.RegionCoder.BASE_GEOCODES_URL_ = gviz.staticrepository.getRootUri("regioncoder", "0") + "geocodes";
gviz.util.RegionCoder.REQUEST_TIMEOUT_ = 5E3;
gviz.util.RegionCoder.coders_ = {};
gviz.util.RegionCoder.requestCoder = function(dictionaryName, callback) {
  dictionaryName = goog.string.trim(dictionaryName.toLowerCase());
  dictionaryName = goog.string.urlEncode(dictionaryName);
  var obj = gviz.util.RegionCoder.coders_[dictionaryName];
  if(null == obj) {
    gviz.util.RegionCoder.coders_[dictionaryName] = [callback];
    var url = gviz.util.RegionCoder.BASE_GEOCODES_URL_ + "/" + dictionaryName + ".js";
    gviz.util.RegionCoder.logger_.info("requesting dictionary " + url);
    gviz.util.VisCommon.appendScript(url);
    goog.Timer.callOnce(goog.partial(gviz.util.RegionCoder.dictionaryReady, dictionaryName, null), gviz.util.RegionCoder.REQUEST_TIMEOUT_);
    gviz.util.RegionCoder.logger_.info("sent request.")
  }else {
    "array" == goog.typeOf(obj) ? (goog.array.insert(obj, callback), gviz.util.RegionCoder.logger_.info("request already sent.")) : (goog.Timer.callOnce(goog.partial(callback, obj), 0), gviz.util.RegionCoder.logger_.info("dictionary downloaded."))
  }
};
gviz.util.RegionCoder.dictionaryReady = function(dictionaryName, dictionary) {
  if(dictionary) {
    gviz.util.RegionCoder.logger_.info("dictionary " + dictionaryName + " retrieved.");
    var regionCoder = new gviz.util.RegionCoder(dictionary), callbacks = gviz.util.RegionCoder.coders_[dictionaryName];
    if("array" == goog.typeOf(callbacks)) {
      gviz.util.RegionCoder.coders_[dictionaryName] = regionCoder;
      for(var i = 0;i < callbacks.length;i++) {
        callbacks[i](regionCoder)
      }
    }else {
      gviz.util.RegionCoder.logger_.severe("dictionary " + dictionaryName + " arrived too late.")
    }
  }else {
    if(callbacks = gviz.util.RegionCoder.coders_[dictionaryName], "array" == goog.typeOf(callbacks)) {
      for(gviz.util.RegionCoder.logger_.severe("dictionary " + dictionaryName + " timeout."), gviz.util.RegionCoder.coders_[dictionaryName] = null, i = 0;i < callbacks.length;i++) {
        callbacks[i](null)
      }
    }
  }
};
gviz.util.RegionCoder.prototype.getCode = function(regionName) {
  regionName = goog.string.trim(regionName.toLowerCase());
  return this.dictionary_[regionName]
};
gviz.util.RegionCoder.hasProvincesRegionCodes = function(regionName) {
  return 0 <= goog.array.binarySearch(gviz.util.RegionCoder.REGIONS_WITH_PROVINCE_REGIONCODER_, regionName)
};
gviz.util.RegionCoder.REGIONS_WITH_PROVINCE_REGIONCODER_ = "AD AE AF AG AL AM AO AR AT AU AZ BA BB BD BE BF BG BH BI BJ BN BO BR BS BT BW BY BZ CA CD CF CG CH CI CL CM CN CO CR CS CU CV CY CZ DE DJ DK DM DO DZ EC EE EG ER ES ET FI FJ FM FR GA GB GD GE GH GM GN GQ GR GT GW GY HN HR HT HU ID IE IL IN IQ IR IS IT JM JO JP KE KG KH KI KM KN KP KR KW KZ LA LB LI LK LR LS LT LU LV LY MA MD ME MG MH MK ML MM MN MR MT MU MV MW MX MY MZ NA NE NG NI NL NO NP NR NZ OM PA PE PG PH PK PL PT PW PY QA RO RS RU RW SA SB SC SD SE SG SH SI SK SL SM SN SO SR ST SV SY SZ TD TG TH TJ TL TM TN TO TR TT TV TW TZ UA UG UM US UY UZ VC VE VN VU WS YE YU ZA ZM ZW".split(" ");
// Input 220
// Input 221
gviz.colorbar.definer = {};
gviz.colorbar.Orientation = {HORIZONTAL:"horizontal", VERTICAL:"vertical"};
gviz.colorbar.definer.define = function(colorScale, drawingOptions, markers, textMeasureFunction) {
  var drawingRect = {}, extremeValuesTextSize = {}, numberFormat = drawingOptions.numberFormat || google.visualization.NumberFormat.DECIMAL_PATTERN;
  if(drawingOptions.orientation == gviz.colorbar.Orientation.HORIZONTAL) {
    var extremeValuesTextSize = gviz.colorbar.definer.calculateExtremeValuesTextProperties_(colorScale, drawingOptions.textStyle, numberFormat, textMeasureFunction), textDrawingRectBuffer = extremeValuesTextSize.minValue.height / 4, drawingRectStartOffset = extremeValuesTextSize.minValue.width + textDrawingRectBuffer, drawingRectWidth = drawingOptions.width - (extremeValuesTextSize.minValue.width + extremeValuesTextSize.maxValue.width + 2 * textDrawingRectBuffer), drawingRect = new goog.math.Rect(drawingRectStartOffset, 
    0, drawingRectWidth, drawingOptions.height)
  }else {
    drawingRect = new goog.math.Rect(0, 0, drawingOptions.width, drawingOptions.height)
  }
  var markerHeight = drawingRect.height * gviz.colorbar.definer.MARKER_HEIGHT_RATIO, markerEdge = 2 * (markerHeight / Math.sqrt(3)), colorsGradientDrawingRect = new goog.math.Rect(drawingRect.left + markerEdge / 2, drawingRect.top + markerHeight + 1, drawingRect.width - markerEdge, drawingRect.height - markerHeight - 1), colorGradientRectanglesDefinitions = gviz.colorbar.definer.defineColorsGradient_(colorScale, colorsGradientDrawingRect);
  if(goog.isDefAndNotNull(colorGradientRectanglesDefinitions) && 0 < colorGradientRectanglesDefinitions.length && (0 > colorGradientRectanglesDefinitions[0].rectangle.width || 0 > colorGradientRectanglesDefinitions[0].rectangle.height)) {
    return null
  }
  var markersDefinitions = gviz.colorbar.definer.defineMarkers_(colorScale, drawingRect, markers, markerHeight, markerEdge, drawingOptions.markerColor), textItemsDefinitions = [];
  drawingOptions.orientation == gviz.colorbar.Orientation.HORIZONTAL && (textItemsDefinitions = gviz.colorbar.definer.defineTextItems_(drawingOptions, extremeValuesTextSize));
  var colorBarDefinition = {colorGradientRectanglesDefinitions:colorGradientRectanglesDefinitions, markersDefinitions:markersDefinitions, textItemsDefinitions:textItemsDefinitions};
  gviz.colorbar.definer.trasformOrientationAndPosition_(colorBarDefinition, drawingOptions);
  return colorBarDefinition
};
gviz.colorbar.definer.MARKER_HEIGHT_RATIO = 0.33;
gviz.colorbar.definer.defineColorsGradient_ = function(colorScale, colorsGradientDrawingRect) {
  var colorsScale = colorScale.getColorsScale(), valuesScale = colorScale.getValuesScale(), valuesRange = valuesScale[valuesScale.length - 1] - valuesScale[0], colorGradientRectanglesDefinitions;
  if(0 == valuesRange) {
    colorGradientRectanglesDefinitions = [{rectangle:new goog.math.Rect(colorsGradientDrawingRect.left, colorsGradientDrawingRect.top, colorsGradientDrawingRect.width, colorsGradientDrawingRect.height), brush:new gviz.graphics.Brush({fill:colorsScale[0]})}]
  }else {
    colorGradientRectanglesDefinitions = [];
    for(var rectBarRatio = colorsGradientDrawingRect.width / valuesRange, leftBound = colorsGradientDrawingRect.left, rightBound = 0, i = 0;i < valuesScale.length - 1;++i) {
      rightBound = leftBound + (valuesScale[i + 1] - valuesScale[i]) * rectBarRatio, colorGradientRectanglesDefinitions[i] = {rectangle:new goog.math.Rect(leftBound, colorsGradientDrawingRect.top, rightBound - leftBound, colorsGradientDrawingRect.height), brush:new gviz.graphics.Brush({gradient:{x1:leftBound, y1:0, x2:rightBound, y2:0, color1:colorsScale[i], color2:colorsScale[i + 1]}})}, leftBound = rightBound
    }
  }
  return colorGradientRectanglesDefinitions
};
gviz.colorbar.definer.defineMarkers_ = function(colorScale, drawingRect, markers, markerHeight, markerEdge, markerColor) {
  for(var markersDefinitions = [], i = 0;i < markers.length;++i) {
    var markerAbsolutCenterPosition = drawingRect.left + gviz.colorbar.definer.getValuePosition_(markers[i].value, colorScale, drawingRect, markerEdge) + markerEdge / 2, markerPath = [markerAbsolutCenterPosition - markerEdge / 2, drawingRect.top, markerAbsolutCenterPosition + markerEdge / 2, drawingRect.top, markerAbsolutCenterPosition, drawingRect.top + markerHeight], markerBrush = new gviz.graphics.Brush({fill:markerColor, stroke:markerColor});
    markersDefinitions[i] = {path:markerPath, brush:markerBrush}
  }
  return markersDefinitions
};
gviz.colorbar.definer.getValuePosition_ = function(value, colorScale, drawingRect, markerEdge) {
  var valuesScale = colorScale.getValuesScale();
  if(value < valuesScale[0]) {
    return 0
  }
  var colorsGradientWidth = drawingRect.width - markerEdge;
  if(value > valuesScale[valuesScale.length - 1]) {
    return colorsGradientWidth
  }
  var valuesRange = valuesScale[valuesScale.length - 1] - valuesScale[0];
  return 0 == valuesRange ? 0.5 * colorsGradientWidth : colorsGradientWidth * ((value - valuesScale[0]) / valuesRange)
};
gviz.colorbar.definer.trasformOrientationAndPosition_ = function(colorBarDef, drawingOptions) {
  for(var colorGradientRectanglesDefinitions = colorBarDef.colorGradientRectanglesDefinitions, i = 0;i < colorGradientRectanglesDefinitions.length;++i) {
    var colorGradientRectangle = colorGradientRectanglesDefinitions[i];
    if(drawingOptions.orientation == gviz.colorbar.Orientation.VERTICAL) {
      var left = colorGradientRectangle.rectangle.left;
      colorGradientRectangle.rectangle.left = colorGradientRectangle.rectangle.top;
      colorGradientRectangle.rectangle.top = left;
      var width = colorGradientRectangle.rectangle.width;
      colorGradientRectangle.rectangle.width = colorGradientRectangle.rectangle.height;
      colorGradientRectangle.rectangle.height = width
    }
    colorGradientRectangle.rectangle.left += drawingOptions.left;
    colorGradientRectangle.rectangle.top += drawingOptions.top;
    drawingOptions.orientation == gviz.colorbar.Orientation.VERTICAL && (colorGradientRectangle.brush.gradient.y1 = colorGradientRectangle.brush.gradient.x1, colorGradientRectangle.brush.gradient.x1 = 0, colorGradientRectangle.brush.gradient.y2 = colorGradientRectangle.brush.gradient.x2, colorGradientRectangle.brush.gradient.x2 = 0);
    goog.isDefAndNotNull(colorGradientRectangle.brush.gradient) && (colorGradientRectangle.brush.gradient.x1 += drawingOptions.left, colorGradientRectangle.brush.gradient.y1 += drawingOptions.top, colorGradientRectangle.brush.gradient.x2 += drawingOptions.left, colorGradientRectangle.brush.gradient.y2 += drawingOptions.top)
  }
  for(var markersDefinitions = colorBarDef.markersDefinitions, i = 0;i < markersDefinitions.length;++i) {
    for(var j = 0;3 > j;++j) {
      if(drawingOptions.orientation == gviz.colorbar.Orientation.VERTICAL) {
        var x = markersDefinitions[i].path[2 * j];
        markersDefinitions[i].path[2 * j] = markersDefinitions[i].path[2 * j + 1];
        markersDefinitions[i].path[2 * j + 1] = x
      }
      markersDefinitions[i].path[2 * j] += drawingOptions.left;
      markersDefinitions[i].path[2 * j + 1] += drawingOptions.top
    }
  }
  for(var textItemsDefinitions = colorBarDef.textItemsDefinitions, i = 0;i < textItemsDefinitions.length;++i) {
    textItemsDefinitions[i].x += drawingOptions.left, textItemsDefinitions[i].y += drawingOptions.top
  }
};
gviz.colorbar.definer.calculateExtremeValuesTextProperties_ = function(colorScale, textStyle, numberPattern, textMeasureFunction) {
  var colorBarMinValue = colorScale.getValuesScale()[0], colorBarMaxValue = colorScale.getValuesScale()[colorScale.getValuesScale().length - 1], numberFormatter = new google.visualization.NumberFormat({pattern:numberPattern}), colorBarMinValueText = numberFormatter.formatValue(colorBarMinValue), colorBarMaxValueText = numberFormatter.formatValue(colorBarMaxValue);
  return{minValue:{text:colorBarMinValueText, width:textMeasureFunction ? textMeasureFunction(colorBarMinValueText, textStyle).width : 0, height:textStyle.fontSize}, maxValue:{text:colorBarMaxValueText, width:textMeasureFunction ? textMeasureFunction(colorBarMaxValueText, textStyle).width : 0, height:textStyle.fontSize}}
};
gviz.colorbar.definer.defineTextItems_ = function(drawingOptions, extremeValuesTextSize) {
  var textItemsDefinitions = [];
  textItemsDefinitions[0] = {x:0, y:drawingOptions.height - extremeValuesTextSize.minValue.height, text:extremeValuesTextSize.minValue.text, style:drawingOptions.textStyle};
  textItemsDefinitions[1] = {x:drawingOptions.width - extremeValuesTextSize.maxValue.width, y:drawingOptions.height - extremeValuesTextSize.maxValue.height, text:extremeValuesTextSize.maxValue.text, style:drawingOptions.textStyle};
  return textItemsDefinitions
};
// Input 222
gviz.projection = {};
// Input 223
gviz.geochart.MapResolution = {CONTINENTS:"continents", SUBCONTINENTS:"subcontinents", COUNTRIES:"countries", PROVINCES:"provinces", METROS:"metros"};
// Input 224
gviz.projection.BaseProjection = function(options) {
  this.options_ = options || {}
};
gviz.projection.BaseProjection.prototype.getAspectRatio = function() {
  return gviz.canviz.Constants.GOLDEN_RATIO
};
gviz.projection.BaseProjection.prototype.projectBoundingBox = function() {
  return null
};
gviz.projection.BaseProjection.prototype.set = function(option, value) {
  this.options_[option] = value
};
gviz.projection.BaseProjection.prototype.getOptions = function() {
  var options = this.options_, output = goog.object.unsafeClone(options);
  return output
};
// Input 225
gviz.projection.AlbersProjection = function(options) {
  var originLat = 0, originLng = 0;
  if(options.boundingBox) {
    var lo = options.boundingBox.lo, hi = options.boundingBox.hi, originLat = (hi[0] - lo[0]) / 2 + lo[0], originLng = (hi[1] - lo[1]) / 2 + lo[1]
  }
  var default_parallels = [29.5, 45.5], defaults = {parallels:default_parallels, origin:{lat:originLat, lng:originLng}}, origin = defaults.origin;
  options.origin && goog.object.extend(origin, options.origin);
  goog.object.extend(defaults, options);
  defaults.origin = origin;
  defaults.parallels && 0 !== defaults.parallels.length ? 2 > defaults.parallels.length && (defaults.parallels[1] = Math.abs(defaults.parallels[0] - default_parallels[0]) > Math.abs(defaults.parallels[0] - default_parallels[1]) ? default_parallels[0] : default_parallels[1]) : defaults.parallels = default_parallels;
  gviz.projection.BaseProjection.call(this, options);
  this.originLat_ = defaults.origin.lat / (180 / Math.PI);
  this.originLng_ = defaults.origin.lng / (180 / Math.PI);
  this.parallels_ = goog.array.map(defaults.parallels, function(parallel) {
    return parallel / (180 / Math.PI)
  })
};
goog.inherits(gviz.projection.AlbersProjection, gviz.projection.BaseProjection);
gviz.projection.AlbersProjection.prototype.project = function(coordinates$$0) {
  return goog.array.map(arguments, goog.bind(function(coordinates) {
    goog.asserts.assert(2 === coordinates.length);
    var lat = coordinates[0] / (180 / Math.PI), lng = coordinates[1] / (180 / Math.PI), n = 0.5 * (Math.sin(this.parallels_[0]) + Math.sin(this.parallels_[1])), theta = n * (lng - this.originLng_), C = Math.cos(this.parallels_[0]), C = C * C, C = C + 2 * n * Math.sin(this.parallels_[0]), p = Math.sqrt(C - 2 * n * Math.sin(lat)) / n, p0 = Math.sqrt(C - 2 * n * Math.sin(this.originLat_)) / n;
    return{x:p * Math.sin(theta) * (180 / Math.PI), y:(p0 - p * Math.cos(theta)) * (180 / Math.PI)}
  }, this))
};
// Input 226
gviz.projection.KavrayskiyVIIProjection = function(options) {
  gviz.projection.BaseProjection.call(this, options)
};
goog.inherits(gviz.projection.KavrayskiyVIIProjection, gviz.projection.BaseProjection);
gviz.projection.KavrayskiyVIIProjection.prototype.getAspectRatio = function() {
  return 2.2
};
gviz.projection.KavrayskiyVIIProjection.prototype.project = function(coordinates$$0) {
  return goog.array.map(arguments, function(coordinates) {
    goog.asserts.assert(2 === coordinates.length);
    var lat = coordinates[0] / (180 / Math.PI), lng = coordinates[1] / (180 / Math.PI), multiplier = 3 * lng / (2 * Math.PI) * (180 / Math.PI);
    return{x:Math.sqrt(Math.PI * Math.PI / 3 - lat * lat) * multiplier, y:lat}
  })
};
// Input 227
gviz.math.sec = function(x) {
  return 1 / Math.cos(x)
};
gviz.math.cot = function(x) {
  return 1 / Math.tan(x)
};
gviz.math.solve3x3 = function(a, b, c, d) {
  var result = Array(3), theta = a[1] * b[0] / a[0] - b[1], omega = b[0] * a[2] / a[0] - b[2], zd = c[2], zd = zd - c[0] * a[2] / a[0], zd = zd + c[0] * a[1] / a[0] * (omega / theta), zd = zd - c[1] * omega / theta, zn = d[2], zn = zn - a[2] * d[0] / a[0], zn = zn + omega / theta * (a[1] * d[0] / a[0] - d[1]);
  result[2] = zn / zd;
  result[1] = a[1] / a[0] * (d[0] - c[0] * result[2]);
  result[1] += c[1] * result[2] - d[1];
  result[1] /= theta;
  result[0] = d[0] - b[0] * result[1] - c[0] * result[2];
  result[0] /= a[0];
  return result
};
// Input 228
gviz.projection.LambertProjection = function(options) {
  var originLat = 0, originLng = 0;
  if(options.boundingBox) {
    var lo = options.boundingBox.lo, hi = options.boundingBox.hi, originLat = (hi[0] - lo[0]) / 2 + lo[0], originLng = (hi[1] - lo[1]) / 2 + lo[1]
  }
  var default_parallels = [20, 50], defaults = {parallels:default_parallels, origin:{lat:originLat, lng:originLng}}, origin = defaults.origin;
  options.origin && goog.object.extend(origin, options.origin);
  goog.object.extend(defaults, options);
  defaults.origin = origin;
  defaults.parallels && 0 !== defaults.parallels.length ? 2 > defaults.parallels.length && (defaults.parallels[1] = Math.abs(defaults.parallels[0] - default_parallels[0]) > Math.abs(defaults.parallels[0] - default_parallels[1]) ? default_parallels[0] : default_parallels[1]) : defaults.parallels = default_parallels;
  gviz.projection.BaseProjection.call(this, options);
  this.originLat_ = defaults.origin.lat / (180 / Math.PI);
  this.originLng_ = defaults.origin.lng / (180 / Math.PI);
  this.parallels_ = goog.array.map(defaults.parallels, function(parallel) {
    return parallel / (180 / Math.PI)
  })
};
goog.inherits(gviz.projection.LambertProjection, gviz.projection.BaseProjection);
gviz.projection.LambertProjection.prototype.project = function(coordinates) {
  return goog.array.map(arguments, goog.bind(function(coordinate) {
    goog.asserts.assert(2 === coordinate.length);
    var lat = coordinate[0] / (180 / Math.PI), lng = coordinate[1] / (180 / Math.PI), n = Math.log(Math.cos(this.parallels_[0]) * gviz.math.sec(this.parallels_[1])) / Math.log(Math.tan(0.25 * Math.PI + 0.5 * this.parallels_[1]) * gviz.math.cot(0.25 * Math.PI + 0.5 * this.parallels_[0])), F = Math.cos(this.parallels_[0]) * Math.pow(Math.tan(0.25 * Math.PI + 0.5 * this.parallels_[0]), n) / n, p = F * Math.pow(gviz.math.cot(0.25 * Math.PI + 0.5 * lat), n), p0 = F * Math.pow(gviz.math.cot(0.25 * Math.PI + 
    0.5 * this.originLat_), n);
    return{x:p * Math.sin(n * (lng - this.originLng_)) * (180 / Math.PI), y:p0 - p * Math.cos(n * (lng - this.originLng_)) * (180 / Math.PI)}
  }, this))
};
// Input 229
gviz.geochart.util = {};
gviz.geochart.util.projectLat = function(lat) {
  var radians = lat / 180 * Math.PI;
  return 180 / Math.PI * Math.log(Math.tan(0.5 * radians + Math.PI / 4))
};
gviz.geochart.util.unprojectLat = function(mercatorLat) {
  var latRadians = mercatorLat / (180 / Math.PI);
  return 2 * (180 / Math.PI) * (Math.atan(Math.exp(latRadians)) - Math.PI / 4)
};
gviz.geochart.util.BoundsTracker = function() {
  this.tracking_ = {}
};
gviz.geochart.util.BoundsTracker.prototype.track = function(variables$$0) {
  goog.array.forEach(arguments, goog.bind(function(variables) {
    for(var name in variables) {
      if(variables.hasOwnProperty(name)) {
        name in this.tracking_ || (this.tracking_[name] = {min:Infinity, max:-Infinity});
        if(!this.tracking_[name].min || variables[name] < this.tracking_[name].min) {
          this.tracking_[name].min = variables[name]
        }
        if(!this.tracking_[name].max || variables[name] > this.tracking_[name].max) {
          this.tracking_[name].max = variables[name]
        }
      }
    }
  }, this))
};
gviz.geochart.util.BoundsTracker.prototype.getBounds = function(variable) {
  return{min:this.tracking_[variable].min, max:this.tracking_[variable].max}
};
// Input 230
gviz.projection.MercatorProjection = function(options) {
  gviz.projection.BaseProjection.call(this, options)
};
goog.inherits(gviz.projection.MercatorProjection, gviz.projection.BaseProjection);
gviz.projection.MercatorProjection.prototype.project = function(coordinates$$0) {
  return goog.array.map(arguments, function(coordinates) {
    goog.asserts.assert(2 === coordinates.length);
    var lat = coordinates[0], lng = coordinates[1];
    return{x:lng, y:gviz.geochart.util.projectLat(lat)}
  })
};
// Input 231
gviz.projection.Projection = {ALBERS:"albers", KAVRAYSKIYVII:"kavrayskiy-vii", LAMBERT:"lambert", MERCATOR:"mercator"};
gviz.projection.Projections = {};
gviz.projection.Projections[gviz.projection.Projection.MERCATOR] = gviz.projection.MercatorProjection;
gviz.projection.Projections[gviz.projection.Projection.KAVRAYSKIYVII] = gviz.projection.KavrayskiyVIIProjection;
gviz.projection.Projections[gviz.projection.Projection.ALBERS] = gviz.projection.AlbersProjection;
gviz.projection.Projections[gviz.projection.Projection.LAMBERT] = gviz.projection.LambertProjection;
// Input 232
gviz.geochart.options = {};
gviz.geochart.options.DEFAULT_WIDTH = 556;
gviz.geochart.options.DEFAULT_HEIGHT = 347;
gviz.geochart.options.LegendPosition = {NONE:"none", TOP_LEFT:"top_left", TOP_RIGHT:"top_right", BOTTOM_LEFT:"bottom_left", BOTTOM_RIGHT:"bottom_right"};
gviz.geochart.options.GeocodingContext = {NONE:"none", REGION:"region", BOUNDS:"bounds", BOTH:"both"};
gviz.geochart.options.DEFAULT_LEGEND_POSITION = gviz.geochart.options.LegendPosition.BOTTOM_LEFT;
gviz.geochart.options.DEFAULT_LEGEND_ORIENTATION = gviz.colorbar.Orientation.HORIZONTAL;
gviz.geochart.options.DEFAULT_PROJECTION = gviz.projection.Projection.MERCATOR;
gviz.geochart.options.DEFAULT_GEOCODING_CONTEXT = gviz.geochart.options.GeocodingContext.REGION;
gviz.geochart.options.inferProjection = function(options, optionPath, opt_defaultValue) {
  var defaultProjection = opt_defaultValue ? {name:opt_defaultValue} : null, convertToProjection = function(obj) {
    goog.isObject(obj) || (obj = {name:obj});
    gviz.Options.convertToEnumOrThrow(gviz.projection.Projection, "The projection you specified is not valid.", obj.name);
    return obj
  }, projection = options.inferObjectValue(optionPath, defaultProjection, convertToProjection);
  return projection
};
gviz.geochart.options.DEFAULTS = {region:"world", resolution:gviz.geochart.MapResolution.COUNTRIES, domain:"COM", displayMode:gviz.GeoChartDataFormat.DisplayMode.AUTO, showGeocodeWarnings:!1, backgroundColor:{fill:"white", stroke:"#666", strokeWidth:0}, datalessRegionColor:"F5F5F5", defaultColor:"267114", markerOpacity:1, selectionMode:gviz.Options.SelectionMode.SINGLE, fontName:"Arial", geocodingContext:gviz.geochart.options.DEFAULT_GEOCODING_CONTEXT, tooltip:{isHtml:!1, textStyle:{fontName:"Arial", 
fontSize:13, color:"black"}, trigger:gviz.Options.TooltipTrigger.FOCUS, showDisputedText:!1, showTitle:!0}, colorAxis:{minValue:null, maxValue:null, values:null}, sizeAxis:{minValue:null, maxValue:null, minSize:3, maxSize:12}, legend:{position:gviz.geochart.options.DEFAULT_LEGEND_POSITION, orientation:gviz.geochart.options.DEFAULT_LEGEND_ORIENTATION, textStyle:{color:"black", auraColor:"white"}}, marker:{style:{stroke:{color:"#ccc", width:1}}}, projection:gviz.geochart.options.DEFAULT_PROJECTION, 
keepAspectRatio:!0, magnifyingGlass:{enable:!0, zoomFactor:5}};
// Input 233
gviz.geochart.Location = {};
gviz.geochart.LocationProvider = function(errorHandler) {
  goog.Disposable.call(this);
  this.logger_ = gviz.util.VisCommon.createLogger(gviz.geochart.LocationProvider.LOCATION_PROVIDER_NAME_);
  this.logger_.setLevel(goog.debug.Logger.Level.INFO);
  this.errorHandler_ = errorHandler;
  this.staticMap_ = this.asyncWrapper_ = null;
  this.showWarnings_ = !0;
  this.geocodingContext_ = null;
  this.requestGroup_ = new gviz.util.BatchGeocoder.RequestGroup;
  var letterPattern = "[a-zA-Z]", letterOrDigitPattern = "[a-zA-Z0-9]", iso31661Pattern = letterPattern + letterPattern, iso31662Pattern = letterPattern + letterPattern + "\\-" + letterOrDigitPattern + "(|" + letterOrDigitPattern + "(|" + letterOrDigitPattern + "))", continentIdPattern = "\\d\\d\\d";
  this.isIsoCodeRegExp_ = RegExp("^(" + iso31661Pattern + "|" + iso31662Pattern + "|" + continentIdPattern + ")$");
  this.isSimplisticUsMetroPattern_ = /^\d\d\d$/
};
goog.inherits(gviz.geochart.LocationProvider, goog.Disposable);
gviz.geochart.LocationProvider.prototype.clearStaticMap = function() {
  this.staticMap_ = null
};
gviz.geochart.LocationProvider.prototype.setStaticMap = function(staticMap) {
  this.staticMap_ = staticMap;
  goog.isDefAndNotNull(this.mapCallback_) && this.mapCallback_(staticMap)
};
gviz.geochart.LocationProvider.prototype.setGeocodingContext = function(geocodingContext) {
  this.geocodingContext_ = geocodingContext
};
gviz.geochart.LocationProvider.prototype.processTable = function(dataTable, dataTableFormat, mapId, showWarnings, callback, asyncWrapper) {
  this.showWarnings_ = showWarnings;
  if(0 == dataTable.getNumberOfRows()) {
    goog.Timer.callOnce(function() {
      callback([], [], !0)
    })
  }else {
    switch(this.asyncWrapper_ = asyncWrapper, dataTableFormat.addressType) {
      case gviz.GeoChartDataFormat.AddressType.LATLNG:
        this.createLocationsFromLatLngs_(dataTable, dataTableFormat, callback);
        break;
      case gviz.GeoChartDataFormat.AddressType.REGIONCODE:
        this.regionCodeRows_(dataTable, dataTableFormat, mapId, callback);
        break;
      case gviz.GeoChartDataFormat.AddressType.ADDRESS:
        this.createLocationsFromAddresses_(dataTable, dataTableFormat, mapId, callback)
    }
  }
};
gviz.geochart.LocationProvider.prototype.createLocationsFromLatLngs_ = function(dataTable, dataTableFormat, callback) {
  this.logger_.info("lat/lng provided by user");
  for(var locations = [], i = 0;i < dataTable.getNumberOfRows();i++) {
    var lat = dataTable.getValue(i, dataTableFormat.latColumn), lng = dataTable.getValue(i, dataTableFormat.lngColumn);
    locations[i] = null == lat || null == lng ? null : {lat:goog.string.makeSafe(lat), lng:goog.string.makeSafe(lng)}
  }
  goog.Timer.callOnce(function() {
    callback([], locations, !0)
  })
};
gviz.geochart.LocationProvider.prototype.regionCodeRows_ = function(dataTable, dataTableFormat, mapId, callback) {
  for(var rawRegionNames = [], i = 0;i < dataTable.getNumberOfRows();i++) {
    rawRegionNames.push(dataTable.getValue(i, dataTableFormat.regionColumn))
  }
  mapId.resolution == gviz.geochart.MapResolution.METROS || mapId.resolution == gviz.geochart.MapResolution.CONTINENTS || mapId.resolution == gviz.geochart.MapResolution.SUBCONTINENTS ? this.createLocationsDirectly_(mapId, rawRegionNames, callback) : this.createLocationsFromRegionNames_(mapId, rawRegionNames, callback)
};
gviz.geochart.LocationProvider.prototype.createLocationsDirectly_ = function(mapId, rawRegionNames, callback) {
  var isUsMetros = goog.string.startsWith(mapId.region, "US") && mapId.resolution == gviz.geochart.MapResolution.METROS;
  this.logger_.info("RegionCoding directly. (isUsMetros=" + isUsMetros + ")");
  for(var locations = [], i = 0;i < rawRegionNames.length;i++) {
    var address = goog.string.makeSafe(rawRegionNames[i]);
    isUsMetros && this.isSimplisticUsMetroPattern_.test(address) && (address = "US-" + address);
    locations.push(address.toUpperCase())
  }
  goog.Timer.callOnce(function() {
    callback(locations, [], !0)
  })
};
gviz.geochart.LocationProvider.prototype.createLocationsFromRegionNames_ = function(mapId, rawRegionNames, callback) {
  var region = mapId.region, dictName;
  dictName = mapId.resolution == gviz.geochart.MapResolution.PROVINCES && gviz.util.RegionCoder.hasProvincesRegionCodes(region) ? region : "countries_en";
  if(mapId.resolution == gviz.geochart.MapResolution.PROVINCES && "US" == region) {
    for(var i$$0 = 0;i$$0 < rawRegionNames.length;++i$$0) {
      var rawRegionName = rawRegionNames[i$$0];
      2 == rawRegionName.length && (rawRegionNames[i$$0] = "US-" + rawRegionName)
    }
  }
  this.logger_.info("using regioncoder " + dictName);
  gviz.util.RegionCoder.requestCoder(dictName, this.bind_(function(coder) {
    for(var regions = this.codeRegionsUsingCoder_(rawRegionNames, coder), requests = [], i = 0;i < rawRegionNames.length;i++) {
      var code = regions[i];
      if(null == code) {
        var address = rawRegionNames[i];
        requests.push({address:address, regionIndex:i, markerIndex:null});
        regions[i] = address
      }
    }
    goog.array.isEmpty(requests) ? callback(regions, [], !0) : (callback(regions, [], !1), this.geocode_(requests, region, callback, regions, []))
  }))
};
gviz.geochart.LocationProvider.prototype.codeRegionsUsingCoder_ = function(rawRegionNames, coder) {
  for(var regions = [], i = 0;i < rawRegionNames.length;++i) {
    var rawRegionName = rawRegionNames[i], regionName = goog.string.trim(goog.string.makeSafe(rawRegionName)).toLowerCase(), coderResult = coder && coder.getCode(regionName), code;
    coderResult ? (code = coderResult, this.logger_.fine('RegionCoder: found code for region "' + rawRegionName + '": ' + code)) : this.isProbablyAnIsoCode_(regionName) ? (code = regionName.toUpperCase(), this.logger_.fine('Using region "' + rawRegionName + '" as code: ' + code)) : (code = null, this.logger_.info('RegionCoder: failed to find code for "' + rawRegionName + '". Will try again using Geocode.'));
    regions.push(code)
  }
  return regions
};
gviz.geochart.LocationProvider.prototype.isProbablyAnIsoCode_ = function(regionName) {
  return this.isIsoCodeRegExp_.test(regionName)
};
gviz.geochart.LocationProvider.prototype.addWarning_ = function(text) {
  this.showWarnings_ && this.errorHandler_ && this.errorHandler_.addWarning(text)
};
gviz.geochart.LocationProvider.prototype.createLocationsFromAddresses_ = function(dataTable, dataTableFormat, mapId, callback) {
  var requests = [], region = mapId.region;
  2 == region.length && (region = region.toUpperCase(), region = region.replace(/GB/, "UK"), region = region.replace(/RU/, "SU"), region = region.replace(/TP/, "TL"));
  for(var i = 0;i < dataTable.getNumberOfRows();i++) {
    var address = goog.string.makeSafe(dataTable.getValue(i, dataTableFormat.addressColumn));
    this.regionAddsContext_(region) && (address += " " + region);
    requests.push({address:address, markerIndex:i, regionIndex:null})
  }
  this.geocode_(requests, region, callback, [], [])
};
gviz.geochart.LocationProvider.prototype.regionAddsContext_ = function(region) {
  return"world" == region || goog.string.isNumeric(region) ? !1 : this.geocodingContext_ === gviz.geochart.options.GeocodingContext.REGION || this.geocodingContext_ === gviz.geochart.options.GeocodingContext.BOTH
};
gviz.geochart.LocationProvider.prototype.boundsAddContext_ = function() {
  return this.geocodingContext_ === gviz.geochart.options.GeocodingContext.BOUNDS || this.geocodingContext_ === gviz.geochart.options.GeocodingContext.BOTH
};
gviz.geochart.LocationProvider.prototype.getMapBoundsForContext_ = function() {
  var minLat = Infinity, minLng = Infinity, maxLat = -Infinity, maxLng = -Infinity;
  if(goog.isDefAndNotNull(this.staticMap_) && 0 !== this.staticMap_.views.length) {
    return goog.array.forEach(this.staticMap_.views, function(view) {
      var boundingBox = view.boundingBox;
      minLat = Math.min(minLat, boundingBox.lo[0]);
      minLng = Math.min(minLat, boundingBox.lo[1]);
      maxLat = Math.max(maxLat, boundingBox.hi[0]);
      maxLng = Math.max(maxLat, boundingBox.hi[1])
    }), {lo:{lat:minLat, lng:minLng}, hi:{lat:maxLat, lng:maxLng}}
  }
};
gviz.geochart.LocationProvider.prototype.geocode_ = function(requests, region, callback, regions, markers) {
  this.logger_.info("Sending geocoding requests to maps api");
  this.sendGeocodingRequest_(requests, region, callback, regions, markers)
};
gviz.geochart.LocationProvider.prototype.sendGeocodingRequest_ = function(requests, region, callback, regions, markers) {
  for(var replayBatchSize = 1, batchRequests = [], i = 0;i < requests.length;i++) {
    var address = requests[i].address, batchRequest = {address:address};
    this.regionAddsContext_(region) && (batchRequest.region = region);
    this.boundsAddContext_() && (batchRequest.bounds = this.getMapBoundsForContext_());
    batchRequests.push(batchRequest)
  }
  var remainingRequests = goog.array.clone(requests), handleGeocodingResponse = goog.bind(this.handleGeocodingResponse_, this, remainingRequests, callback, regions, markers);
  this.requestGroup_.create(batchRequests, handleGeocodingResponse, replayBatchSize)
};
gviz.geochart.LocationProvider.prototype.handleGeocodingResponse_ = function(remainingRequests, callback, regions, markers, geocodingLocations) {
  for(var numLocations = geocodingLocations.length, i = 0;i < numLocations;i++) {
    var request = remainingRequests[i];
    goog.asserts.assert(request);
    var address = request.address, regionIndex = request.regionIndex, markerIndex = request.markerIndex;
    if(geocodingLocations[i] && geocodingLocations[i][0]) {
      var geocoderResponse = geocodingLocations[i][0];
      goog.asserts.assert(geocoderResponse);
      goog.isDefAndNotNull(regionIndex) && (regions[regionIndex] = this.extractRegionCode_(address, geocoderResponse), regions[regionIndex] || (this.logger_.warning('Geocode: failed to extract region code from "' + address + '"'), this.addWarning_('Failed geocoding "' + address + '"'), regions[regionIndex] = address));
      goog.isDefAndNotNull(markerIndex) && (markers[markerIndex] = this.extractMarker_(address, geocoderResponse))
    }else {
      goog.isDefAndNotNull(regionIndex) && (regions[regionIndex] = null), goog.isDefAndNotNull(markerIndex) && (markers[markerIndex] = null), this.logger_.warning('Geocode: failed to parse response for "' + address + '"'), this.addWarning_('Failed geocoding "' + address + '"')
    }
  }
  goog.array.splice(remainingRequests, 0, numLocations);
  var isDone = goog.array.isEmpty(remainingRequests);
  isDone && goog.array.every(regions, goog.isNull) && goog.array.every(markers, goog.isNull) && this.addWarning_("Geocoding failed for all data points");
  callback(regions, markers, isDone)
};
gviz.geochart.LocationProvider.prototype.extractRegionCode_ = function(address, geocoderResponse) {
  var addressComps = geocoderResponse.address_components, code = null;
  1 == addressComps.length && 0 <= goog.array.indexOf(addressComps[0].types, "country") ? (code = addressComps[0].short_name, this.logger_.info('Geocode: found country code for "' + address + '": ' + code)) : 2 == addressComps.length && "US" == addressComps[1].short_name && (code = "US-" + addressComps[0].short_name, this.logger_.info('Geocode: found US province code for "' + address + '": ' + code));
  return code
};
gviz.geochart.LocationProvider.prototype.extractMarker_ = function(address, geocoderResponse) {
  var marker = {lat:geocoderResponse.geometry.location.lat(), lng:geocoderResponse.geometry.location.lng()};
  this.logger_.info("Found lat/lng for address " + address + ": " + marker.lat + "/" + marker.lng);
  return marker
};
gviz.geochart.LocationProvider.prototype.bind_ = function(f) {
  return goog.bind(f, this)
};
gviz.geochart.LocationProvider.prototype.disposeInternal = function() {
  this.requestGroup_.cancel();
  gviz.geochart.LocationProvider.superClass_.disposeInternal.call(this)
};
gviz.geochart.LocationProvider.LOCATION_PROVIDER_NAME_ = "google.visualization.locationProvider";
// Input 234
gviz.colorbar.builder = {};
gviz.colorbar.builder.draw = function(colorBarDef, renderer, drawingGroup) {
  gviz.colorbar.builder.drawColorGradient_(colorBarDef.colorGradientRectanglesDefinitions, renderer, drawingGroup);
  gviz.colorbar.builder.drawMarkers_(colorBarDef.markersDefinitions, renderer, drawingGroup);
  gviz.colorbar.builder.drawTextItems_(colorBarDef.textItemsDefinitions, renderer, drawingGroup)
};
gviz.colorbar.builder.drawColorGradient_ = function(colorGradientRectanglesDefinitions, renderer, drawingGroup) {
  for(var i = 0;i < colorGradientRectanglesDefinitions.length;++i) {
    renderer.drawRect(colorGradientRectanglesDefinitions[i].rectangle.left, colorGradientRectanglesDefinitions[i].rectangle.top, colorGradientRectanglesDefinitions[i].rectangle.width, colorGradientRectanglesDefinitions[i].rectangle.height, colorGradientRectanglesDefinitions[i].brush, drawingGroup)
  }
};
gviz.colorbar.builder.drawMarkers_ = function(markersDefinitions, renderer, drawingGroup) {
  for(var i = 0;i < markersDefinitions.length;++i) {
    var path = new gviz.graphics.PathSegments;
    path.move(markersDefinitions[i].path[0], markersDefinitions[i].path[1]);
    path.addLine(markersDefinitions[i].path[2], markersDefinitions[i].path[3]);
    path.addLine(markersDefinitions[i].path[4], markersDefinitions[i].path[5]);
    path.close();
    renderer.drawPath(path, markersDefinitions[i].brush, drawingGroup)
  }
};
gviz.colorbar.builder.drawTextItems_ = function(textItemsDefinitions, renderer, drawingGroup) {
  for(var i = 0;i < textItemsDefinitions.length;++i) {
    renderer.drawText(textItemsDefinitions[i].text, textItemsDefinitions[i].x, textItemsDefinitions[i].y, 1, gviz.graphics.TextAlign.START, gviz.graphics.TextAlign.START, textItemsDefinitions[i].style, drawingGroup)
  }
};
// Input 235
gviz.geochart.idutils = {};
gviz.geochart.idutils.generateId = function(tokens) {
  return tokens.join(gviz.geochart.idutils.TOKEN_SEPARATOR)
};
gviz.geochart.idutils.Token = {FEATURE:"feature", DISPUTED_AREA:"disputed", MARKER:"marker", BORDER:"border"};
gviz.geochart.idutils.TOKEN_SEPARATOR = ".";
// Input 236
// Input 237
gviz.geochart.LogicalCanvas = function(overlayArea, renderer, dataTableFormat) {
  goog.Disposable.call(this);
  this.renderer_ = renderer;
  this.overlayArea_ = overlayArea;
  this.tooltipElement_ = null;
  this.dataTableFormat_ = dataTableFormat;
  this.logger_ = gviz.util.VisCommon.createLogger(gviz.geochart.LogicalCanvas.NAME_);
  this.logger_.info("Starting...");
  this.idToElementMapping_ = {};
  this.eventTarget_ = new goog.events.EventTarget;
  this.magnifiedMarkerId_ = this.colorBarDrawingGroup_ = this.interactionTooltipDrawingGroup_ = this.featureGlowDrawingGroup_ = this.markersDrawingGroup_ = this.lastDrawnMapDef_ = null
};
goog.inherits(gviz.geochart.LogicalCanvas, goog.Disposable);
gviz.geochart.LogicalCanvas.prototype.listen = function(type, handler) {
  goog.events.listen(this.eventTarget_, type, handler)
};
gviz.geochart.LogicalCanvas.prototype.plotChart = function(mapDef) {
  this.logger_.info("Redrawing from scratch...");
  var renderer = this.renderer_;
  renderer.clear();
  var mainChartElement = renderer.createCanvas(mapDef.width, mapDef.height);
  this.idToElementMapping_ = {};
  var mainGroup = renderer.createGroup();
  this.plotBackground_(mainGroup, mapDef, new goog.math.Rect(0, 0, mapDef.width, mapDef.height), !1);
  var mapDrawingGroup = renderer.createGroup();
  this.plotMap_(mapDrawingGroup, mapDef);
  var mapRect = this.getMapRect_(mapDef), mapClipGroup = renderer.clipGroup(mapDrawingGroup, mapRect);
  this.colorBarDrawingGroup_ = renderer.createGroup();
  this.plotColorBar_(mapDef);
  this.magnifiedAreaDrawingGroup_ = renderer.createGroup();
  this.plotMagnifiedArea_(mapDef);
  this.interactionTooltipDrawingGroup_ = renderer.createGroup();
  this.plotTooltip_(mapDef);
  renderer.appendChild(mainChartElement, mainGroup);
  renderer.appendChild(mainGroup, mapClipGroup);
  renderer.appendChild(mainGroup, this.colorBarDrawingGroup_);
  renderer.appendChild(mainGroup, this.magnifiedAreaDrawingGroup_);
  renderer.appendChild(mainGroup, this.interactionTooltipDrawingGroup_);
  this.lastDrawnMapDef_ = mapDef;
  this.addEventHandlers_(mainChartElement)
};
gviz.geochart.LogicalCanvas.prototype.plotMap_ = function(mapDrawingGroup, mapDef) {
  var renderer = this.renderer_, dataDrawingGroup = renderer.createGroup();
  this.featureGlowDrawingGroup_ = renderer.createGroup();
  for(var i = 0;i < mapDef.views.length;++i) {
    this.plotView_(dataDrawingGroup, mapDef, mapDef.views[i], !1), this.plotViewGlows_(mapDef, mapDef.views[i])
  }
  this.markersDrawingGroup_ = renderer.createGroup();
  this.plotMarkers_(this.markersDrawingGroup_, mapDef.markersData, !1, mapDef.defaultFontName);
  renderer.appendChild(mapDrawingGroup, dataDrawingGroup);
  renderer.appendChild(mapDrawingGroup, this.featureGlowDrawingGroup_);
  renderer.appendChild(mapDrawingGroup, this.markersDrawingGroup_)
};
gviz.geochart.LogicalCanvas.prototype.plotData = function(mapDef) {
  this.logger_.info("Redrawing data...");
  this.redrawColors_(mapDef);
  this.redrawMarkers_(mapDef);
  this.plotInteraction(mapDef, !0)
};
gviz.geochart.LogicalCanvas.prototype.plotInteraction = function(mapDef, opt_forceGlowRedraw) {
  var forceGlowRedraw = opt_forceGlowRedraw || !1;
  this.logger_.info("Redrawing interaction...");
  this.redrawTooltip_(mapDef);
  this.redrawFeatureGlows_(mapDef, forceGlowRedraw);
  this.redrawMarkerGlows_(mapDef);
  this.redrawColorBar_(mapDef);
  this.redrawMagnifiedArea_(mapDef);
  this.lastDrawnMapDef_ = mapDef
};
gviz.geochart.LogicalCanvas.prototype.redrawFeatureGlows_ = function(mapDef, forceGlowRedraw) {
  if(forceGlowRedraw || !gviz.object.unsafeEquals(this.lastDrawnMapDef_.glowingFeatures, mapDef.glowingFeatures)) {
    this.renderer_.removeChildren(this.featureGlowDrawingGroup_);
    for(var i = 0;i < mapDef.views.length;++i) {
      this.plotViewGlows_(mapDef, mapDef.views[i])
    }
  }
};
gviz.geochart.LogicalCanvas.prototype.plotViewGlows_ = function(mapDef, viewDef) {
  for(var viewDrawingGroup = this.renderer_.createGroup(), glowingFeatures = goog.array.filter(viewDef.features, function(feature) {
    return goog.array.contains(mapDef.glowingFeatures, feature.id)
  }), i = 0;i < glowingFeatures.length;++i) {
    this.plotFeatureGlow_(viewDrawingGroup, mapDef, viewDef, glowingFeatures[i])
  }
  goog.asserts.assert(this.featureGlowDrawingGroup_);
  this.renderer_.appendChild(this.featureGlowDrawingGroup_, viewDrawingGroup)
};
gviz.geochart.LogicalCanvas.prototype.redrawMarkers_ = function(mapDef) {
  var renderer = this.renderer_;
  goog.array.forEach(goog.dom.getChildren(this.markersDrawingGroup_.getElement()), function(markerElement) {
    goog.array.forEach(goog.dom.getChildren(markerElement), function(childNode) {
      renderer.removeElement(childNode)
    }, this)
  }, this);
  this.plotMarkers_(this.markersDrawingGroup_, mapDef.markersData, !1, mapDef.defaultFontName)
};
gviz.geochart.LogicalCanvas.glowBrush_ = new gviz.graphics.Brush({strokeWidth:"3", stroke:"black", strokeOpacity:"0.2"});
gviz.geochart.LogicalCanvas.glowBrush2_ = new gviz.graphics.Brush({strokeWidth:"1", stroke:"black", strokeOpacity:"0.1"});
gviz.geochart.LogicalCanvas.prototype.plotFeatureGlow_ = function(viewDrawingGroup, mapDef, viewDef, featureDef) {
  if(!this.isSlowRenderer()) {
    var fid = featureDef.id, brushes = mapDef.featuresData[fid].brushes;
    this.plotFeaturePart_(viewDrawingGroup, featureDef, !1, !1, [gviz.geochart.LogicalCanvas.glowBrush_, gviz.geochart.LogicalCanvas.glowBrush2_, brushes.fill]);
    goog.array.isEmpty(featureDef.disputed) || (this.plotFeaturePart_(viewDrawingGroup, featureDef, !0, !1, [brushes.disputed]), this.plotFeaturePart_(viewDrawingGroup, featureDef, !1, !1, [brushes.border]))
  }
};
gviz.geochart.LogicalCanvas.prototype.redrawMagnifiedArea_ = function(mapDef) {
  var newId = mapDef.magnifiedArea ? mapDef.magnifiedArea.markerId : null;
  this.magnifiedMarkerId_ != newId && (this.renderer_.removeChildren(this.magnifiedAreaDrawingGroup_), this.plotMagnifiedArea_(mapDef))
};
gviz.geochart.LogicalCanvas.prototype.plotMagnifiedArea_ = function(mapDef) {
  var magnifiedArea = mapDef.magnifiedArea;
  if(magnifiedArea) {
    var drawingGroup = this.magnifiedAreaDrawingGroup_, viewDrawingGroup = this.plotMagnifiedAreaBorders_(drawingGroup, magnifiedArea), viewDef = magnifiedArea.view;
    this.plotBackground_(viewDrawingGroup, mapDef, viewDef.onscreenPosition, !0);
    this.plotView_(viewDrawingGroup, mapDef, viewDef, !0);
    this.plotMarkers_(viewDrawingGroup, magnifiedArea.markersData, !0, mapDef.defaultFontName);
    this.magnifiedMarkerId_ = magnifiedArea.markerId
  }else {
    this.magnifiedMarkerId_ = null
  }
};
gviz.geochart.LogicalCanvas.prototype.plotMagnifiedAreaBorders_ = function(drawingGroup, magnifiedArea) {
  var renderer = this.renderer_, rect = magnifiedArea.view.onscreenPosition, gap = 3.5, borderWidth = 1.5, cx = rect.left + rect.width / 2, cy = rect.top + rect.height / 2, rx = rect.width / 2, ry = rect.height / 2, mx = magnifiedArea.markerPosition.x, my = magnifiedArea.markerPosition.y, triangleBrush = new gviz.graphics.Brush({fill:"808080", fillOpacity:0.25}), triangle = new gviz.graphics.PathSegments;
  triangle.move(mx, my);
  triangle.addLine(mx, my + (cy > my ? ry : -ry));
  triangle.addLine(mx + (cx > mx ? rx : -rx), my);
  triangle.close();
  var triangleElement = renderer.drawPath(triangle, triangleBrush, drawingGroup);
  this.setNoFeatureInfo_(triangleElement, gviz.geochart.interactionEvents.ElementType.MAGNIFYING_GLASS_TRIANGLE, !0);
  var fillBrush = new gviz.graphics.Brush({fill:"white"}), fillElement = renderer.drawEllipse(cx, cy, rx, ry, fillBrush, drawingGroup), borderType = gviz.geochart.interactionEvents.ElementType.MAGNIFYING_GLASS_BORDER;
  this.setNoFeatureInfo_(fillElement, borderType, !0);
  var outerBorderBrush = new gviz.graphics.Brush({stroke:"bfbfbf", strokeWidth:borderWidth}), outerBorderElement = renderer.drawEllipse(cx, cy, rx, ry, outerBorderBrush, drawingGroup);
  this.setNoFeatureInfo_(outerBorderElement, borderType, !0);
  var viewDrawingGroup = renderer.createGroup(), innerRect = new goog.math.Rect(rect.left + gap, rect.top + gap, rect.width - 2 * gap, rect.height - 2 * gap), clipGroup = renderer.clipGroup(viewDrawingGroup, innerRect, !0);
  renderer.appendChild(drawingGroup, clipGroup);
  var innerBorderBrush = new gviz.graphics.Brush({stroke:"cccccc", strokeWidth:borderWidth}), innerBorderElement = renderer.drawEllipse(cx, cy, rx - gap, ry - gap, innerBorderBrush, drawingGroup);
  this.setNoFeatureInfo_(innerBorderElement, borderType, !0);
  return viewDrawingGroup
};
gviz.geochart.LogicalCanvas.prototype.redrawTooltip_ = function(mapDef) {
  this.renderer_.removeChildren(this.interactionTooltipDrawingGroup_);
  this.plotTooltip_(mapDef)
};
gviz.geochart.LogicalCanvas.prototype.plotTooltip_ = function(mapDef) {
  goog.isDefAndNotNull(this.tooltipElement_) && this.renderer_.removeElement(this.tooltipElement_);
  goog.isDefAndNotNull(mapDef.tooltip) ? (goog.asserts.assert(this.interactionTooltipDrawingGroup_), this.tooltipElement_ = mapDef.tooltip.html ? gviz.util.tooltip.htmlbuilder.draw(mapDef.tooltip, this.overlayArea_.getContainer()) : gviz.util.tooltip.builder.draw(mapDef.tooltip, this.renderer_, this.interactionTooltipDrawingGroup_).getElement()) : this.tooltipElement_ = null
};
gviz.geochart.LogicalCanvas.prototype.redrawColors_ = function(mapDef) {
  goog.object.forEach(mapDef.featuresData, function(featureData, fid) {
    var brushes = featureData.brushes;
    this.setFeatureBrush_(fid, gviz.geochart.idutils.Token.FEATURE, brushes.fill);
    this.setFeatureBrush_(fid, gviz.geochart.idutils.Token.DISPUTED_AREA, brushes.disputed);
    this.setFeatureBrush_(fid, gviz.geochart.idutils.Token.BORDER, brushes.border)
  }, this)
};
gviz.geochart.LogicalCanvas.prototype.setFeatureBrush_ = function(fid, featurePart, brush) {
  var elementId = gviz.geochart.idutils.generateId([featurePart, fid]), polygons = this.idToElementMapping_[elementId];
  if(goog.isDefAndNotNull(polygons)) {
    for(var i = 0;i < polygons.length;++i) {
      this.renderer_.setBrush(polygons[i], brush)
    }
  }
};
gviz.geochart.LogicalCanvas.prototype.addEventHandlers_ = function(mainChartElement) {
  var handler = this.bind_(function(domEvent) {
    var info = this.parseElementInfo_(domEvent.target);
    if(info && info.eventsEnabled) {
      var event = {type:this.getDispatchEventType_(domEvent.type, info.type), elementType:info.elementType, data:this.getDispatchEventData_(domEvent, info.data)};
      domEvent.type != goog.events.EventType.MOUSEMOVE && (this.logger_.fine('DOM event "' + domEvent.type + '" triggered on element ' + goog.json.serialize(info)), this.logger_.fine('Dispatching event "' + event.type + '" over "' + event.elementType + '": ' + goog.json.serialize(event.data)));
      this.eventTarget_.dispatchEvent(event)
    }
  }), renderer = this.renderer_;
  renderer.setEventHandler(mainChartElement, goog.events.EventType.MOUSEMOVE, handler);
  renderer.setEventHandler(mainChartElement, goog.events.EventType.MOUSEOUT, handler);
  renderer.setEventHandler(mainChartElement, goog.events.EventType.MOUSEOVER, handler);
  renderer.setEventHandler(mainChartElement, goog.events.EventType.CLICK, handler)
};
gviz.geochart.LogicalCanvas.InteractiveElementType_ = {FEATURE:"feature", MARKER:"marker"};
gviz.geochart.LogicalCanvas.prototype.getDispatchEventType_ = function(domEventType, elementType) {
  switch(elementType) {
    case gviz.geochart.LogicalCanvas.InteractiveElementType_.FEATURE:
      switch(domEventType) {
        case goog.events.EventType.CLICK:
          return gviz.geochart.interactionEvents.EventType.FEATURE_CLICK;
        case goog.events.EventType.MOUSEMOVE:
          return gviz.geochart.interactionEvents.EventType.FEATURE_MOVE;
        case goog.events.EventType.MOUSEOUT:
        ;
        case goog.events.EventType.MOUSEOVER:
          return gviz.geochart.interactionEvents.EventType.FEATURE_HOVER
      }
    ;
    case gviz.geochart.LogicalCanvas.InteractiveElementType_.MARKER:
      switch(domEventType) {
        case goog.events.EventType.CLICK:
          return gviz.geochart.interactionEvents.EventType.MARKER_CLICK;
        case goog.events.EventType.MOUSEMOVE:
          return gviz.geochart.interactionEvents.EventType.MARKER_MOVE;
        case goog.events.EventType.MOUSEOUT:
        ;
        case goog.events.EventType.MOUSEOVER:
          return gviz.geochart.interactionEvents.EventType.MARKER_HOVER
      }
  }
  goog.asserts.fail("Unrecognized event type " + domEventType + " for element type " + elementType);
  return null
};
gviz.geochart.LogicalCanvas.prototype.getDispatchEventData_ = function(domEvent, elementData) {
  var eventData = goog.object.clone(elementData);
  domEvent.type == goog.events.EventType.MOUSEOUT ? eventData.isOver = !1 : domEvent.type == goog.events.EventType.MOUSEOVER && (eventData.isOver = !0);
  eventData.cursorPosition = this.renderer_.getCursorPosition(domEvent);
  return eventData
};
gviz.geochart.LogicalCanvas.prototype.setMarkerInfo_ = function(elementOrGroup, marker, isMagnified) {
  var elementType = gviz.geochart.interactionEvents.ElementType.MARKER;
  this.setElementOrGroupInfo_(elementOrGroup, ["M", elementType, "1", isMagnified ? "1" : "0", marker.markerId, marker.rowId, marker.isCluttered ? "1" : "0"])
};
gviz.geochart.LogicalCanvas.prototype.setNoFeatureInfo_ = function(elementOrGroup, elementType, isMagnified) {
  this.setElementOrGroupInfo_(elementOrGroup, ["F", elementType, "1", isMagnified ? "1" : "0", "", "0"])
};
gviz.geochart.LogicalCanvas.prototype.setFeatureInfo_ = function(elementOrGroup, featureDef, isDisputed, isMagnified) {
  var eventsEnabled = featureDef.eventsEnabled, fid = featureDef.id, elementType = gviz.geochart.interactionEvents.ElementType.FEATURE;
  this.setElementOrGroupInfo_(elementOrGroup, ["F", elementType, eventsEnabled ? "1" : "0", isMagnified ? "1" : "0", fid, isDisputed ? "1" : "0"])
};
gviz.geochart.LogicalCanvas.prototype.setElementOrGroupInfo_ = function(elementOrGroup, info) {
  var infoString = info.join("#");
  this.renderer_.setLogicalName(elementOrGroup, infoString)
};
gviz.geochart.LogicalCanvas.prototype.parseElementInfo_ = function(element) {
  var infoString = this.renderer_.getLogicalName(element);
  if(!infoString || infoString == gviz.graphics.logicalname.DEFAULT_NAME) {
    return null
  }
  var info = infoString.split("#");
  goog.asserts.assert(4 <= info.length);
  var elementType = info[1], eventsEnabled = "1" == info[2] ? !0 : !1, isMagnified = "1" == info[3] ? !0 : !1;
  switch(info[0]) {
    case "F":
      return goog.asserts.assert(6 == info.length), {type:gviz.geochart.LogicalCanvas.InteractiveElementType_.FEATURE, elementType:elementType, eventsEnabled:eventsEnabled, data:{isMagnified:isMagnified, featureId:info[4] ? info[4] : null, isDisputed:"1" == info[5] ? !0 : !1}};
    case "M":
      return goog.asserts.assert(7 == info.length), {type:gviz.geochart.LogicalCanvas.InteractiveElementType_.MARKER, elementType:elementType, eventsEnabled:eventsEnabled, data:{isMagnified:isMagnified, markerId:info[4], rowId:goog.string.toNumber(info[5]), isCluttered:"1" == info[6] ? !0 : !1}};
    default:
      return null
  }
};
gviz.geochart.LogicalCanvas.prototype.plotBackground_ = function(drawingGroup, mapDef, rect, isMagnified) {
  var backgroundElement = this.renderer_.drawRect(rect.left, rect.top, rect.width, rect.height, mapDef.backgroundBrush, drawingGroup);
  this.setNoFeatureInfo_(backgroundElement, gviz.geochart.interactionEvents.ElementType.OCEAN, isMagnified)
};
gviz.geochart.LogicalCanvas.prototype.plotView_ = function(drawingGroup, mapDef, viewDef, isMagnified) {
  for(var viewDrawingGroup = this.renderer_.createGroup(), i = 0;i < viewDef.features.length;++i) {
    this.plotFeature_(viewDrawingGroup, mapDef, viewDef, viewDef.features[i], isMagnified)
  }
  this.renderer_.appendChild(drawingGroup, viewDrawingGroup)
};
gviz.geochart.LogicalCanvas.prototype.plotFeature_ = function(viewDrawingGroup, mapDef, viewDef, featureDef, isMagnified) {
  var fid = featureDef.id, brushes = mapDef.featuresData[fid].brushes;
  this.plotFeaturePart_(viewDrawingGroup, featureDef, !1, isMagnified, [brushes.fill], gviz.geochart.idutils.Token.FEATURE);
  goog.array.isEmpty(featureDef.disputed) || (this.plotFeaturePart_(viewDrawingGroup, featureDef, !0, isMagnified, [brushes.disputed], gviz.geochart.idutils.Token.DISPUTED_AREA), this.plotFeaturePart_(viewDrawingGroup, featureDef, !1, isMagnified, [brushes.border], gviz.geochart.idutils.Token.BORDER))
};
gviz.geochart.LogicalCanvas.prototype.plotFeaturePart_ = function(viewDrawingGroup, featureDef, isDisputed, isMagnified, brushes, opt_partToken) {
  var polygons = isDisputed ? featureDef.disputed : featureDef.polygons, fid = featureDef.id, elementId = goog.isDefAndNotNull(opt_partToken) ? gviz.geochart.idutils.generateId([opt_partToken, fid]) : null;
  elementId && (this.idToElementMapping_[elementId] = this.idToElementMapping_[elementId] || []);
  for(var i = 0;i < polygons.length;++i) {
    var polygon = polygons[i], path = this.plotPolygon_(polygon);
    if(0 < path.segments.length) {
      for(var j = 0;j < brushes.length;++j) {
        var brush = brushes[j], element = this.renderer_.drawPath(path, brush, viewDrawingGroup);
        element && (this.setFeatureInfo_(element, featureDef, isDisputed, isMagnified), elementId && this.idToElementMapping_[elementId].push(element))
      }
    }
  }
};
gviz.geochart.LogicalCanvas.prototype.plotPolygon_ = function(polygon) {
  var Direction = gviz.geochart.LogicalCanvas.PolylineDirection_, path = new gviz.graphics.PathSegments;
  this.plotPolyline_(path, polygon.shell, Direction.NATURAL);
  for(var i = 0;i < polygon.holes.length;i++) {
    var hole = polygon.holes[i];
    this.plotPolyline_(path, hole, Direction.REVERSE)
  }
  return path
};
gviz.geochart.LogicalCanvas.PolylineDirection_ = {NATURAL:"natural", REVERSE:"reverse"};
gviz.geochart.LogicalCanvas.prototype.plotPolyline_ = function(path, polyline, direction) {
  var points = polyline.points, len = points.length;
  if(!(1 >= len)) {
    for(var Direction = gviz.geochart.LogicalCanvas.PolylineDirection_, firstIndex = direction == Direction.NATURAL ? 0 : len - 1, endIndex = direction == Direction.NATURAL ? len : -1, step = direction == Direction.NATURAL ? 1 : -1, i = firstIndex;i != endIndex;i += step) {
      var x = points[i][0], y = points[i][1];
      i == firstIndex ? path.move(x, y) : path.addLine(x, y)
    }
    path.close()
  }
};
gviz.geochart.LogicalCanvas.prototype.plotMarkers_ = function(drawingGroup, markers, isMagnified, fontName) {
  var renderer = this.renderer_, sortedMarkers = goog.array.clone(markers);
  goog.array.sort(sortedMarkers, function(marker1, marker2) {
    return marker2.size - marker1.size
  });
  for(var i = 0;i < sortedMarkers.length;++i) {
    var marker = sortedMarkers[i], markerDrawingGroup = renderer.createGroup();
    this.setMarkerInfo_(markerDrawingGroup, marker, isMagnified);
    renderer.appendChild(drawingGroup, markerDrawingGroup);
    if(this.dataTableFormat_.displayMode === gviz.GeoChartDataFormat.DisplayMode.TEXT) {
      var textStyle = {fontName:fontName, fontSize:marker.size, color:marker.brush.getFill(), opacity:marker.brush.getFillOpacity(), auraColor:"", bold:!1, underline:!1, italic:!1};
      renderer.drawText(marker.label, marker.x, marker.y, 20, gviz.graphics.TextAlign.CENTER, gviz.graphics.TextAlign.CENTER, textStyle, markerDrawingGroup)
    }else {
      renderer.drawCircle(marker.x, marker.y, marker.size, marker.brush, markerDrawingGroup)
    }
    var elementId = gviz.geochart.idutils.generateId([gviz.geochart.idutils.Token.MARKER, marker.markerId]);
    this.idToElementMapping_[elementId] = markerDrawingGroup.getElement()
  }
};
gviz.geochart.LogicalCanvas.prototype.redrawMarkerGlows_ = function(mapDef) {
  var renderer = this.renderer_, lastGlowingMarkers = this.lastDrawnMapDef_.glowingMarkers;
  goog.array.forEach(lastGlowingMarkers, function(markerId) {
    if(!goog.array.contains(mapDef.glowingMarkers, markerId)) {
      for(var elementId = gviz.geochart.idutils.generateId([gviz.geochart.idutils.Token.MARKER, markerId]), markerElement = this.idToElementMapping_[elementId], children = goog.dom.getChildren(markerElement), i = 1;i < children.length;++i) {
        renderer.removeElement(children[i])
      }
    }
  }, this);
  goog.array.forEach(mapDef.glowingMarkers, function(markerId) {
    if(!goog.array.contains(lastGlowingMarkers, markerId)) {
      var elementId = gviz.geochart.idutils.generateId([gviz.geochart.idutils.Token.MARKER, markerId]), markerElement = this.idToElementMapping_[elementId], circleElement = goog.dom.getFirstElementChild(markerElement), firstGlow = circleElement.cloneNode(!0);
      renderer.setBrush(firstGlow, gviz.geochart.LogicalCanvas.glowBrush_);
      markerElement.appendChild(firstGlow)
    }
  }, this)
};
gviz.geochart.LogicalCanvas.prototype.redrawColorBar_ = function(mapDef) {
  this.renderer_.removeChildren(this.colorBarDrawingGroup_);
  this.plotColorBar_(mapDef)
};
gviz.geochart.LogicalCanvas.prototype.plotColorBar_ = function(mapDef) {
  mapDef.colorBar && (goog.asserts.assert(this.colorBarDrawingGroup_), gviz.colorbar.builder.draw(mapDef.colorBar, this.renderer_, this.colorBarDrawingGroup_))
};
gviz.geochart.LogicalCanvas.prototype.disposeInternal = function() {
  goog.events.removeAll(this.eventTarget_);
  goog.isDefAndNotNull(this.tooltipElement_) && this.renderer_.removeElement(this.tooltipElement_);
  gviz.geochart.LogicalCanvas.superClass_.disposeInternal.call(this)
};
gviz.geochart.LogicalCanvas.prototype.getTextSize = function(text, textStyle) {
  return this.renderer_.getTextSize(text, textStyle)
};
gviz.geochart.LogicalCanvas.prototype.bind_ = function(f) {
  return goog.bind(f, this)
};
gviz.geochart.LogicalCanvas.prototype.getMapRect_ = function(mapDef) {
  var mapRect = mapDef.mapRect;
  return this.isSlowRenderer() ? new goog.math.Rect(mapRect.left, mapRect.top, mapRect.width - 1, mapRect.height - 1) : mapRect
};
gviz.geochart.LogicalCanvas.prototype.isSlowRenderer = function() {
  return this.renderer_.isSlowRenderer()
};
gviz.geochart.LogicalCanvas.NAME_ = "gviz.geochart.LogicalCanvas";
// Input 238
gviz.geochart.InteractionState = function(opt_state) {
  this.selection = new gviz.util.Selection;
  this.magnified = this.elaborated = this.focusedMarker = this.focusedFeature = null;
  if(goog.isDefAndNotNull(opt_state)) {
    this.selection.setSelection(opt_state.selection);
    var userState = new gviz.Options([opt_state]);
    this.focusedFeature = userState.inferOptionalStringValue("focusedFeature");
    this.focusedMarker = userState.inferOptionalStringValue("focusedMarker");
    var elaborated = userState.inferObjectValue("elaborated");
    if(goog.isDefAndNotNull(elaborated)) {
      var rowId = userState.inferOptionalNumberValue("elaborated.rowId"), isDisputed = userState.inferOptionalBooleanValue("elaborated.isDisputed"), xOrigin = userState.inferOptionalNumberValue("elaborated.origin.x"), yOrigin = userState.inferOptionalNumberValue("elaborated.origin.y");
      goog.isDefAndNotNull(rowId) && goog.isDefAndNotNull(xOrigin) && goog.isDefAndNotNull(yOrigin) && goog.isDefAndNotNull(isDisputed) && (this.elaborated = {rowId:rowId, isDisputed:isDisputed, origin:{x:xOrigin, y:yOrigin}})
    }
  }
};
gviz.geochart.InteractionState.prototype.clone = function() {
  var cloned = new gviz.geochart.InteractionState;
  cloned.selection = this.selection.clone();
  cloned.focusedFeature = goog.object.unsafeClone(this.focusedFeature);
  cloned.elaborated = goog.object.unsafeClone(this.elaborated);
  cloned.magnified = goog.object.unsafeClone(this.magnified);
  return cloned
};
gviz.geochart.InteractionState.prototype.equals = function(other) {
  return goog.json.serialize(this) == goog.json.serialize(other)
};
// Input 239
gviz.geochart.MagnifiedAreaDefiner = function(mapSize, boundaries) {
  this.boundaries_ = this.removeMarginsFromBoundaries_(boundaries);
  this.glassSize_ = this.calcGlassSize_(mapSize)
};
gviz.geochart.MagnifiedAreaDefiner.prototype.removeMarginsFromBoundaries_ = function(boundaries) {
  var margins = 5, marginsBox = new goog.math.Box(-margins, -margins, -margins, -margins);
  return boundaries.clone().expand(marginsBox)
};
gviz.geochart.MagnifiedAreaDefiner.prototype.calcGlassSize_ = function(mapSize) {
  var glassSide = 2 * mapSize.getShortest() / 5;
  return new goog.math.Size(glassSide, glassSide)
};
gviz.geochart.MagnifiedAreaDefiner.prototype.calcPosition = function(markerPosition) {
  var box = this.boundaries_, glassSize = this.glassSize_, x = markerPosition.x, rightEnd = x + glassSize.width;
  rightEnd > box.right && (x = markerPosition.x - glassSize.width, goog.asserts.assert(x > box.left));
  var y = markerPosition.y - glassSize.height;
  y < box.top && (y = markerPosition.y, goog.asserts.assert(y + glassSize.height < box.bottom));
  return new goog.math.Rect(x, y, glassSize.width, glassSize.height)
};
gviz.geochart.MagnifiedAreaDefiner.prototype.calcBoundingBox = function(markerLocation, viewDef, zoomFactor) {
  var viewBoundingBox = viewDef.mapBoundingBox, viewSize = viewDef.onscreenPosition.getSize(), lat = parseFloat(markerLocation.lat), lng = parseFloat(markerLocation.lng);
  lng < viewBoundingBox.lo[1] ? lng += 360 : lng > viewBoundingBox.hi[1] && (lng -= 360);
  var radiusToMagnify = this.glassSize_.getShortest() / 2 / zoomFactor, viewZoom = viewSize.height / (viewBoundingBox.hi[0] - viewBoundingBox.lo[0]), radius = radiusToMagnify / viewZoom;
  return{hi:[lat + radius, lng + radius], lo:[lat - radius, lng - radius]}
};
gviz.geochart.MagnifiedAreaDefiner.isMarkerIn = function(magnifiedAreaDef, rowId) {
  var magnifiedMarkers = magnifiedAreaDef.markersData, marker$$0 = goog.array.find(magnifiedMarkers, function(marker) {
    return marker.rowId == rowId
  });
  if(!marker$$0) {
    return!1
  }
  var rect = magnifiedAreaDef.view.onscreenPosition, cx = rect.left + rect.width / 2, cy = rect.top + rect.height / 2, c = new goog.math.Coordinate(cx, cy), m = new goog.math.Coordinate(marker$$0.x, marker$$0.y), d = goog.math.Coordinate.distance(m, c), r = rect.getSize().getShortest() / 2;
  return d < 0.9 * r
};
// Input 240
gviz.geochart.MagnifiedAreaEventHandler = function(logicalCanvas, options, initialState, scheduler) {
  this.logger_ = gviz.util.VisCommon.createLogger(gviz.geochart.MagnifiedAreaEventHandler.NAME_);
  this.logger_.info("Starting...");
  this.enabled_ = !logicalCanvas.isSlowRenderer() && options.inferBooleanValue("magnifyingGlass.enable");
  this.state_ = initialState;
  this.scheduler_ = scheduler;
  this.closeTimeout_ = this.openTimeout_ = null
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.refreshState = function(state) {
  this.state_ = state
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.handleEvent = function(event, magnifiedAreaDef) {
  if(!this.enabled_) {
    return!1
  }
  if(this.handleClose_(event) || this.handleOpen_(event, magnifiedAreaDef)) {
    return!0
  }
  var isFeatureEvent = gviz.geochart.interactionEvents.isFeatureEvent(event);
  return event.data.isMagnified && isFeatureEvent ? !0 : !1
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.handleOpen_ = function(event, magnifiedAreaDef) {
  if(event.type != gviz.geochart.interactionEvents.EventType.MARKER_HOVER) {
    return!1
  }
  if(event.data.isOver) {
    if(!event.data.isCluttered) {
      return!1
    }
    if(magnifiedAreaDef && gviz.geochart.MagnifiedAreaDefiner.isMarkerIn(magnifiedAreaDef, event.data.rowId)) {
      return this.logger_.info("Inside marker which is already magnified."), !0
    }
    this.cancelOpen_();
    this.logger_.info("Inside cluttered marker, wait & open.");
    this.openTimeout_ = window.setTimeout(this.bind_(function() {
      this.logger_.info("Timeout complete, open magnifying glass.");
      this.openTimeout_ = null;
      this.state_.magnified = {markerId:event.data.markerId, rowId:event.data.rowId};
      this.scheduler_.updateCountdown(0)
    }), gviz.geochart.MagnifiedAreaEventHandler.OPEN_WAIT_TIME_);
    return!0
  }
  this.logger_.info("Exited a marker, cancel open if planned.");
  this.cancelOpen_();
  return!1
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.handleClose_ = function(event) {
  if(!this.state_.magnified) {
    return!1
  }
  switch(event.type) {
    case gviz.geochart.interactionEvents.EventType.MARKER_CLICK:
    ;
    case gviz.geochart.interactionEvents.EventType.FEATURE_CLICK:
      return this.handleClickClose_(event);
    case gviz.geochart.interactionEvents.EventType.MARKER_HOVER:
    ;
    case gviz.geochart.interactionEvents.EventType.FEATURE_HOVER:
      return event.data.isOver ? this.handleHoverInClose_(event) : this.handleHoverOutClose_(event), !1;
    case gviz.geochart.interactionEvents.EventType.FEATURE_MOVE:
      return this.handleMoveClose_(event);
    default:
      return!1
  }
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.handleClickClose_ = function(event) {
  if(event.data.isMagnified) {
    return!1
  }
  this.logger_.info("Clicked outside of the magnifying glass - close it.");
  this.close_();
  return!0
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.handleHoverInClose_ = function(event) {
  var isMarker = gviz.geochart.interactionEvents.isMarkerEvent(event), inTriangle = event.elementType == gviz.geochart.interactionEvents.ElementType.MAGNIFYING_GLASS_TRIANGLE;
  event.data.isMagnified && !inTriangle ? (this.logger_.info("Inside magnifying glass, cancel close if planned."), this.cancelClose_()) : isMarker && (event.data.isCluttered ? (this.logger_.info("Inside cluttered marker, cancel close if planned."), this.cancelClose_()) : (this.logger_.info("Inside non-cluttered marker, close magnifying glass."), this.close_()))
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.handleHoverOutClose_ = function(event) {
  if(goog.isNull(this.closeTimeout_)) {
    var isMarker = gviz.geochart.interactionEvents.isMarkerEvent(event);
    if(event.data.isMagnified || isMarker) {
      this.logger_.info("Exited magnifying glass or marker, wait & close."), this.waitAndClose_()
    }
  }
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.handleMoveClose_ = function(event) {
  var inTriangle = event.elementType == gviz.geochart.interactionEvents.ElementType.MAGNIFYING_GLASS_TRIANGLE;
  return inTriangle ? (this.logger_.info("Moved inside triangle, restart close timeout."), this.waitAndClose_(), !0) : !1
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.waitAndClose_ = function() {
  this.cancelClose_();
  this.closeTimeout_ = window.setTimeout(this.bind_(function() {
    this.logger_.info("Timeout complete, close magnifying glass.");
    this.closeTimeout_ = null;
    this.close_()
  }), gviz.geochart.MagnifiedAreaEventHandler.CLOSE_WAIT_TIME_)
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.close_ = function() {
  this.state_.magnified = null;
  this.scheduler_.updateCountdown(0)
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.cancelOpen_ = function() {
  goog.isNull(this.openTimeout_) || (this.logger_.info("Cancelling magnifying glass open."), goog.global.clearTimeout(this.openTimeout_), this.openTimeout_ = null)
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.cancelClose_ = function() {
  goog.isNull(this.closeTimeout_) || (this.logger_.info("Cancelling magnifying glass close."), goog.global.clearTimeout(this.closeTimeout_), this.closeTimeout_ = null)
};
gviz.geochart.MagnifiedAreaEventHandler.prototype.bind_ = function(f) {
  return goog.bind(f, this)
};
gviz.geochart.MagnifiedAreaEventHandler.OPEN_WAIT_TIME_ = 300;
gviz.geochart.MagnifiedAreaEventHandler.CLOSE_WAIT_TIME_ = 500;
gviz.geochart.MagnifiedAreaEventHandler.NAME_ = "gviz.geochart.MagnifiedAreaEventHandler";
// Input 241
gviz.SizeScale = function(minRadius, maxRadius, valueRange, numberScale) {
  this.minArea_ = Math.pow(minRadius, 2);
  this.maxArea_ = Math.pow(maxRadius, 2);
  this.defaultRadius_ = maxRadius;
  this.rangeWidth_ = (this.valueRange_ = valueRange ? new goog.math.Range(numberScale.transform(valueRange.start), numberScale.transform(valueRange.end)) : null) ? this.valueRange_.end - this.valueRange_.start : null;
  this.numberScale_ = numberScale
};
gviz.SizeScale.prototype.getRadiusFor = function(value) {
  var area = null;
  goog.isDefAndNotNull(value) && goog.isDefAndNotNull(this.numberScale_) && (value = this.numberScale_.transform(value));
  if(goog.isDefAndNotNull(value) && goog.isDefAndNotNull(this.valueRange_)) {
    0 === this.rangeWidth_ && value === this.valueRange_.start ? area = (this.maxArea_ + this.minArea_) / 2 : value <= this.valueRange_.start ? area = this.minArea_ : value >= this.valueRange_.end && (area = this.maxArea_)
  }else {
    if(!this.rangeWidth_ || !goog.isDefAndNotNull(value)) {
      return this.defaultRadius_
    }
  }
  if(!goog.isDefAndNotNull(area)) {
    goog.asserts.assert(this.numberScale_);
    value = goog.math.clamp(value, this.valueRange_.start, this.valueRange_.end);
    var relativeValue = (value - this.valueRange_.start) / this.rangeWidth_, area = goog.math.lerp(this.minArea_, this.maxArea_, relativeValue)
  }
  return Math.round(Math.sqrt(area))
};
gviz.SizeScale.create = function(options, valueRange) {
  var optionsPath = "sizeAxis.", minRadius = options.inferNonNegativeNumberValue(optionsPath + "minSize"), maxRadius = options.inferNonNegativeNumberValue(optionsPath + "maxSize");
  if(minRadius > maxRadius) {
    throw Error(optionsPath + "minSize (" + minRadius + ") must be at most " + optionsPath + "maxSize (" + maxRadius + ")");
  }
  var userMinValue = options.inferOptionalNumberValue(optionsPath + "minValue"), userMaxValue = options.inferOptionalNumberValue(optionsPath + "maxValue");
  if(goog.isDefAndNotNull(userMinValue) && goog.isDefAndNotNull(userMaxValue) && userMinValue > userMaxValue) {
    throw Error(optionsPath + "minValue (" + userMinValue + ") must be at most " + optionsPath + "maxValue (" + userMaxValue + ")");
  }
  var newValueRange = gviz.util.getOverridenRange(valueRange, userMinValue, userMaxValue), scaleType = gviz.NumberScaleUtil.getScaleType(options, optionsPath + gviz.NumberScaleUtil.LOG_SCALE_OPTIONS_KEY, optionsPath + gviz.NumberScaleUtil.SCALE_TYPE_OPTIONS_KEY), numberScale = gviz.NumberScaleUtil.getScale(scaleType, NaN, []);
  return new gviz.SizeScale(minRadius, maxRadius, newValueRange, numberScale)
};
// Input 242
gviz.projection.IdentityProjection = function(options) {
  gviz.projection.BaseProjection.call(this, options)
};
goog.inherits(gviz.projection.IdentityProjection, gviz.projection.BaseProjection);
gviz.projection.IdentityProjection.prototype.getAspectRatio = function() {
  return 1
};
gviz.projection.IdentityProjection.prototype.project = function(coordinates$$0) {
  return goog.array.map(arguments, function(coordinates) {
    goog.asserts.assert(2 === coordinates.length);
    return{x:coordinates[1], y:coordinates[0]}
  })
};
// Input 243
gviz.geochart.MapDefiner = function(options, width, height, textMeasureFunction, dataTable, dataTableFormat) {
  this.options_ = options;
  var projection = gviz.geochart.options.inferProjection(options, "projection", gviz.geochart.options.DEFAULT_PROJECTION), projectionClass = gviz.projection.Projections[projection.name];
  this.projection_ = new projectionClass(projection);
  this.width_ = width;
  this.height_ = height;
  this.chartRect_ = gviz.geochart.MapDefiner.calcChartRect_(options, width, height);
  this.mapRect_ = this.calcMapRect_(options, this.chartRect_);
  this.textMeasureFunction_ = textMeasureFunction;
  this.dataTable_ = dataTable;
  this.dataTableFormat_ = dataTableFormat;
  this.defaultFontSize_ = options.inferNonNegativeNumberValue("fontSize", Math.round(Math.pow(2 * (this.chartRect_.width + this.chartRect_.height), 1 / 3)));
  this.markerStrokeColor_ = options.inferColorValue(["marker.style.stroke.color", "marker.style.stroke"], "#ccc");
  this.markerStrokeWidth_ = options.inferNonNegativeNumberValue("marker.style.stroke.width", 1);
  this.defaultFontName_ = options.inferStringValue("fontName");
  this.colorScale_ = this.constructColorScale_();
  this.sizeScale_ = this.constructSizeScale_();
  var legendOptions = options.inferValue("legend");
  this.hasLegend_ = "object" == goog.typeOf(legendOptions);
  this.legendPosition_ = options.inferEnumValue("legend.position", gviz.geochart.options.LegendPosition, gviz.geochart.options.DEFAULT_LEGEND_POSITION);
  this.legendBarLength_ = options.inferRatioNumberValue("legend.bar.length", 1 / 3);
  this.legendOrientation_ = options.inferEnumValue("legend.orientation", gviz.colorbar.Orientation, gviz.geochart.options.DEFAULT_LEGEND_ORIENTATION);
  var defaultLegendTextStyle = {fontName:this.defaultFontName_, fontSize:this.defaultFontSize_};
  this.legendTextStyle_ = options.inferTextStyleValue("legend.textStyle", defaultLegendTextStyle);
  this.numberFormat_ = options.inferOptionalStringValue("legend.numberFormat");
  this.datalessFeatureColor_ = options.inferColorValue("datalessRegionColor", "");
  this.defaultColor_ = options.inferColorValue("defaultColor", "");
  this.coloringFunction_ = this.computeColoringFunction_();
  this.sizingFunction_ = this.computeSizingFunction_();
  var tooltipTextStyle = options.inferTextStyleValue("tooltip.textStyle"), boldTextStyle = gviz.graphics.util.createBoldTextStyle(tooltipTextStyle, !0), tooltipTrigger = options.inferEnumValue("tooltip.trigger", gviz.Options.TooltipTrigger, "");
  this.isTooltipEnabled_ = tooltipTrigger != gviz.Options.TooltipTrigger.NONE;
  this.tooltipTextStyles_ = {normal:tooltipTextStyle, bold:boldTextStyle};
  var tooltipShowDisputedText = options.inferBooleanValue("tooltip.showDisputedText");
  this.tooltipShowTitle_ = options.inferBooleanValue("tooltip.showTitle");
  this.tooltipDisputedFormat_ = tooltipShowDisputedText ? "%s's administration (under dispute)" : "%s";
  this.isHtmlTooltip_ = options.inferBooleanValue("tooltip.isHtml");
  this.defaultMarkerSize_ = 10;
  this.markers_ = this.views_ = null;
  this.borderColor_ = "#ccc";
  this.projections_ = null;
  this.markerOpacity_ = options.inferRatioNumberValue("markerOpacity");
  this.magnifiedAreaDefiner_ = new gviz.geochart.MagnifiedAreaDefiner(this.mapRect_.getSize(), new goog.math.Box(0, width, height, 0))
};
gviz.geochart.MapDefiner.prototype.refreshDataTable = function(dataTable) {
  this.dataTable_ = dataTable;
  this.colorScale_ = this.constructColorScale_();
  this.sizeScale_ = this.constructSizeScale_()
};
gviz.geochart.MapDefiner.prototype.defineMapStaticLayer = function(staticMapDefinition) {
  var options = this.options_;
  this.views_ = [];
  this.projections_ = [];
  for(var viewDefs = [], i = 0, len = staticMapDefinition.views.length;i < len;i++) {
    var view = staticMapDefinition.views[i], projectionOptions = this.projection_.getOptions();
    projectionOptions.boundingBox = {lo:view.boundingBox.lo, hi:view.boundingBox.hi};
    var projection = new this.projection_.constructor(projectionOptions);
    this.projections_.push(projection);
    var viewDef = this.positionView_(view, i);
    viewDefs.push(viewDef);
    this.views_.push({features:view.features, def:viewDef})
  }
  return{width:this.width_, height:this.height_, mapRect:this.mapRect_, selectionMode:options.inferEnumValue("selectionMode", gviz.Options.SelectionMode, gviz.Options.SelectionMode.SINGLE), backgroundBrush:options.inferBrushValue("backgroundColor"), gridlineColor:options.inferOptionalColorValue("gridlineColor"), title:{text:options.inferStringValue("title"), textStyle:options.inferTextStyleValue("titleTextStyle", {fontName:this.defaultFontName_, fontSize:this.defaultFontSize_}), lines:[], align:gviz.graphics.TextAlign.START, 
  tooltip:""}, views:viewDefs, featuresData:this.getDatalessFeaturesData_(staticMapDefinition), glowingFeatures:[], glowingMarkers:[], markersData:[], colorBar:null, magnifiedArea:null, defaultFontName:this.defaultFontName_}
};
gviz.geochart.MapDefiner.prototype.getDatalessFeaturesData_ = function(staticMapDefinition) {
  var datalessFeatureBrushes = this.createFeatureBrushes_(this.datalessFeatureColor_), ret = {};
  goog.array.forEach(staticMapDefinition.views, function(view) {
    goog.array.forEach(view.features, function(feature) {
      ret[feature.id] = {brushes:datalessFeatureBrushes}
    }, this)
  }, this);
  return ret
};
gviz.geochart.MapDefiner.prototype.projectBoundingBox_ = function(boundingBox, projection) {
  var projectedBoundingBox = projection.projectBoundingBox(boundingBox);
  if(null != projectedBoundingBox) {
    return projectedBoundingBox
  }
  for(var boundsTracker = new gviz.geochart.util.BoundsTracker, i = 1;10 > i;i++) {
    var x = (boundingBox.hi[1] - boundingBox.lo[1]) / 10 * i + boundingBox.lo[1], y = (boundingBox.hi[0] - boundingBox.lo[0]) / 10 * i + boundingBox.lo[0], projectedBounds = projection.project([y, boundingBox.lo[1]], [y, boundingBox.hi[1]], [boundingBox.lo[0], x], [boundingBox.hi[0], x]);
    boundsTracker.track.apply(boundsTracker, projectedBounds)
  }
  var xBounds = boundsTracker.getBounds("x"), yBounds = boundsTracker.getBounds("y");
  return{hi:[yBounds.max, xBounds.max], lo:[yBounds.min, xBounds.min]}
};
gviz.geochart.MapDefiner.prototype.positionView_ = function(view, index) {
  var onscreenPosition = new goog.math.Rect(view.xoffset * this.mapRect_.width + this.mapRect_.left, view.yoffset * this.mapRect_.height + this.mapRect_.top, view.scale * this.mapRect_.width, view.scale * this.mapRect_.height), projection = this.projections_[index], boundingBox = this.projectBoundingBox_(view.boundingBox, projection);
  return{id:String(index), boundingBox:boundingBox, mapBoundingBox:view.boundingBox, onscreenPosition:onscreenPosition, features:goog.array.map(view.features, goog.bind(this.positionFeature_, this, boundingBox, onscreenPosition, projection))}
};
gviz.geochart.MapDefiner.prototype.positionFeature_ = function(boundingBox, onscreenPosition, projection, feature) {
  return{id:feature.id, polygons:goog.array.map(feature.polygons, goog.bind(this.positionPolygon_, this, boundingBox, onscreenPosition, projection)), disputed:goog.array.map(feature.disputed, goog.bind(this.positionPolygon_, this, boundingBox, onscreenPosition, projection)), eventsEnabled:"__DISPUTED__All" != feature.id}
};
gviz.geochart.MapDefiner.prototype.positionPolygon_ = function(boundingBox, onscreenPosition, projection, polygon) {
  return{shell:this.positionPolyline_(boundingBox, onscreenPosition, projection, polygon.shell), holes:goog.array.map(polygon.holes, goog.bind(this.positionPolyline_, this, boundingBox, onscreenPosition, projection))}
};
gviz.geochart.MapDefiner.prototype.positionPolyline_ = function(boundingBox, onscreenPosition, projection, polyline) {
  return{points:goog.array.map(polyline, goog.bind(this.positionPointInBox_, this, boundingBox, onscreenPosition, projection))}
};
gviz.geochart.MapDefiner.prototype.positionPointInBox_ = function(boundingBox, onscreenPosition, projection, point) {
  var lo = boundingBox.lo, hi = boundingBox.hi, width = onscreenPosition.width, height = onscreenPosition.height, left = onscreenPosition.left, top = onscreenPosition.top, projectedPoint = projection.project(point)[0];
  return[left + width * (projectedPoint.x - lo[1]) / (hi[1] - lo[1]), top + height * (1 - (projectedPoint.y - lo[0]) / (hi[0] - lo[0]))]
};
gviz.geochart.MapDefiner.prototype.defineMapDataLayer = function(regions, markers) {
  return{featuresData:this.defineAllFeatures_(regions), markersData:this.defineAllMarkers_(markers), colorBar:this.defineColorBar_([])}
};
gviz.geochart.MapDefiner.prototype.defineAllFeatures_ = function(regions) {
  for(var features = {}, i = 0;i < this.dataTable_.getNumberOfRows();++i) {
    var region = regions[i];
    if(goog.isDefAndNotNull(region)) {
      var fillColor = this.coloringFunction_(i);
      goog.isDefAndNotNull(fillColor) && (features[region] = {rowId:i, brushes:this.createFeatureBrushes_(fillColor)})
    }
  }
  return features
};
gviz.geochart.MapDefiner.prototype.defineAllMarkers_ = function(markerLocations) {
  var markerDefinitions = [];
  this.markers_ = [];
  for(var viewDefs = goog.array.map(this.views_, function(view) {
    return view.def
  }), i = 0;i < markerLocations.length;++i) {
    var markerLocation = markerLocations[i], marker = {location:markerLocation, defs:{}};
    if(goog.isDefAndNotNull(markerLocation)) {
      var markerDefs = this.defineMarkersForRow_(i, markerLocation, viewDefs);
      goog.array.extend(markerDefinitions, markerDefs);
      for(var j = 0;j < markerDefs.length;j++) {
        var markerDef = markerDefs[j];
        marker.defs[markerDef.markerId] = markerDef
      }
    }
    this.markers_.push(marker)
  }
  this.markClutteredMarkers_(markerDefinitions);
  return markerDefinitions
};
gviz.geochart.MapDefiner.prototype.markClutteredMarkers_ = function(markers) {
  for(var i = 0;i < markers.length;i++) {
    for(var marker = markers[i], markerPos = new goog.math.Coordinate(marker.x, marker.y), clutterImpact = 0, j = 0;j < markers.length;j++) {
      if(i != j) {
        var marker2 = markers[j], marker2Pos = new goog.math.Coordinate(marker2.x, marker2.y), distance = goog.math.Coordinate.distance(markerPos, marker2Pos);
        distance < marker.size + marker2.size && (clutterImpact += marker.size + marker2.size - distance)
      }
    }
    marker.isCluttered = clutterImpact > marker.size
  }
};
gviz.geochart.MapDefiner.prototype.defineMarkersForRow_ = function(rowId, markerLocation, viewDefs) {
  var size = this.sizingFunction_(rowId), fillColor = this.coloringFunction_(rowId);
  if(!goog.isDefAndNotNull(fillColor)) {
    return[]
  }
  for(var brush = new gviz.graphics.Brush({stroke:this.markerStrokeColor_, strokeWidth:this.markerStrokeWidth_, fill:fillColor, fillOpacity:this.markerOpacity_}), markerLat = parseFloat(markerLocation.lat), markerDefinitions = [], markerLng = parseFloat(markerLocation.lng), possibleLngs = [markerLng, markerLng + 360, markerLng - 360], i = 0;i < viewDefs.length;++i) {
    var viewDef = viewDefs[i], projection = this.projections_[i], boundingBox = viewDef.mapBoundingBox;
    if(!(markerLat < boundingBox.lo[0] || markerLat > boundingBox.hi[0])) {
      for(var j = 0;j < possibleLngs.length;++j) {
        var possibleLng = possibleLngs[j];
        if(!(possibleLng < boundingBox.lo[1] || possibleLng > boundingBox.hi[1])) {
          var absolutePos = this.positionPointInBox_(viewDef.boundingBox, viewDef.onscreenPosition, projection, [markerLat, possibleLng]), markerId = String(rowId + "-" + viewDef.id + "-" + j), markerLabel = "marker";
          goog.isDefAndNotNull(this.dataTableFormat_.locationNameColumn) && 0 <= this.dataTableFormat_.locationNameColumn ? markerLabel = this.dataTable_.getFormattedValue(rowId, this.dataTableFormat_.locationNameColumn) : goog.isDefAndNotNull(this.dataTableFormat_.addressColumn) && 0 <= this.dataTableFormat_.addressColumn ? markerLabel = this.dataTable_.getFormattedValue(rowId, this.dataTableFormat_.addressColumn) : goog.isDefAndNotNull(this.dataTableFormat_.regionColumn) && 0 <= this.dataTableFormat_.regionColumn ? 
          markerLabel = this.dataTable_.getFormattedValue(rowId, this.dataTableFormat_.regionColumn) : goog.isDefAndNotNull(this.dataTableFormat_.latColumn) && goog.isDefAndNotNull(this.dataTableFormat_.lngColumn) && 0 <= this.dataTableFormat_.latColumn && 0 <= this.dataTableFormat_.lngColumn && (markerLabel = this.formatLatLngAsString_(this.dataTable_.getValue(rowId, this.dataTableFormat_.latColumn), this.dataTable_.getValue(rowId, this.dataTableFormat_.lngColumn)));
          markerDefinitions.push({markerId:markerId, label:markerLabel, rowId:rowId, x:absolutePos[0], y:absolutePos[1], size:size, brush:brush, isCluttered:!1})
        }
      }
      if(0 < markerDefinitions.length) {
        break
      }
    }
  }
  return markerDefinitions
};
gviz.geochart.MapDefiner.prototype.defineMagnifiedArea_ = function(markerId, rowId) {
  var markers = this.markers_, marker = markers[rowId];
  goog.asserts.assert(marker);
  goog.asserts.assert(marker.location);
  var markerDef = marker.defs[markerId];
  goog.asserts.assert(markerDef);
  if(!markerDef.isCluttered) {
    return null
  }
  for(var viewId = markerId.split("-")[1], view = this.views_[viewId], projection = this.projections_[viewId], zoomFactor = this.options_.inferNumberValue("magnifyingGlass.zoomFactor"), magnifiedAreaDefiner = this.magnifiedAreaDefiner_, boundingBox = magnifiedAreaDefiner.calcBoundingBox(marker.location, view.def, zoomFactor), markerPosition = new goog.math.Coordinate(markerDef.x, markerDef.y), onscreenPosition = magnifiedAreaDefiner.calcPosition(markerPosition), projectedBoundingBox = this.projectBoundingBox_(boundingBox, 
  projection), magnifiedView = {id:viewId + "-" + rowId + "-mag", boundingBox:projectedBoundingBox, mapBoundingBox:boundingBox, onscreenPosition:onscreenPosition, features:goog.array.map(view.features, goog.bind(this.positionFeature_, this, boundingBox, onscreenPosition, new gviz.projection.IdentityProjection))}, markerDefinitions = [], i = 0;i < markers.length;i++) {
    var markerLocation = markers[i].location;
    goog.isDefAndNotNull(markerLocation) && goog.array.extend(markerDefinitions, this.defineMarkersForRow_(i, markerLocation, [magnifiedView]))
  }
  return{markerId:markerId, markerPosition:markerPosition, view:magnifiedView, markersData:markerDefinitions}
};
gviz.geochart.MapDefiner.prototype.defineColorBar_ = function(markers) {
  if(!this.hasLegend_ || !goog.isDefAndNotNull(this.colorScale_) || !this.colorScale_.getValuesScale()) {
    return null
  }
  var emSize = this.legendTextStyle_.fontSize, width = this.chartRect_.width, height = this.chartRect_.height, colorBarDrawingOptions = {top:0, left:0, width:this.legendOrientation_ == gviz.colorbar.Orientation.HORIZONTAL ? width * this.legendBarLength_ : height * this.legendBarLength_, height:1.5 * emSize, orientation:this.legendOrientation_, textStyle:this.legendTextStyle_, markerColor:"black", numberFormat:this.numberFormat_};
  colorBarDrawingOptions.top = this.legendPosition_ == gviz.geochart.options.LegendPosition.TOP_LEFT || this.legendPosition_ == gviz.geochart.options.LegendPosition.TOP_RIGHT ? 3 * emSize : this.legendOrientation_ == gviz.colorbar.Orientation.VERTICAL ? height - emSize - colorBarDrawingOptions.width : height - emSize - colorBarDrawingOptions.height;
  colorBarDrawingOptions.left = this.legendPosition_ == gviz.geochart.options.LegendPosition.TOP_LEFT || this.legendPosition_ == gviz.geochart.options.LegendPosition.BOTTOM_LEFT ? 0.5 * emSize : this.legendOrientation_ == gviz.colorbar.Orientation.VERTICAL ? width - emSize - colorBarDrawingOptions.height : width - emSize - colorBarDrawingOptions.width;
  colorBarDrawingOptions.left += this.chartRect_.left;
  colorBarDrawingOptions.top += this.chartRect_.top;
  var colorBarDefinitions = gviz.colorbar.definer.define(this.colorScale_, colorBarDrawingOptions, markers, this.textMeasureFunction_);
  return colorBarDefinitions
};
gviz.geochart.MapDefiner.prototype.computeTableRange_ = function(columnIndex) {
  for(var range = null, i = 0;i < this.dataTable_.getNumberOfRows();++i) {
    var value = this.dataTable_.getValue(i, columnIndex), range = gviz.util.extendRangeToInclude(range, value)
  }
  return range
};
gviz.geochart.MapDefiner.prototype.computeColoringFunction_ = function() {
  var columnIndex = this.dataTableFormat_.colorMetricsColumn;
  return goog.isDefAndNotNull(columnIndex) ? function(rowId) {
    var value = this.dataTable_.getValue(rowId, columnIndex);
    if(goog.isDefAndNotNull(value)) {
      var computedColor = this.colorScale_.getColorFor(value);
      return computedColor
    }
    return this.defaultColor_
  } : function() {
    return this.defaultColor_
  }
};
gviz.geochart.MapDefiner.prototype.computeSizingFunction_ = function() {
  var columnIndex = this.dataTableFormat_.sizeMetricsColumn;
  return goog.isDefAndNotNull(columnIndex) ? function(rowId) {
    var value = this.dataTable_.getValue(rowId, columnIndex), computedSize = this.sizeScale_.getRadiusFor(value);
    return computedSize
  } : function() {
    return this.defaultMarkerSize_
  }
};
gviz.geochart.MapDefiner.prototype.constructColorScale_ = function() {
  var columnIndex = this.dataTableFormat_.colorMetricsColumn;
  if(!goog.isDefAndNotNull(columnIndex)) {
    return null
  }
  var dataRange = this.computeTableRange_(columnIndex);
  return gviz.colorbar.Scale.create(this.options_, dataRange)
};
gviz.geochart.MapDefiner.prototype.constructSizeScale_ = function() {
  var columnIndex = this.dataTableFormat_.sizeMetricsColumn, dataRange = goog.isDefAndNotNull(columnIndex) ? this.computeTableRange_(columnIndex) : null;
  return gviz.SizeScale.create(this.options_, dataRange)
};
gviz.geochart.MapDefiner.prototype.defineMapInteractionLayer = function(state) {
  var ret = {};
  goog.isDefAndNotNull(state.focusedFeature) && (ret.glowingFeatures = [state.focusedFeature]);
  goog.isDefAndNotNull(state.focusedMarker) && (ret.glowingMarkers = [state.focusedMarker]);
  if(goog.isDefAndNotNull(state.elaborated)) {
    if(this.isTooltipEnabled_) {
      var tooltipBody = this.computeTooltipBody_(state.elaborated.rowId, state.elaborated.isDisputed), textMeasureFunction = this.textMeasureFunction_, fontSize = this.tooltipTextStyles_.normal.fontSize, boundaries = new goog.math.Box(0, this.width_ - 1, this.height_ - 1, 0), attachHandle = !1, pivot = new goog.math.Coordinate(state.elaborated.origin.x, state.elaborated.origin.y), anchor = new goog.math.Coordinate(pivot.x - fontSize, pivot.y - fontSize);
      ret.tooltip = gviz.util.tooltip.definer.createTooltipDefinition(tooltipBody, textMeasureFunction, attachHandle, anchor, boundaries, pivot, void 0, this.isHtmlTooltip_)
    }
    if(goog.isDefAndNotNull(this.dataTableFormat_.colorMetricsColumn)) {
      var markerValue = this.dataTable_.getValue(state.elaborated.rowId, this.dataTableFormat_.colorMetricsColumn), marker = {value:markerValue};
      ret.colorBar = this.defineColorBar_([marker])
    }
  }
  goog.isDefAndNotNull(state.magnified) && (ret.magnifiedArea = this.defineMagnifiedArea_(state.magnified.markerId, state.magnified.rowId));
  return ret
};
gviz.geochart.MapDefiner.prototype.formatDegrees_ = function(degrees, negativeLabel, positiveLabel) {
  var directionLabel = 0 <= degrees ? positiveLabel : negativeLabel;
  degrees = Math.abs(degrees);
  var formattedDegrees = Math.floor(degrees), minutes = 60 * (degrees - formattedDegrees), formattedMinutes = Math.floor(minutes), seconds = 60 * (minutes - formattedMinutes), formattedSeconds = Math.round(seconds);
  return formattedDegrees + "\u00b0" + formattedMinutes + "'" + formattedSeconds + '"' + directionLabel
};
gviz.geochart.MapDefiner.prototype.formatLatLngAsString_ = function(lat, lng) {
  return this.formatDegrees_(lat, "S", "N") + " " + this.formatDegrees_(lng, "W", "E")
};
gviz.geochart.MapDefiner.prototype.computeTooltipBody_ = function(rowId, isDisputed) {
  var tableFormat = this.dataTableFormat_, dataTable = this.dataTable_, body = {entries:[]}, title;
  if(goog.isDefAndNotNull(tableFormat.locationNameColumn)) {
    title = dataTable.getFormattedValue(rowId, tableFormat.locationNameColumn)
  }else {
    switch(tableFormat.addressType) {
      case gviz.GeoChartDataFormat.AddressType.LATLNG:
        var lat = dataTable.getValue(rowId, tableFormat.latColumn), lng = dataTable.getValue(rowId, tableFormat.lngColumn);
        title = this.formatLatLngAsString_(lat, lng);
        break;
      case gviz.GeoChartDataFormat.AddressType.REGIONCODE:
        title = dataTable.getFormattedValue(rowId, tableFormat.regionColumn);
        isDisputed && (title = goog.string.format(this.tooltipDisputedFormat_, title));
        break;
      case gviz.GeoChartDataFormat.AddressType.ADDRESS:
        title = dataTable.getFormattedValue(rowId, tableFormat.addressColumn);
        break;
      default:
        title = ""
    }
  }
  if(this.tooltipShowTitle_) {
    var titleLineEntry = gviz.util.tooltip.definer.createBodyTextLineEntry(title, this.tooltipTextStyles_.bold);
    body.entries.push(titleLineEntry)
  }
  if(goog.isDefAndNotNull(tableFormat.tooltipColumn)) {
    var content = dataTable.getFormattedValue(rowId, tableFormat.tooltipColumn);
    if(dataTable.getColumnProperty(tableFormat.tooltipColumn, "html")) {
      body.entries.push(gviz.util.tooltip.definer.createBodyTextLineEntry(content, this.tooltipTextStyles_.normal, void 0, void 0, void 0, void 0, void 0, !0))
    }else {
      for(var lines = content.split("\n"), i = 0;i < lines.length;i++) {
        var lineEntry = gviz.util.tooltip.definer.createBodyTextLineEntry(lines[i], this.tooltipTextStyles_.normal);
        body.entries.push(lineEntry)
      }
    }
  }else {
    if(goog.isDefAndNotNull(tableFormat.colorMetricsColumn)) {
      var subtitle = dataTable.getColumnLabel(tableFormat.colorMetricsColumn), content = dataTable.getFormattedValue(rowId, tableFormat.colorMetricsColumn), lineEntry = gviz.util.tooltip.definer.createBodyTextLineEntry(content, this.tooltipTextStyles_.bold, subtitle, this.tooltipTextStyles_.normal);
      body.entries.push(lineEntry)
    }
    goog.isDefAndNotNull(tableFormat.sizeMetricsColumn) && tableFormat.sizeMetricsColumn != tableFormat.colorMetricsColumn && (subtitle = dataTable.getColumnLabel(tableFormat.sizeMetricsColumn), content = dataTable.getFormattedValue(rowId, tableFormat.sizeMetricsColumn), lineEntry = gviz.util.tooltip.definer.createBodyTextLineEntry(content, this.tooltipTextStyles_.bold, subtitle, this.tooltipTextStyles_.normal), body.entries.push(lineEntry))
  }
  return body
};
gviz.geochart.MapDefiner.prototype.bind_ = function(f) {
  return goog.bind(f, this)
};
gviz.geochart.MapDefiner.prototype.createFeatureBrushes_ = function(color) {
  var borderColor = color === gviz.graphics.util.NO_COLOR ? [255, 255, 255] : goog.color.hexToRgb(color), borderColor = goog.color.rgbArrayToHex(goog.color.darken(borderColor, 0.1));
  return{fill:this.createFillBrush_(color, borderColor), disputed:this.createDisputedBrush_(color), border:this.createBorderBrush_(borderColor)}
};
gviz.geochart.MapDefiner.prototype.createFillBrush_ = function(color, borderColor) {
  return new gviz.graphics.Brush({stroke:borderColor, fill:color})
};
gviz.geochart.MapDefiner.prototype.createDisputedBrush_ = function(color) {
  return new gviz.graphics.Brush({stroke:"none", pattern:new gviz.graphics.Pattern(gviz.graphics.Pattern.Style.PRIMARY_DIAGONAL_STRIPES, color, color == this.borderColor_ ? "#fff" : this.borderColor_)})
};
gviz.geochart.MapDefiner.prototype.createBorderBrush_ = function(borderColor) {
  return new gviz.graphics.Brush({stroke:borderColor})
};
gviz.geochart.MapDefiner.calcChartRect_ = function(options, width, height) {
  var backgroundBrush = options.inferBrushValue("backgroundColor"), doubleBorderSize = backgroundBrush.getVisibleStrokeWidth(), newWidth = width - doubleBorderSize, newHeight = height - doubleBorderSize, newLeft = Math.round((width - newWidth) / 2), newTop = Math.round((height - newHeight) / 2);
  return new goog.math.Rect(newLeft, newTop, newWidth, newHeight)
};
gviz.geochart.MapDefiner.prototype.calcMapRect_ = function(options, chartRect) {
  var keepAspectRatio = options.inferOptionalBooleanValue("keepAspectRatio");
  if(keepAspectRatio) {
    var width = chartRect.width, height = chartRect.height, aspectRatio = this.projection_.getAspectRatio(), newWidth = Math.min(width, Math.round(height * aspectRatio)), newLeft = Math.round((width - newWidth) / 2) + chartRect.left, newHeight = Math.min(height, Math.round(width / aspectRatio)), newTop = Math.round((height - newHeight) / 2) + chartRect.top;
    return new goog.math.Rect(newLeft, newTop, newWidth, newHeight)
  }
  return chartRect.clone()
};
// Input 244
gviz.geochart.ActiveMap = function(logicalCanvas, options, width, height, dataTable, dataTableFormat, initialState, readyEventDispatcher, eventDispatcher) {
  goog.Disposable.call(this);
  this.logger_ = gviz.util.VisCommon.createLogger(gviz.geochart.ActiveMap.NAME_);
  this.logger_.info("Starting...");
  this.logicalCanvas_ = logicalCanvas;
  this.options_ = options;
  this.width_ = width;
  this.height_ = height;
  this.dataTableFormat_ = dataTableFormat;
  this.state_ = initialState;
  this.drawnState_ = null;
  this.readyWasTriggered_ = !1;
  this.readyEventDispatcher_ = readyEventDispatcher;
  this.eventDispatcher_ = eventDispatcher;
  this.staticMapDefLoaded_ = !1;
  this.delayedSetLocationsCall_ = null;
  this.allLocationsAreLoaded_ = !1;
  this.scheduler_ = new gviz.canviz.Scheduler(this.bind_(this.redraw_));
  this.mapDefinition_ = new gviz.util.LayeredObject(3);
  this.dirtyLayers_ = [!1, !1, !1];
  var textMeasureFunction = goog.bind(this.logicalCanvas_.getTextSize, this.logicalCanvas_);
  this.mapDefiner_ = new gviz.geochart.MapDefiner(this.options_, this.width_, this.height_, textMeasureFunction, dataTable, this.dataTableFormat_);
  this.magnifiedAreaEventHandler_ = new gviz.geochart.MagnifiedAreaEventHandler(logicalCanvas, options, initialState, this.scheduler_);
  this.enableRegionInteractivity_ = options.inferBooleanValue("enableRegionInteractivity", dataTableFormat.displayMode == gviz.GeoChartDataFormat.DisplayMode.REGIONS);
  this.registerEventHandlers_()
};
goog.inherits(gviz.geochart.ActiveMap, goog.Disposable);
gviz.geochart.ActiveMap.prototype.setStaticMap = function(staticMapDef) {
  this.logger_.info("Setting static map data.");
  var staticMapLayer = this.mapDefiner_.defineMapStaticLayer(staticMapDef);
  this.setLayer_(gviz.geochart.ActiveMap.STATIC_MAP_LAYER, staticMapLayer);
  this.staticMapDefLoaded_ = !0;
  goog.isDefAndNotNull(this.delayedSetLocationsCall_) ? this.delayedSetLocationsCall_() : this.redraw_()
};
gviz.geochart.ActiveMap.prototype.setLocations = function(regions, markers, allLocationsAreLoaded, opt_dataTable, opt_state) {
  this.readyWasTriggered_ = !1;
  var setLocationCall = this.bind_(function() {
    this.allLocationsAreLoaded_ = allLocationsAreLoaded;
    goog.isDefAndNotNull(opt_dataTable) ? (this.logger_.info("Setting regions and data-table."), this.drawnState_ = null, this.mapDefiner_.refreshDataTable(opt_dataTable)) : this.logger_.info("Setting regions.");
    goog.isDefAndNotNull(opt_state) && (this.state_ = opt_state, this.magnifiedAreaEventHandler_.refreshState(opt_state));
    var dataLayer = this.mapDefiner_.defineMapDataLayer(regions, markers);
    this.setLayer_(gviz.geochart.ActiveMap.DATA_LAYER, dataLayer);
    this.redraw_()
  });
  this.staticMapDefLoaded_ ? setLocationCall() : this.delayedSetLocationsCall_ = setLocationCall
};
gviz.geochart.ActiveMap.prototype.setSelection = function(selection) {
  this.state_.selection.setSelection(selection);
  this.scheduler_.updateCountdown(1)
};
gviz.geochart.ActiveMap.prototype.getSelection = function() {
  return this.state_.selection.getSelection()
};
gviz.geochart.ActiveMap.prototype.redraw_ = function() {
  if(this.staticMapDefLoaded_) {
    if(!goog.isDefAndNotNull(this.drawnState_) || !this.drawnState_.equals(this.state_)) {
      this.logger_.info("Refreshing interacion layer.");
      var interactionLayer = this.mapDefiner_.defineMapInteractionLayer(this.state_);
      this.setLayer_(gviz.geochart.ActiveMap.INTERACTION_LAYER, interactionLayer)
    }
    var compactedDefinition = this.mapDefinition_.compact();
    this.dirtyLayers_[gviz.geochart.ActiveMap.STATIC_MAP_LAYER] ? this.logicalCanvas_.plotChart(compactedDefinition) : this.dirtyLayers_[gviz.geochart.ActiveMap.DATA_LAYER] ? this.logicalCanvas_.plotData(compactedDefinition) : this.logicalCanvas_.plotInteraction(compactedDefinition);
    this.dirtyLayers_ = [!1, !1, !1];
    this.drawnState_ = this.state_.clone();
    !this.readyWasTriggered_ && this.allLocationsAreLoaded_ && (this.readyEventDispatcher_(), this.readyWasTriggered_ = !0)
  }
};
gviz.geochart.ActiveMap.prototype.featureHoverEventHandler_ = function(event) {
  if(!this.handleMagnifiedAreaEvent_(event) && this.enableRegionInteractivity_) {
    var fid = event.data.featureId;
    if(!goog.isNull(fid)) {
      if(event.data.isOver) {
        this.state_.focusedFeature = fid;
        var rowId = this.featureToRowNumber_(fid);
        this.state_.elaborated = goog.isDefAndNotNull(rowId) ? {rowId:rowId, isDisputed:event.data.isDisputed, origin:{x:event.data.cursorPosition.x, y:event.data.cursorPosition.y}} : null
      }else {
        this.state_.focusedFeature = null, this.state_.elaborated = null
      }
      this.scheduler_.updateCountdown(50)
    }
  }
};
gviz.geochart.ActiveMap.prototype.markerHoverEventHandler_ = function(event) {
  this.handleMagnifiedAreaEvent_(event) || (event.data.isOver ? (this.state_.focusedMarker = event.data.markerId, this.state_.elaborated = {rowId:event.data.rowId, isDisputed:!1, origin:{x:event.data.cursorPosition.x, y:event.data.cursorPosition.y}}) : (this.state_.focusedMarker = null, this.state_.elaborated = null), this.scheduler_.updateCountdown(50))
};
gviz.geochart.ActiveMap.prototype.featureMoveEventHandler_ = function(event) {
  this.handleMagnifiedAreaEvent_(event) || this.handleElaborationMove_(event)
};
gviz.geochart.ActiveMap.prototype.markerMoveEventHandler_ = function(event) {
  this.handleElaborationMove_(event)
};
gviz.geochart.ActiveMap.prototype.handleElaborationMove_ = function(event) {
  if(goog.isDefAndNotNull(this.state_.elaborated)) {
    var newOrigin = {x:event.data.cursorPosition.x, y:event.data.cursorPosition.y};
    this.logger_.fine("Moving tooltip to " + newOrigin.x + ", " + newOrigin.y);
    this.state_.elaborated.origin = newOrigin;
    this.scheduler_.updateCountdown(3)
  }
};
gviz.geochart.ActiveMap.prototype.featureClickEventHandler_ = function(event) {
  if(!this.handleMagnifiedAreaEvent_(event) && this.enableRegionInteractivity_) {
    var featureId = event.data.featureId;
    goog.isNull(featureId) || this.eventDispatcher_("regionClick", {region:featureId});
    var rowId = this.featureToRowNumber_(featureId);
    this.handleClick_(event, rowId)
  }
};
gviz.geochart.ActiveMap.prototype.markerClickEventHandler_ = function(event) {
  if(!this.handleMagnifiedAreaEvent_(event)) {
    var rowId = event.data.rowId;
    this.handleClick_(event, rowId)
  }
};
gviz.geochart.ActiveMap.prototype.handleClick_ = function(event, rowId) {
  var isSingle = this.mapDefinition_.compact().selectionMode == gviz.Options.SelectionMode.SINGLE;
  goog.isDefAndNotNull(rowId) ? (this.state_.selection.toggleRow(rowId, isSingle), this.eventDispatcher_("select", {})) : this.state_.selection.clear()
};
gviz.geochart.ActiveMap.prototype.handleMagnifiedAreaEvent_ = function(event) {
  var mapDef = this.mapDefinition_.compact(), magnifiedAreaDef = mapDef ? mapDef.magnifiedArea : null;
  return this.magnifiedAreaEventHandler_.handleEvent(event, magnifiedAreaDef)
};
gviz.geochart.ActiveMap.prototype.registerEventHandlers_ = function() {
  this.logicalCanvas_.listen(gviz.geochart.interactionEvents.EventType.FEATURE_CLICK, this.bind_(this.featureClickEventHandler_));
  this.logicalCanvas_.listen(gviz.geochart.interactionEvents.EventType.FEATURE_HOVER, this.bind_(this.featureHoverEventHandler_));
  this.logicalCanvas_.listen(gviz.geochart.interactionEvents.EventType.FEATURE_MOVE, this.bind_(this.featureMoveEventHandler_));
  this.logicalCanvas_.listen(gviz.geochart.interactionEvents.EventType.MARKER_CLICK, this.bind_(this.markerClickEventHandler_));
  this.logicalCanvas_.listen(gviz.geochart.interactionEvents.EventType.MARKER_HOVER, this.bind_(this.markerHoverEventHandler_));
  this.logicalCanvas_.listen(gviz.geochart.interactionEvents.EventType.MARKER_MOVE, this.bind_(this.markerMoveEventHandler_))
};
gviz.geochart.ActiveMap.prototype.featureToRowNumber_ = function(featureId) {
  if(goog.isNull(featureId)) {
    return null
  }
  var mapDef = this.mapDefinition_.compact();
  return mapDef.featuresData[featureId] ? mapDef.featuresData[featureId].rowId : null
};
gviz.geochart.ActiveMap.prototype.setLayer_ = function(layerId, layer) {
  this.mapDefinition_.setLayer(layerId, layer);
  this.dirtyLayers_[layerId] = !0
};
gviz.geochart.ActiveMap.prototype.disposeInternal = function() {
  goog.dispose(this.scheduler_);
  goog.dispose(this.logicalCanvas_);
  gviz.geochart.ActiveMap.superClass_.disposeInternal.call(this)
};
gviz.geochart.ActiveMap.prototype.bind_ = function(f) {
  return goog.bind(f, this)
};
gviz.geochart.ActiveMap.STATIC_MAP_LAYER = 0;
gviz.geochart.ActiveMap.DATA_LAYER = 1;
gviz.geochart.ActiveMap.INTERACTION_LAYER = 2;
gviz.geochart.ActiveMap.NAME_ = "gviz.geochart.ActiveMap";
// Input 245
gviz.geochart.maplist = {};
gviz.geochart.maplist.MAPS = {COM:{COUNTRIES:"002 005 009 011 013 014 015 017 018 019 021 029 030 034 035 039 053 054 057 061 142 143 145 150 151 154 155 AD AE AF AG AI AL AM AO AR AS AT AU AW AX AZ BA BB BD BE BF BG BH BI BJ BL BM BN BO BQ BR BS BT BV BW BY BZ CA CC CD CF CG CH CI CK CL CM CN CO CR CU CV CW CX CY CZ DE DJ DK DM DO DZ EC EE EG EH ER ES ET FI FJ FK FM FO FR GA GB GD GE GF GG GH GI GL GM GN GP GQ GR GS GT GU GW GY HK HM HN HR HT HU ID IE IL IM IN IO IQ IR IS IT JE JM JO JP KE KG KH KI KM KN KP KR KW KY KZ LA LB LC LI LK LR LS LT LU LV LY MA MC MD ME MF MG MH MK ML MM MN MO MP MQ MR MS MT MU MV MW MX MY MZ NA NC NE NF NG NI NL NO NP NR NU NZ OM PA PE PF PG PH PK PL PM PN PR PS PT PW PY QA RE RO RS RU RW SA SB SC SD SE SG SH SI SJ SK SL SM SN SO SR SS ST SV SX SY SZ TC TD TF TG TH TJ TK TL TM TN TO TR TT TV TW TZ UA UG UM US UY UZ VA VC VE VG VI VN VU WF WS XK YE YT ZA ZM ZW world".split(" "), 
METROS:"US US-500 US-501 US-502 US-503 US-504 US-505 US-506 US-507 US-508 US-509 US-510 US-511 US-512 US-513 US-514 US-515 US-516 US-517 US-518 US-519 US-520 US-521 US-522 US-523 US-524 US-525 US-526 US-527 US-528 US-529 US-530 US-531 US-532 US-533 US-534 US-535 US-536 US-537 US-538 US-539 US-540 US-541 US-542 US-543 US-544 US-545 US-546 US-547 US-548 US-549 US-550 US-551 US-552 US-553 US-554 US-555 US-556 US-557 US-558 US-559 US-560 US-561 US-563 US-564 US-565 US-566 US-567 US-569 US-570 US-571 US-573 US-574 US-575 US-576 US-577 US-581 US-582 US-583 US-584 US-588 US-592 US-596 US-597 US-598 US-600 US-602 US-603 US-604 US-605 US-606 US-609 US-610 US-611 US-612 US-613 US-616 US-617 US-618 US-619 US-622 US-623 US-624 US-625 US-626 US-627 US-628 US-630 US-631 US-632 US-633 US-634 US-635 US-636 US-637 US-638 US-639 US-640 US-641 US-642 US-643 US-644 US-647 US-648 US-649 US-650 US-651 US-652 US-656 US-657 US-658 US-659 US-661 US-662 US-669 US-670 US-671 US-673 US-675 US-676 US-678 US-679 US-682 US-686 US-687 US-691 US-692 US-693 US-698 US-702 US-705 US-709 US-710 US-711 US-716 US-717 US-718 US-722 US-724 US-725 US-734 US-736 US-737 US-740 US-743 US-744 US-745 US-746 US-747 US-749 US-751 US-752 US-753 US-754 US-755 US-756 US-757 US-758 US-759 US-760 US-762 US-764 US-765 US-766 US-767 US-770 US-771 US-773 US-789 US-790 US-798 US-800 US-801 US-802 US-803 US-804 US-807 US-810 US-811 US-813 US-819 US-820 US-821 US-825 US-828 US-839 US-855 US-862 US-866 US-868 US-881 US-AK US-AL US-AR US-AZ US-CA US-CO US-CT US-DC US-DE US-FL US-GA US-HI US-IA US-ID US-IL US-IN US-KS US-KY US-LA US-MA US-MD US-ME US-MI US-MN US-MO US-MS US-MT US-NC US-ND US-NE US-NH US-NJ US-NM US-NV US-NY US-OH US-OK US-OR US-PA US-RI US-SC US-SD US-TN US-TX US-UT US-VA US-VT US-WA US-WI US-WV US-WY".split(" "), 
PROVINCES:"AD AE AF AG AL AM AO AR AT AU AZ BA BB BD BE BF BG BH BI BJ BN BO BQ BR BS BT BW BY BZ CA CD CF CG CH CI CL CM CN CO CR CU CV CY CZ DE DJ DK DM DO DZ EC EE EG EH ER ES ET FI FJ FM FR GA GB GD GE GH GL GM GN GQ GR GT GW GY HN HR HT HU ID IE IL IN IQ IR IS IT JM JO JP KE KG KH KI KM KN KP KR KW KZ LA LB LC LI LK LR LS LT LU LV LY MA MD ME MG MH MK ML MM MN MR MU MV MW MX MY MZ NA NE NG NI NL NO NP NR NZ OM PA PE PG PH PK PL PT PW PY QA RO RS RU RW SA SB SC SD SE SH SI SK SL SM SN SO SR SS ST SV SY SZ TD TG TH TJ TL TM TN TO TR TT TV TZ UA UG US US-AK US-AL US-AR US-AZ US-CA US-CO US-CT US-DC US-DE US-FL US-GA US-HI US-IA US-ID US-IL US-IN US-KS US-KY US-LA US-MA US-MD US-ME US-MI US-MN US-MO US-MS US-MT US-NC US-ND US-NE US-NH US-NJ US-NM US-NV US-NY US-OH US-OK US-OR US-PA US-RI US-SC US-SD US-TN US-TX US-UT US-VA US-VT US-WA US-WI US-WV US-WY UY UZ VC VE VN VU YE ZA ZM ZW".split(" "), 
REGIONS:"002 009 019 142 150 world".split(" "), SUBREGIONS:"002 005 009 011 013 014 015 017 018 019 021 029 030 034 035 039 053 054 057 061 142 143 145 150 151 154 155 world".split(" ")}, IN:{COUNTRIES:"002 009 019 030 034 035 142 143 145 151 AF BD BT CN IN MM NP PK RU TJ UZ world".split(" "), PROVINCES:"AF BD BT CN IN MM NP PK RU TJ UZ".split(" "), REGIONS:["002", "009", "019", "142", "world"], SUBREGIONS:"002 009 019 030 034 035 142 143 145 151 world".split(" ")}};
// Input 246
gviz.geochart.maploader = {};
gviz.geochart.maploader.logger_ = gviz.util.VisCommon.createLogger("gviz.geochart.maploader");
gviz.geochart.maploader.pending_ = {};
gviz.geochart.maploader.cache_ = {};
gviz.geochart.maploader.typeMapping_ = null;
gviz.geochart.maploader.DEFAULT_STATIC_REPOSITORY_URI_ = gviz.staticrepository.getRootUri("geochart", "10");
gviz.geochart.maploader.staticRepositoryUri_ = gviz.geochart.maploader.DEFAULT_STATIC_REPOSITORY_URI_;
gviz.geochart.maploader.BASE_URL_ = "mapfiles/%s.js";
gviz.geochart.maploader.setMapsSource = function(mapsSource, readyCallback, errorCallback) {
  gviz.geochart.maploader.logger_.info("Setting maps source to " + (mapsSource ? mapsSource : "default"));
  gviz.geochart.maploader.staticRepositoryUri_ = mapsSource ? mapsSource + "/" : gviz.geochart.maploader.DEFAULT_STATIC_REPOSITORY_URI_;
  gviz.geochart.maploader.cache_ = {};
  gviz.geochart.maploader.cachedBoundingBoxes_ = null;
  if(mapsSource) {
    var uri = gviz.geochart.maploader.staticRepositoryUri_ + "info/mapList.js", deferred = goog.net.jsloader.loadAndVerify(uri, "google_visualization_geochart_mapList", {cleanupWhenDone:!0});
    deferred.addCallbacks(function(response) {
      gviz.geochart.maploader.mapList_ = response;
      readyCallback()
    }, function() {
      gviz.geochart.maploader.logger_.severe("Failed to load map list information from " + uri.toString());
      errorCallback()
    })
  }else {
    gviz.geochart.maploader.mapList_ = gviz.geochart.maplist.MAPS, readyCallback()
  }
};
gviz.geochart.maploader.loadMap = function(mapId, callback) {
  if(!goog.isDefAndNotNull(callback)) {
    throw Error("Callback is null or undefined");
  }
  var mapIdStr = gviz.geochart.maploader.mapIdToString_(mapId);
  if(goog.isDef(gviz.geochart.maploader.cache_[mapIdStr])) {
    var bindedCallback = goog.bind(callback, null, gviz.geochart.maploader.cache_[mapIdStr]);
    setTimeout(bindedCallback, 0)
  }else {
    if(goog.isDef(gviz.geochart.maploader.pending_[mapIdStr])) {
      gviz.geochart.maploader.pending_[mapIdStr].push(callback)
    }else {
      gviz.geochart.maploader.pending_[mapIdStr] = [callback];
      var uri = gviz.geochart.maploader.staticRepositoryUri_ + goog.string.format(gviz.geochart.maploader.BASE_URL_, mapIdStr), deferred = goog.net.jsloader.loadAndVerify(uri, "google_visualization_geochart_" + mapIdStr.replace("-", "$"), {cleanupWhenDone:!0});
      deferred.addCallbacks(function(response) {
        var digestedResponse = gviz.geochart.maploader.digest_(response);
        gviz.geochart.maploader.cache_[mapIdStr] = digestedResponse;
        goog.array.forEach(gviz.geochart.maploader.pending_[mapIdStr], function(aCallback) {
          aCallback(digestedResponse)
        });
        delete gviz.geochart.maploader.pending_[mapIdStr]
      }, function() {
        goog.array.forEach(gviz.geochart.maploader.pending_[mapIdStr], function(aCallback) {
          aCallback(null)
        });
        delete gviz.geochart.maploader.pending_[mapIdStr]
      })
    }
  }
};
gviz.geochart.maploader.mapIdToString_ = function(mapId) {
  var domainPrefix = "";
  "COM" != mapId.domain && (domainPrefix = mapId.domain + "_");
  return domainPrefix + mapId.region + "_" + gviz.geochart.maploader.mapResolutionToString_(mapId.resolution)
};
gviz.geochart.maploader.mapResolutionToString_ = function(resolution) {
  if(!goog.isDefAndNotNull(gviz.geochart.maploader.typeMapping_)) {
    var typeMapping = {};
    typeMapping[gviz.geochart.MapResolution.CONTINENTS] = "REGIONS";
    typeMapping[gviz.geochart.MapResolution.SUBCONTINENTS] = "SUBREGIONS";
    typeMapping[gviz.geochart.MapResolution.COUNTRIES] = "COUNTRIES";
    typeMapping[gviz.geochart.MapResolution.PROVINCES] = "PROVINCES";
    typeMapping[gviz.geochart.MapResolution.METROS] = "METROS";
    gviz.geochart.maploader.typeMapping_ = typeMapping
  }
  return gviz.geochart.maploader.typeMapping_[resolution]
};
gviz.geochart.maploader.mapList_ = gviz.geochart.maplist.MAPS;
gviz.geochart.maploader.isMapIdExists = function(mapId) {
  var domain = mapId.domain, region = mapId.region, resolution = gviz.geochart.maploader.mapResolutionToString_(mapId.resolution), availableResolutions = gviz.geochart.maploader.mapList_[domain];
  if(availableResolutions) {
    var availableRegions = availableResolutions[resolution];
    if(availableRegions) {
      return 0 <= goog.array.binarySearch(availableRegions, region)
    }
  }
  return!1
};
gviz.geochart.maploader.cachedBoundingBoxes_ = null;
gviz.geochart.maploader.getBoundingBoxInfo = function(callback) {
  if(goog.isDefAndNotNull(gviz.geochart.maploader.cachedBoundingBoxes_)) {
    callback(gviz.geochart.maploader.cachedBoundingBoxes_)
  }else {
    var uri = gviz.geochart.maploader.staticRepositoryUri_ + "info/boundingBoxes.js", deferred = goog.net.jsloader.loadAndVerify(uri, "google_visualization_geochart_boundingBoxes", {cleanupWhenDone:!0});
    deferred.addCallbacks(function(response) {
      var digestedResponse = gviz.geochart.maploader.digestBoundingBoxesInfo_(response);
      gviz.geochart.maploader.cachedBoundingBoxes_ = digestedResponse;
      callback(digestedResponse)
    }, function() {
      gviz.geochart.maploader.logger_.severe("Failed to load boundingBoxes information.");
      callback(null)
    })
  }
};
gviz.geochart.maploader.digest_ = function(response) {
  return{views:goog.array.map(response.views, gviz.geochart.maploader.digestView_)}
};
gviz.geochart.maploader.digestView_ = function(view) {
  return{features:gviz.geochart.maploader.reduceFeatures_(goog.array.map(view.features, gviz.geochart.maploader.digestFeature_)), boundingBox:gviz.geochart.maploader.digestBoundingBox_(view.boundingBox), xoffset:view.xoffset, yoffset:view.yoffset, scale:view.scale}
};
gviz.geochart.maploader.reduceFeatures_ = function(features) {
  for(var disputedFeaturesMap = {}, normalFeatures = [], i = 0;i < features.length;i++) {
    var feature = features[i], fid = feature.id;
    goog.string.startsWith(fid, "__DISPUTED__") ? disputedFeaturesMap[fid] = feature : normalFeatures.push(feature)
  }
  for(i = 0;i < normalFeatures.length;i++) {
    var feature = normalFeatures[i], disputedFid = "__DISPUTED__" + feature.id, disputedFeature = disputedFeaturesMap[disputedFid];
    feature.disputed = disputedFeature ? disputedFeature.polygons : []
  }
  var disputedAllFeature = disputedFeaturesMap.__DISPUTED__All;
  disputedAllFeature && (disputedAllFeature.disputed = disputedAllFeature.polygons, normalFeatures.push(disputedAllFeature));
  return normalFeatures
};
gviz.geochart.maploader.digestFeature_ = function(feature) {
  return{id:feature.id, polygons:goog.array.map(feature.polygons, gviz.geochart.maploader.digestPolygon_), disputed:[]}
};
gviz.geochart.maploader.digestPolygon_ = function(polygon) {
  if(goog.isArrayLike(polygon)) {
    var shell = polygon;
    return{shell:gviz.geochart.maploader.digestPolyline_(shell), holes:[]}
  }
  return{shell:gviz.geochart.maploader.digestPolyline_(polygon.shell), holes:goog.array.map(polygon.holes, gviz.geochart.maploader.digestPolyline_)}
};
gviz.geochart.maploader.digestPolyline_ = function(polyline) {
  return goog.array.map(polyline, function(point) {
    return[gviz.geochart.util.unprojectLat(point[0]), parseFloat(point[1])]
  })
};
gviz.geochart.maploader.digestBoundingBox_ = function(boundingBox) {
  return{hi:[gviz.geochart.util.unprojectLat(boundingBox.hi[0]), parseFloat(boundingBox.hi[1])], lo:[gviz.geochart.util.unprojectLat(boundingBox.lo[0]), parseFloat(boundingBox.lo[1])]}
};
gviz.geochart.maploader.digestBoundingBoxesInfo_ = function(response) {
  return goog.array.map(response, gviz.geochart.maploader.digestBoundingBoxInfo_)
};
gviz.geochart.maploader.digestBoundingBoxInfo_ = function(boundingBoxInfo) {
  return{region:boundingBoxInfo.region, resolution:boundingBoxInfo.resolution, domain:boundingBoxInfo.domain, boundingBoxes:goog.array.map(boundingBoxInfo.boundingBoxes, gviz.geochart.maploader.digestBoundingBox_)}
};
// Input 247
gviz.geochart.mapresolver = {};
gviz.geochart.mapresolver.getMapId = function(dataTable, dataTableFormat, options, callback) {
  var region = options.inferStringValue("region");
  if("auto" != region) {
    callback(gviz.geochart.mapresolver.getVerifiedMapIdFromOptions_(region, options))
  }else {
    if(dataTableFormat.addressType != gviz.GeoChartDataFormat.AddressType.LATLNG) {
      callback(gviz.geochart.mapresolver.getVerifiedMapIdFromOptions_("world", options))
    }else {
      for(var resolution = options.inferOptionalEnumValue("resolution", gviz.geochart.MapResolution), domain = options.inferOptionalStringValue("domain"), latLngs = [], i = 0;i < dataTable.getNumberOfRows();++i) {
        latLngs.push({lat:dataTable.getValue(i, dataTableFormat.latColumn), lng:dataTable.getValue(i, dataTableFormat.lngColumn)})
      }
      gviz.geochart.maploader.getBoundingBoxInfo(function(boundingBoxesInfo) {
        if(boundingBoxesInfo) {
          var mapId = gviz.geochart.mapresolver.getMapId_(boundingBoxesInfo, latLngs, resolution, domain);
          goog.isDefAndNotNull(mapId) ? callback(mapId) : callback(gviz.geochart.mapresolver.getVerifiedMapIdFromOptions_("world", options))
        }else {
          callback(null)
        }
      })
    }
  }
};
gviz.geochart.mapresolver.getVerifiedMapIdFromOptions_ = function(region, options) {
  var resolution = options.inferEnumValue("resolution", gviz.geochart.MapResolution, gviz.geochart.MapResolution.COUNTRIES), domain = options.inferStringValue("domain"), mapId = {region:region, resolution:resolution, domain:domain};
  return gviz.geochart.maploader.isMapIdExists(mapId) || "COM" != mapId.domain && (mapId.domain = "COM", gviz.geochart.maploader.isMapIdExists(mapId)) ? mapId : null
};
gviz.geochart.mapresolver.pointInBoundingBox_ = function(point, boundingBox) {
  return point.lat > boundingBox.lo[0] && point.lat < boundingBox.hi[0] && point.lng > boundingBox.lo[1] && point.lng < boundingBox.hi[1]
};
gviz.geochart.mapresolver.getMapId_ = function(boundingBoxesInfo, latLngs, resolution, domain) {
  for(var i = 0;i < boundingBoxesInfo.length;++i) {
    var boundingBoxInfo = boundingBoxesInfo[i];
    if(!goog.isDefAndNotNull(resolution) || boundingBoxInfo.resolution == resolution) {
      if(!goog.isDefAndNotNull(domain) || boundingBoxInfo.domain == domain) {
        for(var allPointsInBBs = !0, j = 0;j < latLngs.length;++j) {
          for(var point = latLngs[j], pointInSomeBB = !1, boundingBoxes = boundingBoxInfo.boundingBoxes, k = 0;k < boundingBoxes.length;++k) {
            var bb = boundingBoxes[k];
            if(gviz.geochart.mapresolver.pointInBoundingBox_(point, bb)) {
              pointInSomeBB = !0;
              break
            }
          }
          if(!pointInSomeBB) {
            allPointsInBBs = !1;
            break
          }
        }
        if(allPointsInBBs) {
          return{region:boundingBoxInfo.region, resolution:boundingBoxInfo.resolution, domain:boundingBoxInfo.domain}
        }
      }
    }
  }
  return null
};
gviz.geochart.mapresolver.mapExists = function(options) {
  var region = options.inferStringValue("region"), mapId = gviz.geochart.mapresolver.getVerifiedMapIdFromOptions_(region, options);
  return goog.isDefAndNotNull(mapId)
};
// Input 248
google.visualization.GeoChart = function(container) {
  google.visualization.AbstractVisualization.call(this, container);
  this.logger_ = gviz.util.VisCommon.createLogger(google.visualization.GeoChart.NAME_);
  this.logger_.info("Starting...");
  this.activeMap_ = this.drawingFrame_ = null;
  this.locationProvider_ = new gviz.geochart.LocationProvider(this.errorHandler);
  this.lastDrawnOptionsSignature_ = "";
  this.asyncWrapper_ = null
};
goog.inherits(google.visualization.GeoChart, google.visualization.AbstractVisualization);
google.visualization.GeoChart.mapExists = function(userOptions) {
  goog.isDefAndNotNull(userOptions) || (userOptions = {});
  var options = new gviz.Options([userOptions, gviz.geochart.options.DEFAULTS]);
  return gviz.geochart.mapresolver.mapExists(options)
};
google.visualization.GeoChart.setMapsSource = function(mapsSource, readyCallback_opt, errorCallback_opt) {
  gviz.geochart.maploader.setMapsSource(mapsSource, function() {
    readyCallback_opt && readyCallback_opt()
  }, function() {
    errorCallback_opt && errorCallback_opt()
  })
};
google.visualization.GeoChart.prototype.drawInternal = function(asyncWrapper, dataTable, opt_options, opt_state) {
  gviz.util.VisCommon.addCssToDom("/core/tooltip.css");
  google.visualization.errors.removeAll(this.container);
  this.asyncWrapper_ = asyncWrapper;
  goog.dispose(this.locationProvider_);
  this.locationProvider_ = new gviz.geochart.LocationProvider(this.errorHandler);
  var userOptions = opt_options || {}, userOptions = gviz.json.deserialize(gviz.json.serialize(userOptions)), options = new gviz.Options([userOptions, gviz.geochart.options.DEFAULTS]), state = new gviz.geochart.InteractionState(opt_state), chartSize = this.getSize_(this.container, options), displayMode = options.inferEnumValue("displayMode", gviz.GeoChartDataFormat.DisplayMode, gviz.GeoChartDataFormat.DisplayMode.AUTO), geoChartDataFormat = new gviz.GeoChartDataFormat, analysisResults = geoChartDataFormat.analyzeTable(dataTable, 
  displayMode, this.errorHandler);
  if(goog.isDefAndNotNull(analysisResults)) {
    var dataTableFormat = analysisResults, optionsSignature = goog.json.serialize({options:userOptions, format:dataTableFormat, size:chartSize}), drawGivenMapId = this.bind_(function(mapId) {
      if(!goog.isDefAndNotNull(mapId)) {
        throw Error("Requested map does not exist.");
      }
      this.logger_.info("MapId: " + mapId.region + ", " + mapId.resolution + ", " + mapId.domain);
      this.drawGivenMapId_(dataTable, dataTableFormat, options, optionsSignature, state, chartSize, mapId)
    }, !0);
    gviz.geochart.mapresolver.getMapId(dataTable, dataTableFormat, options, drawGivenMapId)
  }
};
google.visualization.GeoChart.prototype.getSize_ = function(container, options) {
  var defWidth = gviz.geochart.options.DEFAULT_WIDTH, defHeight = gviz.geochart.options.DEFAULT_HEIGHT, width = gviz.util.VisCommon.getWidth(container, options, -1), height = gviz.util.VisCommon.getHeight(container, options, -1);
  -1 == width && -1 == height ? (width = defWidth, height = defHeight) : -1 == width ? width = Math.round(height * defWidth / defHeight) : -1 == height && (height = Math.round(width * defHeight / defWidth));
  return new goog.math.Size(width, height)
};
google.visualization.GeoChart.prototype.drawGivenMapId_ = function(dataTable, dataTableFormat, options, optionsSignature, state, chartSize, mapId) {
  var showGeocodeWarnings = options.inferBooleanValue("showGeocodeWarnings");
  if(this.lastDrawnOptionsSignature_ == optionsSignature) {
    this.logger_.info("Updating only the data table..."), this.processTable_(!1, options, dataTable, dataTableFormat, mapId, showGeocodeWarnings, state, optionsSignature)
  }else {
    goog.asserts.assert(this.asyncWrapper_);
    if(goog.isDefAndNotNull(this.drawingFrame_)) {
      this.drawingFrame_.update(chartSize, this.asyncWrapper_)
    }else {
      var forceIFrame = options.inferBooleanValue("forceIFrame");
      this.drawingFrame_ = new gviz.graphics.DrawingFrame(this.container, chartSize, this.asyncWrapper_, forceIFrame)
    }
    this.drawingFrame_.waitUntilReady(this.bind_(function() {
      this.drawGivenRenderer_(dataTable, dataTableFormat, options, optionsSignature, state, chartSize, mapId, showGeocodeWarnings)
    }, !1), this.asyncWrapper_)
  }
};
google.visualization.GeoChart.prototype.drawGivenRenderer_ = function(dataTable, dataTableFormat, options, optionsSignature, state, chartSize, mapId, showGeocodeWarnings) {
  var renderer = this.drawingFrame_.getRenderer(), overlayArea = this.drawingFrame_.getOverlayArea();
  goog.asserts.assert(renderer);
  var logicalCanvas = new gviz.geochart.LogicalCanvas(overlayArea, renderer, dataTableFormat);
  goog.isDefAndNotNull(this.activeMap_) && goog.dispose(this.activeMap_);
  goog.dispose(this.activeMap_);
  this.activeMap_ = new gviz.geochart.ActiveMap(logicalCanvas, options, chartSize.width, chartSize.height, dataTable, dataTableFormat, state, this.bind_(this.dispatchReadyEvent_, !1), this.bind_(this.dispatchEvent_, !1));
  this.processTable_(!0, options, dataTable, dataTableFormat, mapId, showGeocodeWarnings, state, optionsSignature)
};
google.visualization.GeoChart.prototype.processTable_ = function(loadMap, options, dataTable, dataTableFormat, mapId, showGeocodeWarnings, state, optionsSignature) {
  var geocodingContext = options.inferEnumValue("geocodingContext", gviz.geochart.options.GeocodingContext, gviz.geochart.options.DEFAULT_GEOCODING_CONTEXT), waitForMap = geocodingContext === gviz.geochart.options.GeocodingContext.BOUNDS || geocodingContext === gviz.geochart.options.GeocodingContext.BOTH, callback = this.bind_(function(regions, markers, isDone) {
    this.activeMap_.setLocations(regions, markers, isDone, dataTable, state)
  }, !0), doProcessTable = goog.bind(function() {
    this.locationProvider_.processTable(dataTable, dataTableFormat, mapId, showGeocodeWarnings, callback, this.asyncWrapper_)
  }, this);
  this.locationProvider_.setGeocodingContext(geocodingContext);
  loadMap && (this.locationProvider_.clearStaticMap(), gviz.geochart.maploader.loadMap(mapId, this.bind_(function(staticMap) {
    goog.isDefAndNotNull(staticMap) ? (this.activeMap_.setStaticMap(staticMap), waitForMap && (this.locationProvider_.setStaticMap(staticMap), doProcessTable()), this.lastDrawnOptionsSignature_ = optionsSignature) : this.errorHandler.addError("Requested map does not exist.")
  }, !0)));
  waitForMap || (this.locationProvider_.clearStaticMap(), doProcessTable())
};
google.visualization.GeoChart.prototype.setSelection = function(selection) {
  goog.isDefAndNotNull(this.activeMap_) ? this.activeMap_.setSelection(selection) : this.errorHandler.addError("The visualization is not ready yet.")
};
google.visualization.GeoChart.prototype.getSelection = function() {
  if(goog.isDefAndNotNull(this.activeMap_)) {
    return this.activeMap_.getSelection()
  }
  this.errorHandler.addError("The visualization is not ready yet.");
  return[]
};
google.visualization.GeoChart.prototype.dispatchReadyEvent_ = function() {
  this.dispatchEvent_(gviz.ChartEventType.READY, {})
};
google.visualization.GeoChart.prototype.dispatchEvent_ = function(eventType, eventData) {
  google.visualization.events.trigger(this, eventType, eventData)
};
google.visualization.GeoChart.prototype.clearInternal = function() {
  this.lastDrawnOptionsSignature_ = "";
  goog.dispose(this.activeMap_);
  this.activeMap_ = null;
  goog.dispose(this.drawingFrame_);
  this.drawingFrame_ = null
};
google.visualization.GeoChart.prototype.bind_ = function(f, protectedMode) {
  return protectedMode ? this.asyncWrapper_(f, this) : goog.bind(f, this)
};
google.visualization.GeoChart.NAME_ = "google.visualization.GeoChart";
// Input 249
goog.exportSymbol("google.visualization.GeoChart", google.visualization.GeoChart);
goog.exportProperty(google.visualization.GeoChart.prototype, "draw", google.visualization.GeoChart.prototype.draw);
goog.exportProperty(google.visualization.GeoChart.prototype, "setSelection", google.visualization.GeoChart.prototype.setSelection);
goog.exportProperty(google.visualization.GeoChart.prototype, "getSelection", google.visualization.GeoChart.prototype.getSelection);
goog.exportProperty(google.visualization.GeoChart.prototype, "clearChart", google.visualization.GeoChart.prototype.clearChart);
goog.exportSymbol("google.visualization.GeoChart.mapExists", google.visualization.GeoChart.mapExists);
goog.exportSymbol("google.visualization.GeoChart.setMapsSource", google.visualization.GeoChart.setMapsSource);
// Input 250
goog.exportSymbol("gviz.util.RegionCoder.dictionaryReady", gviz.util.RegionCoder.dictionaryReady);
// Input 251
goog.fx.easing = {};
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
// Input 252
gviz.animation = {};
gviz.animation.EasingType = {LINEAR:"linear", IN:"in", OUT:"out", IN_AND_OUT:"inAndOut"};
gviz.animation.getEasingFunction_ = function(easingType) {
  switch(easingType) {
    case gviz.animation.EasingType.LINEAR:
      return goog.functions.identity;
    case gviz.animation.EasingType.IN:
      return goog.fx.easing.easeIn;
    case gviz.animation.EasingType.OUT:
      return goog.fx.easing.easeOut;
    case gviz.animation.EasingType.IN_AND_OUT:
      return goog.fx.easing.inAndOut;
    default:
      return goog.asserts.fail('Invalid easing type "' + easingType + '"'), goog.functions.identity
  }
};
gviz.animation.getProperties = function(options, defaultDuration, defaultEasingType) {
  var duration = options.inferNonNegativeNumberValue("animation.duration", defaultDuration);
  if(!duration) {
    return null
  }
  var easingType = options.inferEnumValue("animation.easing", gviz.animation.EasingType, defaultEasingType), easingFunction = gviz.animation.getEasingFunction_(easingType);
  return{duration:duration, easing:easingFunction}
};
// Input 253
gviz.canviz.timeutil = {};
gviz.canviz.timeutil.floorDate = function(date, unit) {
  return gviz.canviz.timeutil.roundDateInternal_(date, unit, 0)
};
gviz.canviz.timeutil.ceilDate = function(date, unit) {
  return gviz.canviz.timeutil.roundDateInternal_(date, unit, 1)
};
gviz.canviz.timeutil.roundDateInternal_ = function(date, unit, direction) {
  for(var newDate = new Date(date), carry = !1, unitLength = unit.length, roundingFunction = [Math.floor, Math.ceil][direction], i = 0;i < unitLength;++i) {
    var getter = date["get" + gviz.canviz.timeutil.dateMethodNames_[i]], setter = date["set" + gviz.canviz.timeutil.dateMethodNames_[i]], dateDigit = getter.apply(date), unitDigit = unit[i], zeroDigit = gviz.canviz.timeutil.durationZeros_[i];
    if(0 == unitDigit) {
      carry = carry || 0 != dateDigit && 0 != direction, setter.apply(newDate, [zeroDigit])
    }else {
      carry ? setter.apply(newDate, [zeroDigit + unitDigit * (1 + Math.floor((dateDigit - zeroDigit) / unitDigit))]) : setter.apply(newDate, [zeroDigit + unitDigit * roundingFunction((dateDigit - zeroDigit) / unitDigit)]);
      break
    }
  }
  return newDate
};
gviz.canviz.timeutil.floorDuration = function(duration, unit) {
  return gviz.canviz.timeutil.roundDurationInternal_(duration, unit, Math.floor)
};
gviz.canviz.timeutil.ceilDuration = function(duration, unit) {
  return gviz.canviz.timeutil.roundDurationInternal_(duration, unit, Math.ceil)
};
gviz.canviz.timeutil.roundDuration = function(duration, unit) {
  return gviz.canviz.timeutil.roundDurationInternal_(duration, unit, Math.round)
};
gviz.canviz.timeutil.roundDurationInternal_ = function(duration, unit, func) {
  var newduration = goog.array.clone(duration), i;
  for(i = 0;i < newduration.length && 0 == unit[i];++i) {
    newduration[i] = 0
  }
  goog.asserts.assert(i != newduration.length);
  if(0 == i) {
    return newduration[0] = func(duration[0] / unit[0]) * unit[0], newduration
  }
  var fraction = 0;
  duration[i - 1] >= gviz.canviz.timeutil.durationHalfs_[i - 1] ? fraction = 0.7 : 0 < duration[i - 1] && (fraction = 0.1);
  newduration[i] = func((duration[i] + fraction) / unit[i]) * unit[i];
  return newduration
};
gviz.canviz.timeutil.floorDateToMonday = function(date) {
  date = gviz.canviz.timeutil.floorDate(date, [0, 0, 0, 0, 1]);
  var numDays = (7 + date.getDay() - 1) % 7;
  return date = gviz.canviz.timeutil.subtractDuration(date, [0, 0, 0, 0, numDays])
};
gviz.canviz.timeutil.roundMillisAccordingToTable = function(millis, durationTable, opt_numOfRepeatingSubIntervals) {
  var logTable = goog.array.map(durationTable, function(v) {
    return[Math.log(gviz.canviz.timeutil.durationAsMillis(v))]
  });
  if(!opt_numOfRepeatingSubIntervals) {
    var index = gviz.canviz.util.closestValueTo(Math.log(millis), logTable);
    return durationTable[index]
  }
  var roundIndexValueTuple = gviz.canviz.util.extrapolatedClosestValueTo(Math.log(millis), logTable, opt_numOfRepeatingSubIntervals), index = roundIndexValueTuple[0];
  if(index <= logTable.length - 1) {
    return durationTable[index]
  }
  var logMillis = roundIndexValueTuple[1], largestUnitInTable = goog.array.peek(durationTable);
  return gviz.canviz.timeutil.roundDuration(gviz.canviz.timeutil.millisAsDuration(Math.exp(logMillis)), largestUnitInTable)
};
gviz.canviz.timeutil.addDuration = function(date, duration) {
  return gviz.canviz.timeutil.addDuration_(date, duration, 1)
};
gviz.canviz.timeutil.subtractDuration = function(date, duration) {
  return gviz.canviz.timeutil.addDuration_(date, duration, -1)
};
gviz.canviz.timeutil.addDuration_ = function(date, duration, factor) {
  var newDate = new Date(date.getTime());
  if(gviz.canviz.timeutil.isDurationZero(duration)) {
    return newDate
  }
  for(var i = 0;i < duration.length;++i) {
    if(0 != duration[i]) {
      var methodName = gviz.canviz.timeutil.dateMethodNames_[i], setter = newDate["set" + methodName], getter = newDate["get" + methodName], value = getter.apply(newDate, []);
      setter.apply(newDate, [value + factor * duration[i]])
    }
  }
  if(0 < factor && newDate <= date) {
    throw"Error adding duration to date";
  }
  if(0 > factor && newDate >= date) {
    throw"Error subtracting duration from date";
  }
  return newDate
};
gviz.canviz.timeutil.DateRangeIter = function(startDate, endDate, unit, quantity) {
  this.startMs_ = startDate.getTime();
  this.endDate_ = endDate;
  this.quantity_ = quantity;
  var getter = startDate["get" + gviz.canviz.timeutil.dateMethodNames_[unit]];
  this.unitValue_ = getter.apply(startDate, []);
  this.setter_ = startDate["set" + gviz.canviz.timeutil.dateMethodNames_[unit]];
  this.next_ = new Date(this.startMs_)
};
gviz.canviz.timeutil.DateRangeIter.prototype.hasNext = function() {
  return this.next_ < this.endDate_
};
gviz.canviz.timeutil.DateRangeIter.prototype.next = function() {
  goog.asserts.assert(this.hasNext());
  var ret = this.next_;
  this.next_ = new Date(this.startMs_);
  this.unitValue_ += this.quantity_;
  this.setter_.apply(this.next_, [this.unitValue_]);
  return ret
};
gviz.canviz.timeutil.DateRangeIter.prototype.peek = function() {
  return this.hasNext() ? this.next_ : null
};
gviz.canviz.timeutil.isDurationZero = function(duration) {
  for(var i = 0;i < duration.length;++i) {
    if(0 != duration[i]) {
      return!1
    }
  }
  return!0
};
gviz.canviz.timeutil.parseDuration = function(text) {
  var result = [0, 0, 0, 0, 0, 0, 0];
  if(null == text.match(gviz.canviz.timeutil.durationRegularExpression_)) {
    return null
  }
  var letters = text.match(/(\d+[YMDHS]|[PT])/g);
  if(null == letters) {
    return null
  }
  for(var length = letters.length, dso_index = 0, dso = gviz.canviz.timeutil.durationSymbolOrder_, dso_length = dso.length, i = 0;i < length;++i) {
    var letter = letters[i].match(/[YMDHSPT]/);
    if(null == letter) {
      return null
    }
    for(var letter = letter[0], number = letters[i].match(/\d+/g), number = number && number[0] || 0;dso[dso_index][0] != letter && dso_index < dso_length;) {
      "P" != dso[dso_index][0] && "T" != dso[dso_index][0] && (result[dso[dso_index][2]] = 0), dso_index += 1
    }
    if(dso_index < dso_length && null != number) {
      result[dso[dso_index][2]] = number && parseInt(number, 10), dso_index += 1
    }else {
      return null
    }
  }
  if(i < length) {
    return null
  }
  for(;dso_index < dso_length;) {
    "P" != dso[dso_index][0] && "T" != dso[dso_index][0] && (result[dso[dso_index][2]] = 0), dso_index += 1
  }
  return result
};
gviz.canviz.timeutil.formatDuration = function(duration) {
  var withT = !(0 != duration[2] && 0 != duration[5]) && !(0 == duration[2] && 0 == duration[5]), l = goog.array.findIndex(duration, function(v) {
    return 0 != v
  }), r = goog.array.findIndexRight(duration, function(v) {
    return 0 != v
  });
  if(r < l) {
    return"0"
  }
  var builtString = [];
  withT && 3 > r && builtString.push("T");
  for(var i = r;i >= l;--i) {
    withT && 3 == i && builtString.push("T"), 0 != duration[i] && (builtString.push(duration[i]), builtString.push("#SMHDMY".charAt(i)))
  }
  withT && 3 < l && builtString.push("T");
  return builtString.join("")
};
gviz.canviz.timeutil.durationGranularity = function(duration) {
  var n = goog.array.findIndex(duration, function(v) {
    return 0 != v
  });
  return Math.max(0, n)
};
gviz.canviz.timeutil.durationStringAsMillis = function(durationString) {
  return gviz.canviz.timeutil.durationAsMillis(gviz.canviz.timeutil.parseDuration(durationString))
};
gviz.canviz.timeutil.millisAsDurationString = function(millis) {
  return gviz.canviz.timeutil.formatDuration(gviz.canviz.timeutil.millisAsDuration(millis))
};
gviz.canviz.timeutil.durationAsMillis = function(duration) {
  if(null == duration) {
    return-1
  }
  for(var millis = 0, l = duration.length, i = 0;i < l;++i) {
    millis += duration[i] * gviz.canviz.timeutil.durationCoefficients_[i]
  }
  return millis
};
gviz.canviz.timeutil.millisAsDuration = function(millis) {
  for(var result = [], i = gviz.canviz.timeutil.durationCoefficients_.length - 1;0 <= i;i--) {
    result[i] = Math.floor(millis / gviz.canviz.timeutil.durationCoefficients_[i]), millis -= result[i] * gviz.canviz.timeutil.durationCoefficients_[i]
  }
  return result
};
gviz.canviz.timeutil.timeOfDayAsMillis = function(timeofday) {
  var milliseconds = 0;
  4 === timeofday.length && (milliseconds = timeofday[3]);
  return 1E3 * (60 * (60 * timeofday[0] + timeofday[1]) + timeofday[2]) + milliseconds
};
gviz.canviz.timeutil.millisAsTimeofday = function(millis) {
  var result = [], milliseconds = millis % 1E3, time = Math.floor(millis / 1E3), seconds = time % 60, time = Math.floor(time / 60), minutes = time % 60, hours = time = Math.floor(time / 60), result = [hours, minutes, seconds];
  0 !== milliseconds && result.push(milliseconds);
  return result
};
gviz.canviz.timeutil.dateAsDuration = function(date) {
  return[date.getMilliseconds(), date.getSeconds(), date.getMinutes(), date.getHours(), date.getDate() - 1, date.getMonth(), date.getFullYear()]
};
gviz.canviz.timeutil.durationAsDate = function(duration) {
  var date = new Date(0, 0, 0, 0, 0, 0, 0);
  date.setFullYear(duration[6]);
  date.setMonth(duration[5]);
  date.setDate(duration[4] + 1);
  date.setHours(duration[3]);
  date.setMinutes(duration[2]);
  date.setSeconds(duration[1]);
  date.setMilliseconds(duration[0]);
  return date
};
gviz.canviz.timeutil.smallerUnit = function(inputUnit) {
  if(inputUnit[0]) {
    return[1]
  }
  for(var unit = [], i = 1;i < inputUnit.length;++i) {
    if(inputUnit[i]) {
      return unit.push(1), unit
    }
    unit.push(0)
  }
  unit.push(1);
  return unit
};
gviz.canviz.timeutil.multiplyDuration = function(duration, multiplier) {
  return goog.array.map(duration, function(x) {
    return x * multiplier
  })
};
gviz.canviz.timeutil.dateMethodNames_ = "Milliseconds Seconds Minutes Hours Date Month FullYear".split(" ");
gviz.canviz.timeutil.durationZeros_ = [0, 0, 0, 0, 1, 0, 0];
gviz.canviz.timeutil.durationHalfs_ = [500, 30, 30, 12, 15, 6, 0];
gviz.canviz.timeutil.durationCoefficients_ = [1, 1E3, 6E4, 36E5, 864E5, 2629743830, 31556926E3];
gviz.canviz.timeutil.durationRegularExpression_ = /^P?(\d+[YMDHMS])*T?(\d+[YMDHMS])*$/;
gviz.canviz.timeutil.durationSymbolOrder_ = [["P", "prefix", -1], ["Y", "years", 6], ["M", "months", 5], ["D", "days", 4], ["T", "delimiter", -1], ["H", "hours", 3], ["M", "minutes", 2], ["S", "seconds", 1]];
// Input 254
gviz.canviz.valuenumberconverter = {};
gviz.canviz.valuenumberconverter.getByType = function(type) {
  switch(type) {
    case "date":
    ;
    case "datetime":
      return{toNumber:gviz.canviz.valuenumberconverter.dateToNumber, fromNumber:gviz.canviz.valuenumberconverter.dateFromNumber};
    case "timeofday":
      return{toNumber:gviz.canviz.valuenumberconverter.timeOfDayToNumber, fromNumber:gviz.canviz.valuenumberconverter.timeOfDayFromNumber};
    case "number":
      return{toNumber:gviz.canviz.valuenumberconverter.numberToNumber, fromNumber:gviz.canviz.valuenumberconverter.numberFromNumber};
    default:
      return goog.asserts.fail("invalid type passed to valuenumberconverter.getByType"), {toNumber:gviz.canviz.valuenumberconverter.numberToNumber, fromNumber:gviz.canviz.valuenumberconverter.numberFromNumber}
  }
};
gviz.canviz.valuenumberconverter.numberToNumber = function(v) {
  goog.asserts.assert(goog.isNumber(v));
  return v
};
gviz.canviz.valuenumberconverter.numberFromNumber = function(n) {
  return n
};
gviz.canviz.valuenumberconverter.dateToNumber = function(v) {
  goog.asserts.assert(goog.isDateLike(v));
  return v.getTime()
};
gviz.canviz.valuenumberconverter.dateFromNumber = function(n) {
  return new Date(n)
};
gviz.canviz.valuenumberconverter.timeOfDayToNumber = function(v) {
  goog.asserts.assert(goog.isArray(v));
  return gviz.canviz.timeutil.timeOfDayAsMillis(v)
};
gviz.canviz.valuenumberconverter.timeOfDayFromNumber = function(n) {
  return gviz.canviz.timeutil.millisAsTimeofday(n)
};
// Input 255
goog.ui.FlatButtonRenderer = function() {
};
goog.inherits(goog.ui.FlatButtonRenderer, goog.ui.ButtonRenderer);
goog.addSingletonGetter(goog.ui.FlatButtonRenderer);
goog.ui.FlatButtonRenderer.CSS_CLASS = "charts-flat-button";
goog.ui.FlatButtonRenderer.prototype.createDom = function(button) {
  var classNames = this.getClassNames(button), attributes = {"class":goog.ui.INLINE_BLOCK_CLASSNAME + " " + classNames.join(" ")}, element = button.getDomHelper().createDom("div", attributes, button.getContent());
  this.setTooltip(element, button.getTooltip());
  this.setAriaStates(button, element);
  return element
};
goog.ui.FlatButtonRenderer.prototype.getAriaRole = function() {
  return goog.a11y.aria.Role.BUTTON
};
goog.ui.FlatButtonRenderer.prototype.canDecorate = function(element) {
  return"DIV" == element.tagName
};
goog.ui.FlatButtonRenderer.prototype.decorate = function(button, element) {
  goog.dom.classes.add(element, goog.ui.INLINE_BLOCK_CLASSNAME);
  return goog.ui.FlatButtonRenderer.superClass_.decorate.call(this, button, element)
};
goog.ui.FlatButtonRenderer.prototype.getValue = function() {
  return""
};
goog.ui.FlatButtonRenderer.prototype.getCssClass = function() {
  return goog.ui.FlatButtonRenderer.CSS_CLASS
};
goog.ui.registry.setDecoratorByClassName(goog.ui.FlatButtonRenderer.CSS_CLASS, function() {
  return new goog.ui.Button(null, goog.ui.FlatButtonRenderer.getInstance())
});
// Input 256
goog.ui.LinkButtonRenderer = function() {
};
goog.inherits(goog.ui.LinkButtonRenderer, goog.ui.FlatButtonRenderer);
goog.addSingletonGetter(goog.ui.LinkButtonRenderer);
goog.ui.LinkButtonRenderer.CSS_CLASS = "charts-link-button";
goog.ui.LinkButtonRenderer.prototype.getCssClass = function() {
  return goog.ui.LinkButtonRenderer.CSS_CLASS
};
goog.ui.registry.setDecoratorByClassName(goog.ui.LinkButtonRenderer.CSS_CLASS, function() {
  return new goog.ui.Button(null, goog.ui.LinkButtonRenderer.getInstance())
});
// Input 257
gviz.canviz.legend = {};
// Input 258
// Input 259
// Input 260
gviz.canviz.DatetimeValueScale = function(roundDurationTable, durationTableRepeatingIntervals, dateFormats) {
  this.roundDurationTable_ = roundDurationTable;
  this.durationTableRepeatingIntervals_ = durationTableRepeatingIntervals;
  this.dateFormats_ = dateFormats
};
goog.inherits(gviz.canviz.DatetimeValueScale, gviz.canviz.ValueScale);
gviz.canviz.DatetimeValueScale.prototype.init = function(options, optionsPath, numberOfTicks) {
  gviz.canviz.DatetimeValueScale.superClass_.init.call(this, options, optionsPath, numberOfTicks);
  var formatOptions = options.inferObjectValue(this.getAbsoluteOptionsPath("formatOptions")), userFormats = gviz.canviz.DatetimeValueScale.formatOptionsToArray_(formatOptions), formatLayers = [userFormats, goog.array.repeat(this.format, userFormats.length), this.dateFormats_];
  this.dateFormats_ = gviz.canviz.DatetimeValueScale.mergeArrays_(formatLayers)
};
gviz.canviz.DatetimeValueScale.formatOptionsToArray_ = function(formatOptions) {
  var formats = [];
  formats.push(formatOptions.millisecond);
  formats.push(formatOptions.second);
  formats.push(formatOptions.minute);
  formats.push(formatOptions.hour);
  formats.push(formatOptions.day);
  formats.push(formatOptions.month);
  formats.push(formatOptions.year);
  return formats
};
gviz.canviz.DatetimeValueScale.mergeArrays_ = function(arrs) {
  var zippedArrays = goog.array.zip.apply(null, arrs), merged = goog.array.map(zippedArrays, function(arr) {
    return goog.array.find(arr, function(val) {
      return val
    })
  });
  return merged
};
gviz.canviz.DatetimeValueScale.prototype.inferValue = function(options, path) {
  return options.inferValue(path)
};
gviz.canviz.DatetimeValueScale.prototype.valueToNumberInternal = function(v) {
  return gviz.canviz.valuenumberconverter.dateToNumber(v)
};
gviz.canviz.DatetimeValueScale.prototype.numberToValueInternal = function(v) {
  return gviz.canviz.valuenumberconverter.dateFromNumber(v)
};
gviz.canviz.DatetimeValueScale.prototype.gapValueToNumberInternal = function(gapValue) {
  return gapValue
};
gviz.canviz.DatetimeValueScale.prototype.getDefaultBaseline = function() {
  var d = new Date(0);
  d.setFullYear(0);
  return d
};
gviz.canviz.DatetimeValueScale.prototype.calibrateInternal = function(minValue, maxValue, shouldExpand) {
  var unroundedTickSize = (maxValue - minValue) / 6, unit = gviz.canviz.timeutil.roundMillisAccordingToTable(unroundedTickSize, this.roundDurationTable_, this.durationTableRepeatingIntervals_), minDate, maxDate;
  shouldExpand ? (minDate = gviz.canviz.timeutil.floorDate(new Date(minValue), unit), maxDate = gviz.canviz.timeutil.ceilDate(new Date(maxValue), unit)) : (minDate = gviz.canviz.timeutil.ceilDate(new Date(minValue), unit), maxDate = gviz.canviz.timeutil.floorDate(new Date(maxValue), unit));
  var tickDuration = gviz.canviz.timeutil.millisAsDuration(unroundedTickSize), tickDuration = gviz.canviz.timeutil.roundDuration(tickDuration, unit), tickDuration = 0 < gviz.canviz.timeutil.durationAsMillis(tickDuration) ? tickDuration : unit;
  this.ticks = [];
  for(var tickDate = minDate;tickDate < maxDate;) {
    this.ticks.push(tickDate.getTime()), tickDate = gviz.canviz.timeutil.addDuration(tickDate, tickDuration)
  }
  (shouldExpand || tickDate <= maxDate) && this.ticks.push(tickDate.getTime());
  shouldExpand && (this.numericMinValue = minDate.getTime(), this.numericMaxValue = tickDate.getTime());
  this.numericMinValue == this.numericMaxValue && (this.numericMinValue -= 1, this.numericMaxValue += 1);
  this.dateFormatter_ = this.getDateFormatter_(tickDuration)
};
gviz.canviz.DatetimeValueScale.prototype.valueToStringInternal = function(value) {
  return this.dateFormatter_.formatValue(value)
};
gviz.canviz.DatetimeValueScale.prototype.getDateFormatter_ = function(tickDuration) {
  var granularity = gviz.canviz.timeutil.durationGranularity(tickDuration), format = this.dateFormats_[granularity];
  return"object" === typeof format ? new google.visualization.DateFormat(format) : new google.visualization.DateFormat({pattern:format})
};
gviz.canviz.DatetimeValueScale.dateRoundUnits_ = [[0, 0, 0, 0, 1], [0, 0, 0, 0, 2], [0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 0, 12], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 5], [0, 0, 0, 0, 0, 0, 10], [0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 50], [0, 0, 0, 0, 0, 0, 100]];
gviz.canviz.DatetimeValueScale.dateRoundUnitsRepeatingIntervals_ = 3;
gviz.canviz.DatetimeValueScale.dateFormatsPerGranularity_ = [google.visualization.DateFormat.Format.MEDIUM_DATE, google.visualization.DateFormat.Format.MEDIUM_DATE, google.visualization.DateFormat.Format.MEDIUM_DATE, google.visualization.DateFormat.Format.MEDIUM_DATE, google.visualization.DateFormat.Format.MEDIUM_DATE, google.visualization.DateFormat.Patterns.YEAR_MONTH_ABBR, "y"];
gviz.canviz.DatetimeValueScale.datetimeRoundUnits_ = [[1], [2], [5], [10], [20], [50], [100], [200], [500], [0, 1], [0, 2], [0, 5], [0, 10], [0, 15], [0, 30], [0, 0, 1], [0, 0, 2], [0, 0, 5], [0, 0, 10], [0, 0, 15], [0, 0, 30], [0, 0, 0, 1], [0, 0, 0, 2], [0, 0, 0, 3], [0, 0, 0, 4], [0, 0, 0, 6], [0, 0, 0, 12], [0, 0, 0, 0, 1], [0, 0, 0, 0, 2], [0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 0, 12], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 5], [0, 0, 0, 
0, 0, 0, 10], [0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 50], [0, 0, 0, 0, 0, 0, 100]];
gviz.canviz.DatetimeValueScale.datetimeRoundUnitsRepeatingIntervals_ = 3;
gviz.canviz.DatetimeValueScale.datetimeFormatsPerGranularity_ = [google.visualization.DateFormat.Format.MEDIUM_TIME, google.visualization.DateFormat.Format.MEDIUM_TIME, google.visualization.DateFormat.Format.SHORT_TIME, {pattern:google.visualization.DateFormat.Format.SHORT_TIME, clearMinutes:!0}, google.visualization.DateFormat.Format.MEDIUM_DATE, google.visualization.DateFormat.Patterns.YEAR_MONTH_ABBR, "y"];
gviz.canviz.DatetimeValueScale.buildDateValueScale = function() {
  return new gviz.canviz.DatetimeValueScale(gviz.canviz.DatetimeValueScale.dateRoundUnits_, gviz.canviz.DatetimeValueScale.dateRoundUnitsRepeatingIntervals_, gviz.canviz.DatetimeValueScale.dateFormatsPerGranularity_)
};
gviz.canviz.DatetimeValueScale.buildDateTimeValueScale = function() {
  return new gviz.canviz.DatetimeValueScale(gviz.canviz.DatetimeValueScale.datetimeRoundUnits_, gviz.canviz.DatetimeValueScale.datetimeRoundUnitsRepeatingIntervals_, gviz.canviz.DatetimeValueScale.datetimeFormatsPerGranularity_)
};
// Input 261
gviz.canviz.tickutil = {};
gviz.canviz.tickutil.MAX_SEARCH_DEPTH_ = 5;
gviz.canviz.tickutil.positionTicksAroundRange = function(startTarget, endTarget, startInsideMargin, startOutsideMargin, endInsideMargin, endOutsideMargin, numberOfSections, scoringFunction) {
  var totalOutsideMargin = endOutsideMargin + startOutsideMargin;
  goog.asserts.assert(endTarget > startTarget, "End target must be strictly greater than start target");
  goog.asserts.assert(1 > totalOutsideMargin, "Total outside margin must be smaller than 1");
  goog.asserts.assert(startInsideMargin <= startOutsideMargin, "start inside margin must be smaller than start outside margin");
  goog.asserts.assert(endInsideMargin <= endOutsideMargin, "end inside margin must be smaller than end outside margin");
  return gviz.canviz.tickutil.searchForRoundTickPositioning_(startTarget, endTarget, startInsideMargin, startOutsideMargin, endInsideMargin, endOutsideMargin, numberOfSections, scoringFunction) || gviz.canviz.tickutil.robustFindTicksAroundRange_(startTarget, endTarget, numberOfSections)
};
gviz.canviz.tickutil.searchForRoundTickPositioning_ = function(startTarget, endTarget, startInsideMargin, startOutsideMargin, endInsideMargin, endOutsideMargin, numberOfSections, scoringFunction) {
  var rangeSize = endTarget - startTarget;
  if(0 >= rangeSize) {
    return null
  }
  for(var magnitude = Math.floor(Math.log(rangeSize) / Math.log(10)), units = gviz.canviz.util.rangeMap(gviz.canviz.tickutil.MAX_SEARCH_DEPTH_, function(i) {
    return{base:Math.pow(10, magnitude - i), coefficient:5}
  }), possiblePositionings = [], foundSome = !1, i$$0 = 0;i$$0 < units.length;++i$$0) {
    var unit$$0 = units[i$$0], normalizedStartTarget = startTarget / (unit$$0.base * unit$$0.coefficient), normalizedEndTarget = endTarget / (unit$$0.base * unit$$0.coefficient), unitPositionings = gviz.canviz.tickutil.listIntegerPositionedTickPositionings_(normalizedStartTarget, normalizedEndTarget, startInsideMargin, startOutsideMargin, endInsideMargin, endOutsideMargin, numberOfSections), possiblePositionings = possiblePositionings.concat(goog.array.map(unitPositionings, function(positioning) {
      return[unit$$0, positioning]
    }));
    if(foundSome) {
      break
    }
    foundSome = !goog.array.isEmpty(unitPositionings)
  }
  return goog.array.reduce(possiblePositionings, function(bestPositioningYet, candidate) {
    for(var unit = candidate[0], positioning = candidate[1], lastStartPoint = null, normalizedStartPoint = positioning.minStartPoint;normalizedStartPoint <= positioning.maxStartPoint && lastStartPoint != normalizedStartPoint;lastStartPoint = normalizedStartPoint, normalizedStartPoint += positioning.offsetStep) {
      var startPoint = Math.round(unit.coefficient * normalizedStartPoint), endPoint = Math.round(unit.coefficient * (normalizedStartPoint + numberOfSections * positioning.sectionSize)), score = scoringFunction(startPoint, endPoint, unit.base);
      score > bestPositioningYet.score && (bestPositioningYet = {score:score, positioning:{startPoint:Math.round(startPoint) * unit.base, endPoint:Math.round(endPoint) * unit.base}})
    }
    return bestPositioningYet
  }, {score:-Infinity, positioning:null}).positioning
};
gviz.canviz.tickutil.robustFindTicksAroundRange_ = function(start, end, numberOfSections) {
  if(0 <= start || 0 >= end || 1 == numberOfSections) {
    return{startPoint:start, endPoint:end}
  }
  var sectionsAboveZero = Math.max(1, Math.min(numberOfSections - 1, Math.round(numberOfSections * (end / (end - start))))), sectionsBelowZero = numberOfSections - sectionsAboveZero, sectionSize = Math.max(end / sectionsAboveZero, -start / sectionsBelowZero);
  return{startPoint:-sectionsBelowZero * sectionSize, endPoint:sectionsAboveZero * sectionSize}
};
gviz.canviz.tickutil.listIntegerPositionedTickPositionings_ = function(startTarget, endTarget, startInsideMargin, startOutsideMargin, endInsideMargin, endOutsideMargin, numberOfSections) {
  for(var possiblePositionings = [], targetRangeSize = endTarget - startTarget, totalInsideMargin = startInsideMargin + endInsideMargin, totalOutsideMargin = startOutsideMargin + endOutsideMargin, minSectionSize = Math.ceil(targetRangeSize / (1 - totalInsideMargin) / numberOfSections), maxSectionSize = Math.floor(targetRangeSize / (1 - totalOutsideMargin) / numberOfSections), sectionSize = minSectionSize;Infinity > sectionSize && sectionSize <= maxSectionSize;++sectionSize) {
    var resultRangeSize = sectionSize * numberOfSections, minStartPoint = Math.ceil(Math.max(startTarget - startOutsideMargin * resultRangeSize, endTarget - (1 - endInsideMargin) * resultRangeSize)), maxStartPoint = Math.floor(Math.min(startTarget - startInsideMargin * resultRangeSize, endTarget - (1 - endOutsideMargin) * resultRangeSize)), offsetStep = 1;
    0 < endTarget && 0 > startTarget ? 1 < numberOfSections && (minStartPoint = Math.ceil(minStartPoint / sectionSize) * sectionSize, maxStartPoint = Math.floor(maxStartPoint / sectionSize) * sectionSize, offsetStep = sectionSize) : 0 <= startTarget ? minStartPoint = Math.max(0, minStartPoint) : maxStartPoint = Math.min(-resultRangeSize, maxStartPoint);
    0 <= maxStartPoint - minStartPoint && possiblePositionings.push({sectionSize:sectionSize, offsetStep:offsetStep, minStartPoint:minStartPoint, maxStartPoint:maxStartPoint})
  }
  return possiblePositionings
};
gviz.canviz.tickutil.scoreNumber = function(number) {
  if(0 == number) {
    return 0
  }
  0 > number && (number = -number);
  if(0.5 > number) {
    return 0
  }
  for(;0 == Math.round(number % 10);) {
    number = Math.round(number / 10)
  }
  return 1 == number || 5 == number ? 0.5 : Math.floor(Math.log(number) / Math.log(10)) + 1
};
// Input 262
gviz.canviz.NumericValueScale = function() {
};
goog.inherits(gviz.canviz.NumericValueScale, gviz.canviz.ValueScale);
gviz.canviz.NumericValueScale.DEFAULT_NUMBER_OF_SECTIONS = 4;
gviz.canviz.NumericValueScale.DEFAULT_TIGHTNESS_OF_TICKS_WEIGHT = 10;
gviz.canviz.NumericValueScale.DEFAULT_ROUNDNESS_OF_INNER_TICK_WEIGHT = 2;
gviz.canviz.NumericValueScale.DEFAULT_ROUNDNESS_OF_OUTER_TICK_WEIGHT = 5;
gviz.canviz.NumericValueScale.DEFAULT_ROUNDNESS_OF_TICK_SIZE_WEIGHT = 1;
gviz.canviz.NumericValueScale.prototype.getDefaultNumberOfSections = function() {
  return gviz.canviz.NumericValueScale.DEFAULT_NUMBER_OF_SECTIONS
};
gviz.canviz.NumericValueScale.prototype.init = function(options, optionsPath, numberOfTicks) {
  gviz.canviz.NumericValueScale.superClass_.init.call(this, options, optionsPath, numberOfTicks);
  this.formatter_ = null;
  this.scaleFactor_ = options.inferOptionalNumberValue(this.getAbsoluteOptionsPath("formatOptions.scaleFactor"));
  this.tickScoringWeights = options.inferValue(this.getAbsoluteOptionsPath("tickScoringWeights"), [gviz.canviz.NumericValueScale.DEFAULT_TIGHTNESS_OF_TICKS_WEIGHT, gviz.canviz.NumericValueScale.DEFAULT_ROUNDNESS_OF_INNER_TICK_WEIGHT, gviz.canviz.NumericValueScale.DEFAULT_ROUNDNESS_OF_OUTER_TICK_WEIGHT, gviz.canviz.NumericValueScale.DEFAULT_ROUNDNESS_OF_TICK_SIZE_WEIGHT])
};
gviz.canviz.NumericValueScale.prototype.calibrateInternal = function(minValue, maxValue, shouldExpand) {
  var scoringFunction, startInsideMargin, startOutsideMargin, endInsideMargin, endOutsideMargin;
  shouldExpand ? (scoringFunction = goog.bind(gviz.canviz.NumericValueScale.scoringFunction_, null, this.tickScoringWeights, this.numberOfSections, minValue, maxValue), startInsideMargin = -1E-4, startOutsideMargin = 1 / Math.max(this.numberOfSections, 3), endInsideMargin = startInsideMargin, endOutsideMargin = startOutsideMargin) : (startInsideMargin = -1 / Math.max(this.numberOfSections, 3), startOutsideMargin = 0, endInsideMargin = startInsideMargin, endOutsideMargin = startOutsideMargin, this.tickScoringWeights[0] *= 
  -1, scoringFunction = goog.bind(gviz.canviz.NumericValueScale.scoringFunction_, null, this.tickScoringWeights, this.numberOfSections, this.numericMinValue, this.numericMaxValue));
  var tickPositioning = gviz.canviz.tickutil.positionTicksAroundRange(minValue, maxValue, startInsideMargin, startOutsideMargin, endInsideMargin, endOutsideMargin, this.numberOfSections, scoringFunction), tickSize = (tickPositioning.endPoint - tickPositioning.startPoint) / this.numberOfSections;
  this.ticks = [];
  for(var i = 0;i <= this.numberOfSections;++i) {
    this.ticks.push(tickPositioning.startPoint + tickSize * i)
  }
  this.numericMinValue = Math.min(tickPositioning.startPoint, minValue);
  this.numericMaxValue = Math.max(tickPositioning.endPoint, maxValue);
  var scaledTickSize = this.scaleFactor_ ? tickSize / this.scaleFactor_ : tickSize;
  this.decimalPoints_ = gviz.canviz.util.countRequiredDecimalPrecision(scaledTickSize);
  var formatterOptions = {pattern:this.format, fractionDigits:this.format ? null : this.decimalPoints_, scaleFactor:this.scaleFactor_};
  this.formatter_ = new google.visualization.NumberFormat(formatterOptions)
};
gviz.canviz.NumericValueScale.scoringFunction_ = function(tickScoringWeights, numberOfSections, minValue, maxValue, startPoint, endPoint, unit) {
  for(var score = tickScoringWeights[0] * (maxValue - minValue) / (unit * (endPoint - startPoint)), tickSize = (endPoint - startPoint) / numberOfSections, numberScorer = function(n) {
    return Math.pow(gviz.canviz.tickutil.scoreNumber(n), 1.2)
  }, i = 1;i < numberOfSections;++i) {
    score -= tickScoringWeights[1] * numberScorer(startPoint + i * tickSize)
  }
  score -= tickScoringWeights[2] * numberScorer(startPoint);
  score -= tickScoringWeights[2] * numberScorer(endPoint);
  return score -= tickScoringWeights[3] * numberScorer(tickSize)
};
gviz.canviz.NumericValueScale.prototype.inferValue = function(options, path) {
  return options.inferOptionalNumberValue(path)
};
gviz.canviz.NumericValueScale.prototype.valueToStringInternal = function(value) {
  return this.formatter_.formatValue(value)
};
gviz.canviz.NumericValueScale.prototype.valueToNumberInternal = function(value) {
  return gviz.canviz.valuenumberconverter.numberToNumber(value)
};
gviz.canviz.NumericValueScale.prototype.numberToValueInternal = function(value) {
  return gviz.canviz.valuenumberconverter.numberFromNumber(value)
};
gviz.canviz.NumericValueScale.prototype.gapValueToNumberInternal = function(gapValue) {
  return gapValue
};
gviz.canviz.NumericValueScale.prototype.getDefaultBaseline = function() {
  return 0
};
gviz.canviz.NumericValueScale.buildNumericValueScale = function() {
  return new gviz.canviz.NumericValueScale
};
// Input 263
gviz.canviz.ScaleRepository = function() {
  this.repository_ = {}
};
gviz.canviz.ScaleRepository.instance_ = null;
gviz.canviz.ScaleRepository.instance = function() {
  if(gviz.canviz.ScaleRepository.instance_) {
    return gviz.canviz.ScaleRepository.instance_
  }
  gviz.canviz.ScaleRepository.instance_ = new gviz.canviz.ScaleRepository;
  return gviz.canviz.ScaleRepository.instance_
};
gviz.canviz.ScaleRepository.prototype.getScale = function(datatype) {
  var ctor = this.repository_[datatype];
  if(ctor) {
    var scale = ctor.apply(null, []);
    return scale
  }
  return null
};
gviz.canviz.ScaleRepository.prototype.registerScale = function(datatype, ctor) {
  this.repository_[datatype] = ctor
};
// Input 264
gviz.canviz.TimeofdayValueScale = function(roundDurationTable) {
  this.roundDurationTable_ = roundDurationTable
};
goog.inherits(gviz.canviz.TimeofdayValueScale, gviz.canviz.ValueScale);
gviz.canviz.TimeofdayValueScale.DEFAULT_TIGHTNESS_OF_TICKS_WEIGHT = 10;
gviz.canviz.TimeofdayValueScale.DEFAULT_ROUNDNESS_OF_TICKS_WEIGHT = 2;
gviz.canviz.TimeofdayValueScale.DEFAULT_ROUNDNESS_OF_TICK_SIZE_WEIGHT = 1;
gviz.canviz.TimeofdayValueScale.prototype.init = function(options, optionsPath, numberOfTicks) {
  gviz.canviz.TimeofdayValueScale.superClass_.init.call(this, options, optionsPath, numberOfTicks);
  this.tickScoringWeights = options.inferValue(this.getAbsoluteOptionsPath("tickScoringWeights"), [gviz.canviz.TimeofdayValueScale.DEFAULT_TIGHTNESS_OF_TICKS_WEIGHT, gviz.canviz.TimeofdayValueScale.DEFAULT_ROUNDNESS_OF_TICKS_WEIGHT, gviz.canviz.TimeofdayValueScale.DEFAULT_ROUNDNESS_OF_TICK_SIZE_WEIGHT])
};
gviz.canviz.TimeofdayValueScale.prototype.inferValue = function(options, path) {
  return options.inferOptionalTimeOfDayValue(path)
};
gviz.canviz.TimeofdayValueScale.prototype.compareValues = function(value1, value2) {
  var millis1 = gviz.canviz.valuenumberconverter.timeOfDayToNumber(value1), millis2 = gviz.canviz.valuenumberconverter.timeOfDayToNumber(value2);
  return millis1 < millis2 ? -1 : millis1 > millis2 ? 1 : 0
};
gviz.canviz.TimeofdayValueScale.prototype.valueToNumberInternal = function(v) {
  return gviz.canviz.valuenumberconverter.timeOfDayToNumber(v)
};
gviz.canviz.TimeofdayValueScale.prototype.numberToValueInternal = function(v) {
  return gviz.canviz.valuenumberconverter.timeOfDayFromNumber(v)
};
gviz.canviz.TimeofdayValueScale.prototype.gapValueToNumberInternal = function(gapValue) {
  return gapValue
};
gviz.canviz.TimeofdayValueScale.prototype.getDefaultBaseline = function() {
  return gviz.canviz.timeutil.millisAsTimeofday(0)
};
gviz.canviz.TimeofdayValueScale.prototype.calibrateInternal = function(minValue, maxValue, shouldExpand) {
  if(-1 == this.numberOfSections) {
    var unroundedTickSize = (maxValue - minValue) / 6, unit = gviz.canviz.timeutil.roundMillisAccordingToTable(unroundedTickSize, this.roundDurationTable_, 0), unitMillis = gviz.canviz.timeutil.durationAsMillis(unit), tickSize = Math.max(1, Math.round(unroundedTickSize / unitMillis)) * unitMillis;
    shouldExpand ? (minValue = Math.floor(minValue / tickSize) * tickSize, maxValue = Math.ceil(maxValue / tickSize) * tickSize) : (minValue = Math.ceil(minValue / tickSize) * tickSize, maxValue = Math.floor(maxValue / tickSize) * tickSize);
    this.ticks = [];
    for(var value = minValue;value < maxValue;) {
      this.ticks.push(value), value += tickSize
    }
    this.ticks.push(value);
    shouldExpand && (this.numericMinValue = minValue, this.numericMaxValue = maxValue);
    this.granularity_ = gviz.canviz.timeutil.durationGranularity(unit)
  }else {
    this.fixedNumberOfSectionsAlgorithm_(minValue, maxValue, shouldExpand)
  }
};
gviz.canviz.TimeofdayValueScale.prototype.fixedNumberOfSectionsAlgorithm_ = function(minValue, maxValue, shouldExpand) {
  var scoringFunction, minStartMargin, maxStartMargin, minEndMargin, maxEndMargin;
  shouldExpand ? (scoringFunction = goog.bind(gviz.canviz.TimeofdayValueScale.scoringFunction_, null, this.tickScoringWeights, this.numberOfSections, minValue, maxValue), minStartMargin = -1E-4, maxStartMargin = 1 / Math.max(this.numberOfSections, 3), minEndMargin = minStartMargin, maxEndMargin = maxStartMargin) : (minStartMargin = -1 / Math.max(this.numberOfSections, 3), maxStartMargin = 0, minEndMargin = minStartMargin, maxEndMargin = maxStartMargin, this.tickScoringWeights[0] *= -1, scoringFunction = 
  goog.bind(gviz.canviz.TimeofdayValueScale.scoringFunction_, null, this.tickScoringWeights, this.numberOfSections, this.numericMinValue, this.numericMaxValue));
  var tickPositioning = gviz.canviz.tickutil.positionTicksAroundRange(minValue, maxValue, minStartMargin, maxStartMargin, minEndMargin, maxEndMargin, this.numberOfSections, scoringFunction), tickSize = (tickPositioning.endPoint - tickPositioning.startPoint) / this.numberOfSections;
  this.ticks = [];
  for(var i = 0;i <= this.numberOfSections;++i) {
    this.ticks.push(tickPositioning.startPoint + tickSize * i)
  }
  this.numericMinValue = Math.min(tickPositioning.startPoint, minValue);
  this.numericMaxValue = Math.max(tickPositioning.endPoint, maxValue);
  this.granularity_ = 0 == tickSize - Math.floor(tickSize) ? 1 : 0
};
gviz.canviz.TimeofdayValueScale.scoringFunction_ = function(tickScoringWeights, numberOfSections, minValue, maxValue, startPoint, endPoint) {
  for(var score = tickScoringWeights[0] * (maxValue - minValue) / (endPoint - startPoint), tickSize = (endPoint - startPoint) / numberOfSections, i = 0;i <= numberOfSections;++i) {
    score -= tickScoringWeights[1] * gviz.canviz.tickutil.scoreNumber(startPoint + i * tickSize)
  }
  return score -= tickScoringWeights[2] * gviz.canviz.tickutil.scoreNumber(tickSize)
};
gviz.canviz.TimeofdayValueScale.prototype.valueToStringInternal = function(value) {
  var format = this.format ? this.format : 1 >= this.granularity_ ? "HH:mm:ss" : "HH:mm", formatter = new google.visualization.DateFormat({pattern:format}), dateValue = new Date(1970, 0, 1, value[0], value[1], value[2], 0);
  return formatter.formatValue(dateValue)
};
gviz.canviz.TimeofdayValueScale.niceDurationTable_ = [[0, 1, 0, 0], [0, 2, 0, 0], [0, 5, 0, 0], [0, 10, 0, 0], [0, 20, 0, 0], [0, 30, 0, 0], [0, 0, 1, 0], [0, 0, 5, 0], [0, 0, 10, 0], [0, 0, 15, 0], [0, 0, 30, 0], [0, 0, 0, 1], [0, 0, 0, 2], [0, 0, 0, 3], [0, 0, 0, 4], [0, 0, 0, 6], [0, 0, 0, 12]];
gviz.canviz.TimeofdayValueScale.buildTimeofdayValueScale = function() {
  return new gviz.canviz.TimeofdayValueScale(gviz.canviz.TimeofdayValueScale.niceDurationTable_)
};
// Input 265
gviz.canviz.scaleinit = {};
gviz.canviz.ScaleRepository.instance().registerScale("timeofday", gviz.canviz.TimeofdayValueScale.buildTimeofdayValueScale);
gviz.canviz.ScaleRepository.instance().registerScale("date", gviz.canviz.DatetimeValueScale.buildDateValueScale);
gviz.canviz.ScaleRepository.instance().registerScale("datetime", gviz.canviz.DatetimeValueScale.buildDateTimeValueScale);
gviz.canviz.ScaleRepository.instance().registerScale("number", gviz.canviz.NumericValueScale.buildNumericValueScale);
// Input 266
gviz.canviz.ColumnRole = {ANNOTATION:"annotation", ANNOTATION_TEXT:"annotationText", CERTAINTY:"certainty", DATA:"data", DOMAIN:"domain", EMPHASIS:"emphasis", GAP:"gap", INTERVAL:"interval", SCOPE:"scope", TOOLTIP:"tooltip", DIFF_OLD_DATA:"old-data", STYLE:"style"};
// Input 267
// Input 268
gviz.canviz.ChartState = function(opt_state) {
  this.selected = new gviz.util.Selection;
  this.focused = {serie:null, datum:null, category:null};
  this.annotations = {focused:null, expanded:null};
  this.legend = {focused:{entry:null}, currentPageIndex:null};
  this.actionsMenu = {focused:{entryID:null}};
  this.cursor = {position:null, positionAtLastClick:null};
  this.overlayBox = this.nextFrameOptions = null;
  opt_state && (this.selected.setSelection(opt_state.selected), opt_state.focused && (this.focused = gviz.canviz.ChartState.compact_(this.focused, opt_state.focused)), opt_state.annotations && (this.annotations = gviz.canviz.ChartState.compact_(this.annotations, opt_state.annotations)), opt_state.legend && (this.legend = gviz.canviz.ChartState.compact_(this.legend, opt_state.legend)), opt_state.actionsMenu && (this.actionsMenu = gviz.canviz.ChartState.compact_(this.actionsMenu, opt_state.actionsMenu)), 
  opt_state.nextFrameOptions && (this.nextFrameOptions = gviz.canviz.ChartState.compact_(this.nextFrameOptions, opt_state.nextFrameOptions)), opt_state.overlayBox && gviz.canviz.ChartState.compact_(this.overlayBox, opt_state.overlayBox))
};
gviz.canviz.ChartState.prototype.clone = function() {
  var cloned = new gviz.canviz.ChartState;
  cloned.selected = this.selected.clone();
  cloned.focused = gviz.object.unsafeClone(this.focused);
  cloned.annotations = gviz.object.unsafeClone(this.annotations);
  cloned.legend = gviz.object.unsafeClone(this.legend);
  cloned.actionsMenu = gviz.object.unsafeClone(this.actionsMenu);
  cloned.cursor = gviz.object.unsafeClone(this.cursor);
  cloned.nextFrameOptions = gviz.object.unsafeClone(this.nextFrameOptions);
  cloned.overlayBox = gviz.object.unsafeClone(this.overlayBox);
  return cloned
};
gviz.canviz.ChartState.prototype.equals = function(other, opt_ignoreCursor) {
  var ignoreCursor = goog.isDef(opt_ignoreCursor) ? opt_ignoreCursor : !1;
  return this.selected.equals(other.selected) && gviz.object.unsafeEquals(this.focused, other.focused) && gviz.object.unsafeEquals(this.annotations, other.annotations) && gviz.object.unsafeEquals(this.legend, other.legend) && gviz.object.unsafeEquals(this.actionsMenu, other.actionsMenu) && (ignoreCursor || gviz.object.unsafeEquals(this.cursor, other.cursor)) && gviz.object.unsafeEquals(this.nextFrameOptions, other.nextFrameOptions) && gviz.object.unsafeEquals(this.overlayBox, other.overlayBox)
};
gviz.canviz.ChartState.compact_ = function(layer1, layer2) {
  var layeredObj = new gviz.util.LayeredObject(2);
  layeredObj.setLayer(0, layer1);
  layeredObj.setLayer(1, layer2);
  return layeredObj.compact()
};
// Input 269
gviz.ai = {};
gviz.ai.common = {};
gviz.ai.common.Options = {EXPLORER:"explorer", MAX_ZOOM:"maxZoomScale", MIN_ZOOM:"minZoomScale", ZOOM_DELTA:"zoomDelta", KEEP_IN_BOUNDS:"keepInBounds", ACTIONS:"actions", DRAG_TO_PAN:"dragToPan", DRAG_TO_ZOOM:"dragToZoom", RIGHT_CLICK_TO_RESET:"rightClickToReset", SCROLL_TO_ZOOM:"scrollToZoom"};
gviz.ai.common.Defaults = {MAX_ZOOM:4, MIN_ZOOM:0.25, ZOOM_DELTA:1.5, KEEP_IN_BOUNDS:!1, OVERLAY_BOX_COLOR:"blue", OVERLAY_BOX_OPACITY:0.2};
gviz.ai.common.isInChart = function(event, bounds) {
  return goog.math.clamp(event.x, bounds.left, bounds.left + bounds.width) === event.x && goog.math.clamp(event.y, bounds.top, bounds.top + bounds.height) === event.y ? !0 : !1
};
// Input 270
gviz.ai.EnabledAxes = function(horizontal, vertical) {
  this.horizontal = horizontal;
  this.vertical = vertical
};
// Input 271
gviz.ai.TickCache = function(hTicks, vTicks, hDist, vDist) {
  this.hTicks = hTicks;
  this.vTicks = vTicks;
  this.hDist = hDist;
  this.vDist = vDist;
  this.hTickMax = Math.max.apply(null, hTicks);
  this.hTickMin = Math.min.apply(null, hTicks);
  this.vTickMax = Math.max.apply(null, vTicks);
  this.vTickMin = Math.min.apply(null, vTicks)
};
// Input 272
gviz.ai.Viewport = function(minX, maxX, minY, maxY, maxZoomScale, minZoomScale, zoomDelta, keepInBounds) {
  this.minX = minX;
  this.minY = minY;
  this.maxX = maxX;
  this.maxY = maxY;
  this.origX = minX;
  this.origY = minY;
  this.origWidth = maxX - minX;
  this.origHeight = maxY - minY;
  this.scale = 1;
  this.maxZoomScale = maxZoomScale;
  this.minZoomScale = minZoomScale;
  this.zoomDelta = zoomDelta;
  this.keepInBounds = keepInBounds
};
// Input 273
gviz.ai.BaseExplorerType = function(chartState, getLayout, enabledAxes) {
  this.enabledAxes_ = enabledAxes;
  this.chartState_ = chartState;
  this.getLayout_ = getLayout;
  this.ticks_ = this.viewport_ = null
};
gviz.ai.BaseExplorerType.prototype.getViewport = function() {
  return this.viewport_
};
gviz.ai.BaseExplorerType.prototype.getTicks = function() {
  return this.ticks_
};
gviz.ai.BaseExplorerType.prototype.getLayout = function() {
  return this.getLayout_()
};
gviz.ai.BaseExplorerType.prototype.getEnabledAxes = function() {
  return this.enabledAxes_
};
gviz.ai.BaseExplorerType.prototype.getState = function() {
  return this.chartState_
};
gviz.ai.BaseExplorerType.prototype.handleReady = function(viewport, ticks) {
  this.viewport_ = viewport;
  this.ticks_ = ticks
};
gviz.ai.BaseExplorerType.prototype.handleDragStart = function() {
};
gviz.ai.BaseExplorerType.prototype.handleDrag = function() {
};
gviz.ai.BaseExplorerType.prototype.handleDragEnd = function() {
};
gviz.ai.BaseExplorerType.prototype.handleScroll = function() {
};
gviz.ai.BaseExplorerType.prototype.handleRightClick = function() {
};
gviz.ai.BaseExplorerType.prototype.handleMouseDown = function() {
};
gviz.ai.BaseExplorerType.prototype.updateOptions = function() {
  this.chartState_.nextFrameOptions = {hAxis:{ticks:this.ticks_.hTicks, viewWindowMode:gviz.canviz.Options.ViewWindowMode.EXPLICIT, viewWindow:{min:this.viewport_.minX, max:this.viewport_.maxX}}, vAxis:{ticks:this.ticks_.vTicks, viewWindowMode:gviz.canviz.Options.ViewWindowMode.EXPLICIT, viewWindow:{min:this.viewport_.minY, max:this.viewport_.maxY}}}
};
// Input 274
gviz.ai.DragToPan = function(chartState, getLayout, enabledAxis) {
  gviz.ai.BaseExplorerType.call(this, chartState, getLayout, enabledAxis);
  this.event_ = null
};
goog.inherits(gviz.ai.DragToPan, gviz.ai.BaseExplorerType);
gviz.ai.DragToPan.prototype.handleDragStart = function(event) {
  var chartBounds = this.getLayout().getChartAreaBoundingBox();
  gviz.ai.common.isInChart(event, chartBounds) && (this.event_ = {x:event.x, y:event.y, dx:0, dy:0})
};
gviz.ai.DragToPan.prototype.handleDrag = function(event) {
  if(this.event_) {
    var nextX = event.x, nextY = event.y;
    this.event_ = {dx:nextX - this.event_.x, dy:nextY - this.event_.y, x:nextX, y:nextY};
    this.updateBounds()
  }
};
gviz.ai.DragToPan.prototype.handleDragEnd = function() {
  this.event_ = null
};
gviz.ai.DragToPan.prototype.handleMouseDown = function(event, preventDefault) {
  var chartBounds = this.getLayout().getChartAreaBoundingBox();
  gviz.ai.common.isInChart(event, chartBounds) && preventDefault()
};
gviz.ai.DragToPan.prototype.updateBounds = function() {
  var viewport = this.getViewport(), ticks = this.getTicks(), enabledAxes = this.getEnabledAxes(), layout = this.getLayout();
  if(enabledAxes.horizontal) {
    var nextx = this.event_.x - this.event_.dx, dx = layout.getHAxisValue(this.event_.x) - layout.getHAxisValue(nextx), minx = viewport.minX - dx, maxx = viewport.maxX - dx, minBound = Math.max(minx, viewport.origX), maxBound = Math.min(maxx, viewport.origX + viewport.origWidth);
    if(viewport.keepInBounds && (minBound === minx || 0 > dx) && (maxBound === maxx || 0 < dx) || !viewport.keepInBounds) {
      viewport.minX = minx;
      viewport.maxX = maxx;
      var hTickMax = ticks.hTickMax, hTickMin = ticks.hTickMin, hAxisMax = viewport.maxX, hAxisMin = viewport.minX;
      if(isFinite(hTickMax)) {
        for(;hTickMax < hAxisMax;) {
          hTickMax += ticks.hDist, ticks.hTicks.push(hTickMax), ticks.hTickMax = hTickMax
        }
        for(;hTickMin > hAxisMin;) {
          hTickMin -= ticks.hDist, ticks.hTicks.push(hTickMin), ticks.hTickMin = hTickMin
        }
      }
    }
  }
  if(enabledAxes.vertical) {
    var nexty = this.event_.y - this.event_.dy, dy = layout.getVAxisValue(this.event_.y) - layout.getVAxisValue(nexty), miny = viewport.minY - dy, maxy = viewport.maxY - dy, minBound = Math.max(miny, viewport.origY), maxBound = Math.min(maxy, viewport.origY + viewport.origHeight);
    if(viewport.keepInBounds && (minBound === miny || 0 > dy) && (maxBound === maxy || 0 < dy) || !viewport.keepInBounds) {
      viewport.minY = miny;
      viewport.maxY = maxy;
      var vTickMax = ticks.vTickMax, vTickMin = ticks.vTickMin, vAxisMax = viewport.maxY, vAxisMin = viewport.minY;
      if(isFinite(vTickMax)) {
        for(;vTickMax < vAxisMax;) {
          vTickMax += ticks.vDist, ticks.vTicks.push(vTickMax), ticks.vTickMax = vTickMax
        }
        for(;vTickMin > vAxisMin;) {
          vTickMin -= ticks.vDist, ticks.vTicks.push(vTickMin), ticks.vTickMin = vTickMin
        }
      }
    }
  }
  this.updateOptions()
};
gviz.ai.DragToPan.isEnabled = function(options) {
  var actions = options.inferValue(gviz.ai.common.Options.EXPLORER + "." + gviz.ai.common.Options.ACTIONS);
  return!goog.isDefAndNotNull(actions) || goog.isArray(actions) && goog.array.contains(actions, gviz.ai.common.Options.DRAG_TO_PAN) ? !0 : !1
};
// Input 275
gviz.ai.DragToZoom = function(chartState, getLayout, enabledAxis) {
  gviz.ai.BaseExplorerType.call(this, chartState, getLayout, enabledAxis);
  this.event_ = null
};
goog.inherits(gviz.ai.DragToZoom, gviz.ai.BaseExplorerType);
gviz.ai.DragToZoom.prototype.handleDragStart = function(event) {
  var chartBounds = this.getLayout().getChartAreaBoundingBox();
  gviz.ai.common.isInChart(event, chartBounds) && (this.event_ = {startX:event.x, startY:event.y, endX:0, endY:0})
};
gviz.ai.DragToZoom.prototype.handleDrag = function(event) {
  if(this.event_) {
    var chartContainer = this.getLayout().getChartAreaBoundingBox(), enabledAxis = this.getEnabledAxes();
    this.pullToBounds(event, chartContainer);
    this.event_.endX = event.x;
    this.event_.endY = event.y;
    if(enabledAxis.horizontal) {
      var left = Math.min(this.event_.startX, this.event_.endX), width = Math.abs(this.event_.startX - this.event_.endX)
    }else {
      left = chartContainer.left, width = chartContainer.width
    }
    if(enabledAxis.vertical) {
      var top = Math.min(this.event_.startY, this.event_.endY), height = Math.abs(this.event_.startY - this.event_.endY)
    }else {
      top = chartContainer.top, height = chartContainer.height
    }
    this.getState().overlayBox = {left:left, top:top, width:width, height:height, color:gviz.ai.common.Defaults.OVERLAY_BOX_COLOR, opacity:gviz.ai.common.Defaults.OVERLAY_BOX_OPACITY}
  }
};
gviz.ai.DragToZoom.prototype.handleDragEnd = function() {
  this.event_ && (this.updateBounds(), this.event_ = null)
};
gviz.ai.DragToZoom.prototype.updateBounds = function() {
  var enabledAxes = this.getEnabledAxes(), viewport = this.getViewport(), layout = this.getLayout(), overlayBox = this.getState().overlayBox, startX = layout.getHAxisValue(overlayBox.left), endX = layout.getHAxisValue(overlayBox.left + overlayBox.width), startY = layout.getVAxisValue(overlayBox.top), endY = layout.getVAxisValue(overlayBox.top + overlayBox.height);
  if(startX !== endX && startY !== endY) {
    var minWidth = viewport.origWidth * viewport.minZoomScale;
    if(enabledAxes.horizontal) {
      var minx = Math.min(startX, endX), maxx = Math.max(startX, endX);
      if(maxx - minx < minWidth) {
        var center = (minx + maxx) / 2, minx = center - minWidth / 2, maxx = center + minWidth / 2
      }
      viewport.minX = minx;
      viewport.maxX = maxx
    }
    var minHeight = viewport.origHeight * viewport.minZoomScale;
    if(enabledAxes.vertical) {
      var miny = Math.min(startY, endY), maxy = Math.max(startY, endY);
      maxy - miny < minHeight && (center = (miny + maxy) / 2, miny = center - minHeight / 2, maxy = center + minHeight / 2);
      viewport.minY = miny;
      viewport.maxY = maxy
    }
    var ticks = this.getTicks();
    ticks.hTicks = null;
    ticks.vTicks = null;
    this.updateOptions()
  }
};
gviz.ai.DragToZoom.prototype.pullToBounds = function(cursor, chartBounds) {
  cursor.x = goog.math.clamp(cursor.x, chartBounds.left, chartBounds.left + chartBounds.width);
  cursor.y = goog.math.clamp(cursor.y, chartBounds.top, chartBounds.top + chartBounds.height)
};
gviz.ai.DragToZoom.isEnabled = function(options) {
  var actions = options.inferValue(gviz.ai.common.Options.EXPLORER + "." + gviz.ai.common.Options.ACTIONS);
  return goog.isArray(actions) && goog.array.contains(actions, gviz.ai.common.Options.DRAG_TO_ZOOM) ? !0 : !1
};
// Input 276
gviz.ai.RightClickToReset = function(chartState, getLayout, enabledAxis) {
  gviz.ai.BaseExplorerType.call(this, chartState, getLayout, enabledAxis)
};
goog.inherits(gviz.ai.RightClickToReset, gviz.ai.BaseExplorerType);
gviz.ai.RightClickToReset.prototype.handleRightClick = function() {
  var viewport = this.getViewport();
  viewport.scale = 1;
  viewport.minX = viewport.origX;
  viewport.maxX = viewport.origX + viewport.origWidth;
  viewport.minY = viewport.origY;
  viewport.maxY = viewport.origY + viewport.origHeight;
  this.updateOptions()
};
gviz.ai.RightClickToReset.isEnabled = function(options) {
  var actions = options.inferValue(gviz.ai.common.Options.EXPLORER + "." + gviz.ai.common.Options.ACTIONS);
  return!goog.isDefAndNotNull(actions) || goog.isArray(actions) && goog.array.contains(actions, gviz.ai.common.Options.RIGHT_CLICK_TO_RESET) ? !0 : !1
};
// Input 277
gviz.ai.ScrollToZoom = function(chartState, getLayout, enabledAxis) {
  gviz.ai.BaseExplorerType.call(this, chartState, getLayout, enabledAxis)
};
goog.inherits(gviz.ai.ScrollToZoom, gviz.ai.BaseExplorerType);
gviz.ai.ScrollToZoom.prototype.handleScroll = function(event, preventDefault) {
  var enabledAxes = this.getEnabledAxes(), chartBounds = this.getLayout().getChartAreaBoundingBox();
  if(gviz.ai.common.isInChart(event, chartBounds)) {
    preventDefault();
    var viewport = this.getViewport();
    if(0 > event.wheelDelta) {
      if(viewport.scale >= viewport.maxZoomScale) {
        return
      }
      viewport.scale *= viewport.zoomDelta
    }else {
      if(viewport.scale <= viewport.minZoomScale) {
        return
      }
      viewport.scale /= viewport.zoomDelta
    }
    if(enabledAxes.horizontal) {
      var hMidpoint = (viewport.maxX + viewport.minX) / 2, hDistFromMid = viewport.origWidth * viewport.scale / 2;
      viewport.minX = hMidpoint - hDistFromMid;
      viewport.maxX = hMidpoint + hDistFromMid
    }
    if(enabledAxes.vertical) {
      var vMidpoint = (viewport.maxY + viewport.minY) / 2, vDistFromMid = viewport.origHeight * viewport.scale / 2;
      viewport.minY = vMidpoint - vDistFromMid;
      viewport.maxY = vMidpoint + vDistFromMid
    }
    this.updateOptions()
  }
};
gviz.ai.ScrollToZoom.isEnabled = function(options) {
  var actions = options.inferValue(gviz.ai.common.Options.EXPLORER + "." + gviz.ai.common.Options.ACTIONS);
  return!goog.isDefAndNotNull(actions) || goog.isArray(actions) && goog.array.contains(actions, gviz.ai.common.Options.SCROLL_TO_ZOOM) ? !0 : !1
};
// Input 278
gviz.ai.ExplorerTypes = [{isEnabled:gviz.ai.DragToPan.isEnabled, constructor:gviz.ai.DragToPan}, {isEnabled:gviz.ai.DragToZoom.isEnabled, constructor:gviz.ai.DragToZoom}, {isEnabled:gviz.ai.RightClickToReset.isEnabled, constructor:gviz.ai.RightClickToReset}, {isEnabled:gviz.ai.ScrollToZoom.isEnabled, constructor:gviz.ai.ScrollToZoom}];
// Input 279
gviz.ai.Explorer = function(chartState, getLayout, options, chartDefinition) {
  this.checkValidChart(options, chartDefinition);
  this.options_ = options;
  this.chartState_ = chartState;
  this.enabledAxes_ = null;
  this.getLayout_ = getLayout;
  this.chartDefinition_ = chartDefinition;
  this.ticks_ = this.viewport_ = null;
  this.enabledExplorerTypes_ = [];
  this.initializeDetails()
};
gviz.ai.Explorer.prototype.checkValidChart = function(options, chartDefinition) {
  if(options.inferValue("type") === gviz.canviz.Options.ChartType.PIE) {
    throw Error("Cannot make an explorer with a pie chart");
  }
  if(options.inferBooleanValue("hAxis.logScale") || options.inferBooleanValue("vAxis.logScale")) {
    throw Error("Cannot make an explorer with log scale");
  }
  if(1 < chartDefinition.hAxes.length || 1 < chartDefinition.vAxes.length) {
    throw Error("Cannot make an explorer with multiple series on the same axis.");
  }
};
gviz.ai.Explorer.prototype.handleReady = function() {
  var layout = this.getLayout_(), chartAreaBounds = layout.getChartAreaBoundingBox(), minx = layout.getHAxisValue(chartAreaBounds.left), maxx = layout.getHAxisValue(chartAreaBounds.left + chartAreaBounds.width), miny = layout.getVAxisValue(chartAreaBounds.top + chartAreaBounds.height), maxy = layout.getVAxisValue(chartAreaBounds.top), maxZoom = this.options_.inferNumberValue(gviz.ai.common.Options.EXPLORER + "." + gviz.ai.common.Options.MAX_ZOOM, gviz.ai.common.Defaults.MAX_ZOOM), minZoom = this.options_.inferNumberValue(gviz.ai.common.Options.EXPLORER + 
  "." + gviz.ai.common.Options.MIN_ZOOM, gviz.ai.common.Defaults.MIN_ZOOM), zoomDelta = this.options_.inferNumberValue(gviz.ai.common.Options.EXPLORER + "." + gviz.ai.common.Options.ZOOM_DELTA, gviz.ai.common.Defaults.ZOOM_DELTA), keepInBounds = this.options_.inferBooleanValue(gviz.ai.common.Options.EXPLORER + "." + gviz.ai.common.Options.KEEP_IN_BOUNDS, gviz.ai.common.Defaults.KEEP_IN_BOUNDS);
  this.viewport_ = new gviz.ai.Viewport(minx, maxx, miny, maxy, maxZoom, minZoom, zoomDelta, keepInBounds);
  var hTicks = gviz.canviz.chartdefinitionutil.getHAxisTicks(this.chartDefinition_), hDist = this.viewport_.maxX - this.viewport_.minX;
  1 < hTicks.length && (hDist = hTicks[1] - hTicks[0]);
  var vTicks = gviz.canviz.chartdefinitionutil.getVAxisTicks(this.chartDefinition_), vDist = this.viewport_.maxY - this.viewport_.minY;
  1 < vTicks.length && (vDist = vTicks[1] - vTicks[0]);
  this.ticks_ = new gviz.ai.TickCache(hTicks, vTicks, hDist, vDist);
  for(var type in this.enabledExplorerTypes_) {
    this.enabledExplorerTypes_[type].handleReady(this.viewport_, this.ticks_)
  }
};
gviz.ai.Explorer.prototype.initializeDetails = function() {
  var settings = this.options_.inferValue(gviz.ai.common.Options.EXPLORER), axis = settings.axis, horizontal = !0, vertical = !0;
  axis == gviz.canviz.Options.Orientation.HORIZONTAL ? vertical = !1 : axis == gviz.canviz.Options.Orientation.VERTICAL && (horizontal = !1);
  this.enabledAxes_ = new gviz.ai.EnabledAxes(horizontal, vertical);
  for(var types in gviz.ai.ExplorerTypes) {
    var curType = gviz.ai.ExplorerTypes[types];
    curType.isEnabled(this.options_) && this.enabledExplorerTypes_.push(new curType.constructor(this.chartState_, this.getLayout_, this.enabledAxes_))
  }
};
gviz.ai.Explorer.prototype.handleDragStart = function(event) {
  for(var type in this.enabledExplorerTypes_) {
    this.enabledExplorerTypes_[type].handleDragStart(event)
  }
};
gviz.ai.Explorer.prototype.handleDrag = function(event) {
  for(var type in this.enabledExplorerTypes_) {
    this.enabledExplorerTypes_[type].handleDrag(event)
  }
};
gviz.ai.Explorer.prototype.handleDragEnd = function(event) {
  for(var type in this.enabledExplorerTypes_) {
    this.enabledExplorerTypes_[type].handleDragEnd(event)
  }
};
gviz.ai.Explorer.prototype.handleRightClick = function(event) {
  for(var type in this.enabledExplorerTypes_) {
    this.enabledExplorerTypes_[type].handleRightClick(event)
  }
};
gviz.ai.Explorer.prototype.handleScroll = function(event, preventDefault) {
  for(var type in this.enabledExplorerTypes_) {
    this.enabledExplorerTypes_[type].handleScroll(event, preventDefault)
  }
};
gviz.ai.Explorer.prototype.handleMouseDown = function(event, preventDefault) {
  for(var type in this.enabledExplorerTypes_) {
    this.enabledExplorerTypes_[type].handleMouseDown(event, preventDefault)
  }
};
gviz.ai.Explorer.isEnabled = function(options) {
  return options.inferValue(gviz.ai.common.Options.EXPLORER) ? !0 : !1
};
// Input 280
gviz.ai.SubscriberTypes = [{isEnabled:gviz.ai.Explorer.isEnabled, constructor:gviz.ai.Explorer}];
// Input 281
gviz.ai.Publisher = function(options, state, getLayout, chartDefinition) {
  this.options_ = options;
  this.state_ = state;
  this.getLayout_ = getLayout;
  this.chartDefinition_ = chartDefinition;
  this.enabledFeatures_ = [];
  this.scheduler_ = null;
  this.initializeFeatures()
};
gviz.ai.Publisher.prototype.initializeFeatures = function() {
  this.options_ && goog.array.forEach(gviz.ai.SubscriberTypes, function(feature) {
    feature.isEnabled && feature.isEnabled(this.options_) && this.enabledFeatures_.push(new feature.constructor(this.state_, this.getLayout_, this.options_, this.chartDefinition_))
  }, this)
};
gviz.ai.Publisher.prototype.setScheduler = function(scheduler) {
  this.scheduler_ = scheduler
};
gviz.ai.Publisher.prototype.handleDragEnd = function(event) {
  goog.array.forEach(this.enabledFeatures_, function(feature) {
    feature.handleDragEnd(event)
  });
  this.scheduler_.updateCountdown(50)
};
gviz.ai.Publisher.prototype.handleDrag = function(event) {
  goog.array.forEach(this.enabledFeatures_, function(feature) {
    feature.handleDrag(event)
  });
  this.scheduler_.updateCountdown(15)
};
gviz.ai.Publisher.prototype.handleDragStart = function(event) {
  goog.array.forEach(this.enabledFeatures_, function(feature) {
    feature.handleDragStart(event)
  });
  this.scheduler_.updateCountdown(15)
};
gviz.ai.Publisher.prototype.handleScroll = function(event, preventDefault) {
  goog.array.forEach(this.enabledFeatures_, function(feature) {
    feature.handleScroll(event, preventDefault)
  });
  this.scheduler_.updateCountdown(15)
};
gviz.ai.Publisher.prototype.handleRightClick = function(event) {
  goog.array.forEach(this.enabledFeatures_, function(feature) {
    feature.handleRightClick(event)
  });
  this.scheduler_.updateCountdown(15)
};
gviz.ai.Publisher.prototype.handleMouseDown = function(event, preventDefault) {
  goog.array.forEach(this.enabledFeatures_, function(feature) {
    feature.handleMouseDown(event, preventDefault)
  })
};
gviz.ai.Publisher.prototype.handleReady = function() {
  goog.array.forEach(this.enabledFeatures_, function(feature) {
    feature.handleReady()
  })
};
// Input 282
// Input 283
gviz.canviz.ChartBuilder = function(overlayArea, renderer) {
  this.renderer = renderer;
  this.overlayArea = overlayArea;
  this.colorBarDrawingGroup = this.legendDrawingGroup = this.tooltipDrawingGroup_ = this.chartDefinition = this.groupIDToElementIDs_ = this.idToElementMapping_ = this.drawnRefreshLayer = null
};
gviz.canviz.ChartBuilder.prototype.drawChart = function(baseLayer, refreshLayer) {
  this.clearChart_();
  this.updateDefinition(baseLayer, refreshLayer);
  var chartDefinition = this.chartDefinition, chartCanvas = this.renderer.createCanvas(chartDefinition.width, chartDefinition.height);
  this.internalDrawChart(baseLayer, refreshLayer, chartCanvas)
};
gviz.canviz.ChartBuilder.prototype.redrawChart = function(baseLayer, refreshLayer) {
  this.idToElementMapping_ = {};
  this.groupIDToElementIDs_ = {};
  this.updateDefinition(baseLayer, refreshLayer);
  this.renderer.deleteContents();
  this.internalDrawChart(baseLayer, refreshLayer, this.renderer.getCanvas())
};
gviz.canviz.ChartBuilder.prototype.updateDefinition = function(baseLayer, refreshLayer) {
  var layeredChartDefinition = new gviz.util.LayeredObject(2);
  layeredChartDefinition.setLayer(0, baseLayer);
  layeredChartDefinition.setLayer(1, refreshLayer);
  this.chartDefinition = layeredChartDefinition.compact()
};
gviz.canviz.ChartBuilder.prototype.internalDrawChart = function(baseLayer, refreshLayer, chartCanvas) {
  this.registerElement(chartCanvas.getElement(), gviz.canviz.idutils.Token.CHART);
  var chartDefinition = this.chartDefinition, renderer = this.renderer, backgroundBrush = chartDefinition.backgroundBrush;
  backgroundBrush.isTransparent() || renderer.drawRect(0, 0, chartDefinition.width, chartDefinition.height, backgroundBrush, chartCanvas);
  var titlePosition = chartDefinition.titlePosition;
  if(titlePosition == gviz.canviz.Options.InOutPosition.OUTSIDE) {
    goog.asserts.assert(chartDefinition.title);
    var titleTextBlock = this.drawTextBlock(chartDefinition.title, chartCanvas);
    this.registerElement(titleTextBlock, gviz.canviz.idutils.Token.TITLE)
  }
  this.legendDrawingGroup = renderer.createGroup(!0);
  var legendDefinition = chartDefinition.legend;
  this.drawLegend(legendDefinition);
  legendDefinition && legendDefinition.position != gviz.canviz.Options.LegendPosition.INSIDE && (renderer.appendChild(chartCanvas, this.legendDrawingGroup), this.registerElement(this.legendDrawingGroup.getElement(), gviz.canviz.idutils.Token.LEGEND));
  this.colorBarDrawingGroup = renderer.createGroup(!0);
  var colorBarDefinition = chartDefinition.colorBar;
  this.drawColorBar(colorBarDefinition);
  colorBarDefinition && colorBarDefinition.position != gviz.canviz.Options.ColorBarPosition.INSIDE && (renderer.appendChild(chartCanvas, this.colorBarDrawingGroup), this.idToElementMapping_[gviz.canviz.idutils.Token.COLOR_BAR] = this.colorBarDrawingGroup.getElement());
  this.drawChartContent(chartDefinition, chartCanvas) || this.drawEmptyChart_(chartDefinition, chartCanvas);
  this.tooltipDrawingGroup_ = renderer.createGroup(!1);
  renderer.appendChild(chartCanvas, this.tooltipDrawingGroup_);
  this.drawnRefreshLayer = refreshLayer
};
gviz.canviz.ChartBuilder.prototype.refreshChart = function(baseLayer, refreshLayer) {
  var shortCircuitedPropsObj = {series:null, categories:null, legend:null, labeledLegend:null, colorBar:null, overlayBox:null}, shortCircuitedProps = goog.object.getKeys(shortCircuitedPropsObj), containsNoOtherProperties = gviz.canviz.util.containsNoOtherProperties;
  containsNoOtherProperties(refreshLayer, shortCircuitedProps) && containsNoOtherProperties(this.drawnRefreshLayer, shortCircuitedProps) ? (this.refreshLegend_(baseLayer, refreshLayer), this.refreshColorBar_(baseLayer, refreshLayer), this.refreshChartContent(baseLayer, refreshLayer), this.refreshOverlayBox_(baseLayer, refreshLayer), this.drawnRefreshLayer = refreshLayer) : this.drawChart(baseLayer, refreshLayer)
};
gviz.canviz.ChartBuilder.prototype.refreshLegend_ = function(baseLayer, refreshLayer) {
  if(!gviz.object.unsafeEquals(refreshLayer.legend, this.drawnRefreshLayer.legend)) {
    goog.asserts.assert(!refreshLayer.legend || !this.drawnRefreshLayer.legend || refreshLayer.legend.position == this.drawnRefreshLayer.legend.position, "Legend position should not be changed by the interactivity layer");
    this.renderer.removeChildren(this.legendDrawingGroup);
    var layeredLegendDefinition = new gviz.util.LayeredObject(2);
    layeredLegendDefinition.setLayer(0, baseLayer.legend || {});
    layeredLegendDefinition.setLayer(1, refreshLayer.legend || {});
    var legendDefinition = layeredLegendDefinition.compact();
    this.drawLegend(legendDefinition)
  }
};
gviz.canviz.ChartBuilder.prototype.refreshColorBar_ = function(baseLayer, refreshLayer) {
  if(!gviz.object.unsafeEquals(refreshLayer.colorBar, this.drawnRefreshLayer.colorBar)) {
    this.renderer.removeChildren(this.colorBarDrawingGroup);
    var layeredColorBarDefinition = new gviz.util.LayeredObject(2);
    layeredColorBarDefinition.setLayer(0, baseLayer.colorBar || {});
    layeredColorBarDefinition.setLayer(1, refreshLayer.colorBar || {});
    var colorBarDefinition = layeredColorBarDefinition.compact();
    this.drawColorBar(colorBarDefinition)
  }
};
gviz.canviz.ChartBuilder.prototype.refreshOverlayBox_ = function(baseLayer, refreshLayer) {
  gviz.object.unsafeEquals(refreshLayer.overlayBox, this.drawnRefreshLayer.overlayBox) || (this.deleteElementByID(gviz.canviz.idutils.Token.OVERLAY_BOX), this.drawOverlayBox(refreshLayer.overlayBox))
};
gviz.canviz.ChartBuilder.prototype.drawEmptyChart_ = function(chartDef, drawingGroup) {
  var msg = gviz.canviz.Messages.MSG_NO_DATA, fontName = chartDef.defaultFontName, fontSize = chartDef.defaultFontSize, textStyle = {color:"black", fontName:fontName, fontSize:fontSize, bold:!1, italic:!1, underline:!1};
  this.fitFontSize(msg, textStyle, chartDef.chartArea.width);
  var y = chartDef.chartArea.top + Math.round(chartDef.chartArea.height / 2);
  this.renderer.drawTextOnLine(msg, chartDef.chartArea.left, y, chartDef.chartArea.left + chartDef.chartArea.width, y, gviz.graphics.TextAlign.CENTER, gviz.graphics.TextAlign.CENTER, textStyle, drawingGroup)
};
gviz.canviz.ChartBuilder.prototype.drawLegend = function(legendDefinition) {
  if(legendDefinition) {
    var currentPage = legendDefinition.currentPage;
    if(currentPage) {
      var legendBoundingBox;
      if(legendDefinition.scrollItems) {
        legendBoundingBox = legendDefinition.area
      }else {
        var legendEntryBoundingBoxes = goog.array.map(currentPage, function(legendEntry) {
          return this.calcLegendEntryBoundingBox_(legendEntry)
        }, this);
        legendBoundingBox = gviz.util.calcBoundingBox(legendEntryBoundingBoxes)
      }
      if(legendBoundingBox) {
        var legendBoundingRect = goog.math.Rect.createFromBox(legendBoundingBox);
        goog.asserts.assert(this.legendDrawingGroup);
        this.renderer.drawRect(legendBoundingRect.left, legendBoundingRect.top, legendBoundingRect.width, legendBoundingRect.height, gviz.graphics.Brush.TRANSPARENT_BRUSH, this.legendDrawingGroup)
      }
      for(var i = 0;i < currentPage.length;i++) {
        this.drawLegendEntry_(currentPage[i])
      }
      this.drawLegendScrollItems_(legendDefinition.scrollItems)
    }
  }
};
gviz.canviz.ChartBuilder.prototype.calcLegendEntryBoundingBox_ = function(legendEntry) {
  var legendEntryItemsBoundingBoxes = [];
  if(legendEntry.textBlock) {
    var textBlockBoundingBox = gviz.canviz.TextBlockUtil.calcBoundingBox(legendEntry.textBlock);
    textBlockBoundingBox && legendEntryItemsBoundingBoxes.push(textBlockBoundingBox)
  }
  legendEntry.square && legendEntryItemsBoundingBoxes.push(legendEntry.square.coordinates.toBox());
  return gviz.util.calcBoundingBox(legendEntryItemsBoundingBoxes)
};
gviz.canviz.ChartBuilder.prototype.drawLegendEntry_ = function(legendEntry) {
  if(legendEntry.isVisible) {
    var legendEntryDrawingGroup = this.renderer.createGroup(!1), legendEntryID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.LEGEND_ENTRY, legendEntry.index]);
    this.registerElement(legendEntryDrawingGroup.getElement(), legendEntryID, gviz.canviz.idutils.Token.LEGEND_ENTRY);
    var legendEntryBoundingBox = this.calcLegendEntryBoundingBox_(legendEntry);
    if(legendEntryBoundingBox) {
      var legendEntryBoundingRect = goog.math.Rect.createFromBox(legendEntryBoundingBox);
      this.renderer.drawRect(legendEntryBoundingRect.left, legendEntryBoundingRect.top, legendEntryBoundingRect.width, legendEntryBoundingRect.height, gviz.graphics.Brush.TRANSPARENT_BRUSH, legendEntryDrawingGroup)
    }
    legendEntry.textBlock && this.drawTextBlock(legendEntry.textBlock, legendEntryDrawingGroup);
    legendEntry.square && this.renderer.drawRect(legendEntry.square.coordinates.left, legendEntry.square.coordinates.top, legendEntry.square.coordinates.width, legendEntry.square.coordinates.height, legendEntry.square.brush, legendEntryDrawingGroup);
    var removeSerieButtonElement = null;
    if(legendEntry.removeSerieButton && legendEntry.removeSerieButton.isVisible) {
      var removeSerieButtonElement = this.drawRemoveSerieButton(legendEntry.removeSerieButton.coordinates.x, legendEntry.removeSerieButton.coordinates.y, legendEntry.removeSerieButton.brush, legendEntryDrawingGroup), removeSerieButtonID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.REMOVE_SERIE_BUTTON, legendEntry.index]);
      this.registerElement(removeSerieButtonElement, removeSerieButtonID)
    }
    goog.asserts.assert(this.legendDrawingGroup);
    this.renderer.appendChild(this.legendDrawingGroup, legendEntryDrawingGroup)
  }
};
gviz.canviz.ChartBuilder.prototype.drawLegendScrollItems_ = function(scrollItems) {
  scrollItems && (this.drawLegendScrollButton_(scrollItems.previousButton, -1), scrollItems.pageIndexTextBlock && (goog.asserts.assert(this.legendDrawingGroup), this.drawTextBlock(scrollItems.pageIndexTextBlock, this.legendDrawingGroup)), this.drawLegendScrollButton_(scrollItems.nextButton, 1))
};
gviz.canviz.ChartBuilder.prototype.drawLegendScrollButton_ = function(button, scrollStep) {
  if(button) {
    goog.asserts.assert(this.legendDrawingGroup);
    var buttonPathSegments = gviz.graphics.PathSegments.fromVertices(button.path), buttonElement = this.renderer.drawPath(buttonPathSegments, button.brush, this.legendDrawingGroup);
    if(button.active) {
      var buttonID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.LEGEND_SCROLL_BUTTON, scrollStep]);
      this.registerElement(buttonElement, buttonID)
    }
  }
};
gviz.canviz.ChartBuilder.prototype.drawRemoveSerieButton = function(x, y, brush, drawingGroup) {
  var renderer = this.renderer, width = 12, height = 12, group = renderer.createGroup();
  renderer.drawRect(x, y, width, height, brush, group);
  renderer.appendChild(drawingGroup, group);
  var path = new gviz.graphics.PathSegments, strokeWidth = 2;
  path.move(x + strokeWidth, y + strokeWidth);
  path.addLine(x + width - strokeWidth, y + height - strokeWidth);
  path.move(x + width - strokeWidth, y + strokeWidth);
  path.addLine(x + strokeWidth, y + height - strokeWidth);
  var crossBrush = new gviz.graphics.Brush;
  crossBrush.setStroke("#ffffff");
  crossBrush.setStrokeWidth(2);
  renderer.drawPath(path, crossBrush, group);
  return group.getElement()
};
gviz.canviz.ChartBuilder.prototype.drawColorBar = function(colorBarDefinition) {
  if(colorBarDefinition) {
    goog.asserts.assert(this.colorBarDrawingGroup);
    gviz.colorbar.builder.draw(colorBarDefinition.definition, this.renderer, this.colorBarDrawingGroup);
    goog.asserts.assert(this.colorBarDrawingGroup);
    var foreground = this.renderer.drawRect(colorBarDefinition.drawingOptions.left, colorBarDefinition.drawingOptions.top, colorBarDefinition.drawingOptions.width, colorBarDefinition.drawingOptions.height, gviz.graphics.Brush.TRANSPARENT_BRUSH, this.colorBarDrawingGroup);
    this.registerElement(foreground, gviz.canviz.idutils.Token.COLOR_BAR)
  }
};
gviz.canviz.ChartBuilder.prototype.fitFontSize = function(text, textStyle, maximalLength) {
  var fontSize = textStyle.fontSize, textWidth = this.renderer.getTextWidth(text, textStyle);
  textWidth > maximalLength && (fontSize = Math.max(1, Math.floor(textStyle.fontSize * maximalLength / textWidth)));
  return fontSize
};
gviz.canviz.ChartBuilder.prototype.closeTooltip = function(tooltipID) {
  var tooltipElement = this.idToElementMapping_[tooltipID];
  tooltipElement && (this.renderer.removeElement(tooltipElement), delete this.idToElementMapping_[tooltipID])
};
gviz.canviz.ChartBuilder.prototype.openTooltip = function(tooltipDefinition, tooltipID) {
  goog.asserts.assert(this.tooltipDrawingGroup_);
  var tooltipElement = tooltipDefinition.html ? gviz.util.tooltip.htmlbuilder.draw(tooltipDefinition, this.overlayArea.getContainer()) : gviz.util.tooltip.builder.draw(tooltipDefinition, this.renderer, this.tooltipDrawingGroup_).getElement();
  this.registerElement(tooltipElement, tooltipID)
};
gviz.canviz.ChartBuilder.prototype.drawTextBlock = function(textBlock, drawingGroup, opt_addSensitivityArea) {
  var element = this.createTextBlock(textBlock, opt_addSensitivityArea);
  element && this.renderer.appendChild(drawingGroup, element);
  return element
};
gviz.canviz.ChartBuilder.prototype.createTextBlock = function(textBlock, opt_addSensitivityArea) {
  var lines = textBlock.lines;
  if(!lines || 0 == lines.length) {
    return null
  }
  for(var renderer = this.renderer, textStyle = textBlock.textStyle, angle = goog.isDefAndNotNull(textBlock.angle) ? textBlock.angle : 0, anchor = textBlock.anchor ? textBlock.anchor : {x:0, y:0}, tooltip = textBlock.tooltip, addSensitivityArea = !!tooltip || opt_addSensitivityArea || !1, group = renderer.createGroup(), i = 0;i < lines.length;i++) {
    var line = lines[i];
    0 == angle ? renderer.drawText(line.text, line.x + anchor.x, line.y + anchor.y, line.length, textBlock.paralAlign, textBlock.perpenAlign, textStyle, group) : renderer.drawTextOnLineByAngle(line.text, line.x + anchor.x, line.y + anchor.y, line.length, angle, textBlock.paralAlign, textBlock.perpenAlign, textStyle, group)
  }
  if(addSensitivityArea) {
    var sensitivityArea = null;
    if(0 == angle) {
      var box = gviz.canviz.TextBlockUtil.calcBoundingBox(textBlock);
      box && (sensitivityArea = renderer.drawRect(box.left, box.top, box.right - box.left, box.bottom - box.top, gviz.graphics.Brush.TRANSPARENT_BRUSH, group))
    }else {
      var radians = goog.math.toRadians(angle), rotatedTextBlock = goog.object.unsafeClone(textBlock);
      rotatedTextBlock.angle = 0;
      var rotatedAnchor = (new goog.math.Vec2(anchor.x, anchor.y)).rotate(-radians);
      rotatedTextBlock.anchor = new gviz.math.Coordinate(rotatedAnchor.x, rotatedAnchor.y);
      for(i = 0;i < lines.length;i++) {
        var rotatedLinePoint = (new goog.math.Vec2(lines[i].x, lines[i].y)).rotate(-radians);
        rotatedTextBlock.lines[i].x = rotatedLinePoint.x;
        rotatedTextBlock.lines[i].y = rotatedLinePoint.y
      }
      if(box = gviz.canviz.TextBlockUtil.calcBoundingBox(rotatedTextBlock)) {
        var boxPoints = [new goog.math.Vec2(box.left, box.top), new goog.math.Vec2(box.right, box.top), new goog.math.Vec2(box.right, box.bottom), new goog.math.Vec2(box.left, box.bottom)];
        goog.array.forEach(boxPoints, function(point) {
          point.rotate(radians)
        });
        var path = gviz.graphics.PathSegments.fromVertices(boxPoints, !1), sensitivityArea = renderer.drawPath(path, gviz.graphics.Brush.TRANSPARENT_BRUSH, group)
      }
    }
    tooltip && sensitivityArea && renderer.addTooltip(sensitivityArea, tooltip, gviz.canviz.textutils.tooltipCssStyle(textStyle))
  }
  return group.getElement()
};
gviz.canviz.ChartBuilder.prototype.drawOverlayBox = function(overlayBox) {
  var brush = new gviz.graphics.Brush;
  brush.setFill(overlayBox.color);
  brush.setFillOpacity(overlayBox.opacity);
  var box = this.renderer.drawRect(overlayBox.left, overlayBox.top, overlayBox.width, overlayBox.height, brush, this.renderer.getCanvas());
  this.registerElement(box, gviz.canviz.idutils.Token.OVERLAY_BOX)
};
gviz.canviz.ChartBuilder.prototype.drawElement = function(group, elementID, newElement) {
  var oldElement = this.idToElementMapping_[elementID];
  goog.isDefAndNotNull(oldElement) ? this.renderer.replaceChild(group, newElement, oldElement) : this.renderer.appendChild(group, newElement);
  this.registerElement(newElement, elementID)
};
gviz.canviz.ChartBuilder.prototype.registerElement = function(element, elementID, opt_parentID) {
  element && (this.renderer.setLogicalName(element, elementID), this.idToElementMapping_[elementID] = element, opt_parentID && this.addChildElementID_(opt_parentID, elementID))
};
gviz.canviz.ChartBuilder.prototype.deleteElementByID = function(elementID) {
  var element = this.idToElementMapping_[elementID];
  element && (this.renderer.removeElement(element), delete this.idToElementMapping_[elementID])
};
gviz.canviz.ChartBuilder.prototype.clearChart_ = function() {
  this.idToElementMapping_ = {};
  this.groupIDToElementIDs_ = {};
  this.renderer.clear();
  this.overlayArea.clear()
};
gviz.canviz.ChartBuilder.prototype.addChildElementID_ = function(parentID, childID) {
  this.groupIDToElementIDs_[parentID] || (this.groupIDToElementIDs_[parentID] = []);
  goog.array.contains(this.groupIDToElementIDs_[parentID], childID) || this.groupIDToElementIDs_[parentID].push(childID)
};
gviz.canviz.ChartBuilder.prototype.getBoundingBox = function(id) {
  var boxes = [];
  if(this.idToElementMapping_[id]) {
    var box = this.renderer.getBoundingBox(this.idToElementMapping_[id]);
    box && boxes.push(box)
  }
  for(var childElements = this.groupIDToElementIDs_[id] || [], i = 0;i < childElements.length;++i) {
    (box = this.renderer.getBoundingBox(this.idToElementMapping_[childElements[i]])) && boxes.push(box)
  }
  return gviz.util.calcBoundingBox(boxes)
};
// Input 284
gviz.canviz.chartdefinitionutil = {};
gviz.canviz.chartdefinitionutil.getDatumBrush = function(datum, serie) {
  return datum.scaled && datum.scaled.brush || datum.brush || serie.pointBrush
};
gviz.canviz.chartdefinitionutil.getIncomingLineBrush = function(datum, serie) {
  goog.asserts.assert(serie.lineBrush);
  return goog.isNull(datum.incomingLineBrush) ? null : datum.incomingLineBrush || serie.lineBrush
};
gviz.canviz.chartdefinitionutil.getIncomingAreaBrush = function(datum, serie) {
  goog.asserts.assert(serie.areaBrush);
  return datum.incomingAreaBrush || serie.areaBrush
};
gviz.canviz.chartdefinitionutil.isDatumNull = function(datum) {
  return!datum || datum.isNull
};
gviz.canviz.chartdefinitionutil.isSeriePathBased = function(serie) {
  return serie.type == gviz.canviz.Options.SerieType.LINE || serie.type == gviz.canviz.Options.SerieType.AREA || serie.type == gviz.canviz.Options.SerieType.SCATTER
};
gviz.canviz.chartdefinitionutil.isDatumVisible = function(datum, serie) {
  return goog.isDefAndNotNull(datum.visible) ? datum.visible : serie.visiblePoints
};
gviz.canviz.chartdefinitionutil.getPointRadius = function(point, serie) {
  return point.scaled && goog.isDefAndNotNull(point.scaled.radius) ? point.scaled.radius : goog.isDefAndNotNull(point.radius) ? point.radius : serie.pointRadius
};
gviz.canviz.chartdefinitionutil.getPointSensitivityAreaRadius = function(point, serie) {
  return point.scaled && goog.isDefAndNotNull(point.scaled.sensitivityAreaRadius) ? point.scaled.sensitivityAreaRadius : goog.isDefAndNotNull(point.sensitivityAreaRadius) ? point.sensitivityAreaRadius : serie.pointSensitivityAreaRadius
};
gviz.canviz.chartdefinitionutil.getPointTotalRadius = function(point, serie) {
  var radius = gviz.canviz.chartdefinitionutil.getPointRadius(point, serie), brush = gviz.canviz.chartdefinitionutil.getDatumBrush(point, serie), visibleRadius = radius + brush.getVisibleStrokeWidth() / 2;
  return visibleRadius
};
gviz.canviz.chartdefinitionutil.isTooltipTriggeredBySelection = function(tooltipTrigger) {
  return tooltipTrigger == gviz.Options.TooltipTrigger.SELECTION || tooltipTrigger == gviz.Options.TooltipTrigger.BOTH
};
gviz.canviz.chartdefinitionutil.isTooltipTriggeredByFocus = function(tooltipTrigger) {
  return tooltipTrigger == gviz.Options.TooltipTrigger.FOCUS || tooltipTrigger == gviz.Options.TooltipTrigger.BOTH
};
gviz.canviz.chartdefinitionutil.reverseSeriesLabelsVertically = function(chartDef) {
  return chartDef.isStacked && chartDef.chartType == gviz.canviz.Options.ChartType.FUNCTION && chartDef.orientation == gviz.canviz.Options.Orientation.HORIZONTAL
};
gviz.canviz.chartdefinitionutil.createPathSegments = function(serie, interpolateNulls) {
  for(var pathSegments = new gviz.graphics.MultiBrushPathSegments, allPointsAreNull = !0, isFirstPointOfComponent = !0, firstConcretePoint = null, previousConcretePoint = null, i = 0;i < serie.points.length;i++) {
    var point = serie.points[i];
    if(point && point.scaled && goog.isDefAndNotNull(point.scaled.x) && goog.isDefAndNotNull(point.scaled.y)) {
      allPointsAreNull && (firstConcretePoint = i, allPointsAreNull = !1);
      var scaledPoint = point.scaled;
      goog.asserts.assert(!isNaN(scaledPoint.x));
      goog.asserts.assert(!isNaN(scaledPoint.y));
      var brush = gviz.canviz.chartdefinitionutil.getIncomingLineBrush(point, serie);
      isFirstPointOfComponent || goog.isNull(brush) ? (pathSegments.move(scaledPoint.x, scaledPoint.y), isFirstPointOfComponent = !1) : serie.isCurved ? pathSegments.addCurve(brush, serie.points[previousConcretePoint].rightControlPoint.x, serie.points[previousConcretePoint].rightControlPoint.y, point.leftControlPoint.x, point.leftControlPoint.y, scaledPoint.x, scaledPoint.y) : pathSegments.addLine(brush, scaledPoint.x, scaledPoint.y);
      previousConcretePoint = i
    }else {
      isFirstPointOfComponent = !interpolateNulls || allPointsAreNull
    }
  }
  if(!allPointsAreNull & serie.isClosed) {
    var connectFrom = interpolateNulls ? previousConcretePoint : serie.points.length - 1, connectTo = interpolateNulls ? firstConcretePoint : 0;
    goog.isDefAndNotNull(connectFrom) && goog.isDefAndNotNull(connectTo) && serie.points[connectFrom] && serie.points[connectTo] && (brush = gviz.canviz.chartdefinitionutil.getIncomingLineBrush(serie.points[connectTo], serie), serie.isCurved ? pathSegments.addCurve(brush, serie.points[connectFrom].rightControlPoint.x, serie.points[connectFrom].rightControlPoint.y, serie.points[connectTo].leftControlPoint.x, serie.points[connectTo].leftControlPoint.y, serie.points[connectTo].scaled.x, serie.points[connectTo].scaled.y) : 
    pathSegments.close(brush))
  }
  return pathSegments
};
gviz.canviz.chartdefinitionutil.createPathSegmentsForStackedArea = function(serie) {
  for(var pathSegments = new gviz.graphics.MultiBrushPathSegments, isFirstPointOfComponent = !0, i = 0;i < serie.points.length;i++) {
    var scaledPoint = serie.points[i].scaled;
    if(goog.isDefAndNotNull(scaledPoint.x) && goog.isDefAndNotNull(scaledPoint.y)) {
      if(!isFirstPointOfComponent) {
        var brush = gviz.canviz.chartdefinitionutil.getIncomingLineBrush(serie.points[i], serie);
        pathSegments.addLine(brush, scaledPoint.continueToX, scaledPoint.continueToY)
      }
      (isFirstPointOfComponent || scaledPoint.continueToX != scaledPoint.continueFromX || scaledPoint.continueToY != scaledPoint.continueFromY) && pathSegments.move(scaledPoint.continueFromX, scaledPoint.continueFromY);
      isFirstPointOfComponent = !1
    }else {
      isFirstPointOfComponent = !0
    }
  }
  return pathSegments
};
gviz.canviz.chartdefinitionutil.getXLocation = function(chartDef, hValue, opt_hAxisIndex) {
  var hAxes = chartDef.hAxes, axis = hAxes && hAxes[opt_hAxisIndex || 0];
  return axis && axis.position.fromValue(hValue)
};
gviz.canviz.chartdefinitionutil.getYLocation = function(chartDef, vValue, opt_vAxisIndex) {
  var vAxes = chartDef.vAxes, axis = vAxes && vAxes[opt_vAxisIndex || 0];
  return axis && axis.position.fromValue(vValue)
};
gviz.canviz.chartdefinitionutil.getHAxisValue = function(chartDef, xLocation, opt_hAxisIndex) {
  var hAxes = chartDef.hAxes, axis = hAxes && hAxes[opt_hAxisIndex || 0];
  return axis && axis.position.toValue(xLocation)
};
gviz.canviz.chartdefinitionutil.getVAxisValue = function(chartDef, yLocation, opt_vAxisIndex) {
  var vAxes = chartDef.vAxes, axis = vAxes && vAxes[opt_vAxisIndex || 0];
  return axis && axis.position.toValue(yLocation)
};
gviz.canviz.chartdefinitionutil.getHAxisTicks = function(chartDef, opt_hAxisIndex) {
  for(var hAxes = chartDef.hAxes, axis = hAxes && hAxes[opt_hAxisIndex || 0], ticksData = axis.gridlines, tickValues = [], i = 0;i < ticksData.length;i++) {
    tickValues.push(ticksData[i].dataValue)
  }
  return tickValues
};
gviz.canviz.chartdefinitionutil.getVAxisTicks = function(chartDef, opt_vAxisIndex) {
  for(var vAxes = chartDef.vAxes, axis = vAxes && vAxes[opt_vAxisIndex || 0], ticksData = axis.gridlines, tickValues = [], i = 0;i < ticksData.length;i++) {
    tickValues.push(ticksData[i].dataValue)
  }
  return tickValues
};
// Input 285
gviz.canviz.AxisChartBuilder = function(overlayArea, renderer) {
  gviz.canviz.ChartBuilder.call(this, overlayArea, renderer);
  this.drawingGroupInfo_ = null
};
goog.inherits(gviz.canviz.AxisChartBuilder, gviz.canviz.ChartBuilder);
gviz.canviz.AxisChartBuilder.DrawingGroupPosition = {OUTSIDE:"outside", INSIDE:"inside", CLIPPED:"clipped"};
gviz.canviz.AxisChartBuilder.prototype.drawChartContent = function(chartDef, drawingGroup) {
  this.initDrawingGroupInfo_(chartDef);
  var chartAreaDrawingGroup = this.renderer.createGroup(!1);
  this.renderer.appendChild(drawingGroup, chartAreaDrawingGroup);
  this.registerElement(chartAreaDrawingGroup.getElement(), gviz.canviz.idutils.Token.CHART_AREA);
  goog.object.forEach(this.drawingGroupInfo_, function(info) {
    if(!info.drawingGroup) {
      var allowLazyCreation = !goog.isDef(info.allowLazyCreation) || info.allowLazyCreation;
      info.drawingGroup = this.renderer.createGroup(!!allowLazyCreation)
    }
  }, this);
  this.renderer.drawRect(chartDef.chartArea.left, chartDef.chartArea.top, chartDef.chartArea.width, chartDef.chartArea.height, chartDef.chartAreaBackgroundBrush, chartAreaDrawingGroup);
  goog.object.forEach(chartDef.hAxes, function(hAxis) {
    this.drawHorizontalAxisLines(chartDef, hAxis)
  }, this);
  goog.object.forEach(chartDef.vAxes, function(vAxis) {
    this.drawVerticalAxisLines(chartDef, vAxis)
  }, this);
  goog.object.forEach(chartDef.hAxes, function(hAxis) {
    this.drawAxisText(chartDef, hAxis)
  }, this);
  goog.object.forEach(chartDef.vAxes, function(vAxis) {
    this.drawAxisText(chartDef, vAxis)
  }, this);
  chartDef.titlePosition == gviz.canviz.Options.InOutPosition.INSIDE && (goog.asserts.assert(chartDef.title), this.drawTextBlock(chartDef.title, this.drawingGroupInfo_[gviz.canviz.idutils.Token.TITLE].drawingGroup));
  chartDef.innerAxisTitle && this.drawTextBlock(chartDef.innerAxisTitle, this.drawingGroupInfo_[gviz.canviz.idutils.Token.AXIS_TITLE].drawingGroup);
  goog.array.forEach(chartDef.categories, function(category, index) {
    category.annotation && this.drawAnnotation_(category.annotation, null, null, index)
  }, this);
  for(var isSerieVisible = function(serieIndex) {
    var serie = chartDef.series[serieIndex];
    return!chartDef.isDiff || serie.type !== gviz.canviz.Options.SerieType.SCATTER || serie.visiblePoints
  }, sortedSeries = [], i = 0;i < chartDef.series.length;i++) {
    isSerieVisible(i) && sortedSeries.push({zOrder:chartDef.series[i].zOrder, index:i})
  }
  goog.array.stableSort(sortedSeries, function(a, b) {
    return goog.array.defaultCompare(a.zOrder, b.zOrder)
  });
  for(i = 0;i < sortedSeries.length;i++) {
    var serieIndex = sortedSeries[i].index, serie$$0 = chartDef.series[serieIndex];
    this.drawSerie_(serie$$0, serieIndex)
  }
  chartDef.isDiff && chartDef.series[0].type === gviz.canviz.Options.SerieType.SCATTER && this.drawLinesBetweenOldAndNewData_(chartDef, drawingGroup);
  for(i = 0;i < chartDef.categories.length;i++) {
    if(chartDef.categories[i].tooltip) {
      var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, i]);
      this.openTooltip(chartDef.categories[i].tooltip, tooltipID)
    }
  }
  var clipRect = new goog.math.Rect(chartDef.chartArea.left, chartDef.chartArea.top, chartDef.chartArea.width, chartDef.chartArea.height), clippedDrawingGroup = this.renderer.createGroup(!1), clippingElement = this.renderer.clipGroup(clippedDrawingGroup, clipRect);
  this.renderer.appendChild(chartAreaDrawingGroup, clippingElement);
  goog.array.forEach(gviz.canviz.idutils.TOKEN_PRECEDENCE, function(token) {
    var elementDrawingGroup = this.drawingGroupInfo_[token].drawingGroup;
    if(elementDrawingGroup) {
      var parentDrawingGroup, drawingGroupPosition = this.drawingGroupInfo_[token].position;
      switch(drawingGroupPosition) {
        case gviz.canviz.AxisChartBuilder.DrawingGroupPosition.CLIPPED:
          parentDrawingGroup = clippedDrawingGroup;
          break;
        case gviz.canviz.AxisChartBuilder.DrawingGroupPosition.INSIDE:
          parentDrawingGroup = chartAreaDrawingGroup;
          break;
        case gviz.canviz.AxisChartBuilder.DrawingGroupPosition.OUTSIDE:
          parentDrawingGroup = drawingGroup;
          break;
        default:
          goog.asserts.fail('Invalid drawing group position "' + drawingGroupPosition + '"')
      }
      goog.asserts.assert(parentDrawingGroup);
      this.renderer.appendChild(parentDrawingGroup, elementDrawingGroup)
    }
  }, this);
  return!0
};
gviz.canviz.AxisChartBuilder.prototype.initDrawingGroupInfo_ = function(chartDef) {
  this.drawingGroupInfo_ = {};
  var Token = gviz.canviz.idutils.Token, DrawingGroupPosition = gviz.canviz.AxisChartBuilder.DrawingGroupPosition, info = this.drawingGroupInfo_;
  info[Token.ACTIONS_MENU_ENTRY] = {position:DrawingGroupPosition.OUTSIDE};
  info[Token.ANNOTATION] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.ANNOTATION_TEXT] = {position:DrawingGroupPosition.INSIDE};
  info[Token.AREA] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.BAR] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.BASELINE] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.BUBBLE] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.CATEGORY_SENSITIVITY_AREA] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.CANDLESTICK] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.HISTOGRAM] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.GRIDLINE] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.INTERVAL] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.LINE] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.MINOR_GRIDLINE] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.OVERLAY_BOX] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.PATH_INTERVAL] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.POINT] = {position:DrawingGroupPosition.INSIDE, allowLazyCreation:!1};
  info[Token.POINT_SENSITIVITY_AREA] = {position:DrawingGroupPosition.INSIDE};
  info[Token.STEPPED_AREA_BAR] = {position:DrawingGroupPosition.CLIPPED};
  info[Token.TOOLTIP] = {position:DrawingGroupPosition.OUTSIDE};
  var titlePosition = chartDef.titlePosition == gviz.canviz.Options.InOutPosition.INSIDE ? DrawingGroupPosition.INSIDE : DrawingGroupPosition.OUTSIDE;
  info[Token.TITLE] = {position:titlePosition};
  info[Token.AXIS_TICK] = {position:DrawingGroupPosition.INSIDE};
  var axisTitlePosition = chartDef.axisTitlesPosition == gviz.canviz.Options.InOutPosition.INSIDE ? DrawingGroupPosition.INSIDE : DrawingGroupPosition.OUTSIDE;
  info[Token.AXIS_TITLE] = {position:axisTitlePosition};
  var insideLegend = chartDef.legend && chartDef.legend.position == gviz.canviz.Options.LegendPosition.INSIDE, legendDrawingGroup = insideLegend ? this.legendDrawingGroup : null, legendDrawingGroupPosition = insideLegend ? DrawingGroupPosition.INSIDE : DrawingGroupPosition.OUTSIDE;
  info[Token.LEGEND] = {drawingGroup:legendDrawingGroup, position:legendDrawingGroupPosition};
  info[Token.LEGEND_SCROLL_BUTTON] = {drawingGroup:legendDrawingGroup, position:legendDrawingGroupPosition};
  info[Token.LEGEND_ENTRY] = {drawingGroup:legendDrawingGroup, position:legendDrawingGroupPosition};
  var insideColorBar = chartDef.colorBar && chartDef.colorBar.position == gviz.canviz.Options.ColorBarPosition.INSIDE, colorBarDrawingGroup = insideColorBar ? this.colorBarDrawingGroup : null, colorBarDrawingGroupPosition = insideColorBar ? DrawingGroupPosition.INSIDE : DrawingGroupPosition.OUTSIDE;
  info[Token.COLOR_BAR] = {drawingGroup:colorBarDrawingGroup, position:colorBarDrawingGroupPosition}
};
gviz.canviz.AxisChartBuilder.prototype.drawSerie_ = function(serie, serieIndex) {
  serie.type == gviz.canviz.Options.SerieType.BUBBLES ? this.drawBubbleSerie_(serie, serieIndex) : serie.type == gviz.canviz.Options.SerieType.BARS ? this.drawBarSerie_(serie, serieIndex) : serie.type == gviz.canviz.Options.SerieType.STEPPED_AREA ? this.drawBarSerie_(serie, serieIndex) : serie.type == gviz.canviz.Options.SerieType.CANDLESTICKS ? this.drawCandlestickSerie_(serie, serieIndex) : serie.type == gviz.canviz.Options.SerieType.AREA ? this.drawAreaSerie_(serie, serieIndex, this.chartDefinition.isStacked) : 
  this.drawPathBasedSerie_(serie, serieIndex, this.chartDefinition.interpolateNulls);
  serie.intervals && serie.intervals.paths && this.drawPathIntervals_(serie, serieIndex)
};
gviz.canviz.AxisChartBuilder.prototype.drawPathIntervals_ = function(serie, serieIndex) {
  for(var intervalPaths = serie.intervals.paths, i = 0, intervalPath;intervalPath = intervalPaths[i];++i) {
    if(0 != intervalPath.line.length) {
      var path = new gviz.graphics.PathSegments;
      path.extendFromVertices(intervalPath.line, intervalPath.controlPoints);
      intervalPath.bottom && path.extendFromVertices(intervalPath.bottom, intervalPath.bottomControlPoints);
      var intervalsGroup = this.renderer.createGroup();
      this.renderer.drawPath(path, intervalPath.brush, intervalsGroup);
      var intervalsElement = intervalsGroup.getElement(), intervalToken = gviz.canviz.idutils.Token.PATH_INTERVAL, intervalsId = gviz.canviz.idutils.generateId([intervalToken, serieIndex, i]), pathIntervalsDrawingGroup = this.drawingGroupInfo_[intervalToken].drawingGroup;
      this.drawElement(pathIntervalsDrawingGroup, intervalsId, intervalsElement)
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawDatum_ = function(serie, serieIndex, datum, datumIndex) {
  serie.type == gviz.canviz.Options.SerieType.BARS || serie.type == gviz.canviz.Options.SerieType.STEPPED_AREA ? this.drawBar_(serie, serieIndex, datum, datumIndex) : serie.type == gviz.canviz.Options.SerieType.CANDLESTICKS ? this.drawCandlestick_(serie, serieIndex, datum, datumIndex) : serie.type == gviz.canviz.Options.SerieType.BUBBLES ? this.drawBubble_(serie, serieIndex, datum, datumIndex) : this.drawPoint_(serie, serieIndex, datum, datumIndex)
};
gviz.canviz.AxisChartBuilder.prototype.drawBubbleSerie_ = function(serie, serieIndex) {
  var bubblesGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.BUBBLE].drawingGroup, bubbleIndices = gviz.canviz.util.rangeMap(serie.points.length, function(i) {
    return i
  });
  serie.sortBySize && goog.array.sort(bubbleIndices, function(i1, i2) {
    var bubble1 = serie.points[i1], bubble2 = serie.points[i2], size1 = bubble1 ? bubble1.scaled.radius : 0, size2 = bubble2 ? bubble2.scaled.radius : 0;
    return size2 - size1
  });
  for(var i$$0 = 0;i$$0 < bubbleIndices.length;i$$0++) {
    var bubbleIndex = bubbleIndices[i$$0], bubble = serie.points[bubbleIndex];
    if(bubble) {
      this.drawBubble_(serie, serieIndex, bubble, bubbleIndex);
      var bubbleTextElement = this.renderer.drawText(bubble.text, bubble.scaled.x, bubble.scaled.y, bubble.textLength, gviz.graphics.TextAlign.CENTER, gviz.graphics.TextAlign.CENTER, bubble.textStyle, bubblesGroup), bubbleID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.BUBBLE, serieIndex, bubbleIndex]);
      this.renderer.setLogicalName(bubbleTextElement, bubbleID)
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawBarSerie_ = function(serie, serieIndex) {
  for(var i = 0;i < serie.points.length;i++) {
    this.drawBar_(serie, serieIndex, serie.points[i], i)
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawBar_ = function(serie, serieIndex, bar, barIndex) {
  if(bar && bar.scaled) {
    var barBrush = bar.brush || gviz.canviz.chartdefinitionutil.getDatumBrush(bar, serie);
    goog.asserts.assert(barBrush);
    var barToken = serie.type == gviz.canviz.Options.SerieType.BARS ? gviz.canviz.idutils.Token.BAR : gviz.canviz.idutils.Token.STEPPED_AREA_BAR, barID = gviz.canviz.idutils.generateId([barToken, serieIndex, barIndex]), scaledBar = bar.scaled.bar || bar.scaled, barElement = this.renderer.createRect(scaledBar.left, scaledBar.top, scaledBar.width, scaledBar.height, barBrush), barGroup = null, outline = bar.scaled.outline, glow = bar.glow, ring = bar.ring;
    if(outline || glow || ring) {
      barGroup = this.renderer.createGroup();
      this.renderer.appendChild(barGroup, barElement);
      if(outline) {
        var lineBrush = bar.lineBrush || serie.lineBrush, pathSegments = gviz.graphics.PathSegments.fromVertices(outline, !0);
        this.renderer.drawPath(pathSegments, lineBrush, barGroup)
      }
      if(glow) {
        for(var i = 0;i < glow.levels.length;i++) {
          var glowRect = glow.levels[i].rect;
          this.renderer.drawRect(glowRect.left, glowRect.top, glowRect.width, glowRect.height, glow.levels[i].brush, barGroup)
        }
      }
      ring && this.renderer.drawRect(ring.rect.left, ring.rect.top, ring.rect.width, ring.rect.height, ring.brush, barGroup)
    }
    var barEventTarget = barGroup ? barGroup.getElement() : barElement, barsGroup = this.drawingGroupInfo_[barToken].drawingGroup;
    this.drawElement(barsGroup, barID, barEventTarget);
    if(bar.tooltip) {
      var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, serieIndex, barIndex]);
      this.openTooltip(bar.tooltip, tooltipID)
    }
    bar.annotation && this.drawAnnotation_(bar.annotation, serie, serieIndex, barIndex);
    bar.scaled.intervalRects && this.drawIntervals_(serie, serieIndex, barIndex, bar.scaled.intervalRects)
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawAreaSerie_ = function(serie, serieIndex, isStacked) {
  if(0 != serie.points.length) {
    for(var areaPaths = [], prevAreaBrush = null, fromPoint = 0, i = 0;i < serie.points.length;i++) {
      var areaBrush = null;
      if(i + 1 < serie.points.length) {
        var point = serie.points[i + 1], areaBrush = gviz.canviz.chartdefinitionutil.getIncomingAreaBrush(point, serie)
      }
      if(null != prevAreaBrush && !gviz.graphics.Brush.equals(areaBrush, prevAreaBrush)) {
        var areaPath = goog.array.find(areaPaths, function(areaPath) {
          return gviz.graphics.Brush.equals(prevAreaBrush, areaPath.brush)
        });
        areaPath || (areaPath = {brush:prevAreaBrush, segments:new gviz.graphics.PathSegments}, areaPaths.push(areaPath));
        var areaPathSegments = areaPath.segments;
        this.addAreaPathSegments_(areaPathSegments, serie, isStacked, fromPoint, i);
        fromPoint = i
      }
      prevAreaBrush = areaBrush
    }
    for(var areaGroup = this.renderer.createGroup(), i = 0;i < areaPaths.length;i++) {
      areaPath = areaPaths[i], this.renderer.drawPath(areaPath.segments, areaPath.brush, areaGroup)
    }
    var areaID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.AREA, serieIndex]), areasGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.AREA].drawingGroup;
    this.drawElement(areasGroup, areaID, areaGroup.getElement());
    if(isStacked) {
      var linePathSegments = gviz.canviz.chartdefinitionutil.createPathSegmentsForStackedArea(serie), lineID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.LINE, serieIndex]), lineElement = linePathSegments.createPath(this.renderer);
      if(lineElement) {
        var lineGroup = null, glow = serie.glow, ring = serie.ring;
        if(glow || ring) {
          lineGroup = this.renderer.createGroup();
          if(glow) {
            for(i = 0;i < glow.levels.length;i++) {
              this.renderer.drawPath(glow.levels[i].path, glow.levels[i].brush, lineGroup)
            }
          }
          ring && this.renderer.drawPath(ring.path, ring.brush, lineGroup);
          this.renderer.appendChild(lineGroup, lineElement)
        }
        var lineEventTarget = lineGroup ? lineGroup.getElement() : lineElement, linesGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.LINE].drawingGroup;
        this.drawElement(linesGroup, lineID, lineEventTarget)
      }
      this.drawPoints_(serie, serieIndex)
    }else {
      this.drawPathBasedSerie_(serie, serieIndex, !1)
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.addAreaPathSegments_ = function(areaPathSegments, serie, isStacked, fromPoint, toPoint) {
  var allPointsAreNull = !0, lastConcretePoint = null;
  areaPathSegments.move(serie.points[fromPoint].scaled.bottomFromX, serie.points[fromPoint].scaled.bottomFromY);
  for(var i = fromPoint;i <= toPoint;i++) {
    var point = serie.points[i];
    goog.asserts.assert(point && point.scaled);
    var scaledPoint = point.scaled;
    areaPathSegments.addLine(scaledPoint.continueToX, scaledPoint.continueToY);
    scaledPoint.continueFromX == scaledPoint.continueToX && scaledPoint.continueFromY == scaledPoint.continueToY || areaPathSegments.addLine(scaledPoint.continueFromX, scaledPoint.continueFromY);
    goog.isDefAndNotNull(scaledPoint.x) && goog.isDefAndNotNull(scaledPoint.y) && (allPointsAreNull = !1, lastConcretePoint = i)
  }
  if(!allPointsAreNull) {
    if(isStacked) {
      for(i = toPoint;i >= fromPoint;i--) {
        scaledPoint = serie.points[i].scaled, areaPathSegments.addLine(scaledPoint.bottomToX, scaledPoint.bottomToY), scaledPoint.bottomFromX == scaledPoint.bottomToX && scaledPoint.bottomFromY == scaledPoint.bottomToY || areaPathSegments.addLine(scaledPoint.bottomFromX, scaledPoint.bottomFromY)
      }
    }else {
      scaledPoint = serie.points[lastConcretePoint].scaled, areaPathSegments.addLine(scaledPoint.bottomToX, scaledPoint.bottomToY), areaPathSegments.close()
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawPathBasedSerie_ = function(serie, serieIndex, interpolateNulls) {
  var pathID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.LINE, serieIndex]);
  if(0 >= serie.lineWidth) {
    this.deleteElementByID(pathID), this.drawPoints_(serie, serieIndex)
  }else {
    var pathSegments = gviz.canviz.chartdefinitionutil.createPathSegments(serie, interpolateNulls);
    if(!goog.array.isEmpty(pathSegments.segments)) {
      var pathElement = pathSegments.createPath(this.renderer);
      if(pathElement) {
        var pathGroup = null, glow = serie.glow, ring = serie.ring;
        if(glow || ring) {
          pathGroup = this.renderer.createGroup();
          if(glow) {
            for(var i = 0;i < glow.levels.length;i++) {
              this.renderer.drawPath(glow.levels[i].path, glow.levels[i].brush, pathGroup)
            }
          }
          ring && this.renderer.drawPath(ring.path, ring.brush, pathGroup);
          this.renderer.appendChild(pathGroup, pathElement)
        }
        var pathEventTarget = pathGroup ? pathGroup.getElement() : pathElement, linesGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.LINE].drawingGroup;
        this.drawElement(linesGroup, pathID, pathEventTarget)
      }
      this.drawPoints_(serie, serieIndex)
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawLinesBetweenOldAndNewData_ = function(chartDef, drawingGroup) {
  for(var serieIndex = 0, lenSeries = chartDef.series.length;serieIndex < lenSeries;serieIndex += 2) {
    var oldDataSerie = chartDef.series[serieIndex], newDataSerie = chartDef.series[serieIndex + 1], numberOfPoints = oldDataSerie.points.length;
    goog.asserts.assert(numberOfPoints == newDataSerie.points.length);
    if(0 != numberOfPoints) {
      for(var color = oldDataSerie.pointBrush.getFill(), opacity = 0.7 * oldDataSerie.pointBrush.getFillOpacity(), brush = new gviz.graphics.Brush({stroke:color, strokeOpacity:opacity, strokeWidth:1}), pointIndex = 0;pointIndex < numberOfPoints;pointIndex++) {
        var oldDataPoint = oldDataSerie.points[pointIndex], newDataPoint = newDataSerie.points[pointIndex];
        if(oldDataPoint && oldDataPoint.scaled && !oldDataPoint.isNull) {
          goog.asserts.assert(newDataPoint && newDataPoint.scaled || !newDataPoint.isNull);
          var x1 = oldDataPoint.scaled.x, y1 = oldDataPoint.scaled.y, x2 = newDataPoint.scaled.x, y2 = newDataPoint.scaled.y;
          this.renderer.drawLine(x1, y1, x2, y2, brush, drawingGroup)
        }else {
          goog.asserts.assert(!newDataPoint || !newDataPoint.scaled || newDataPoint.isNull)
        }
      }
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawPoints_ = function(serie, serieIndex) {
  for(var i = 0;i < serie.points.length;i++) {
    this.drawPoint_(serie, serieIndex, serie.points[i], i)
  }
};
gviz.canviz.AxisChartBuilder.prototype.isPointInsideViewWindow_ = function(pointCenter, pointRadius) {
  var chartArea = this.chartDefinition.chartArea;
  if(pointCenter.x - pointRadius >= chartArea.right || pointCenter.x + pointRadius <= chartArea.left || pointCenter.y - pointRadius >= chartArea.bottom || pointCenter.y + pointRadius <= chartArea.top) {
    return!1
  }
  if((pointCenter.x >= chartArea.right || pointCenter.x <= chartArea.left) && (pointCenter.y >= chartArea.bottom || pointCenter.y <= chartArea.top)) {
    var r2 = pointRadius * pointRadius, xr = pointCenter.x - chartArea.right, xl = pointCenter.x - chartArea.left, yb = pointCenter.y - chartArea.bottom, yt = pointCenter.y - chartArea.top, xr2 = xr * xr, xl2 = xl * xl, yb2 = yb * yb, yt2 = yt * yt;
    if(xr2 + yb2 >= r2 && xr2 + yt2 >= r2 && xl2 + yt2 >= r2 && xl2 + yb2 >= r2) {
      return!1
    }
  }
  return!0
};
gviz.canviz.AxisChartBuilder.prototype.drawPoint_ = function(serie, serieIndex, point, pointIndex) {
  var pointsGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.POINT].drawingGroup, sensitivityAreasGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.POINT_SENSITIVITY_AREA].drawingGroup;
  this.drawPointOrBubble_(serie, serieIndex, point, pointIndex, pointsGroup, sensitivityAreasGroup)
};
gviz.canviz.AxisChartBuilder.prototype.drawBubble_ = function(serie, serieIndex, point, pointIndex) {
  var bubblesGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.BUBBLE].drawingGroup;
  this.drawPointOrBubble_(serie, serieIndex, point, pointIndex, bubblesGroup, null)
};
gviz.canviz.AxisChartBuilder.prototype.drawPointOrBubble_ = function(serie, serieIndex, point, pointIndex, pointsDrawingGroup) {
  if(point && point.scaled && !point.isNull) {
    var pointTotalRadius = gviz.canviz.chartdefinitionutil.getPointTotalRadius(point, serie);
    goog.asserts.assert(goog.isDefAndNotNull(pointTotalRadius));
    if(this.isPointInsideViewWindow_(point.scaled, pointTotalRadius)) {
      var pointOrBubble = serie.type == gviz.canviz.Options.SerieType.BUBBLES ? gviz.canviz.idutils.Token.BUBBLE : gviz.canviz.idutils.Token.POINT, pointID = gviz.canviz.idutils.generateId([pointOrBubble, serieIndex, pointIndex]), pointIsVisible = gviz.canviz.chartdefinitionutil.isDatumVisible(point, serie);
      goog.asserts.assert(goog.isDefAndNotNull(pointIsVisible));
      if(pointIsVisible) {
        var pointBrush = gviz.canviz.chartdefinitionutil.getDatumBrush(point, serie), pointRadius = gviz.canviz.chartdefinitionutil.getPointRadius(point, serie);
        goog.asserts.assert(goog.isDefAndNotNull(pointRadius));
        var pointElement = this.renderer.createCircle(point.scaled.x, point.scaled.y, pointRadius, pointBrush), pointGroup = null, ring = point.ring, glow = point.glow;
        if(ring || glow) {
          if(pointGroup = this.renderer.createGroup(), ring && this.renderer.drawCircle(ring.x, ring.y, ring.radius, ring.brush, pointGroup), this.renderer.appendChild(pointGroup, pointElement), glow) {
            for(var i = 0;i < glow.levels.length;i++) {
              this.renderer.drawCircle(glow.x, glow.y, glow.levels[i].radius, glow.levels[i].brush, pointGroup)
            }
          }
        }
        var pointEventTarget = pointGroup ? pointGroup.getElement() : pointElement;
        this.drawElement(pointsDrawingGroup, pointID, pointEventTarget)
      }else {
        this.deleteElementByID(pointID)
      }
      if(point.tooltip) {
        var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, serieIndex, pointIndex]);
        this.openTooltip(point.tooltip, tooltipID)
      }
      point.annotation && this.drawAnnotation_(point.annotation, serie, serieIndex, pointIndex);
      point.scaled.intervalRects && this.drawIntervals_(serie, serieIndex, pointIndex, point.scaled.intervalRects)
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawCandlestickSerie_ = function(serie, serieIndex) {
  for(var i = 0;i < serie.points.length;i++) {
    this.drawCandlestick_(serie, serieIndex, serie.points[i], i)
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawCandlestick_ = function(serie, serieIndex, candlestick, candlestickIndex) {
  if(candlestick && candlestick.scaled) {
    goog.asserts.assert(candlestick.barBrush);
    goog.asserts.assert(candlestick.lineBrush);
    var lineElement = this.renderer.createRect(candlestick.scaled.line.left, candlestick.scaled.line.top, candlestick.scaled.line.width, candlestick.scaled.line.height, candlestick.lineBrush), barElement = this.renderer.createRect(candlestick.scaled.rect.left, candlestick.scaled.rect.top, candlestick.scaled.rect.width, candlestick.scaled.rect.height, candlestick.barBrush), candlestickGroup = this.renderer.createGroup();
    this.renderer.appendChild(candlestickGroup, lineElement);
    this.renderer.appendChild(candlestickGroup, barElement);
    var glow = candlestick.glow;
    if(glow) {
      for(var i = 0;i < glow.levels.length;i++) {
        var glowRect = glow.levels[i].rect;
        this.renderer.drawRect(glowRect.left, glowRect.top, glowRect.width, glowRect.height, glow.levels[i].brush, candlestickGroup)
      }
    }
    var ring = candlestick.ring;
    ring && this.renderer.drawRect(ring.rect.left, ring.rect.top, ring.rect.width, ring.rect.height, ring.brush, candlestickGroup);
    var candlestickToken = gviz.canviz.idutils.Token.CANDLESTICK, candlestickID = gviz.canviz.idutils.generateId([candlestickToken, serieIndex, candlestickIndex]), candlesticksGroup = this.drawingGroupInfo_[candlestickToken].drawingGroup;
    this.drawElement(candlesticksGroup, candlestickID, candlestickGroup.getElement());
    if(candlestick.tooltip) {
      var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, serieIndex, candlestickIndex]);
      this.openTooltip(candlestick.tooltip, tooltipID)
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawAnnotation_ = function(annotation, serie, serieIndex, categoryIndex) {
  if(annotation) {
    var stem = annotation.stem, chartArea = this.chartDefinition.chartArea;
    if(!(stem.x < chartArea.left || stem.x > chartArea.right)) {
      var labels = annotation.labels;
      if(labels && !goog.array.isEmpty(labels)) {
        var idTokens = [gviz.canviz.idutils.Token.ANNOTATION, categoryIndex];
        goog.isDefAndNotNull(serieIndex) && goog.array.insertAt(idTokens, serieIndex, 1);
        var annotationID = gviz.canviz.idutils.generateId(idTokens), annotationGroup = this.createAxisAlignedLine_(stem.orientation, stem.x, stem.y, stem.length, stem.color);
        this.drawElement(this.drawingGroupInfo_[gviz.canviz.idutils.Token.ANNOTATION].drawingGroup, annotationID, annotationGroup);
        var annotationTextGroup = this.renderer.createGroup(), idTokens = [gviz.canviz.idutils.Token.ANNOTATION_TEXT, categoryIndex];
        goog.isDefAndNotNull(serieIndex) && goog.array.insertAt(idTokens, serieIndex, 1);
        var annotationIndex = null;
        annotation.bundle && !annotation.bundle.isExpanded && (labels = [annotation.bundle.label], annotationIndex = -1);
        for(var i = 0;i < labels.length;i++) {
          var label = labels[i], annotationLabelGroup = this.createTextBlock(label, !0);
          if(annotationLabelGroup) {
            if(label.tooltip_) {
              var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, serieIndex, categoryIndex, i]);
              this.openTooltip(label.tooltip_, tooltipID)
            }
            this.renderer.appendChild(annotationTextGroup, annotationLabelGroup);
            var labelIdTokens = goog.array.clone(idTokens);
            labelIdTokens.push(annotationIndex || i);
            var annotationLabelID = gviz.canviz.idutils.generateId(labelIdTokens);
            this.registerElement(annotationLabelGroup, annotationLabelID)
          }
        }
        var annotationBundleID = gviz.canviz.idutils.generateId(idTokens);
        this.drawElement(this.drawingGroupInfo_[gviz.canviz.idutils.Token.ANNOTATION_TEXT].drawingGroup, annotationBundleID, annotationTextGroup.getElement())
      }
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.createAxisAlignedLine_ = function(orientation, x, y, length, color) {
  var v = orientation == gviz.canviz.Options.Orientation.HORIZONTAL ? [length, 1] : [1, length];
  return this.renderer.createRect(Math.min(x, x + v[0]), Math.min(y, y + v[1]), Math.abs(v[0]), Math.abs(v[1]), new gviz.graphics.Brush({fill:color}))
};
gviz.canviz.AxisChartBuilder.prototype.drawIntervals_ = function(serie, serieIndex, datumIndex, intervalRects) {
  if(!goog.isDefAndNotNull(serie.intervals)) {
    return null
  }
  for(var intervalsGroup = this.renderer.createGroup(), settingsOfColumn = serie.intervals.settings, i = 0;i < intervalRects.length;i++) {
    var columnIndex = intervalRects[i].columnIndex, rect = intervalRects[i].rect, settings = settingsOfColumn[columnIndex];
    if(settings.style != gviz.canviz.Options.IntervalStyle.AREA && settings.style != gviz.canviz.Options.IntervalStyle.LINE) {
      var brush = settings.brush;
      if(0 == rect.width && 0 == rect.height) {
        var pointRadius = settings.pointSize / 2;
        if(0 < pointRadius) {
          var point = this.renderer.createCircle(rect.left, rect.top, pointRadius, brush);
          this.renderer.appendChild(intervalsGroup, point)
        }
      }else {
        if(0 == rect.width || 0 == rect.height) {
          var path = new gviz.graphics.PathSegments;
          path.move(rect.left, rect.top);
          path.addLine(rect.left + rect.width, rect.top + rect.height);
          this.renderer.drawPath(path, brush, intervalsGroup)
        }else {
          this.renderer.appendChild(intervalsGroup, this.renderer.createRect(rect.left, rect.top, rect.width, rect.height, brush))
        }
      }
    }
  }
  if(!intervalsGroup.isElementCreated()) {
    return null
  }
  var intervalToken = gviz.canviz.idutils.Token.INTERVAL, intervalsId = gviz.canviz.idutils.generateId([intervalToken, serieIndex, datumIndex]), intervalsElement = intervalsGroup.getElement();
  this.drawElement(this.drawingGroupInfo_[intervalToken].drawingGroup, intervalsId, intervalsElement);
  return intervalsElement
};
gviz.canviz.AxisChartBuilder.prototype.drawHorizontalAxisLines = function(chartDef, axisDef) {
  var drawAxisLineElement = goog.bind(function(tickline, drawingGroup) {
    var x = Math.floor(tickline.coordinate), length = goog.isDefAndNotNull(tickline.length) ? tickline.length : chartDef.chartArea.height, y1 = axisDef.ticklinesOrigin.coordinate, y2 = y1 + axisDef.ticklinesOrigin.direction * length, y = Math.min(y1, y2);
    return this.renderer.drawRect(x, y, 1, length, tickline.brush, drawingGroup)
  }, this);
  this.drawAxisLines(axisDef, drawAxisLineElement)
};
gviz.canviz.AxisChartBuilder.prototype.drawVerticalAxisLines = function(chartDef, axisDef) {
  var drawAxisLineElement = goog.bind(function(tickline, drawingGroup) {
    var y = Math.floor(tickline.coordinate), length = goog.isDefAndNotNull(tickline.length) ? tickline.length : chartDef.chartArea.width, x1 = axisDef.ticklinesOrigin.coordinate, x2 = x1 + axisDef.ticklinesOrigin.direction * length, x = Math.min(x1, x2);
    return this.renderer.drawRect(x, y, length, 1, tickline.brush, drawingGroup)
  }, this);
  this.drawAxisLines(axisDef, drawAxisLineElement)
};
gviz.canviz.AxisChartBuilder.prototype.drawAxisLines = function(axisDef, drawAxisLineElement) {
  if(axisDef.gridlines) {
    var gridlinesDrawingGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.GRIDLINE].drawingGroup, gridlinesID = gviz.canviz.idutils.generateId([axisDef.name, gviz.canviz.idutils.Token.GRIDLINE]);
    goog.array.forEach(axisDef.gridlines, function(gridline, index) {
      var gridlineID = gviz.canviz.idutils.generateId([axisDef.name, gviz.canviz.idutils.Token.GRIDLINE, index]);
      this.drawAxisLine(gridline, drawAxisLineElement, gridlinesDrawingGroup, gridlineID, gridlinesID)
    }, this)
  }
  var baselineDrawingGroup = this.drawingGroupInfo_[gviz.canviz.idutils.Token.BASELINE].drawingGroup, baselineID = gviz.canviz.idutils.generateId([axisDef.name, gviz.canviz.idutils.Token.BASELINE]);
  this.drawAxisLine(axisDef.baseline, drawAxisLineElement, baselineDrawingGroup, baselineID)
};
gviz.canviz.AxisChartBuilder.prototype.drawAxisLine = function(tickline, drawAxisLineElement, drawingGroup, id, opt_parentID) {
  if(tickline && tickline.isVisible && !tickline.brush.isTransparent()) {
    var element = drawAxisLineElement(tickline, drawingGroup);
    this.registerElement(element, id, opt_parentID)
  }
};
gviz.canviz.AxisChartBuilder.prototype.drawAxisText = function(chartDef, axisDef) {
  var drawingGroupInfo = this.drawingGroupInfo_, axisTitlesGroup = drawingGroupInfo[gviz.canviz.idutils.Token.AXIS_TITLE].drawingGroup, titleTextBlock = this.drawTextBlock(axisDef.title, axisTitlesGroup), axisTitleID = gviz.canviz.idutils.generateId([axisDef.name, gviz.canviz.idutils.Token.TITLE]);
  this.registerElement(titleTextBlock, axisTitleID);
  if(axisDef.text) {
    var axisTicksGroup = drawingGroupInfo[gviz.canviz.idutils.Token.AXIS_TICK].drawingGroup, axisLabelsID = gviz.canviz.idutils.generateId([axisDef.name, "label"]);
    goog.array.forEach(axisDef.text, function(textItem, index) {
      if(textItem.isVisible) {
        var labelTextBlock = this.drawTextBlock(textItem.textBlock, axisTicksGroup), axisLabelID = gviz.canviz.idutils.generateId([axisDef.name, "label", index]);
        this.registerElement(labelTextBlock, axisLabelID, axisLabelsID)
      }
    }, this)
  }
};
gviz.canviz.AxisChartBuilder.prototype.refreshChartContent = function(baseLayer, refreshLayer) {
  this.revertChartContentChanges_(baseLayer, this.drawnRefreshLayer);
  this.applyChartContentChanges_(baseLayer, refreshLayer)
};
gviz.canviz.AxisChartBuilder.prototype.revertChartContentChanges_ = function(baseLayer, refreshLayer) {
  for(var serieIndex in refreshLayer.series) {
    var serie = baseLayer.series[serieIndex], shortCircuitedPropsObj = {points:null}, shortCircuitedProps = goog.object.getKeys(shortCircuitedPropsObj);
    if(gviz.canviz.util.containsNoOtherProperties(refreshLayer.series[serieIndex], shortCircuitedProps)) {
      var changedDataPoints = refreshLayer.series[serieIndex].points, datumIndex;
      for(datumIndex in changedDataPoints) {
        var changedDatum = changedDataPoints[datumIndex];
        if(changedDatum.tooltip) {
          var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, Number(serieIndex), Number(datumIndex)]);
          this.closeTooltip(tooltipID)
        }
        var changedAnnotation = changedDatum.annotation;
        if(changedAnnotation) {
          for(var annotationIndex in changedAnnotation.labels) {
            changedAnnotation.labels[annotationIndex].tooltip_ && (tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, Number(serieIndex), Number(datumIndex), Number(annotationIndex)]), this.closeTooltip(tooltipID))
          }
        }
        var datum = serie.points[datumIndex];
        this.drawDatum_(serie, Number(serieIndex), datum, Number(datumIndex))
      }
    }else {
      for(datumIndex in refreshLayer.series[serieIndex].points) {
        refreshLayer.series[serieIndex].points[datumIndex].tooltip && (tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, Number(serieIndex), Number(datumIndex)]), this.closeTooltip(tooltipID))
      }
      this.drawSerie_(serie, Number(serieIndex))
    }
  }
  for(var categoryIndex in refreshLayer.categories) {
    var changedCategory = refreshLayer.categories[categoryIndex];
    changedCategory.tooltip && (tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, Number(categoryIndex)]), this.closeTooltip(tooltipID));
    if(changedAnnotation = changedCategory.annotation) {
      for(annotationIndex in changedAnnotation.labels) {
        changedAnnotation.labels[annotationIndex].tooltip_ && (tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, null, Number(categoryIndex), Number(annotationIndex)]), this.closeTooltip(tooltipID))
      }
      var annotation = baseLayer.categories[categoryIndex].annotation;
      this.drawAnnotation_(annotation, null, null, Number(categoryIndex))
    }
  }
};
gviz.canviz.AxisChartBuilder.prototype.applyChartContentChanges_ = function(baseLayer, refreshLayer) {
  for(var serieIndex in refreshLayer.series) {
    var serie = baseLayer.series[serieIndex], shortCircuitedPropsObj = {points:null}, shortCircuitedProps = goog.object.getKeys(shortCircuitedPropsObj);
    if(gviz.canviz.util.containsNoOtherProperties(refreshLayer.series[serieIndex], shortCircuitedProps)) {
      for(var datumIndex in refreshLayer.series[serieIndex].points) {
        var layeredDatum = new gviz.util.LayeredObject(2);
        layeredDatum.setLayer(0, serie.points[datumIndex]);
        layeredDatum.setLayer(1, refreshLayer.series[serieIndex].points[datumIndex]);
        var datum = layeredDatum.compact();
        this.drawDatum_(serie, Number(serieIndex), datum, Number(datumIndex))
      }
    }else {
      var layeredSerie = new gviz.util.LayeredObject(2);
      layeredSerie.setLayer(0, serie);
      layeredSerie.setLayer(1, refreshLayer.series[serieIndex]);
      var compactSerie = layeredSerie.compact();
      this.drawSerie_(compactSerie, Number(serieIndex))
    }
  }
  for(var categoryIndex in refreshLayer.categories) {
    if(refreshLayer.categories[categoryIndex].tooltip) {
      var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, Number(categoryIndex)]);
      this.openTooltip(refreshLayer.categories[categoryIndex].tooltip, tooltipID)
    }
    if(refreshLayer.categories[categoryIndex].annotation) {
      var layeredAnnotation = new gviz.util.LayeredObject(2);
      layeredAnnotation.setLayer(0, baseLayer.categories[categoryIndex].annotation);
      layeredAnnotation.setLayer(1, refreshLayer.categories[categoryIndex].annotation);
      var annotation = layeredAnnotation.compact();
      this.drawAnnotation_(annotation, null, null, Number(categoryIndex))
    }
  }
};
// Input 286
gviz.canviz.GestureHandler = function(interactionEventTarget) {
  this.interactionEventTarget_ = interactionEventTarget;
  this.mouseButtonsDown_ = [];
  this.isDragging_ = !1;
  this.dragInfo_ = {targetID:null, startX:0, startY:0, curX:0, curY:0}
};
gviz.canviz.GestureHandler.prototype.handleMouseDown = function(position, targetID, button) {
  this.mouseButtonsDown_[button] = !0;
  0 === button && (this.dragInfo_.targetID = targetID, this.dragInfo_.startX = position.x, this.dragInfo_.startY = position.y, this.dragInfo_.curX = position.x, this.dragInfo_.curY = position.y)
};
gviz.canviz.GestureHandler.prototype.handlePageMouseUp = function(position, button) {
  this.mouseButtonsDown_[button] = !1;
  0 === button && this.isDragging_ && (this.isDragging_ = !1, this.dragInfo_.curX = position.x, this.dragInfo_.curY = position.y, this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_DRAG_END, {targetID:this.dragInfo_.targetID, cursorPosition:{x:this.dragInfo_.curX, y:this.dragInfo_.curY}}))
};
gviz.canviz.GestureHandler.prototype.handlePageMouseMove = function(position) {
  this.mouseButtonsDown_[0] && (this.dragInfo_.curX = position.x, this.dragInfo_.curY = position.y, this.isDragging_ || this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_DRAG_START, {targetID:this.dragInfo_.targetID, cursorPosition:{x:this.dragInfo_.startX, y:this.dragInfo_.startY}}), this.isDragging_ = !0, this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_DRAG, {targetID:this.dragInfo_.targetID, cursorPosition:{x:this.dragInfo_.curX, y:this.dragInfo_.curY}}))
};
gviz.canviz.GestureHandler.prototype.dispatchEvent = function(type, data) {
  this.interactionEventTarget_.dispatchEvent({type:type, data:data})
};
// Input 287
gviz.canviz.interactionEvents = {};
gviz.canviz.interactionEvents.EventType = {CHART_HOVER_IN:"chartHoverIn", CHART_HOVER_OUT:"chartHoverOut", CHART_MOUSE_MOVE:"chartMouseMove", CHART_MOUSE_UP:"chartMouseUp", CHART_MOUSE_DOWN:"chartMouseDown", CHART_CLICK:"chartClick", CHART_RIGHT_CLICK:"chartRightClick", CHART_DBL_CLICK:"chartDblClick", CHART_SCROLL:"chartScroll", CHART_DRAG_START:"chartDragStart", CHART_DRAG:"chartDrag", CHART_DRAG_END:"chartDragEnd", LEGEND_HOVER_IN:"legendHoverIn", LEGEND_HOVER_OUT:"legendHoverOut", LEGEND_CLICK:"legendClick", 
LEGEND_RIGHT_CLICK:"legendRightClick", LEGEND_ENTRY_HOVER_IN:"legendEntryHoverIn", LEGEND_ENTRY_HOVER_OUT:"legendEntryHoverOut", LEGEND_ENTRY_CLICK:"legendEntryClick", LEGEND_ENTRY_RIGHT_CLICK:"legendEntryRightClick", LEGEND_SCROLL_BUTTON_HOVER_IN:"legendScrollButtonHoverIn", LEGEND_SCROLL_BUTTON_HOVER_OUT:"legendScrollButtonHoverOut", LEGEND_SCROLL_BUTTON_CLICK:"legendScrollButtonClick", LEGEND_SCROLL_BUTTON_RIGHT_CLICK:"legendScrollButtonRightClick", SERIE_HOVER_IN:"serieHoverIn", SERIE_HOVER_OUT:"serieHoverOut", 
SERIE_CLICK:"serieClick", SERIE_RIGHT_CLICK:"serieRightClick", CATEGORY_HOVER_IN:"categoryHoverIn", CATEGORY_HOVER_OUT:"categoryHoverOut", CATEGORY_CLICK:"categoryClick", CATEGORY_RIGHT_CLICK:"categoryRightClick", DATUM_HOVER_IN:"datumHoverIn", DATUM_HOVER_OUT:"datumHoverOut", DATUM_CLICK:"datumClick", DATUM_RIGHT_CLICK:"datumRightClick", ANNOTATION_HOVER_IN:"annotationHoverIn", ANNOTATION_HOVER_OUT:"annotationHoverOut", ANNOTATION_CLICK:"annotationClick", ANNOTATION_RIGHT_CLICK:"annotationRightClick", 
TOOLTIP_HOVER_IN:"tooltipHoverIn", TOOLTIP_HOVER_OUT:"tooltipHoverOut", TOOLTIP_CLICK:"tooltipClick", TOOLTIP_RIGHT_CLICK:"tooltipRightClick", ACTIONS_MENU_ENTRY_HOVER_IN:"actionsMenuEntryHoverIn", ACTIONS_MENU_ENTRY_HOVER_OUT:"actionsMenuEntryHoverOut", ACTIONS_MENU_ENTRY_CLICK:"actionsMenuEntryClick", ACTIONS_MENU_ENTRY_RIGHT_CLICK:"actionsMenuEntryRightClick", REMOVE_SERIE_BUTTON_HOVER_IN:"removeSerieButtonHoverIn", REMOVE_SERIE_BUTTON_HOVER_OUT:"removeSerieButtonHoverOut", REMOVE_SERIE_BUTTON_CLICK:"removeSerieButtonClick", 
REMOVE_SERIE_BUTTON_RIGHT_CLICK:"removeSerieButtonRightClick"};
gviz.canviz.interactionEvents.TargetType = {CHART:"chart", LEGEND:"legend", LEGEND_ENTRY:"legendEntry", LEGEND_SCROLL_BUTTON:"legendScrollButton", SERIE:"serie", CATEGORY:"category", DATUM:"datum", ANNOTATION:"annotation", TOOLTIP:"tooltip", ACTIONS_MENU_ENTRY:"actionsMenuEntry", REMOVE_SERIE_BUTTON:"removeSerieButton"};
gviz.canviz.interactionEvents.OperationType = {HOVER_IN:"HoverIn", HOVER_OUT:"HoverOut", MOUSE_UP:"MouseUp", MOUSE_DOWN:"MouseDown", CLICK:"Click", RIGHT_CLICK:"RightClick", DBL_CLICK:"DblClick", SCROLL:"Scroll", DRAG_START:"DragStart", DRAG:"Drag", DRAG_END:"DragEnd"};
gviz.canviz.interactionEvents.generateEventType = function(targetType, operationType) {
  return targetType + operationType
};
// Input 288
gviz.canviz.ChartEventHandler = function(interactionEventTarget, renderer, overlayArea, chartType) {
  goog.Disposable.call(this);
  this.interactionEventTarget_ = interactionEventTarget;
  this.renderer = renderer;
  this.overlayArea = overlayArea;
  this.chartType_ = chartType;
  this.hoveredElementID_ = null;
  this.gestureHandler_ = new gviz.canviz.GestureHandler(interactionEventTarget);
  this.scrollHandler_ = null
};
goog.inherits(gviz.canviz.ChartEventHandler, goog.Disposable);
gviz.canviz.ChartEventHandler.prototype.disposeInternal = function() {
  this.renderer.clear();
  this.overlayArea.clear();
  goog.dispose(this.scrollHandler_);
  gviz.canviz.ChartEventHandler.superClass_.disposeInternal.call(this)
};
gviz.canviz.ChartEventHandler.prototype.listenToAllRendererEvents = function() {
  var canvas = this.renderer.getCanvas();
  goog.asserts.assert(canvas);
  this.listenToAllEvents_(goog.bind(function(eventType, listener) {
    this.renderer.setEventHandler(canvas, eventType, listener)
  }, this));
  goog.dispose(this.scrollHandler_);
  this.scrollHandler_ = new goog.events.MouseWheelHandler(this.renderer.getContainer());
  goog.events.listen(this.scrollHandler_, goog.events.MouseWheelHandler.EventType.MOUSEWHEEL, goog.bind(this.handleScrollEvent_, this))
};
gviz.canviz.ChartEventHandler.prototype.listenToAllOverlayAreaEvents = function() {
  var container = this.overlayArea.getContainer();
  this.listenToAllEvents_(goog.bind(function(eventType, listener) {
    this.overlayArea.setEventHandler(container, eventType, listener)
  }, this))
};
gviz.canviz.ChartEventHandler.prototype.listenToAllPageEvents = function() {
  var container = goog.dom.getDocument();
  this.listenToPageEvents_(goog.bind(function(eventType, listener) {
    this.overlayArea.setEventHandler(container, eventType, listener)
  }, this))
};
gviz.canviz.ChartEventHandler.prototype.listenToPageEvents_ = function(setEventHandler) {
  setEventHandler(goog.events.EventType.MOUSEMOVE, goog.bind(this.handlePageMouseMove_, this));
  setEventHandler(goog.events.EventType.MOUSEUP, goog.bind(this.handlePageMouseUp_, this))
};
gviz.canviz.ChartEventHandler.prototype.listenToAllEvents_ = function(setEventHandler) {
  setEventHandler(goog.events.EventType.MOUSEOVER, goog.bind(this.handleMouseoverAndMousemoveEvent_, this));
  setEventHandler(goog.events.EventType.MOUSEOUT, goog.bind(this.handleMouseoutEvent_, this));
  setEventHandler(goog.events.EventType.MOUSEMOVE, goog.bind(this.handleMouseoverAndMousemoveEvent_, this));
  setEventHandler(goog.events.EventType.MOUSEUP, goog.bind(this.handleMouseUpEvent_, this));
  setEventHandler(goog.events.EventType.MOUSEDOWN, goog.bind(this.handleMouseDownEvent_, this));
  setEventHandler(goog.events.EventType.CLICK, goog.bind(this.handleClickEvent_, this));
  setEventHandler(goog.events.EventType.CONTEXTMENU, goog.bind(this.handleRightClickEvent_, this));
  setEventHandler(goog.events.EventType.DBLCLICK, goog.bind(this.handleDblClickEvent_, this))
};
gviz.canviz.ChartEventHandler.prototype.handlePageMouseMove_ = function(event) {
  var positionInPage = goog.style.getClientPosition(this.renderer.getContainer()), position = goog.style.getClientPosition(event);
  position.x -= positionInPage.x;
  position.y -= positionInPage.y;
  this.gestureHandler_.handlePageMouseMove(position)
};
gviz.canviz.ChartEventHandler.prototype.handlePageMouseUp_ = function(event) {
  var positionInPage = goog.style.getClientPosition(this.renderer.getContainer()), position = goog.style.getClientPosition(event);
  position.x -= positionInPage.x;
  position.y -= positionInPage.y;
  this.gestureHandler_.handlePageMouseUp(position, event.button)
};
gviz.canviz.ChartEventHandler.prototype.handleMouseoverAndMousemoveEvent_ = function(event) {
  var cursorPosition = this.renderer.getCursorPosition(event), targetElementID = this.detectTargetElement(event);
  event.type == goog.events.EventType.MOUSEMOVE && this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_MOUSE_MOVE, {cursorPosition:cursorPosition, targetID:targetElementID});
  targetElementID != this.hoveredElementID_ && (goog.isDefAndNotNull(this.hoveredElementID_) && this.dispatchOutEvents_(this.hoveredElementID_), this.dispatchInEvents_(targetElementID, cursorPosition), this.hoveredElementID_ = targetElementID)
};
gviz.canviz.ChartEventHandler.prototype.handleMouseoutEvent_ = function(event) {
  var targetElementID = this.detectTargetElement(event);
  targetElementID == this.hoveredElementID_ && (this.dispatchOutEvents_(targetElementID), this.hoveredElementID_ = null)
};
gviz.canviz.ChartEventHandler.prototype.dispatchOutEvents_ = function(targetElementID) {
  this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_HOVER_OUT, null);
  this.dispatchInteractionEvent_(gviz.canviz.interactionEvents.OperationType.HOVER_OUT, targetElementID)
};
gviz.canviz.ChartEventHandler.prototype.dispatchInEvents_ = function(targetElementID, cursorPosition) {
  this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_HOVER_IN, {cursorPosition:cursorPosition});
  this.dispatchInteractionEvent_(gviz.canviz.interactionEvents.OperationType.HOVER_IN, targetElementID)
};
gviz.canviz.ChartEventHandler.prototype.handleMouseUpEvent_ = function(event) {
  var cursorPosition = this.renderer.getCursorPosition(event), targetElementID = this.detectTargetElement(event);
  this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_MOUSE_UP, {cursorPosition:cursorPosition, targetID:targetElementID});
  this.dispatchInteractionEvent_(gviz.canviz.interactionEvents.OperationType.MOUSE_UP, targetElementID)
};
gviz.canviz.ChartEventHandler.prototype.handleMouseDownEvent_ = function(event) {
  var cursorPosition = this.renderer.getCursorPosition(event), targetElementID = this.detectTargetElement(event);
  this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_MOUSE_DOWN, {cursorPosition:cursorPosition, targetID:targetElementID, preventDefault:goog.bind(event.preventDefault, event)});
  this.dispatchInteractionEvent_(gviz.canviz.interactionEvents.OperationType.MOUSE_DOWN, targetElementID);
  this.gestureHandler_.handleMouseDown(cursorPosition, targetElementID, event.button)
};
gviz.canviz.ChartEventHandler.prototype.handleClickEvent_ = function(event) {
  var cursorPosition = this.renderer.getCursorPosition(event), targetElementID = this.detectTargetElement(event);
  this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_CLICK, {cursorPosition:cursorPosition, targetID:targetElementID});
  this.dispatchInteractionEvent_(gviz.canviz.interactionEvents.OperationType.CLICK, targetElementID)
};
gviz.canviz.ChartEventHandler.prototype.handleRightClickEvent_ = function(event) {
  var cursorPosition = this.renderer.getCursorPosition(event), targetElementID = this.detectTargetElement(event);
  this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_RIGHT_CLICK, {cursorPosition:cursorPosition, targetID:targetElementID});
  this.dispatchInteractionEvent_(gviz.canviz.interactionEvents.OperationType.RIGHT_CLICK, targetElementID);
  goog.events.Event.preventDefault(event)
};
gviz.canviz.ChartEventHandler.prototype.handleDblClickEvent_ = function(event) {
  var cursorPosition = this.renderer.getCursorPosition(event), targetElementID = this.detectTargetElement(event);
  this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_DBL_CLICK, {cursorPosition:cursorPosition, targetID:targetElementID});
  this.dispatchInteractionEvent_(gviz.canviz.interactionEvents.OperationType.DBL_CLICK, targetElementID)
};
gviz.canviz.ChartEventHandler.prototype.handleScrollEvent_ = function(event) {
  var cursorPosition = this.renderer.getCursorPosition(event), targetElementID = this.detectTargetElement(event);
  this.dispatchEvent(gviz.canviz.interactionEvents.EventType.CHART_SCROLL, {cursorPosition:cursorPosition, targetID:targetElementID, wheelDelta:event.detail, preventDefault:goog.bind(event.preventDefault, event)});
  this.dispatchInteractionEvent_(gviz.canviz.interactionEvents.OperationType.SCROLL, targetElementID)
};
gviz.canviz.ChartEventHandler.prototype.dispatchInteractionEvent_ = function(interactionEventOperationType, targetElementID) {
  var targetElementTokens = targetElementID.split(gviz.canviz.idutils.TOKEN_SEPARATOR), targetElementType = targetElementTokens[0];
  switch(targetElementType) {
    case gviz.canviz.idutils.Token.TOOLTIP:
      var serieIndex = null, datumIndex = null, annotationIndex = null;
      this.chartType_ == gviz.canviz.Options.ChartType.PIE ? serieIndex = Number(targetElementTokens[1]) : 4 == targetElementTokens.length ? (serieIndex = targetElementTokens[1] ? Number(targetElementTokens[1]) : null, datumIndex = Number(targetElementTokens[2]), annotationIndex = Number(targetElementTokens[3])) : 3 == targetElementTokens.length ? (serieIndex = Number(targetElementTokens[1]), datumIndex = Number(targetElementTokens[2])) : datumIndex = Number(targetElementTokens[1]);
      var interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.TOOLTIP, interactionEventOperationType), interactionEventData = {serieIndex:serieIndex, datumIndex:datumIndex, annotationIndex:annotationIndex};
      this.dispatchEvent(interactionEventType, interactionEventData);
      break;
    case gviz.canviz.idutils.Token.ACTIONS_MENU_ENTRY:
      var interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.ACTIONS_MENU_ENTRY, interactionEventOperationType), entryID = targetElementTokens[1], interactionEventData = {entryID:entryID};
      this.dispatchEvent(interactionEventType, interactionEventData);
      break;
    case gviz.canviz.idutils.Token.LEGEND_ENTRY:
      var legendEntryIndex = Number(targetElementTokens[1]);
      if(0 > legendEntryIndex) {
        break
      }
      interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.LEGEND_ENTRY, interactionEventOperationType);
      interactionEventData = {legendEntryIndex:legendEntryIndex};
      this.dispatchEvent(interactionEventType, interactionEventData);
      break;
    case gviz.canviz.idutils.Token.LEGEND_SCROLL_BUTTON:
      var interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.LEGEND_SCROLL_BUTTON, interactionEventOperationType), scrollStep = Number(targetElementTokens[1]), interactionEventData = {scrollStep:scrollStep};
      this.dispatchEvent(interactionEventType, interactionEventData);
      break;
    case gviz.canviz.idutils.Token.REMOVE_SERIE_BUTTON:
      interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.REMOVE_SERIE_BUTTON, interactionEventOperationType);
      legendEntryIndex = Number(targetElementTokens[1]);
      interactionEventData = {legendEntryIndex:legendEntryIndex};
      this.dispatchEvent(interactionEventType, interactionEventData);
      break;
    default:
      this.dispatchInteractionEventForContent(interactionEventOperationType, targetElementID)
  }
};
gviz.canviz.ChartEventHandler.prototype.dispatchEvent = function(type, data) {
  this.interactionEventTarget_.dispatchEvent({type:type, data:data})
};
gviz.canviz.ChartEventHandler.prototype.getHoveredElementID = function() {
  return this.hoveredElementID_
};
// Input 289
gviz.canviz.AxisChartEventHandler = function(interactionEventTarget, renderer, overlayArea, chartDefinition) {
  gviz.canviz.ChartEventHandler.call(this, interactionEventTarget, renderer, overlayArea, chartDefinition.chartType);
  this.chartDefinition_ = chartDefinition;
  this.pointSensitivityAreas_ = this.createPointSensitivityAreas_()
};
goog.inherits(gviz.canviz.AxisChartEventHandler, gviz.canviz.ChartEventHandler);
gviz.canviz.AxisChartEventHandler.prototype.updateChartDefinition = function(chartDefinition) {
  this.chartDefinition_ = chartDefinition;
  this.pointSensitivityAreas_ = this.createPointSensitivityAreas_()
};
gviz.canviz.AxisChartEventHandler.prototype.createPointSensitivityAreas_ = function() {
  var chartDefinition = this.chartDefinition_;
  if(chartDefinition.chartType != gviz.canviz.Options.ChartType.FUNCTION && chartDefinition.chartType != gviz.canviz.Options.ChartType.SCATTER) {
    return{}
  }
  for(var pointSensitivityAreas = {}, series = chartDefinition.series, serieIndex = 0;serieIndex < series.length;serieIndex++) {
    var serie = series[serieIndex];
    if(gviz.canviz.chartdefinitionutil.isSeriePathBased(serie)) {
      for(var points = serie.points, pointIndex = 0;pointIndex < points.length;pointIndex++) {
        var point = points[pointIndex];
        if(point && point.scaled && !point.isNull) {
          var pointID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.POINT, serieIndex, pointIndex]), pointSensitivityAreaRadius = gviz.canviz.chartdefinitionutil.getPointSensitivityAreaRadius(point, serie);
          goog.asserts.assert(goog.isDefAndNotNull(pointSensitivityAreaRadius));
          pointSensitivityAreas[pointID] = {center:point.scaled, radius:pointSensitivityAreaRadius, serieIndex:serieIndex, datumIndex:pointIndex}
        }
      }
    }
  }
  return pointSensitivityAreas
};
gviz.canviz.AxisChartEventHandler.prototype.detectTargetElement = function(event) {
  var eventTarget = event.target, hoveredElement = this.renderer.getLogicalName(eventTarget);
  goog.asserts.assert(goog.isDefAndNotNull(hoveredElement));
  var cursorPosition = this.renderer.getCursorPosition(event), hoveredSensitivityArea = this.detectHoveredSensitivityArea_(cursorPosition);
  if(event.type == goog.events.EventType.MOUSEOUT) {
    var previouslyHoveredSensitivityArea = this.getHoveredElementID();
    if(!goog.isDefAndNotNull(previouslyHoveredSensitivityArea)) {
      return hoveredElement
    }
    hoveredSensitivityArea = hoveredSensitivityArea == previouslyHoveredSensitivityArea ? null : previouslyHoveredSensitivityArea
  }
  var targetElement;
  if(goog.isDefAndNotNull(hoveredSensitivityArea)) {
    var hoveredElementPrecedence = this.getElementPrecedence_(hoveredElement), hoveredSensitivityAreaPrecedence = this.getElementPrecedence_(hoveredSensitivityArea);
    targetElement = hoveredElementPrecedence > hoveredSensitivityAreaPrecedence ? hoveredElement : hoveredSensitivityArea
  }else {
    targetElement = hoveredElement
  }
  return this.validateDetectedTargetElement_(targetElement) ? targetElement : gviz.canviz.idutils.Token.CHART
};
gviz.canviz.AxisChartEventHandler.prototype.detectHoveredSensitivityArea_ = function(cursorPosition) {
  var chartArea = new goog.math.Rect(this.chartDefinition_.chartArea.left + 1, this.chartDefinition_.chartArea.top + 1, this.chartDefinition_.chartArea.width - 2, this.chartDefinition_.chartArea.height - 2);
  if(!chartArea.contains(cursorPosition)) {
    return null
  }
  var focusTarget = this.chartDefinition_.focusTarget;
  switch(focusTarget) {
    case gviz.canviz.Options.FocusTarget.DATUM:
      return this.detectHoveredPoint_(cursorPosition);
    case gviz.canviz.Options.FocusTarget.CATEGORY:
      return this.detectHoveredCategory_(cursorPosition);
    case gviz.canviz.Options.FocusTarget.SERIES:
      break;
    default:
      goog.asserts.fail('Invalid focus target "' + focusTarget + '"')
  }
  return null
};
gviz.canviz.AxisChartEventHandler.prototype.detectHoveredCategory_ = function(cursorPosition) {
  for(var categories = this.chartDefinition_.categories, i = 0;i < categories.length;i++) {
    var sensitivityArea = categories[i].sensitivityArea;
    if(sensitivityArea && sensitivityArea.contains(cursorPosition)) {
      return gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.CATEGORY_SENSITIVITY_AREA, i])
    }
  }
  return null
};
gviz.canviz.AxisChartEventHandler.prototype.detectHoveredPoint_ = function(cursorPosition) {
  var x = cursorPosition.x, y = cursorPosition.y, hoveredPoint = null, minD2 = Infinity, pointID;
  for(pointID in this.pointSensitivityAreas_) {
    var circle = this.pointSensitivityAreas_[pointID], cx = circle.center.x, cy = circle.center.y, r = circle.radius;
    if(cx - x <= r && cx - x >= -r && cy - y <= r && cy - y >= -r) {
      var d2 = (cx - x) * (cx - x) + (cy - y) * (cy - y);
      d2 <= r * r && d2 <= minD2 && (hoveredPoint = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.POINT_SENSITIVITY_AREA, circle.serieIndex, circle.datumIndex]), minD2 = d2)
    }
  }
  return hoveredPoint
};
gviz.canviz.AxisChartEventHandler.prototype.validateDetectedTargetElement_ = function(targetElementID) {
  var focusTarget = this.chartDefinition_.focusTarget;
  if(focusTarget == gviz.canviz.Options.FocusTarget.CATEGORY) {
    var targetElementTokens = targetElementID.split(gviz.canviz.idutils.TOKEN_SEPARATOR), targetElementType = targetElementTokens[0];
    return targetElementType != gviz.canviz.idutils.Token.BAR && targetElementType != gviz.canviz.idutils.Token.BUBBLE && targetElementType != gviz.canviz.idutils.Token.CANDLESTICK && targetElementType != gviz.canviz.idutils.Token.POINT && targetElementType != gviz.canviz.idutils.Token.POINT_SENSITIVITY_AREA && targetElementType != gviz.canviz.idutils.Token.STEPPED_AREA_BAR
  }
  return!0
};
gviz.canviz.AxisChartEventHandler.prototype.getElementPrecedence_ = function(elementLogicalName) {
  var elementTokens = elementLogicalName.split(gviz.canviz.idutils.TOKEN_SEPARATOR);
  return goog.array.indexOf(gviz.canviz.idutils.TOKEN_PRECEDENCE, elementTokens[0])
};
gviz.canviz.AxisChartEventHandler.prototype.dispatchInteractionEventForContent = function(interactionEventOperationType, targetElementID) {
  var targetElementTokens = targetElementID.split(gviz.canviz.idutils.TOKEN_SEPARATOR), targetElementType = targetElementTokens[0];
  switch(targetElementType) {
    case gviz.canviz.idutils.Token.BAR:
    ;
    case gviz.canviz.idutils.Token.BUBBLE:
    ;
    case gviz.canviz.idutils.Token.CANDLESTICK:
    ;
    case gviz.canviz.idutils.Token.POINT:
    ;
    case gviz.canviz.idutils.Token.POINT_SENSITIVITY_AREA:
    ;
    case gviz.canviz.idutils.Token.STEPPED_AREA_BAR:
      var serieIndex = Number(targetElementTokens[1]), datumIndex = Number(targetElementTokens[2]), interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.DATUM, interactionEventOperationType), interactionEventData = {serieIndex:serieIndex, datumIndex:datumIndex};
      this.dispatchEvent(interactionEventType, interactionEventData);
      break;
    case gviz.canviz.idutils.Token.CATEGORY_SENSITIVITY_AREA:
      var categoryIndex = Number(targetElementTokens[1]), interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.CATEGORY, interactionEventOperationType), interactionEventData = {serieIndex:null, datumIndex:categoryIndex};
      this.dispatchEvent(interactionEventType, interactionEventData);
      break;
    case gviz.canviz.idutils.Token.ANNOTATION_TEXT:
      this.dispatchAnnotationEvent_(interactionEventOperationType, targetElementTokens);
      break;
    case gviz.canviz.idutils.Token.LINE:
    ;
    case gviz.canviz.idutils.Token.AREA:
      serieIndex = Number(targetElementTokens[1]), interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.SERIE, interactionEventOperationType), interactionEventData = {serieIndex:serieIndex, datumIndex:null}, this.dispatchEvent(interactionEventType, interactionEventData)
  }
};
gviz.canviz.AxisChartEventHandler.prototype.dispatchAnnotationEvent_ = function(operationType, targetElementTokens) {
  var interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.ANNOTATION, operationType), annotationIndex = Number(goog.array.peek(targetElementTokens));
  if(3 == targetElementTokens.length) {
    var categoryIndex = Number(targetElementTokens[1]), interactionEventData = {serieIndex:null, datumIndex:categoryIndex, annotationIndex:annotationIndex}
  }else {
    var serieIndex = Number(targetElementTokens[1]), datumIndex = Number(targetElementTokens[2]), interactionEventData = {serieIndex:serieIndex, datumIndex:datumIndex, annotationIndex:annotationIndex}
  }
  this.dispatchEvent(interactionEventType, interactionEventData)
};
// Input 290
gviz.canviz.ActionsMenuDefiner = function(chartOptions, chartTextStyle) {
  this.entries_ = {};
  this.actions_ = {};
  this.actionsMenu_ = [];
  this.updateOptions(chartOptions, chartTextStyle)
};
gviz.canviz.ActionsMenuDefiner.prototype.refreshActions_ = function() {
  goog.array.forEach(this.actionsMenu_, function(actionId) {
    this.setEntry(this.actions_[actionId])
  }, this)
};
gviz.canviz.ActionsMenuDefiner.prototype.updateOptions = function(chartOptions, chartTextStyle) {
  this.textStyle_ = chartOptions.inferTextStyleValue("actionsMenu.textStyle", chartTextStyle);
  this.disabledTextStyle_ = chartOptions.inferTextStyleValue("actionsMenu.disabledTextStyle", chartTextStyle);
  this.refreshActions_()
};
gviz.canviz.ActionsMenuDefiner.prototype.createEntry_ = function(action, opt_disabled) {
  return gviz.util.tooltip.definer.createBodyTextLineEntry(action.text || "", opt_disabled ? this.disabledTextStyle_ : this.textStyle_, null, null, null, null, null, !1, opt_disabled ? null : action.id)
};
gviz.canviz.ActionsMenuDefiner.prototype.getEntries = function() {
  for(var entries = [], i = 0, len = this.actionsMenu_.length;i < len;i++) {
    var actionId = this.actionsMenu_[i], action = this.actions_[actionId];
    if(!action.visible || action.visible()) {
      var isDisabled = action.enabled && !action.enabled(), entry = null, entry = isDisabled ? this.createEntry_(action, !0) : goog.object.unsafeClone(this.entries_[actionId]);
      entries.push(entry)
    }
  }
  return entries
};
gviz.canviz.ActionsMenuDefiner.prototype.setEntry = function(action) {
  if(!action.id) {
    throw Error("Missing mandatory ID for action.");
  }
  var existingAction = null;
  this.actions_[action.id] ? existingAction = this.actions_[action.id] : (existingAction = this.actions_[action.id] = {id:action.id, text:void 0, visible:void 0, enabled:void 0, action:void 0}, this.actionsMenu_.push(action.id));
  goog.object.extend(existingAction, action);
  this.entries_[action.id] = this.createEntry_(existingAction)
};
gviz.canviz.ActionsMenuDefiner.prototype.getAction = function(action) {
  var actionDefinition = this.actions_[action];
  actionDefinition && (actionDefinition = goog.object.unsafeClone(actionDefinition));
  return actionDefinition
};
gviz.canviz.ActionsMenuDefiner.prototype.removeEntry = function(action) {
  action in this.entries_ && delete this.entries_[action];
  action in this.actions_ && delete this.actions_[action];
  var actionIndex = this.actionsMenu_.indexOf(action);
  0 <= actionIndex && this.actionsMenu_.splice(actionIndex, 1)
};
gviz.canviz.ActionsMenuDefiner.prototype.createInteractiveEntry_ = function(interactivityLayer, entryIndex) {
  interactivityLayer.bodyLayout = interactivityLayer.bodyLayout || {};
  var bodyLayout = interactivityLayer.bodyLayout;
  bodyLayout.entries = bodyLayout.entries || {};
  var entriesLayout = bodyLayout.entries;
  entriesLayout[entryIndex] = entriesLayout[entryIndex] || {};
  var entryLayout = entriesLayout[entryIndex];
  entryLayout.entry = entryLayout.entry || {};
  return entryLayout.entry
};
gviz.canviz.ActionsMenuDefiner.ENTRY_GLOW_COLOR = "#DDD";
gviz.canviz.ActionsMenuDefiner.prototype.extendInteractivityLayer = function(tooltipDefinition, actionsMenuState, tooltipInteractivityLayer) {
  if(!tooltipDefinition.html) {
    var entryID = actionsMenuState.focused.entryID;
    if(goog.isDefAndNotNull(entryID)) {
      var entryIndex = goog.array.findIndex(tooltipDefinition.bodyLayout.entries, function(entryLayout) {
        return entryLayout.entry.data.id == entryID
      });
      if(-1 !== entryIndex) {
        var interactiveEntry = this.createInteractiveEntry_(tooltipInteractivityLayer, entryIndex);
        interactiveEntry.data = interactiveEntry.data || {};
        interactiveEntry.data.background = interactiveEntry.data.background || {};
        var background = interactiveEntry.data.background;
        background.brush = gviz.graphics.Brush.createFillBrush(gviz.canviz.ActionsMenuDefiner.ENTRY_GLOW_COLOR)
      }
    }
  }
};
// Input 291
gviz.common = {};
gviz.common.text = {};
gviz.common.text.Line = function(line) {
  this.x = line.x || 0;
  this.y = line.y || 0;
  this.coord_ = new gviz.math.Coordinate(this.x, this.y);
  this.length = line.length;
  this.text = line.text
};
// Input 292
gviz.common.text.TextBlock = function(textBlock) {
  this.text = textBlock.text;
  this.textStyle = textBlock.textStyle;
  this.lines = textBlock.lines;
  this.paralAlign = textBlock.paralAlign;
  this.perpenAlign = textBlock.perpenAlign;
  this.tooltip = void 0 !== textBlock.tooltip ? textBlock.tooltip : "";
  this.tooltipText = textBlock.tooltipText;
  this.angle = goog.isDefAndNotNull(textBlock.angle) ? textBlock.angle : 0;
  this.anchor = void 0 !== textBlock.anchor ? textBlock.anchor : null;
  this.truncated = !!textBlock.truncated
};
gviz.common.text.TextBlock.Position = {TOP:"top", RIGHT:"right"};
gviz.common.text.TextBlock.prototype.calcLineBoundingBox = function(textLine) {
  goog.asserts.assert(!goog.isDefAndNotNull(this.angle) || 0 == this.angle, "Can only calculate the bounding box of axis aligned texts (angle is 0)");
  var anchor = this.anchor ? this.anchor : {x:0, y:0}, xStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(textLine.x + anchor.x, textLine.length, this.paralAlign), yStartEnd = gviz.graphics.TextAlign.getAbsoluteCoordinates(textLine.y + anchor.y, this.textStyle.fontSize, this.perpenAlign);
  return xStartEnd.start == xStartEnd.end || yStartEnd.start == yStartEnd.end ? null : new goog.math.Box(yStartEnd.start, xStartEnd.end, yStartEnd.end, xStartEnd.start)
};
gviz.common.text.TextBlock.prototype.calcBoundingBox = function() {
  var self = this, linesBoundingBoxes = goog.array.map(this.lines, function(line) {
    return self.calcLineBoundingBox(line)
  }), linesBoundingBoxes = goog.array.filter(linesBoundingBoxes, goog.isDefAndNotNull);
  return gviz.util.calcBoundingBox(linesBoundingBoxes)
};
gviz.common.text.TextBlock.createToFit = function(text, textStyle, position, boundingRect, textMeasureFunction, appendTooltips, opt_sideMargin, opt_topMargin) {
  var sideMargin = goog.isNumber(opt_sideMargin) ? opt_sideMargin : 0, topMargin = goog.isNumber(opt_topMargin) ? opt_topMargin : 0, textSize = textMeasureFunction(text, textStyle), fits = textSize.fitsInside(boundingRect.getSize()), label = {}, lines = [], linePadding = 2;
  label.text = text;
  label.textStyle = textStyle;
  if(position === gviz.common.text.TextBlock.Position.TOP) {
    var labelX = Math.floor(boundingRect.getCenter().x), labelY = boundingRect.top + topMargin;
    label.paralAlign = gviz.graphics.TextAlign.CENTER;
    label.perpenAlign = gviz.graphics.TextAlign.START
  }else {
    if(position === gviz.common.text.TextBlock.Position.RIGHT) {
      labelX = boundingRect.left + (boundingRect.width - sideMargin), labelY = Math.floor(boundingRect.getCenter().y), label.paralAlign = gviz.graphics.TextAlign.END, label.perpenAlign = gviz.graphics.TextAlign.CENTER
    }else {
      throw Error("Invalid text block position.");
    }
  }
  if(!fits || textSize.width > boundingRect.width - sideMargin) {
    if(textSize.height < boundingRect.height) {
      var maxLines = boundingRect.height / (textSize.height + linePadding), textLayout = gviz.canviz.textutils.calcTextLayout(textMeasureFunction, text, textStyle, boundingRect.width - sideMargin, maxLines), lines = textLayout.lines;
      if(textLayout.needTooltip) {
        var tooltipText = text;
        label.truncated = !0
      }
    }else {
      if(boundingRect.height > textStyle.fontSize / 3) {
        tooltipText = text, lines = [gviz.canviz.Messages.MSG_MISSING_TEXT_INDICATION], labelY = Math.floor(boundingRect.getCenter().y), label.perpenAlign = gviz.graphics.TextAlign.CENTER, label.truncated = !0
      }else {
        return null
      }
    }
  }
  label.lines = [];
  if(lines.length) {
    for(var y = 0, i = 0, leni = lines.length;i < leni;i++) {
      label.lines.push(new gviz.common.text.Line({x:0, y:y, length:boundingRect.width, text:lines[i]})), y += textSize.height
    }
  }else {
    label.lines.push(new gviz.common.text.Line({x:0, y:0, length:textSize.width, text:text}))
  }
  label.angle = 0;
  label.anchor = new gviz.math.Coordinate(labelX, labelY);
  appendTooltips && tooltipText && (label.tooltipText = {hasHtmlContent:!1, hasCustomContent:!1, content:tooltipText});
  return new gviz.common.text.TextBlock(label)
};
// Input 293
google.visualization.style = {};
google.visualization.style.parseStyle = function(css) {
  for(var ruleSets = goog.array.filter(css.split("}"), function(item) {
    return goog.isDefAndNotNull(item) && "" !== goog.string.trim(item)
  }), rules = {}, i = 0;i < ruleSets.length;i++) {
    var ruleSet = ruleSets[i].split("{"), selectors = goog.array.map(ruleSet[0].split(","), goog.string.trim), style = goog.style.parseStyleAttribute(goog.string.trim(ruleSet[1]));
    0 === selectors.length ? goog.object.extend(rules, style) : goog.array.forEach(selectors, function(selector) {
      rules[selector] = rules[selector] || {};
      goog.object.extend(rules[selector], style)
    })
  }
  return rules
};
// Input 294
gviz.canviz.Theme = {};
gviz.canviz.Theme.themes_ = {};
gviz.canviz.Theme.predefinedThemesRegistered_ = !1;
gviz.canviz.Theme.THEME_NAME_CLASSIC = "classic";
gviz.canviz.Theme.THEME_NAME_MAXIMIZED = "maximized";
gviz.canviz.Theme.THEME_NAME_SPARKLINE = "sparkline";
gviz.canviz.Theme.registerTheme = function(theme, name) {
  gviz.canviz.Theme.themes_[name] = theme
};
gviz.canviz.Theme.registerPredefinedThemes_ = function() {
  var registerTheme = gviz.canviz.Theme.registerTheme, theme = {colors:[{color:"#dea19b", dark:"#ad7d79", light:"#ffd1c9"}, {color:"#cdc785", dark:"#aea971", light:"#eeeeac"}, {color:"#d6b9db", dark:"#a992ad", light:"#fff0db"}, {color:"#a2c488", dark:"#7f9a6b", light:"#d2feb0"}, {color:"#ffbc46", dark:"#ce9839", light:"#eeee5b"}, {color:"#9bbdde", dark:"#7993ad", light:"#c991ff"}], backgroundColor:{gradient:{color1:"#8080ff", color2:"#000020", x1:"0%", y1:"0%", x2:"100%", y2:"100%"}}, titleTextStyle:{color:"white"}, 
  hAxis:{textStyle:{color:"white"}, titleTextStyle:{color:"white"}}, vAxis:{textStyle:{color:"white"}, titleTextStyle:{color:"white"}}, legend:{textStyle:{color:"white"}}, chartArea:{backgroundColor:{stroke:"#e0e0e0", fill:"none"}}, areaOpacity:0.8};
  registerTheme(theme, gviz.canviz.Theme.THEME_NAME_CLASSIC);
  theme = {titlePosition:"in", axisTitlesPosition:"in", legend:{position:"in"}, chartArea:{width:"100%", height:"100%"}, vAxis:{textPosition:"in"}, hAxis:{textPosition:"in"}};
  registerTheme(theme, gviz.canviz.Theme.THEME_NAME_MAXIMIZED);
  theme = {enableInteractivity:!1, legend:{position:"none"}, seriesType:"area", lineWidth:1.6, chartArea:{width:"100%", height:"100%"}, vAxis:{textPosition:"none", gridlines:{color:"none"}, baselineColor:"none"}, hAxis:{textPosition:"none", gridlines:{color:"none"}, baselineColor:"none"}};
  registerTheme(theme, gviz.canviz.Theme.THEME_NAME_SPARKLINE);
  gviz.canviz.Theme.predefinedThemesRegistered_ = !0
};
gviz.canviz.Theme.getTheme = function(name) {
  gviz.canviz.Theme.predefinedThemesRegistered_ || gviz.canviz.Theme.registerPredefinedThemes_();
  return gviz.canviz.Theme.themes_[name]
};
gviz.canviz.Theme.toStandardColor = function(color) {
  var standardColor = {};
  standardColor.color = color.color || color;
  var hexColor = gviz.graphics.util.parseColor(standardColor.color);
  if(hexColor == gviz.graphics.util.NO_COLOR) {
    standardColor.dark = color.darker || hexColor, standardColor.light = color.lighter || hexColor
  }else {
    var rgbColor = goog.color.hexToRgb(hexColor);
    standardColor.dark = color.darker || goog.color.rgbArrayToHex(goog.color.darken(rgbColor, 0.25));
    standardColor.light = color.lighter || goog.color.rgbArrayToHex(goog.color.lighten(rgbColor, 0.25))
  }
  return standardColor
};
// Input 295
gviz.canviz.BubbleChartDefiner = function(dataView, options, textMeasureFunction, chartDef) {
  this.dataView_ = dataView;
  this.options_ = options;
  this.chartDef_ = chartDef;
  this.textMeasureFunction_ = textMeasureFunction;
  var defaultTextStyle = {fontName:chartDef.defaultFontName, fontSize:chartDef.defaultFontSize, auraColor:chartDef.insideLabelsAuraColor};
  this.textStyle_ = this.options_.inferTextStyleValue("bubble.textStyle", defaultTextStyle);
  this.stroke_ = this.options_.inferColorValue("bubble.stroke", gviz.canviz.BubbleChartDefiner.DEFAULT_BUBBLE_STROKE);
  this.opacity_ = this.options_.inferRatioNumberValue("bubble.opacity", gviz.canviz.BubbleChartDefiner.DEFAULT_BUBBLE_OPACITY);
  this.nameColumnIdx_ = 0;
  this.xColumnIdx_ = 1;
  this.yColumnIdx_ = 2;
  this.colorColumnIdx_ = 3;
  this.sizeColumnIdx_ = 4;
  this.colorDataType_ = this.sizeColumnLabel_ = this.colorColumnLabel_ = this.yColumnLabel_ = this.xColumnLabel_ = "";
  this.discreteColors_ = this.options_.inferValue("colors", gviz.canviz.Options.DEFAULT_DISCRETE_COLORS);
  this.defaultColor_ = gviz.canviz.Theme.toStandardColor(this.discreteColors_[0]).color;
  this.sizeScale_ = this.colorScale_ = this.sizeRange_ = this.colorRange_ = this.orderedColorGroups_ = this.colorGroups_ = null;
  this.init_()
};
gviz.canviz.BubbleChartDefiner.DEFAULT_BUBBLE_OPACITY = 0.8;
gviz.canviz.BubbleChartDefiner.DEFAULT_BUBBLE_STROKE = "#ccc";
gviz.canviz.BubbleChartDefiner.prototype.init_ = function() {
  var chartDef = this.chartDef_, dataView = this.dataView_, numOfCols = dataView.getNumberOfColumns();
  if(3 > numOfCols) {
    throw Error("Data table should have at least 3 columns");
  }
  var validateColumnType = function(columnIndex, shouldEqual, expectedTypes) {
    if(dataView.getNumberOfColumns() <= columnIndex) {
      return""
    }
    var actualType = dataView.getColumnType(columnIndex);
    if(shouldEqual && !goog.array.contains(expectedTypes, actualType)) {
      throw Error("Column " + columnIndex + " must be of type " + expectedTypes.join("/"));
    }
    if(!shouldEqual && goog.array.contains(expectedTypes, actualType)) {
      throw Error("Column " + columnIndex + " cannot be of type " + expectedTypes.join("/"));
    }
    return actualType
  };
  validateColumnType(this.nameColumnIdx_, !0, ["string"]);
  var xDataType = validateColumnType(this.xColumnIdx_, !1, ["string"]), yDataType = validateColumnType(this.yColumnIdx_, !1, ["string"]);
  this.xColumnLabel_ = dataView.getColumnLabel(this.xColumnIdx_);
  this.yColumnLabel_ = dataView.getColumnLabel(this.yColumnIdx_);
  goog.isNumber(this.colorColumnIdx_) && this.colorColumnIdx_ < numOfCols ? (this.colorDataType_ = validateColumnType(this.colorColumnIdx_, !0, ["number", "string"]), "string" == this.colorDataType_ && (this.colorGroups_ = {}, this.orderedColorGroups_ = []), this.colorColumnLabel_ = dataView.getColumnLabel(this.colorColumnIdx_)) : this.colorColumnIdx_ = null;
  var sortBySize = !1;
  goog.isNumber(this.sizeColumnIdx_) && this.sizeColumnIdx_ < numOfCols ? (validateColumnType(this.sizeColumnIdx_, !0, ["number"]), this.sizeColumnLabel_ = dataView.getColumnLabel(this.sizeColumnIdx_), sortBySize = this.options_.inferBooleanValue("sortBubblesBySize", !0)) : this.sizeColumnIdx_ = null;
  chartDef.categories = [];
  chartDef.dataTableToCategoryMap = {};
  for(var i = 0;i < dataView.getNumberOfRows();i++) {
    var dataTableIdx = dataView.getTableRowIndex(i);
    chartDef.dataTableToCategoryMap[dataTableIdx] = i
  }
  chartDef.series = [{type:gviz.canviz.Options.SerieType.BUBBLES, visiblePoints:!0, sortBySize:sortBySize, points:[], colorGroups:this.colorGroups_, orderedColorGroups:this.orderedColorGroups_}];
  chartDef.domainDataType = xDataType;
  chartDef.targetAxisToDataType = [yDataType];
  chartDef.serieTypeCount = {};
  chartDef.serieTypeCount[gviz.canviz.Options.SerieType.BUBBLES] = 1;
  chartDef.legendEntries = []
};
gviz.canviz.BubbleChartDefiner.prototype.isContinuousColorMode = function() {
  return"number" == this.colorDataType_
};
gviz.canviz.BubbleChartDefiner.prototype.findValuesClosestToZero = function(hAxis, vAxis) {
  for(var dataView = this.dataView_, i = 0;i < dataView.getNumberOfRows();i++) {
    var xValue = dataView.getValue(i, this.xColumnIdx_), yValue = dataView.getValue(i, this.yColumnIdx_), xNumeric = hAxis.valueScale.valueToUnscaledNumber(xValue), yNumeric = vAxis.valueScale.valueToUnscaledNumber(yValue);
    goog.isDefAndNotNull(xNumeric) && hAxis.markClosestValueToZero(xNumeric);
    goog.isDefAndNotNull(yNumeric) && vAxis.markClosestValueToZero(yNumeric)
  }
};
gviz.canviz.BubbleChartDefiner.prototype.calcBubblesLayout = function(hAxis, vAxis, colorBarDefiner) {
  for(var i = 0;i < this.dataView_.getNumberOfRows();i++) {
    var point = this.calcBubbleLayout_(hAxis, vAxis, i);
    this.chartDef_.series[0].points.push(point)
  }
  if("number" == this.colorDataType_) {
    this.colorScale_ = gviz.colorbar.Scale.create(this.options_, this.colorRange_), colorBarDefiner.setScale(this.colorScale_)
  }else {
    if("string" == this.colorDataType_) {
      for(i = 0;i < this.orderedColorGroups_.length;i++) {
        var colorGroupName = this.orderedColorGroups_[i], colorGroup = this.colorGroups_[colorGroupName];
        colorGroup.visibleInLegend && this.chartDef_.legendEntries.push({index:i, id:colorGroupName, text:colorGroup.labelInLegend, brush:new gviz.graphics.Brush({fill:colorGroup.color}), isVisible:!0})
      }
    }
  }
  this.sizeScale_ = gviz.SizeScale.create(this.options_, this.sizeRange_)
};
gviz.canviz.BubbleChartDefiner.prototype.calcBubbleLayout_ = function(hAxis, vAxis, idx) {
  var dataView = this.dataView_, id = dataView.getValue(idx, this.nameColumnIdx_), name = dataView.getFormattedValue(idx, this.nameColumnIdx_), xValue = dataView.getValue(idx, this.xColumnIdx_), yValue = dataView.getValue(idx, this.yColumnIdx_), color = null;
  if(goog.isDefAndNotNull(this.colorColumnIdx_) && (color = dataView.getValue(idx, this.colorColumnIdx_), !goog.isDefAndNotNull(color))) {
    return null
  }
  var size = null;
  if(goog.isDefAndNotNull(this.sizeColumnIdx_) && (size = dataView.getValue(idx, this.sizeColumnIdx_), !goog.isDefAndNotNull(size))) {
    return null
  }
  var nameLength = this.textMeasureFunction_(name, this.textStyle_).width;
  if("number" == this.colorDataType_) {
    this.colorRange_ = gviz.util.extendRangeToInclude(this.colorRange_, color)
  }else {
    if("string" == this.colorDataType_) {
      var colorGroupName = color, colorGroup = this.colorGroups_[colorGroupName];
      if(!colorGroup) {
        var index = this.orderedColorGroups_.length, optionPrefix = "series." + colorGroupName + ".", rawColor = this.options_.inferColorValue(optionPrefix + "color", this.discreteColors_[index % this.discreteColors_.length]), realColor = gviz.canviz.Theme.toStandardColor(rawColor), visibleInLegend = this.options_.inferBooleanValue(optionPrefix + "visibleInLegend", !0), labelInLegend = this.options_.inferStringValue(optionPrefix + "labelInLegend", colorGroupName), colorGroup = {color:realColor.color, 
        visibleInLegend:visibleInLegend, labelInLegend:labelInLegend};
        this.colorGroups_[colorGroupName] = colorGroup;
        this.orderedColorGroups_.push(colorGroupName)
      }
    }
  }
  this.sizeRange_ = gviz.util.extendRangeToInclude(this.sizeRange_, size);
  var xNumeric = hAxis.valueScale.valueToNumber(xValue), yNumeric = vAxis.valueScale.valueToNumber(yValue);
  if(goog.isNull(xNumeric) || goog.isNull(yNumeric)) {
    return null
  }
  var shouldExtendAxesRange = hAxis.isValueInViewWindow(xNumeric) && vAxis.isValueInViewWindow(yNumeric);
  shouldExtendAxesRange && (hAxis.extendRangeToIncludeNumber(xNumeric), vAxis.extendRangeToIncludeNumber(yNumeric));
  var tooltipText = this.calcTooltipText_(idx, name);
  return{id:id, text:name, textLength:nameLength, textStyle:this.textStyle_, tooltipText:tooltipText, nonScaled:{x:xNumeric, y:yNumeric, color:color, size:size}}
};
gviz.canviz.BubbleChartDefiner.prototype.calcTooltipText_ = function(idx, name) {
  var dataView = this.dataView_, x = dataView.getFormattedValue(idx, this.xColumnIdx_), y = dataView.getFormattedValue(idx, this.yColumnIdx_), lines = [{title:this.xColumnLabel_, value:x}, {title:this.yColumnLabel_, value:y}];
  if(goog.isDefAndNotNull(this.colorColumnIdx_)) {
    var color = dataView.getFormattedValue(idx, this.colorColumnIdx_);
    lines.push({title:this.colorColumnLabel_, value:color})
  }
  if(goog.isDefAndNotNull(this.sizeColumnIdx_)) {
    var size = dataView.getFormattedValue(idx, this.sizeColumnIdx_);
    lines.push({title:this.sizeColumnLabel_, value:size})
  }
  return{title:name, lines:lines}
};
gviz.canviz.BubbleChartDefiner.prototype.scaleBubble = function(hAxis, vAxis, nonScaledPoint) {
  var x = hAxis.calcPositionForNumericValue(nonScaledPoint.x), y = vAxis.calcPositionForNumericValue(nonScaledPoint.y), color;
  "number" == this.colorDataType_ ? (goog.asserts.assert(this.colorScale_), color = this.colorScale_.getColorFor(nonScaledPoint.color)) : color = "string" == this.colorDataType_ ? this.colorGroups_[nonScaledPoint.color].color : this.defaultColor_;
  var brush = new gviz.graphics.Brush({fill:color, fillOpacity:this.opacity_, stroke:this.stroke_});
  goog.asserts.assert(this.sizeScale_);
  var radius = this.sizeScale_.getRadiusFor(nonScaledPoint.size);
  return{x:x, y:y, brush:brush, radius:radius, sensitivityAreaRadius:radius}
};
// Input 296
gviz.canviz.axis.Milliseconds = {};
gviz.canviz.axis.Milliseconds.MILLISECOND = 1;
gviz.canviz.axis.Milliseconds.SECOND = 1E3;
gviz.canviz.axis.Milliseconds.MINUTE = 60 * gviz.canviz.axis.Milliseconds.SECOND;
gviz.canviz.axis.Milliseconds.HOUR = 60 * gviz.canviz.axis.Milliseconds.MINUTE;
gviz.canviz.axis.Milliseconds.DAY = 24 * gviz.canviz.axis.Milliseconds.HOUR;
gviz.canviz.axis.Milliseconds.WEEK = 7 * gviz.canviz.axis.Milliseconds.DAY;
gviz.canviz.axis.Milliseconds.MONTH = 30.436875 * gviz.canviz.axis.Milliseconds.DAY;
gviz.canviz.axis.Milliseconds.QUARTER = 91.310625 * gviz.canviz.axis.Milliseconds.DAY;
gviz.canviz.axis.Milliseconds.YEAR = 365.2425 * gviz.canviz.axis.Milliseconds.DAY;
gviz.canviz.axis.Milliseconds.TIME_UNITS = [gviz.canviz.axis.Milliseconds.MILLISECOND, gviz.canviz.axis.Milliseconds.SECOND, gviz.canviz.axis.Milliseconds.MINUTE, gviz.canviz.axis.Milliseconds.HOUR, gviz.canviz.axis.Milliseconds.DAY, gviz.canviz.axis.Milliseconds.WEEK, gviz.canviz.axis.Milliseconds.MONTH, gviz.canviz.axis.Milliseconds.QUARTER, gviz.canviz.axis.Milliseconds.YEAR];
gviz.canviz.axis.Milliseconds.TIME_UNIT = {MILLISECOND:"MILLISECOND", SECOND:"SECOND", MINUTE:"MINUTE", HOUR:"HOUR", DAY:"DAY", WEEK:"WEEK", MONTH:"MONTH", QUARTER:"QUARTER", YEAR:"YEAR"};
gviz.canviz.axis.Milliseconds.getFinestUnit = function(unitA, unitB) {
  return gviz.canviz.axis.Milliseconds.millisecondsForName(unitA) > gviz.canviz.axis.Milliseconds.millisecondsForName(unitB) ? unitB : unitA
};
gviz.canviz.axis.Milliseconds.closestUnit = function(time) {
  time = Math.abs(time);
  for(var timeUnits = gviz.canviz.axis.Milliseconds.TIME_UNITS, i = timeUnits.length - 1;0 < i && time < timeUnits[i];) {
    i--
  }
  timeUnits[i + 1] - time <= time - timeUnits[i] && i++;
  return timeUnits[i]
};
gviz.canviz.axis.Milliseconds.millisecondsForName = function(name) {
  switch(name) {
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.MILLISECOND:
      return gviz.canviz.axis.Milliseconds.MILLISECOND;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.SECOND:
      return gviz.canviz.axis.Milliseconds.SECOND;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.MINUTE:
      return gviz.canviz.axis.Milliseconds.MINUTE;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.HOUR:
      return gviz.canviz.axis.Milliseconds.HOUR;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.DAY:
      return gviz.canviz.axis.Milliseconds.DAY;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.WEEK:
      return gviz.canviz.axis.Milliseconds.WEEK;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.MONTH:
      return gviz.canviz.axis.Milliseconds.MONTH;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.QUARTER:
      return gviz.canviz.axis.Milliseconds.QUARTER;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR:
      return gviz.canviz.axis.Milliseconds.YEAR;
    default:
      goog.asserts.assert(!1, "Unknown time duration: " + name)
  }
  return 0
};
// Input 297
goog.i18n.bidi = {};
goog.i18n.bidi.FORCE_RTL = !1;
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 2).toLowerCase()) && (2 == goog.LOCALE.length || "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3));
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0, UNKNOWN:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  return"number" == typeof givenDir ? 0 < givenDir ? goog.i18n.bidi.Dir.LTR : 0 > givenDir ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL : null == givenDir ? null : givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str
};
goog.i18n.bidi.rtlCharReg_ = RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml))
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml))
};
goog.i18n.bidi.ltrRe_ = RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str)
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str)
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return!goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str)
};
goog.i18n.bidi.ltrDirCheckRe_ = RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml))
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml))
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str)
};
goog.i18n.bidi.ltrExitDirCheckRe_ = RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml))
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml))
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = RegExp("^(ar|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang)
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = void 0 === opt_isRtlContext ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  return useRtl ? s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "<span dir=rtl>$&</span>") : s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "<span dir=ltr>$&</span>")
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = void 0 === opt_isRtlContext ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext, mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$&" + mark)
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  return"<" == html.charAt(0) ? html.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + html + "</span>"
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  return"<" == html.charAt(0) ? html.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + html + "</span>"
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT)
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3")
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /\d/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  for(var rtlCount = 0, totalCount = 0, hasWeaklyLtr = !1, tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_), i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    goog.i18n.bidi.startsWithRtl(token) ? (rtlCount++, totalCount++) : goog.i18n.bidi.isRequiredLtrRe_.test(token) ? hasWeaklyLtr = !0 : goog.i18n.bidi.hasAnyLtr(token) ? totalCount++ : goog.i18n.bidi.hasNumeralsRe_.test(token) && (hasWeaklyLtr = !0)
  }
  return 0 == totalCount ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  element && (dir = goog.i18n.bidi.toDir(dir)) && (element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? "right" : "left", element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr")
};
// Input 298
gviz.canviz.formatting = {};
gviz.canviz.formatting.OrderOfMagnitudeFactory = {};
gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_4 = "\u4e07";
gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_7 = "\u5343\u4e07";
gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_8 = "\u5104";
gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_16 = "\u4eac";
gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_4 = "\u4e07";
gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_7 = "\u5343\u4e07";
gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_8 = "\u4ebf";
gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_4 = "\u842c";
gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_7 = "\u5343\u842c";
gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_8 = "\u5104";
gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_16 = "\u4eac";
gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_4 = "\ub9cc";
gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_7 = "\ucc9c\ub9cc";
gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_8 = "\uc5b5";
gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_16 = "\uacbd";
gviz.canviz.formatting.OrderOfMagnitudeFactory.getShortI18NOOMFormatters = function(maxNumDecimals) {
  var basePattern = gviz.canviz.util.getNumDecimalsPattern(maxNumDecimals), factory = gviz.canviz.formatting.OrderOfMagnitudeFactory;
  return[factory.getQuadrillionMagnitudeShort_(basePattern), factory.getTrillionMagnitudeShort_(basePattern), factory.getBillionMagnitudeShort_(basePattern), factory.getMillionMagnitudeShort_(basePattern)]
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getLongI18NOOMFormatters = function(maxNumDecimals) {
  var basePattern = gviz.canviz.util.getNumDecimalsPattern(maxNumDecimals), factory = gviz.canviz.formatting.OrderOfMagnitudeFactory;
  return[factory.getQuadrillionMagnitudeLong_(basePattern), factory.getTrillionMagnitudeLong_(basePattern), factory.getBillionMagnitudeLong_(basePattern), factory.getMillionMagnitudeLong_(basePattern)]
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.addOOM_ = function(basePattern, orderOfMagnitudeString) {
  var MSG_NUMBER_WITH_ORDER_OF_MAGNITUDE = basePattern + (" " + orderOfMagnitudeString);
  return MSG_NUMBER_WITH_ORDER_OF_MAGNITUDE
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getMillionMagnitudeLong_ = function(basePattern) {
  return gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 6), "Million", "Million")
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getBillionMagnitudeLong_ = function(basePattern) {
  return gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 9), "Billion", "Billion")
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getTrillionMagnitudeLong_ = function(basePattern) {
  return gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 12), "Trillion", "Trillion")
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getQuadrillionMagnitudeLong_ = function(basePattern) {
  return gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 15), "Quadrillion", "Quadrillion")
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getMillionMagnitudeShort_ = function(basePattern) {
  return gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 6), "M", "M")
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getBillionMagnitudeShort_ = function(basePattern) {
  return gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 9), "B", "B")
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getTrillionMagnitudeShort_ = function(basePattern) {
  return gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 12), "T", "T")
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getQuadrillionMagnitudeShort_ = function(basePattern) {
  return gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 15), "Q", "Q")
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_ = function(basePattern, magnitude, singularString, pluralString) {
  return new gviz.canviz.formatting.OrderOfMagnitudeFormatter(basePattern, magnitude, singularString, pluralString)
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getJapaneseFormatters_ = function(basePattern) {
  var factory = gviz.canviz.formatting.OrderOfMagnitudeFactory;
  return[gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 16), gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_16, gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_16), factory.getBillionMagnitudeLong_(basePattern), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 8), gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_8, gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_8), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, 
  Math.pow(10, 7), gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_7, gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_7), factory.getMillionMagnitudeLong_(basePattern), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 4), gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_4, gviz.canviz.formatting.OrderOfMagnitudeFactory.JA_TEN_POW_4)]
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getSimplifiedCNFormatters_ = function(basePattern) {
  var factory = gviz.canviz.formatting.OrderOfMagnitudeFactory;
  return[factory.getBillionMagnitudeLong_(basePattern), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 8), gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_8, gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_8), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 7), gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_7, gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_7), factory.getMillionMagnitudeLong_(basePattern), 
  gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 4), gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_4, gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_TEN_POW_4)]
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getTraditionalCNFormatters_ = function(basePattern) {
  var factory = gviz.canviz.formatting.OrderOfMagnitudeFactory;
  return[gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 16), gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_16, gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_16), factory.getBillionMagnitudeLong_(basePattern), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 8), gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_8, gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_8), 
  gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 7), gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_7, gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_7), factory.getMillionMagnitudeLong_(basePattern), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 4), gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_4, gviz.canviz.formatting.OrderOfMagnitudeFactory.CN_CH_TEN_POW_4)]
};
gviz.canviz.formatting.OrderOfMagnitudeFactory.getKoreanFormatters_ = function(basePattern) {
  var factory = gviz.canviz.formatting.OrderOfMagnitudeFactory;
  return[gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 16), gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_16, gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_16), factory.getBillionMagnitudeLong_(basePattern), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 8), gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_8, gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_8), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, 
  Math.pow(10, 7), gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_7, gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_7), factory.getMillionMagnitudeLong_(basePattern), gviz.canviz.formatting.OrderOfMagnitudeFactory.createFormatter_(basePattern, Math.pow(10, 4), gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_4, gviz.canviz.formatting.OrderOfMagnitudeFactory.KO_TEN_POW_4)]
};
gviz.canviz.formatting.OrderOfMagnitudeFormatter = function(pattern, magnitude, singularString, pluralString) {
  this.magnitude_ = magnitude;
  this.formatter_ = new google.visualization.NumberFormat({pattern:pattern});
  this.singularString_ = singularString;
  this.pluralString_ = pluralString
};
gviz.canviz.formatting.OrderOfMagnitudeFormatter.prototype.format = function(value) {
  var adjusted = value / this.magnitude_, formattedValue = this.formatter_.formatValue(adjusted), magnitudeString = 2 > Math.abs(adjusted) ? this.singularString_ : this.pluralString_, result = gviz.canviz.formatting.OrderOfMagnitudeFactory.addOOM_(formattedValue, magnitudeString);
  goog.i18n.bidi.IS_RTL && (result = goog.i18n.bidi.enforceRtlInText(result));
  return result
};
gviz.canviz.formatting.OrderOfMagnitudeFormatter.prototype.getMagnitude = function() {
  return this.magnitude_
};
// Input 299
gviz.canviz.formatting.INumberFormatter = function() {
};
gviz.canviz.formatting.TimeFormatter = function() {
};
gviz.canviz.formatting.TimeFormatterImpl = function() {
  this.date_ = new Date;
  this.setTimeUnit(gviz.canviz.axis.Milliseconds.TIME_UNIT.MILLISECOND)
};
gviz.canviz.formatting.TimeFormatterImpl.prototype.setTimeUnit = function(timeUnit) {
  this.formatter_ = gviz.canviz.formatting.getDateFormatter_(timeUnit)
};
gviz.canviz.formatting.TimeFormatterImpl.prototype.format = function(time) {
  this.date_.setTime(time);
  return this.formatter_.formatValue(this.date_)
};
gviz.canviz.formatting.getDateFormatter_ = function(timeUnit) {
  var pattern;
  switch(timeUnit) {
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR:
      pattern = goog.i18n.DateTimePatterns.YEAR_FULL;
      break;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.QUARTER:
      pattern = "Q yyyy";
      break;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.MONTH:
      pattern = goog.i18n.DateTimePatterns.YEAR_MONTH_ABBR;
      break;
    case gviz.canviz.axis.Milliseconds.TIME_UNIT.DAY:
      pattern = goog.i18n.DateTimeFormat.Format.SHORT_DATE;
      break;
    default:
      pattern = goog.i18n.DateTimeFormat.Format.SHORT_DATETIME
  }
  return new google.visualization.DateFormat({pattern:pattern, timeZone:0})
};
gviz.canviz.formatting.DUMMY_UNIT = {symbol:"", position:"right", usePadding:!1};
gviz.canviz.formatting.DUMMY_MAGNITUDE = {value:0, pattern:"", singularString:"", pluralString:""};
gviz.canviz.formatting.NumberFormatterBuilder = function() {
  this.maxNumDecimals_ = null;
  this.orderOfMagnitudes_ = [];
  this.customPattern_ = this.unit_ = this.numSignificantDigits_ = null
};
gviz.canviz.formatting.NumberFormatterBuilder.DEFAULT_NUM_DECIMALS = 16;
gviz.canviz.formatting.NumberFormatterBuilder.prototype.useCustomPattern = function(icuPattern) {
  this.customPattern_ = icuPattern;
  return this
};
gviz.canviz.formatting.NumberFormatterBuilder.prototype.maxNumDecimals = function(maxNumDecimals) {
  this.maxNumDecimals_ = maxNumDecimals;
  return this
};
gviz.canviz.formatting.NumberFormatterBuilder.prototype.numSignificantDigits = function(numSignificantDigits) {
  this.numSignificantDigits_ = numSignificantDigits;
  return this
};
gviz.canviz.formatting.NumberFormatterBuilder.prototype.unit = function(unit) {
  this.unit_ = unit;
  return this
};
gviz.canviz.formatting.NumberFormatterBuilder.prototype.useLongI18nMagnitudes = function(opt_maxNumDecimals) {
  var maxNumDecimals = goog.isNumber(opt_maxNumDecimals) ? opt_maxNumDecimals : 3;
  this.orderOfMagnitudes_ = gviz.canviz.formatting.OrderOfMagnitudeFactory.getLongI18NOOMFormatters(maxNumDecimals);
  return this
};
gviz.canviz.formatting.NumberFormatterBuilder.prototype.useShortI18nMagnitudes = function(opt_maxNumDecimals) {
  var maxNumDecimals = goog.isNumber(opt_maxNumDecimals) ? opt_maxNumDecimals : 3;
  this.orderOfMagnitudes_ = gviz.canviz.formatting.OrderOfMagnitudeFactory.getShortI18NOOMFormatters(maxNumDecimals);
  return this
};
gviz.canviz.formatting.NumberFormatterBuilder.prototype.build = function() {
  var defaultFormatter;
  if(this.customPattern_) {
    goog.asserts.assert(!this.maxNumDecimals_, "maxNumDecimals cannot be specified when customPattern is used"), defaultFormatter = new google.visualization.NumberFormat({pattern:this.customPattern_})
  }else {
    var maxNumDecimals = goog.isNumber(this.maxNumDecimals_) ? this.maxNumDecimals_ : gviz.canviz.formatting.NumberFormatterBuilder.DEFAULT_NUM_DECIMALS;
    defaultFormatter = gviz.canviz.util.getNumDecimalsFormatter(maxNumDecimals)
  }
  return new gviz.canviz.formatting.NumberFormatter(defaultFormatter, this.orderOfMagnitudes_, this.numSignificantDigits_, this.unit_)
};
gviz.canviz.formatting.NumberFormatter = function(defaultFormatter, opt_orderOfMagnitudes, opt_numSignificantDigits, opt_unit) {
  this.defaultFormatter_ = defaultFormatter;
  this.orderOfMagnitudes_ = opt_orderOfMagnitudes || [];
  this.numSignificantDigits_ = opt_numSignificantDigits || null;
  this.unit_ = opt_unit || null;
  goog.asserts.assert(gviz.canviz.formatting.NumberFormatter.isSorted_(this.orderOfMagnitudes_), "Magnitudes are not sorted in descending order.");
  goog.isNumber(opt_numSignificantDigits) && (goog.asserts.assert(!isNaN(opt_numSignificantDigits), "opt_numSignificantDigits can't be NaN."), goog.asserts.assert(isFinite(opt_numSignificantDigits), "opt_numSignificantDigits must be finite."), goog.asserts.assert(0 < opt_numSignificantDigits, "opt_numSignificantDigits must be a positive number if passed in."))
};
gviz.canviz.formatting.NumberFormatter.isSorted_ = function(magnitudes) {
  for(var lastSize = Infinity, i = 0;i < magnitudes.length;i++) {
    var magnitude = magnitudes[i];
    if(lastSize < magnitude.getMagnitude()) {
      return!1
    }
    lastSize = magnitude.getMagnitude()
  }
  return!0
};
gviz.canviz.formatting.NumberFormatter.prototype.format = function(value) {
  var isNegative = 0 > value;
  value = Math.abs(value);
  this.numSignificantDigits_ && (value = gviz.canviz.util.roundToNumSignificantDigits(this.numSignificantDigits_, value));
  for(var formatted = null, i = 0;i < this.orderOfMagnitudes_.length;i++) {
    var orderOfMagnitudeFormatter = this.orderOfMagnitudes_[i];
    if(value >= orderOfMagnitudeFormatter.getMagnitude()) {
      formatted = orderOfMagnitudeFormatter.format(value);
      break
    }
  }
  null == formatted && (formatted = this.defaultFormatter_.formatValue(value));
  formatted = this.addUnit_(formatted);
  return isNegative ? "-" + formatted : formatted
};
gviz.canviz.formatting.NumberFormatter.prototype.addUnit_ = function(formattedValue) {
  if(!this.unit_) {
    return formattedValue
  }
  var symbol = this.unit_.symbol, padding = this.unit_.usePadding ? " " : "";
  return"right" == this.unit_.position ? formattedValue + padding + symbol : symbol + padding + formattedValue
};
// Input 300
gviz.canviz.axis.AxisDecoration = function(value, position, hasLine, hasTick, isTickHeavy, label) {
  this.value_ = value;
  this.position_ = position;
  this.hasLine_ = hasLine;
  this.hasTick_ = hasTick;
  this.label_ = label
};
gviz.canviz.axis.AxisDecoration.Alignment = {LEFT:1, CENTER:2, RIGHT:3};
gviz.canviz.axis.AxisDecoration.makeLabeledLineWithHeavyTick = function(value, position, label) {
  return new gviz.canviz.axis.AxisDecoration(value, position, !0, !0, !0, label)
};
gviz.canviz.axis.AxisDecoration.makeLabel = function(value, position, label) {
  return new gviz.canviz.axis.AxisDecoration(value, position, !1, !1, !1, label)
};
gviz.canviz.axis.AxisDecoration.makeLeftAlignedLabel = function(value, position, label) {
  return new gviz.canviz.axis.AxisDecoration(value, position, !1, !1, !1, label, gviz.canviz.axis.AxisDecoration.Alignment.LEFT)
};
gviz.canviz.axis.AxisDecoration.makeLeftAlignedLabelWithLineAndTick = function(value, position, label) {
  return new gviz.canviz.axis.AxisDecoration(value, position, !0, !0, !1, label, gviz.canviz.axis.AxisDecoration.Alignment.LEFT)
};
gviz.canviz.axis.AxisDecoration.makeTick = function(value, position) {
  return new gviz.canviz.axis.AxisDecoration(value, position, !1, !0, !1, null)
};
gviz.canviz.axis.AxisDecoration.makeLineWithTick = function(value, position) {
  return new gviz.canviz.axis.AxisDecoration(value, position, !0, !0, !1, null)
};
gviz.canviz.axis.AxisDecoration.makeLineWithHeavyTick = function(value, position) {
  return new gviz.canviz.axis.AxisDecoration(value, position, !0, !0, !0, null)
};
gviz.canviz.axis.AxisDecoration.prototype.getPosition = function() {
  return Math.round(this.position_)
};
gviz.canviz.axis.AxisDecoration.prototype.getValue = function() {
  return this.value_
};
gviz.canviz.axis.AxisDecoration.prototype.hasLine = function() {
  return this.hasLine_
};
gviz.canviz.axis.AxisDecoration.prototype.hasTick = function() {
  return this.hasTick_
};
gviz.canviz.axis.AxisDecoration.prototype.getLabel = function() {
  return this.label_
};
gviz.canviz.axis.AxisDecoration.prototype.setLabel = function(label) {
  this.label_ = label
};
// Input 301
// Input 302
gviz.canviz.axis.LinearSequence = function(spacing, opt_offset) {
  this.spacing_ = spacing;
  this.offset_ = opt_offset || 0;
  this.normalizer_ = this.calculateNormalizer(this.spacing_ + this.offset_);
  this.position_ = 0
};
gviz.canviz.axis.LinearSequence.prototype.next = function() {
  this.position_++;
  return this.getValue()
};
gviz.canviz.axis.LinearSequence.prototype.previous = function() {
  this.position_--;
  return this.getValue()
};
gviz.canviz.axis.LinearSequence.prototype.getValue = function() {
  var result = this.position_ * this.spacing_ + this.offset_;
  return Math.round(result * this.normalizer_) / this.normalizer_
};
gviz.canviz.axis.LinearSequence.prototype.floor = function(newValue) {
  this.position_ = Math.floor((newValue - this.offset_) / this.spacing_);
  return this.getValue()
};
gviz.canviz.axis.LinearSequence.prototype.ceil = function(newValue) {
  this.position_ = Math.ceil((newValue - this.offset_) / this.spacing_);
  return this.getValue()
};
gviz.canviz.axis.LinearSequence.prototype.round = function(newValue) {
  this.position_ = Math.round((newValue - this.offset_) / this.spacing_);
  return this.getValue()
};
gviz.canviz.axis.LinearSequence.prototype.calculateNormalizer = function(value) {
  if(1 <= value) {
    return 1
  }
  var stringValue = value.toString(), orderOfMagnitude = 0, endPos = stringValue.indexOf("e");
  -1 != endPos ? orderOfMagnitude = parseInt(stringValue.substr(endPos + 1), 10) : endPos = stringValue.length;
  var decimalPos = stringValue.indexOf(".");
  -1 != decimalPos && (orderOfMagnitude -= endPos - 1 - decimalPos);
  return Math.pow(10, -orderOfMagnitude)
};
// Input 303
gviz.canviz.axis.Mapper = function() {
};
gviz.canviz.axis.Mapper.prototype.getScreenValue = function() {
};
gviz.canviz.axis.Mapper.prototype.getDataValue = function() {
};
gviz.canviz.axis.Mapper.prototype.getScreenStart = function() {
};
gviz.canviz.axis.Mapper.prototype.getScreenEnd = function() {
};
gviz.canviz.axis.Mapper.prototype.getDataMin = function() {
};
gviz.canviz.axis.Mapper.prototype.getDataMax = function() {
};
// Input 304
gviz.canviz.axis.AxisTools = function(mapper, textMeasurer, orientation, formatter) {
  this.mapper_ = mapper;
  this.textMeasurer_ = textMeasurer;
  this.orientation_ = orientation;
  this.formatter_ = formatter
};
gviz.canviz.axis.AxisTools.Orientation = {HORIZONTAL:"horizontal", VERTICAL:"vertical"};
gviz.canviz.axis.AxisTools.prototype.allLabelsFit = function(dataValues) {
  var i = dataValues.length;
  if(0 < i) {
    for(;--i;) {
      if(this.detectLabelCollision(dataValues[i - 1], dataValues[i])) {
        return!1
      }
    }
  }
  return!0
};
gviz.canviz.axis.AxisTools.prototype.detectLabelCollision = function(value1, value2) {
  var size1 = this.getLabelSize(value1), size2 = this.getLabelSize(value2);
  return Math.abs(this.mapper_.getScreenValue(value1) - this.mapper_.getScreenValue(value2)) < (size1 + size2) / 2
};
gviz.canviz.axis.AxisTools.prototype.removeCollisionsWithZero = function(dataValues) {
  var result = [];
  if(1 >= dataValues.length || 0 != dataValues[0]) {
    return dataValues
  }
  result.push(dataValues[0]);
  for(var i = 1, len = dataValues.length;i < len;i++) {
    this.detectLabelCollision(dataValues[0], dataValues[i]) || result.push(dataValues[i])
  }
  return result
};
gviz.canviz.axis.AxisTools.prototype.getLabelSize = function(value) {
  var str = this.formatter_.format(value);
  return this.textMeasurer_.getSizeByOrientation(str, this.orientation_)
};
gviz.canviz.axis.AxisTools.prototype.getDataSpanSize = function(screenStart, screenEnd) {
  var dataStart = this.mapper_.getDataValue(screenStart), dataEnd = this.mapper_.getDataValue(screenEnd);
  return Math.abs(dataEnd - dataStart)
};
gviz.canviz.axis.AxisTools.prototype.makeLabels = function(dataValues) {
  for(var decorations = [], i = 0;i < dataValues.length;i++) {
    var dataValue = dataValues[i];
    decorations.push(gviz.canviz.axis.AxisDecoration.makeLabeledLineWithHeavyTick(dataValue, this.mapper_.getScreenValue(dataValue), this.formatter_.format(dataValue)))
  }
  return decorations
};
gviz.canviz.axis.AxisTools.prototype.findDataValues = function(lineSequence, dataMin, dataMax, spacingValue) {
  if(dataMin == dataMax) {
    return[dataMin]
  }
  for(var dataValues = [], value = lineSequence.ceil(dataMin);value <= dataMax;) {
    dataValues.push(value), value = lineSequence.next()
  }
  if(1 == dataValues.length) {
    var attemptSecondLineSequence = new gviz.canviz.axis.LinearSequence(spacingValue / 10), value = attemptSecondLineSequence.floor(dataMax);
    value != dataValues[0] && dataValues.push(value)
  }
  return dataValues
};
// Input 305
gviz.canviz.axis.BoxCoxSignedMapper = function(dataMin, dataMax, screenStart, screenEnd, boxCoxLambda) {
  this.dataMin_ = dataMin;
  this.dataMax_ = dataMax;
  this.screenStart_ = screenStart;
  this.screenEnd_ = screenEnd;
  this.boxCoxLambda_ = boxCoxLambda;
  var boxCoxDataStart = this.boxCox_(dataMin), boxCoxDataDelta = this.boxCox_(dataMax) - boxCoxDataStart;
  this.deltaQuotient_ = (screenEnd - screenStart) / boxCoxDataDelta;
  this.screenOffset_ = this.deltaQuotient_ * boxCoxDataStart - screenStart
};
gviz.canviz.axis.BoxCoxSignedMapper.prototype.getScreenValue = function(dataValue) {
  return this.boxCox_(dataValue) * this.deltaQuotient_ - this.screenOffset_
};
gviz.canviz.axis.BoxCoxSignedMapper.prototype.getDataValue = function(screenValue) {
  return this.antiBoxCox_((screenValue + this.screenOffset_) / this.deltaQuotient_)
};
gviz.canviz.axis.BoxCoxSignedMapper.prototype.boxCox_ = function(value) {
  switch(this.boxCoxLambda_) {
    case 0:
      return Math.log(value);
    case 1:
      return value;
    default:
      return(Math.pow(value, this.boxCoxLambda_) - 1) / this.boxCoxLambda_
  }
};
gviz.canviz.axis.BoxCoxSignedMapper.prototype.antiBoxCox_ = function(value) {
  switch(this.boxCoxLambda_) {
    case 0:
      return Math.pow(Math.E, value);
    case 1:
      return value;
    default:
      return Math.pow(value * this.boxCoxLambda_ + 1, 1 / this.boxCoxLambda_)
  }
};
// Input 306
gviz.canviz.axis.BoxCoxMapper = function(dataMin, dataMax, screenStart, screenEnd, boxCoxLambda, opt_epsilonValue) {
  this.dataMin = dataMin;
  this.dataMax = dataMax;
  this.screenStart = screenStart;
  this.screenEnd = screenEnd;
  this.boxCoxLambda = boxCoxLambda;
  this.epsilonValue = opt_epsilonValue;
  this.zeroThreshold = this.calculateZeroThreshold_();
  var scrEnd;
  if(dataMin >= this.zeroThreshold) {
    this.mapper = this.newMapper_(dataMin, dataMax, screenStart, screenEnd), this.screenZero = Math.round(this.mapper.getScreenValue(this.zeroThreshold))
  }else {
    if(dataMax <= -this.zeroThreshold) {
      this.mapper = this.newMapper_(-dataMax, -dataMin, screenEnd, screenStart);
      this.screenZero = Math.round(this.mapper.getScreenValue(this.zeroThreshold));
      var scrStart = 2 * this.screenZero - screenEnd;
      scrEnd = 2 * this.screenZero - screenStart;
      this.mapper = this.newMapper_(-dataMax, -dataMin, scrStart, scrEnd)
    }else {
      if(dataMin >= -this.zeroThreshold) {
        this.screenZero = Math.round(screenStart), this.mapper = this.newMapper_(this.zeroThreshold, dataMax, this.screenZero, screenEnd)
      }else {
        if(dataMax <= this.zeroThreshold) {
          this.screenZero = Math.round(screenEnd), scrEnd = 2 * this.screenZero - screenStart, this.mapper = this.newMapper_(this.zeroThreshold, -dataMin, this.screenZero, scrEnd)
        }else {
          this.mapper = this.newMapper_(this.zeroThreshold, dataMax, 0, 1);
          var part = this.mapper.getScreenValue(-dataMin), offset = (screenEnd - screenStart) * (part / (part + 1));
          this.screenZero = Math.round(screenStart + offset);
          dataMax >= -dataMin ? this.mapper = this.newMapper_(this.zeroThreshold, dataMax, this.screenZero, screenEnd) : (scrEnd = 2 * this.screenZero - screenStart, this.mapper = this.newMapper_(this.zeroThreshold, -dataMin, this.screenZero, scrEnd))
        }
      }
    }
  }
  this.reversed = screenEnd < screenStart
};
gviz.canviz.axis.BoxCoxMapper.prototype.getDataMin = function() {
  return this.dataMin
};
gviz.canviz.axis.BoxCoxMapper.prototype.getDataMax = function() {
  return this.dataMax
};
gviz.canviz.axis.BoxCoxMapper.prototype.getScreenStart = function() {
  return this.screenStart
};
gviz.canviz.axis.BoxCoxMapper.prototype.getScreenEnd = function() {
  return this.screenEnd
};
gviz.canviz.axis.BoxCoxMapper.prototype.calculateZeroThreshold_ = function() {
  var zeroThreshold;
  return zeroThreshold = this.dataMin == this.dataMax ? this.dataMin / 2 : isNaN(this.epsilonValue) ? gviz.canviz.axis.Pow10Math.floor(this.dataMax - this.dataMin) / 1E3 : this.epsilonValue / 2
};
gviz.canviz.axis.BoxCoxMapper.prototype.newMapper_ = function(dataMin, dataMax, screenStart, screenEnd) {
  return new gviz.canviz.axis.BoxCoxSignedMapper(dataMin, dataMax, screenStart, screenEnd, this.boxCoxLambda)
};
gviz.canviz.axis.BoxCoxMapper.prototype.getDataValue = function(screenValue) {
  if(this.dataMin == this.dataMax) {
    return this.dataMin
  }
  var sign = this.reversed ? -1 : 1;
  return screenValue * sign > this.screenZero * sign ? this.mapper.getDataValue(screenValue) : screenValue * sign < this.screenZero * sign ? -this.mapper.getDataValue(2 * this.screenZero - screenValue) : 0
};
gviz.canviz.axis.BoxCoxMapper.prototype.getScreenValue = function(dataValue) {
  return this.dataMin == this.dataMax ? Math.abs(this.screenStart - this.screenEnd) / 2 : dataValue > this.zeroThreshold ? this.mapper.getScreenValue(dataValue) : dataValue < -this.zeroThreshold ? 2 * this.screenZero - this.mapper.getScreenValue(-dataValue) : this.screenZero
};
// Input 307
gviz.canviz.axis.CustomPowersOf10 = function(multipliers) {
  this.checkMultipliers(multipliers);
  this.multipliers_ = multipliers.concat();
  this.levelLength_ = multipliers.length;
  this.position_ = 0
};
gviz.canviz.axis.CustomPowersOf10.prototype.next = function() {
  this.position_++;
  return this.getValue()
};
gviz.canviz.axis.CustomPowersOf10.prototype.previous = function() {
  this.position_--;
  return this.getValue()
};
gviz.canviz.axis.CustomPowersOf10.prototype.checkMultipliers = function(multipliers) {
  var length = multipliers.length;
  goog.asserts.assert(0 < length, "Multiplier is empty.");
  goog.asserts.assert(1 <= multipliers[0], "Multipliers first value is too low.");
  goog.asserts.assert(10 > multipliers[length - 1], "Multipliers last value is too high.");
  for(var previous = 0, value, i = 0;i < length;i++) {
    value = multipliers[i], goog.asserts.assert(goog.isNumber(multipliers[i]), "MultiplierList contains non-numerical value."), goog.asserts.assert(value > previous, "MultiplierList is not sorted."), previous = value
  }
};
gviz.canviz.axis.CustomPowersOf10.prototype.getValue = function() {
  var k = Math.floor(this.position_ / this.levelLength_), i = this.position_ - k * this.levelLength_;
  return gviz.canviz.axis.Pow10Math.exactScientific(this.multipliers_[i], k)
};
gviz.canviz.axis.CustomPowersOf10.prototype.floor = function(value) {
  goog.asserts.assert(0 < value, "Value must be positive");
  this.position_ = this.levelLength_ * gviz.canviz.axis.Pow10Math.ceilExponent(value);
  if(this.getValue() != value) {
    for(;this.previous() > value;) {
    }
  }
  return this.getValue()
};
gviz.canviz.axis.CustomPowersOf10.prototype.ceil = function(value) {
  goog.asserts.assert(0 < value, "Value must be positive");
  this.position_ = this.levelLength_ * gviz.canviz.axis.Pow10Math.floorExponent(value);
  if(this.getValue() != value) {
    for(;this.next() < value;) {
    }
  }
  return this.getValue()
};
gviz.canviz.axis.CustomPowersOf10.prototype.round = function(value) {
  goog.asserts.assert(0 < value, "Value must be positive");
  this.position_ = this.levelLength_ * gviz.canviz.axis.Pow10Math.ceilExponent(value);
  if(this.getValue() != value) {
    for(;this.previous() > value;) {
    }
    if(value - this.getValue() < this.next() - value) {
      return this.previous()
    }
  }
  return this.getValue()
};
// Input 308
gviz.canviz.axis.LinAxisDecorationSupplier = function(mapper, formatter, textMeasurer, orientation, minScreenDistance) {
  this.mapper = mapper;
  this.minScreenDistance = minScreenDistance;
  this.axisTools_ = new gviz.canviz.axis.AxisTools(mapper, textMeasurer, orientation, formatter);
  this.spacingSequence_ = new gviz.canviz.axis.CustomPowersOf10([1, 2, 5])
};
gviz.canviz.axis.LinAxisDecorationSupplier.prototype.getDecorations = function() {
  var spacingValue = this.getSpacingValue_(), dataValues;
  this.spacingSequence_.floor(spacingValue);
  do {
    var attemptSequence = new gviz.canviz.axis.LinearSequence(spacingValue);
    dataValues = this.axisTools_.findDataValues(attemptSequence, this.mapper.getDataMin(), this.mapper.getDataMax(), spacingValue);
    spacingValue = this.spacingSequence_.next()
  }while(!this.axisTools_.allLabelsFit(dataValues));
  return this.axisTools_.makeLabels(dataValues)
};
gviz.canviz.axis.LinAxisDecorationSupplier.prototype.getSpacingValue_ = function() {
  var screenMin = this.mapper.getScreenStart(), screenMax = this.mapper.getScreenEnd(), valueCloseToMax = this.axisTools_.getDataSpanSize(screenMax - this.minScreenDistance, screenMax), valueCloseToMin = this.axisTools_.getDataSpanSize(screenMin, screenMin + this.minScreenDistance), largestSpacing = Math.max(valueCloseToMin, valueCloseToMax), screenZero = this.mapper.getScreenValue(0);
  if(screenZero >= screenMin && screenZero <= screenMax) {
    var valueCloseToZero = this.mapper.getDataValue(this.mapper.getScreenValue(0) + this.minScreenDistance), largestSpacing = Math.max(largestSpacing, valueCloseToZero)
  }
  return this.spacingSequence_.ceil(largestSpacing)
};
// Input 309
gviz.canviz.axis.LinMapper = function(dataMin, dataMax, screenMin, screenMax) {
  this.dataMin_ = dataMin;
  this.dataMax_ = dataMax;
  this.screenMin_ = screenMin;
  this.screenMax_ = screenMax;
  this.deltaQuotient_ = (this.screenMax_ - this.screenMin_) / (this.dataMax_ - this.dataMin_);
  this.screenOffset_ = this.deltaQuotient_ * this.dataMin_ - this.screenMin_
};
gviz.canviz.axis.LinMapper.prototype.getDataValue = function(screenValue) {
  return(screenValue + this.screenOffset_) / this.deltaQuotient_
};
gviz.canviz.axis.LinMapper.prototype.getScreenValue = function(dataValue) {
  return dataValue * this.deltaQuotient_ - this.screenOffset_
};
gviz.canviz.axis.LinMapper.prototype.getScreenStart = function() {
  return this.screenMin_
};
gviz.canviz.axis.LinMapper.prototype.getScreenEnd = function() {
  return this.screenMax_
};
gviz.canviz.axis.LinMapper.prototype.getDataMin = function() {
  return this.dataMin_
};
gviz.canviz.axis.LinMapper.prototype.getDataMax = function() {
  return this.dataMax_
};
// Input 310
gviz.canviz.axis.PacedPowersOf10Mirror = function(numSteps, minimumValue) {
  this.numSteps_ = numSteps;
  this.numExcluded_ = Math.floor(numSteps / 10);
  this.actualNumSteps_ = numSteps - this.numExcluded_;
  this.location_ = 0;
  this.minExponent_ = gviz.canviz.axis.Pow10Math.floorExponent(Math.abs(minimumValue));
  this.zeroOffset_ = this.actualNumSteps_ * this.minExponent_;
  this.position_ = 0
};
gviz.canviz.axis.PacedPowersOf10Mirror.prototype.getValueInternal_ = function() {
  var k = Math.floor(this.position_ / this.actualNumSteps_), i;
  i = 10 * (this.position_ + this.numExcluded_ - k * this.actualNumSteps_) / this.numSteps_;
  0 == i && (i = 1);
  return gviz.canviz.axis.Pow10Math.exactScientific(i, k)
};
gviz.canviz.axis.PacedPowersOf10Mirror.prototype.getValue = function() {
  this.position_ = Math.abs(this.location_) + this.zeroOffset_;
  return 0 < this.location_ ? this.getValueInternal_() : 0 > this.location_ ? -this.getValueInternal_() : 0
};
gviz.canviz.axis.PacedPowersOf10Mirror.prototype.next = function() {
  this.location_++;
  return this.getValue()
};
gviz.canviz.axis.PacedPowersOf10Mirror.prototype.previous = function() {
  this.location_--;
  return this.getValue()
};
gviz.canviz.axis.PacedPowersOf10Mirror.prototype.floor = function(newValue) {
  var excludedOffset = this.numExcluded_, tmp = gviz.canviz.axis.Pow10Math.floorExponent(Math.abs(newValue));
  if(Math.abs(newValue) <= Math.pow(10, this.minExponent_)) {
    return this.location_ = 0 > newValue ? -1 : 0, this.getValue()
  }
  0 < newValue ? this.location_ = this.actualNumSteps_ * tmp - this.zeroOffset_ : 0 > newValue && (this.location_ = this.zeroOffset_ - this.actualNumSteps_ * tmp, excludedOffset = -excludedOffset);
  this.getValue() != newValue && (tmp = this.numSteps_ * newValue / gviz.canviz.axis.Pow10Math.ceil(Math.abs(newValue)), this.location_ += Math.floor(tmp) - excludedOffset);
  return this.getValue()
};
gviz.canviz.axis.PacedPowersOf10Mirror.prototype.ceil = function(newValue) {
  var excludedOffset = this.numExcluded_, tmp = gviz.canviz.axis.Pow10Math.floorExponent(Math.abs(newValue));
  if(Math.abs(newValue) <= Math.pow(10, this.minExponent_)) {
    return this.location_ = 0 < newValue ? 1 : 0, this.getValue()
  }
  0 < newValue ? this.location_ = this.actualNumSteps_ * tmp - this.zeroOffset_ : 0 > newValue && (this.location_ = this.zeroOffset_ - this.actualNumSteps_ * tmp, excludedOffset = -excludedOffset);
  this.getValue() != newValue && (tmp = this.numSteps_ * newValue / gviz.canviz.axis.Pow10Math.ceil(Math.abs(newValue)), this.location_ += Math.ceil(tmp) - excludedOffset);
  return this.getValue()
};
gviz.canviz.axis.PacedPowersOf10Mirror.prototype.round = function(newValue) {
  var tmp = gviz.canviz.axis.Pow10Math.floorExponent(Math.abs(newValue));
  if(Math.abs(newValue) <= Math.pow(10, this.minExponent_)) {
    return this.location_ = 0
  }
  if(0 < newValue) {
    this.location_ = this.actualNumSteps_ * tmp - this.zeroOffset_;
    if(this.next() > newValue) {
      return newValue - this.getValue() >= this.previous() - newValue ? this.next() : this.getValue()
    }
    this.previous()
  }else {
    if(0 > newValue) {
      this.location_ = this.zeroOffset_ - this.actualNumSteps_ * tmp;
      if(this.previous() < newValue) {
        return newValue - this.getValue() < this.next() - newValue ? this.previous() : this.getValue()
      }
      this.next()
    }
  }
  this.getValue() != newValue && (tmp = this.numSteps_ * newValue / gviz.canviz.axis.Pow10Math.ceil(Math.abs(newValue)), this.location_ += Math.round(tmp) - this.numExcluded_);
  return this.getValue()
};
// Input 311
gviz.canviz.axis.LogAxisDecorationSupplier = function(mapper, formatter, textMeasurer, orientation, minScreenDistance, epsilon) {
  this.mapper_ = mapper;
  this.formatter_ = formatter;
  this.textMeasurer_ = textMeasurer;
  this.orientation_ = orientation;
  this.epsilon_ = epsilon;
  this.minScreenDistance_ = minScreenDistance;
  this.axisTools_ = new gviz.canviz.axis.AxisTools(mapper, textMeasurer, orientation, formatter);
  this.spacingSequence_ = new gviz.canviz.axis.CustomPowersOf10([1, 2, 5])
};
gviz.canviz.axis.LogAxisDecorationSupplier.prototype.getDecorations = function() {
  var epsilon = this.epsilon_ / 10, spacingValue = this.getSpacingValue_(), lineSequence = new gviz.canviz.axis.PacedPowersOf10Mirror(spacingValue, epsilon), dataValues = this.axisTools_.findDataValues(lineSequence, this.mapper_.getDataMin(), this.mapper_.getDataMax(), spacingValue);
  if(2 > dataValues.length) {
    return this.axisTools_.makeLabels(dataValues)
  }
  var firstValue = dataValues[0], secondValue = dataValues[1];
  if(0 == firstValue) {
    if(3 > dataValues.length) {
      return this.axisTools_.makeLabels(dataValues)
    }
    firstValue = secondValue;
    secondValue = dataValues[2]
  }
  var firstPowerOfTen = gviz.canviz.axis.Pow10Math.ceil(Math.abs(firstValue));
  firstPowerOfTen == firstValue && (firstPowerOfTen *= 10);
  var largestPossibleNumSteps = firstPowerOfTen / Math.abs(secondValue - firstValue);
  this.spacingSequence_.ceil(largestPossibleNumSteps);
  do {
    var spacingValue = this.spacingSequence_.previous(), attemptSequence = new gviz.canviz.axis.PacedPowersOf10Mirror(spacingValue, epsilon), dataValues = this.axisTools_.findDataValues(attemptSequence, this.mapper_.getDataMin(), this.mapper_.getDataMax(), spacingValue), dataValues = this.axisTools_.removeCollisionsWithZero(dataValues)
  }while(!this.axisTools_.allLabelsFit(dataValues));
  return this.axisTools_.makeLabels(dataValues)
};
gviz.canviz.axis.LogAxisDecorationSupplier.prototype.getSpacingValue_ = function() {
  var powTen = this.mapper_.getScreenValue(10 * this.epsilon_), belowPowTen, numSteps;
  this.spacingSequence_.floor(1);
  do {
    numSteps = this.spacingSequence_.next(), belowPowTen = this.mapper_.getScreenValue(10 * this.epsilon_ * (numSteps - 1) / numSteps)
  }while(Math.abs(powTen - belowPowTen) >= this.minScreenDistance_);
  return this.spacingSequence_.previous()
};
// Input 312
gviz.canviz.axis.MonthSequence = function(opt_monthsPerStep, opt_monthOffset) {
  goog.isDefAndNotNull(opt_monthsPerStep) ? (goog.asserts.assert(1 <= opt_monthsPerStep), goog.asserts.assert(opt_monthsPerStep == Math.round(opt_monthsPerStep)), this.stepSize_ = opt_monthsPerStep) : this.stepSize_ = 1;
  12 < this.stepSize_ && (this.yearSequence_ = new gviz.canviz.axis.LinearSequence(Math.floor(this.stepSize_ / 12)));
  var monthOffset = opt_monthOffset || 0;
  goog.asserts.assert(monthOffset == Math.round(monthOffset));
  goog.asserts.assert(-11 <= monthOffset && 11 >= monthOffset);
  this.fullOffset_ = monthOffset;
  this.monthStepper_ = new Date;
  this.floor(0)
};
gviz.canviz.axis.MonthSequence.prototype.getValue = function() {
  return this.monthStepper_.getTime()
};
gviz.canviz.axis.MonthSequence.prototype.next = function() {
  var month = this.monthStepper_.getUTCMonth(), month = month + this.stepSize_;
  this.monthStepper_.setUTCMonth(month);
  return this.getValue()
};
gviz.canviz.axis.MonthSequence.prototype.previous = function() {
  this.monthStepper_.setUTCMonth(this.monthStepper_.getUTCMonth() - this.stepSize_);
  return this.getValue()
};
gviz.canviz.axis.MonthSequence.prototype.floor = function(newValue) {
  this.monthStepper_.setTime(newValue);
  if(1 < this.stepSize_) {
    var monthDelta = (this.monthStepper_.getUTCMonth() + 12 - this.fullOffset_) % this.stepSize_ % 12;
    this.monthStepper_.setUTCMonth(this.monthStepper_.getUTCMonth() - monthDelta);
    if(12 < this.stepSize_) {
      var year = this.yearSequence_.floor(this.monthStepper_.getUTCFullYear());
      this.monthStepper_.setUTCFullYear(year)
    }
  }
  this.monthStepper_.setUTCDate(1);
  this.monthStepper_.setUTCHours(0, 0, 0, 0);
  return this.getValue()
};
gviz.canviz.axis.MonthSequence.prototype.ceil = function(newValue) {
  return this.floor(newValue) < newValue ? this.next() : this.getValue()
};
gviz.canviz.axis.MonthSequence.prototype.round = function(newValue) {
  return this.floor(newValue) != newValue && newValue - this.getValue() < this.next() - newValue ? this.previous() : this.getValue()
};
// Input 313
gviz.canviz.axis.PowersOf10Sequence = function() {
  this.position_ = 0
};
gviz.canviz.axis.PowersOf10Sequence.prototype.next = function() {
  this.position_++;
  return this.getValue()
};
gviz.canviz.axis.PowersOf10Sequence.prototype.previous = function() {
  this.position_--;
  return this.getValue()
};
gviz.canviz.axis.PowersOf10Sequence.prototype.getValue = function() {
  return gviz.canviz.axis.Pow10Math.exactScientific(1, this.position_)
};
gviz.canviz.axis.PowersOf10Sequence.prototype.floor = function(newValue) {
  goog.asserts.assert(0 < newValue, "newValue must be > 0");
  this.position_ = gviz.canviz.axis.Pow10Math.floorExponent(newValue);
  return this.getValue()
};
gviz.canviz.axis.PowersOf10Sequence.prototype.ceil = function(newValue) {
  goog.asserts.assert(0 < newValue, "newValue must be > 0");
  this.position_ = gviz.canviz.axis.Pow10Math.ceilExponent(newValue);
  return this.getValue()
};
gviz.canviz.axis.PowersOf10Sequence.prototype.round = function(newValue) {
  goog.asserts.assert(0 < newValue, "newValue must be > 0");
  this.position_ = gviz.canviz.axis.Pow10Math.roundExponent(gviz.canviz.axis.Pow10Math.round(newValue));
  return this.getValue()
};
// Input 314
gviz.canviz.axis.TimeUnitSequence = function(opt_granular) {
  opt_granular ? (this.definedUnits_ = [gviz.canviz.axis.Milliseconds.SECOND, 5 * gviz.canviz.axis.Milliseconds.SECOND, 10 * gviz.canviz.axis.Milliseconds.SECOND, 15 * gviz.canviz.axis.Milliseconds.SECOND, 30 * gviz.canviz.axis.Milliseconds.SECOND, gviz.canviz.axis.Milliseconds.MINUTE, 5 * gviz.canviz.axis.Milliseconds.MINUTE, 10 * gviz.canviz.axis.Milliseconds.MINUTE, 15 * gviz.canviz.axis.Milliseconds.MINUTE, 30 * gviz.canviz.axis.Milliseconds.MINUTE, gviz.canviz.axis.Milliseconds.HOUR, 3 * gviz.canviz.axis.Milliseconds.HOUR, 
  6 * gviz.canviz.axis.Milliseconds.HOUR, 12 * gviz.canviz.axis.Milliseconds.HOUR, gviz.canviz.axis.Milliseconds.DAY, gviz.canviz.axis.Milliseconds.WEEK, gviz.canviz.axis.Milliseconds.MONTH, gviz.canviz.axis.Milliseconds.QUARTER, gviz.canviz.axis.Milliseconds.YEAR], this.sequence_ = new gviz.canviz.axis.CustomPowersOf10([1, 2, 5])) : (this.definedUnits_ = [gviz.canviz.axis.Milliseconds.SECOND, gviz.canviz.axis.Milliseconds.MINUTE, gviz.canviz.axis.Milliseconds.HOUR, gviz.canviz.axis.Milliseconds.DAY, 
  gviz.canviz.axis.Milliseconds.WEEK, gviz.canviz.axis.Milliseconds.MONTH, gviz.canviz.axis.Milliseconds.QUARTER, gviz.canviz.axis.Milliseconds.YEAR], this.sequence_ = new gviz.canviz.axis.PowersOf10Sequence);
  this.minUnitValue_ = this.sequence_.round(this.definedUnits_[0]);
  this.precedingValue_ = this.sequence_.previous();
  this.precedingCutoff_ = this.precedingValue_ + (this.minUnitValue_ - this.precedingValue_) / 2;
  this.maxUnitValue_ = this.definedUnits_[this.definedUnits_.length - 1];
  this.sequence_.round(1);
  this.succeedingValue_ = this.maxUnitValue_ * this.sequence_.next();
  this.succeedingCutoff_ = this.maxUnitValue_ + (this.succeedingValue_ - this.maxUnitValue_) / 2;
  this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.SMALLEST)
};
gviz.canviz.axis.TimeUnitSequence.Phase = {BELOW:1, SMALLEST:2, LARGEST:3, ABOVE:4};
gviz.canviz.axis.TimeUnitSequence.prototype.shiftPhase_ = function(phase) {
  this.usingSequence_ = phase == gviz.canviz.axis.TimeUnitSequence.Phase.BELOW || phase == gviz.canviz.axis.TimeUnitSequence.Phase.ABOVE;
  phase == gviz.canviz.axis.TimeUnitSequence.Phase.SMALLEST ? this.position_ = 0 : phase == gviz.canviz.axis.TimeUnitSequence.Phase.LARGEST ? this.position_ = this.definedUnits_.length - 1 : phase == gviz.canviz.axis.TimeUnitSequence.Phase.BELOW ? this.multiplier_ = 1 : phase == gviz.canviz.axis.TimeUnitSequence.Phase.ABOVE && (this.multiplier_ = this.maxUnitValue_)
};
gviz.canviz.axis.TimeUnitSequence.prototype.getValue = function() {
  return this.usingSequence_ ? this.multiplier_ * this.sequence_.getValue() : this.definedUnits_[this.position_]
};
gviz.canviz.axis.TimeUnitSequence.prototype.floor = function(newValue) {
  if(newValue < this.minUnitValue_) {
    return this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.BELOW), this.sequence_.floor(newValue)
  }
  if(newValue >= this.succeedingValue_) {
    return this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.ABOVE), this.multiplier_ * this.sequence_.floor(newValue / this.multiplier_)
  }
  for(this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.SMALLEST);newValue >= this.definedUnits_[this.position_];) {
    this.position_++
  }
  return this.definedUnits_[--this.position_]
};
gviz.canviz.axis.TimeUnitSequence.prototype.ceil = function(newValue) {
  if(newValue <= this.precedingValue_) {
    return this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.BELOW), this.sequence_.ceil(newValue)
  }
  if(newValue > this.maxUnitValue_) {
    return this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.ABOVE), this.multiplier_ * this.sequence_.ceil(newValue / this.multiplier_)
  }
  for(this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.LARGEST);newValue <= this.definedUnits_[this.position_];) {
    this.position_--
  }
  return this.definedUnits_[++this.position_]
};
gviz.canviz.axis.TimeUnitSequence.prototype.round = function(newValue) {
  if(newValue < this.precedingCutoff_) {
    return this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.BELOW), this.sequence_.round(newValue)
  }
  if(newValue >= this.succeedingCutoff_) {
    return this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.ABOVE), this.multiplier_ * this.sequence_.round(newValue / this.multiplier_)
  }
  for(this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.LARGEST);0 < this.position_ && newValue < this.definedUnits_[this.position_];) {
    this.position_--
  }
  this.definedUnits_[this.position_ + 1] - newValue <= newValue - this.definedUnits_[this.position_] && this.position_++;
  return this.definedUnits_[this.position_]
};
gviz.canviz.axis.TimeUnitSequence.prototype.next = function() {
  this.usingSequence_ ? (this.sequence_.next(), 1 == this.multiplier_ && this.sequence_.getValue() == this.minUnitValue_ && this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.SMALLEST)) : (this.position_++, this.position_ == this.definedUnits_.length && (this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.ABOVE), this.sequence_.round(1), this.sequence_.next()));
  return this.getValue()
};
gviz.canviz.axis.TimeUnitSequence.prototype.previous = function() {
  this.usingSequence_ ? (this.sequence_.previous(), this.multiplier_ == this.maxUnitValue_ && 1 == this.sequence_.getValue() && this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.LARGEST)) : (this.position_--, -1 == this.position_ && (this.shiftPhase_(gviz.canviz.axis.TimeUnitSequence.Phase.BELOW), this.sequence_.round(this.minUnitValue_), this.sequence_.previous()));
  return this.getValue()
};
// Input 315
gviz.canviz.axis.Utils = {};
gviz.canviz.axis.Utils.createTimeSequence = function(timeUnit, opt_firstDayOfWeek) {
  var firstDayOfWeek = goog.isDefAndNotNull(opt_firstDayOfWeek) ? opt_firstDayOfWeek : 1;
  timeUnit = (new gviz.canviz.axis.TimeUnitSequence(!0)).round(timeUnit);
  if(timeUnit < gviz.canviz.axis.Milliseconds.MONTH) {
    if(timeUnit == gviz.canviz.axis.Milliseconds.WEEK) {
      var offset = gviz.canviz.axis.Milliseconds.DAY * (3 + firstDayOfWeek);
      return new gviz.canviz.axis.LinearSequence(timeUnit, offset)
    }
    return new gviz.canviz.axis.LinearSequence(timeUnit)
  }
  return new gviz.canviz.axis.MonthSequence(Math.round(timeUnit / gviz.canviz.axis.Milliseconds.MONTH))
};
gviz.canviz.axis.Utils.millisecondsToIsoStr = function(time) {
  if(!isFinite(time)) {
    return"notime"
  }
  var date = new Date;
  date.setTime(time);
  var res = "", res = res + gviz.canviz.axis.Utils.zeroPad(date.getUTCFullYear().toString(), 4), month = date.getUTCMonth(), day = date.getUTCDate(), showMonth = 0 != month, showDay = 1 != day, hours = date.getUTCHours(), minutes = date.getUTCMinutes(), seconds = date.getUTCSeconds(), milliseconds = date.getUTCMilliseconds(), showTime = 0 != hours || 0 != minutes || 0 != seconds || 0 != milliseconds;
  if(showMonth || showDay || showTime) {
    res += "-", res += gviz.canviz.axis.Utils.zeroPad((month + 1).toString(), 2)
  }
  if(showDay || showTime) {
    res += "-", res += gviz.canviz.axis.Utils.zeroPad(day.toString(), 2)
  }
  showTime && (res += "T", res += gviz.canviz.axis.Utils.zeroPad(hours.toString(), 2), res += ":", res += gviz.canviz.axis.Utils.zeroPad(minutes.toString(), 2), res += ":", res += gviz.canviz.axis.Utils.zeroPad(seconds.toString(), 2), res += ".", res += gviz.canviz.axis.Utils.zeroPad(milliseconds.toString(), 3));
  return res
};
gviz.canviz.axis.Utils.timeToCustomIsoStr = function(time, timeUnit) {
  goog.asserts.assert(isFinite(time), "Time must be finite");
  var timeUnits = gviz.canviz.axis.Milliseconds.TIME_UNIT, res = "", date = new Date;
  date.setTime(time);
  var year = date.getUTCFullYear(), month = date.getUTCMonth(), day = date.getUTCDate(), hours = date.getUTCHours(), minutes = date.getUTCMinutes(), seconds = date.getUTCSeconds(), milliseconds = date.getUTCMilliseconds(), res = res + gviz.canviz.axis.Utils.zeroPad(year.toString(), 4);
  if(timeUnit == timeUnits.YEAR) {
    return res
  }
  res += "-";
  res += gviz.canviz.axis.Utils.zeroPad((month + 1).toString(), 2);
  if(timeUnit == timeUnits.MONTH) {
    return res
  }
  res += "-";
  res += gviz.canviz.axis.Utils.zeroPad(day.toString(), 2);
  if(timeUnit == timeUnits.DAY) {
    return res
  }
  res += "T";
  res += gviz.canviz.axis.Utils.zeroPad(hours.toString(), 2);
  res += ":";
  res += gviz.canviz.axis.Utils.zeroPad(minutes.toString(), 2);
  res += ":";
  res += gviz.canviz.axis.Utils.zeroPad(seconds.toString(), 2);
  res += ".";
  return res += gviz.canviz.axis.Utils.zeroPad(milliseconds.toString(), 3)
};
gviz.canviz.axis.Utils.zeroPad = function(str, toLength) {
  for(var fromLength = str.length, i = fromLength;i < toLength;i++) {
    str = "0" + str
  }
  return str
};
gviz.canviz.axis.Utils.isoStrToMilliseconds = function(str) {
  if("notime" == str || null == str || "" == str) {
    return NaN
  }
  var year = 0, month = 0, day = 1, hour = 0, minute = 0, second = 0, millisecond = 0, year = parseInt(str.substr(0, 4), 10);
  4 < str.length && (month = parseInt(str.substr(5, 2), 10) - 1, 7 < str.length && (day = parseInt(str.substr(8, 2), 10), 10 < str.length && (hour = parseInt(str.substr(11, 2), 10), minute = parseInt(str.substr(14, 2), 10), second = parseInt(str.substr(17, 2), 10), millisecond = parseInt(str.substr(20, 3), 10))));
  var value = Date.UTC(year, month, day, hour, minute, second, millisecond);
  return value
};
gviz.canviz.axis.Utils.timeLengthStr = function(length) {
  if(isNaN(length)) {
    return"Time is NaN."
  }
  var res = "", years = Math.floor(length / gviz.canviz.axis.Milliseconds.YEAR);
  0 < years && (res += years + " years, ", length -= years * gviz.canviz.axis.Milliseconds.YEAR);
  var days = Math.floor(length / gviz.canviz.axis.Milliseconds.DAY);
  0 < days && (res += days + " days, ", length -= days * gviz.canviz.axis.Milliseconds.DAY);
  var hours = Math.floor(length / gviz.canviz.axis.Milliseconds.HOUR);
  0 < hours && (res += hours + " h, ", length -= hours * gviz.canviz.axis.Milliseconds.HOUR);
  var minutes = Math.floor(length / gviz.canviz.axis.Milliseconds.MINUTE);
  0 < minutes && (res += minutes + " m, ", length -= minutes * gviz.canviz.axis.Milliseconds.MINUTE);
  var seconds = Math.floor(length / gviz.canviz.axis.Milliseconds.SECOND);
  0 < seconds && (res += seconds + " s");
  return res
};
gviz.canviz.axis.Utils.roundToNextEvenValue = function(value, maxDiff) {
  return 0 > value ? -gviz.canviz.axis.Utils.roundDown_(-value, maxDiff) : gviz.canviz.axis.Utils.roundUp_(value, maxDiff)
};
gviz.canviz.axis.Utils.roundToPrevEvenValue = function(value, maxDiff) {
  return 0 > value ? -gviz.canviz.axis.Utils.roundUp_(-value, maxDiff) : gviz.canviz.axis.Utils.roundDown_(value, maxDiff)
};
gviz.canviz.axis.Utils.expandRange = function(range, maxChange) {
  if(range.start == range.end || 0 == maxChange) {
    return range
  }
  goog.asserts.assert(isFinite(range.start) && isFinite(range.end), "Range must be finite.");
  goog.asserts.assert(range.start <= range.end, "Range start must be less or equal to end.");
  var maxDiff = (range.end - range.start) * maxChange;
  return new goog.math.Range(gviz.canviz.axis.Utils.roundToPrevEvenValue(range.start, maxDiff), gviz.canviz.axis.Utils.roundToNextEvenValue(range.end, maxDiff))
};
gviz.canviz.axis.Utils.roundDown_ = function(value, maxDiff) {
  function isDone(testVal) {
    return testVal <= value && testVal > value - maxDiff
  }
  if(0 == value) {
    return 0
  }
  for(var remaining = value, sum = 0, result = NaN, unRounded;;) {
    var exponent = gviz.canviz.axis.Pow10Math.floorExponent(remaining), power = gviz.canviz.axis.Pow10Math.exactScientific(1, exponent), leadingDigit = gviz.canviz.axis.Utils.getLeadingDigit_(remaining);
    if(5 < leadingDigit && (unRounded = 5 * power + sum, result = gviz.canviz.axis.Utils.roundToNumDecimals(unRounded, exponent), isDone(result))) {
      break
    }
    unRounded = leadingDigit * power + sum;
    result = gviz.canviz.axis.Utils.roundToNumDecimals(unRounded, exponent);
    if(isDone(result)) {
      break
    }
    var level = leadingDigit * power, sum = sum + level, remaining = remaining - level
  }
  return result
};
gviz.canviz.axis.Utils.roundUp_ = function(value, maxDiff) {
  function isDone(testVal) {
    return testVal <= value + maxDiff && testVal >= value
  }
  if(0 == value) {
    return 0
  }
  for(var remaining = value, sum = 0, result = NaN, unRounded;;) {
    var exponent = gviz.canviz.axis.Pow10Math.floorExponent(remaining), power = gviz.canviz.axis.Pow10Math.exactScientific(1, exponent), leadingDigit = gviz.canviz.axis.Utils.getLeadingDigit_(remaining);
    if(5 > leadingDigit && (unRounded = 5 * power + sum, result = gviz.canviz.axis.Utils.roundToNumDecimals(unRounded, exponent), isDone(result))) {
      break
    }
    unRounded = leadingDigit * power + sum;
    result = gviz.canviz.axis.Utils.roundToNumDecimals(unRounded, exponent);
    if(isDone(result)) {
      break
    }
    unRounded = (leadingDigit + 1) * power + sum;
    result = gviz.canviz.axis.Utils.roundToNumDecimals(unRounded, exponent);
    if(isDone(result)) {
      break
    }
    var level = leadingDigit * power, sum = sum + level, remaining = remaining - level
  }
  return result
};
gviz.canviz.axis.Utils.roundToNumDecimals = function(value, numDecimals) {
  var rounder = gviz.canviz.axis.Pow10Math.exactScientific(1, Math.abs(numDecimals)), multipliedAndRounded = Math.round(value * rounder);
  return multipliedAndRounded / rounder
};
gviz.canviz.axis.Utils.getLeadingDigit_ = function(value) {
  var exponent = gviz.canviz.axis.Pow10Math.floorExponent(value), power = gviz.canviz.axis.Pow10Math.exactScientific(1, exponent), normalized = value / power, diff = Math.abs(Math.round(normalized) - normalized);
  0 != diff && 1E-10 > diff && (normalized = Math.round(normalized));
  return Math.floor(normalized)
};
// Input 316
gviz.canviz.axis.TimeAxisStrategy = function(dataGranularity, labelGranularity, unitsPerLabel, textMeasurer, timeFormatter, mapper, minLabelDistance, orientation, includeLastTimePoint) {
  this.dataGranularity_ = dataGranularity;
  this.labelGranularity_ = labelGranularity;
  this.unitsPerLabel_ = unitsPerLabel;
  this.textMeasurer_ = textMeasurer;
  this.timeFormatter_ = timeFormatter;
  this.mapper_ = mapper;
  this.minLabelDistance_ = minLabelDistance;
  this.orientation_ = orientation;
  this.includeLastTimePoint_ = includeLastTimePoint;
  this.dataGranularityInMillis_ = gviz.canviz.axis.Milliseconds.millisecondsForName(dataGranularity);
  this.labelGranularityInMillis_ = gviz.canviz.axis.Milliseconds.millisecondsForName(labelGranularity);
  this.timeFormatter_.setTimeUnit(this.labelGranularity_)
};
gviz.canviz.axis.TimeAxisStrategy.prototype.getLabelDuration = function() {
  return this.labelGranularityInMillis_
};
gviz.canviz.axis.TimeAxisStrategy.prototype.singleLabel = function(value) {
  return[gviz.canviz.axis.AxisDecoration.makeLabel(value, Math.abs(this.mapper_.getScreenStart() - this.mapper_.getScreenEnd()) / 2, this.timeFormatter_.format(value))]
};
gviz.canviz.axis.TimeAxisStrategy.prototype.attempt = function() {
  var firstTime = this.mapper_.getDataMin(), lastTime = this.mapper_.getDataMax();
  this.timeFormatter_.setTimeUnit(this.dataGranularity_);
  if(firstTime == lastTime) {
    return this.singleLabel(firstTime)
  }
  var lastTimeDecoration = gviz.canviz.axis.AxisDecoration.makeLeftAlignedLabelWithLineAndTick(lastTime, this.mapper_.getScreenEnd(), this.timeFormatter_.format(lastTime));
  this.timeFormatter_.setTimeUnit(this.labelGranularity_);
  for(var labelIntervalsInsteadOfPoints = 1 == this.unitsPerLabel_ && this.labelGranularityInMillis_ > this.dataGranularityInMillis_, lineSequence = gviz.canviz.axis.Utils.createTimeSequence(this.labelGranularityInMillis_ * this.unitsPerLabel_), tickSequence = gviz.canviz.axis.Utils.createTimeSequence(this.labelGranularityInMillis_), decorations = [], previousValue = NaN, nextLineValue = lineSequence.ceil(firstTime), value = tickSequence.ceil(firstTime);value <= lastTime;value = tickSequence.next()) {
    var position = this.mapper_.getScreenValue(value);
    if(value == nextLineValue) {
      nextLineValue = lineSequence.next();
      if(this.twoLabelsCollide_(previousValue, value)) {
        return null
      }
      if(labelIntervalsInsteadOfPoints) {
        isNaN(previousValue) || decorations.push(this.makeLabelBetween_(previousValue, value)), decorations.push(gviz.canviz.axis.AxisDecoration.makeLineWithHeavyTick(value, position))
      }else {
        var line = gviz.canviz.axis.AxisDecoration.makeLabeledLineWithHeavyTick(value, position, this.timeFormatter_.format(value));
        decorations.push(line)
      }
      previousValue = value
    }else {
      decorations.push(gviz.canviz.axis.AxisDecoration.makeTick(value, position))
    }
  }
  labelIntervalsInsteadOfPoints && lastTime < value && this.addLabelForIncompleteInterval_(decorations, tickSequence, lastTime);
  this.includeLastTimePoint_ && (this.hideLastLabelIfOverlapsWithMax_(lastTimeDecoration, decorations, this.textMeasurer_), decorations.push(lastTimeDecoration));
  return 2 > this.numberOfLabelsIn_(decorations) ? this.alternativeForLessThanTwoLabels_() : this.ticksCollide_(decorations) ? this.withoutTicks_(decorations) : decorations
};
gviz.canviz.axis.TimeAxisStrategy.prototype.addLabelForIncompleteInterval_ = function(decorations, tickSequence, max) {
  var label = this.timeFormatter_.format(max), width = this.textMeasurer_.getSizeByOrientation(label, this.orientation_), nextTime = tickSequence.getValue(), prevTime = tickSequence.previous(), prevPos = this.mapper_.getScreenValue(prevTime), nextPos = this.mapper_.getScreenValue(nextTime), endPos = this.mapper_.getScreenValue(max), middlePos = (prevPos + nextPos) / 2;
  endPos - middlePos > width / 2 && decorations.push(gviz.canviz.axis.AxisDecoration.makeLabel(max, middlePos, label))
};
gviz.canviz.axis.TimeAxisStrategy.prototype.hideLastLabelIfOverlapsWithMax_ = function(maxDecoration, decorations) {
  var previous = this.findLastLabeledDecoration_(decorations);
  if(null != previous) {
    var sizeOfPrevious = this.textMeasurer_.getSizeByOrientation(previous.getLabel(), this.orientation_), sizeOfMaxDecoration = this.textMeasurer_.getSizeByOrientation(maxDecoration.getLabel(), this.orientation_), midpointDistance = Math.abs(previous.getPosition() - maxDecoration.getPosition()), distance = midpointDistance - (sizeOfPrevious + sizeOfMaxDecoration) / 2;
    distance < this.minLabelDistance_ && previous.setLabel(null)
  }
};
gviz.canviz.axis.TimeAxisStrategy.prototype.findLastLabeledDecoration_ = function(decorations) {
  for(var i = decorations.length - 1;0 <= i;i--) {
    if(null != decorations[i].getLabel()) {
      return decorations[i]
    }
  }
  return null
};
gviz.canviz.axis.TimeAxisStrategy.prototype.alternativeForLessThanTwoLabels_ = function() {
  var start = this.timeFormatter_.format(this.mapper_.getDataMin()), end = this.timeFormatter_.format(this.mapper_.getDataMax()), summaryLabel = start + "-" + end, decorations = [];
  if(!this.tooWide_(summaryLabel, this.mapper_)) {
    var midpoint = this.mapper_.getScreenStart() + this.mapper_.getScreenEnd() / 2;
    decorations.push(gviz.canviz.axis.AxisDecoration.makeLabel(NaN, midpoint, summaryLabel))
  }
  return decorations
};
gviz.canviz.axis.TimeAxisStrategy.prototype.tooWide_ = function(label) {
  var chartWidth = Math.abs(this.mapper_.getScreenStart() - this.mapper_.getScreenEnd());
  return this.textMeasurer_.getWidth(label) > chartWidth + 40
};
gviz.canviz.axis.TimeAxisStrategy.prototype.numberOfLabelsIn_ = function(decorations) {
  for(var count = 0, i = 0;i < decorations.length;i++) {
    null != decorations[i].getLabel() && count++
  }
  return count
};
gviz.canviz.axis.TimeAxisStrategy.prototype.withoutTicks_ = function(listWithTicks) {
  for(var listWithoutTicks = [], i = 0;i < listWithTicks.length;i++) {
    var decoration = listWithTicks[i];
    decoration.hasTick() && !decoration.hasLine() || listWithoutTicks.push(decoration)
  }
  return listWithoutTicks
};
gviz.canviz.axis.TimeAxisStrategy.prototype.twoLabelsCollide_ = function(value1, value2) {
  var size1 = this.textMeasurer_.getSizeByOrientation(this.timeFormatter_.format(value1), this.orientation_), size2 = this.textMeasurer_.getSizeByOrientation(this.timeFormatter_.format(value2), this.orientation_), midpointDistance = Math.abs(this.mapper_.getScreenValue(value1) - this.mapper_.getScreenValue(value2)), distance = midpointDistance - (size1 + size2) / 2;
  return distance < this.minLabelDistance_
};
gviz.canviz.axis.TimeAxisStrategy.prototype.ticksCollide_ = function(decorations) {
  var minTickSpacing = 5;
  if(2 > decorations.length) {
    return!1
  }
  for(var prevDecoration = decorations[0], i = 1;i < decorations.length;i++) {
    var decoration = decorations[i], distance = Math.abs(decoration.getPosition() - prevDecoration.getPosition());
    if(distance < minTickSpacing && prevDecoration.getValue() != decoration.getValue()) {
      return!0
    }
    prevDecoration = decoration
  }
  return!1
};
gviz.canviz.axis.TimeAxisStrategy.prototype.makeLabelBetween_ = function(value1, value2) {
  var pos1 = this.mapper_.getScreenValue(value1), pos2 = this.mapper_.getScreenValue(value2), labelPosition = (pos1 + pos2) / 2, labelMarker = gviz.canviz.axis.AxisDecoration.makeLabel(this.mapper_.getDataValue(labelPosition), labelPosition, this.timeFormatter_.format(value1));
  return labelMarker
};
// Input 317
gviz.canviz.axis.TimeAxisDecorationSupplier = function(mapper, timeGranularity, textMeasurer, timeFormatter, minLabelDistance, orientation, includeLastTimePoint) {
  this.mapper_ = mapper;
  this.timeGranularity_ = timeGranularity;
  this.textMeasurer_ = textMeasurer;
  this.timeFormatter_ = timeFormatter;
  this.minLabelDistance_ = minLabelDistance;
  this.orientation_ = orientation;
  this.includeLastTimePoint_ = includeLastTimePoint;
  this.strategies_ = this.getStrategies_()
};
gviz.canviz.axis.TimeAxisDecorationSupplier.prototype.getStrategies_ = function() {
  return[this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.DAY, 1), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.DAY, 7), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.MONTH, 1), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.MONTH, 2), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.MONTH, 3), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.QUARTER, 1), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.MONTH, 
  6), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 1), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 2), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 5), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 10), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 20), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 50), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 
  100), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 1E3), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 1E4), this.newTimeAxisStrategy_(gviz.canviz.axis.Milliseconds.TIME_UNIT.YEAR, 1E7)]
};
gviz.canviz.axis.TimeAxisDecorationSupplier.prototype.newTimeAxisStrategy_ = function(labelDuration, unitsPerDuration) {
  return new gviz.canviz.axis.TimeAxisStrategy(this.timeGranularity_, labelDuration, unitsPerDuration, this.textMeasurer_, this.timeFormatter_, this.mapper_, this.minLabelDistance_, this.orientation_, this.includeLastTimePoint_)
};
gviz.canviz.axis.TimeAxisDecorationSupplier.prototype.getDecorations = function() {
  for(var granularityInMillis = gviz.canviz.axis.Milliseconds.millisecondsForName(this.timeGranularity_), i = 0;i < this.strategies_.length;i++) {
    var strategy = this.strategies_[i];
    if(granularityInMillis <= strategy.getLabelDuration()) {
      var lines = strategy.attempt();
      if(null != lines) {
        return lines
      }
    }
  }
  return[]
};
// Input 318
gviz.canviz.axis.AxisDecorationsCreator = {};
gviz.canviz.axis.AxisDecorationsCreator.getNumberDecorations = function(dataMin, dataMax, screenStart, screenEnd, reversed, lambda, epsilon, orientation, minLineSpacing, textMeasurer, formatter) {
  if(reversed) {
    var tmp = screenStart;
    screenStart = screenEnd;
    screenEnd = tmp
  }
  if(dataMin == dataMax) {
    var midScreenPosition = (screenEnd - screenStart) / 2 + screenStart, label = formatter.format(dataMin);
    return[gviz.canviz.axis.AxisDecoration.makeLabel(dataMin, midScreenPosition, label)]
  }
  var mapper;
  mapper = 1 == lambda ? new gviz.canviz.axis.LinMapper(dataMin, dataMax, screenStart, screenEnd) : new gviz.canviz.axis.BoxCoxMapper(dataMin, dataMax, screenStart, screenEnd, lambda, epsilon);
  return gviz.canviz.axis.AxisDecorationsCreator.createNumberDecorations(mapper, minLineSpacing, epsilon, orientation, textMeasurer, formatter)
};
gviz.canviz.axis.AxisDecorationsCreator.getTimeDecorations = function(dataMin, dataMax, screenStart, screenEnd, reversed, timeGranularity, orientation, minLabelDistance, textMeasurer, formatter, includeLastTimePoint) {
  if(reversed) {
    var tmp = screenStart;
    screenStart = screenEnd;
    screenEnd = tmp
  }
  var mapper = new gviz.canviz.axis.LinMapper(dataMin, dataMax, screenStart, screenEnd), supplier = new gviz.canviz.axis.TimeAxisDecorationSupplier(mapper, timeGranularity, textMeasurer, formatter, minLabelDistance, orientation, includeLastTimePoint);
  return supplier.getDecorations()
};
gviz.canviz.axis.AxisDecorationsCreator.createNumberDecorations = function(mapper, minLineSpacing, epsilon, orientation, textMeasurer, formatter) {
  var ratio = gviz.canviz.axis.AxisDecorationsCreator.calculateDataDensityRatio_(mapper), axisDecorationSupplier;
  axisDecorationSupplier = 0.65 < ratio ? new gviz.canviz.axis.LinAxisDecorationSupplier(mapper, formatter, textMeasurer, orientation, minLineSpacing) : new gviz.canviz.axis.LogAxisDecorationSupplier(mapper, formatter, textMeasurer, orientation, minLineSpacing, epsilon);
  return axisDecorationSupplier.getDecorations()
};
gviz.canviz.axis.AxisDecorationsCreator.calculateDataDensityRatio_ = function(mapper) {
  if(mapper.getDataMin() == mapper.getDataMax()) {
    return 1
  }
  var screenMin = Math.min(mapper.getScreenStart(), mapper.getScreenEnd()), screenMax = Math.max(mapper.getScreenStart(), mapper.getScreenEnd()), absEdgeValue1 = Math.abs(mapper.getDataValue(screenMin)), absEdgeValue2 = Math.abs(mapper.getDataValue(screenMax)), maxDataValue = Math.max(absEdgeValue1, absEdgeValue2), minDataValue = 0, screenAtZero = mapper.getScreenValue(0);
  if(screenMin > screenAtZero || screenAtZero > screenMax) {
    minDataValue = Math.min(absEdgeValue1, absEdgeValue2)
  }
  var pixelAtAbsMin = mapper.getScreenValue(minDataValue), pixelAtAbsMax = mapper.getScreenValue(maxDataValue), ratio = gviz.canviz.axis.AxisDecorationsCreator.getDataDensity_(pixelAtAbsMin, mapper) / gviz.canviz.axis.AxisDecorationsCreator.getDataDensity_(pixelAtAbsMax, mapper);
  return ratio
};
gviz.canviz.axis.AxisDecorationsCreator.getDataDensity_ = function(pixelPosition, mapper) {
  var dataStart = mapper.getDataValue(pixelPosition), dataEnd = mapper.getDataValue(pixelPosition + 10);
  return Math.abs(dataEnd - dataStart)
};
// Input 319
gviz.canviz.axis.TextMeasurer = function() {
};
gviz.canviz.axis.FixedFontTextMeasurer = function(charWidth, charHeight) {
  this.charWidth_ = charWidth;
  this.charHeight_ = charHeight
};
gviz.canviz.axis.FixedFontTextMeasurer.prototype.getWidth = function(str) {
  return str.length * this.charWidth_
};
gviz.canviz.axis.FixedFontTextMeasurer.prototype.getHeight = function() {
  return this.charHeight_
};
gviz.canviz.axis.FixedFontTextMeasurer.prototype.getSizeByOrientation = function(str, orientation) {
  return orientation == gviz.canviz.axis.AxisTools.Orientation.HORIZONTAL ? this.getWidth(str) : this.getHeight(str)
};
gviz.canviz.axis.TextMeasurerAdapter = function(textMeasureFunc, textStyle) {
  this.textMeasureFunc_ = textMeasureFunc;
  this.textStyle_ = textStyle
};
gviz.canviz.axis.TextMeasurerAdapter.prototype.getWidth = function(str) {
  return this.textMeasureFunc_(str, this.textStyle_).width
};
gviz.canviz.axis.TextMeasurerAdapter.prototype.getHeight = function(str) {
  return this.textMeasureFunc_(str, this.textStyle_).height
};
gviz.canviz.axis.TextMeasurerAdapter.prototype.getSizeByOrientation = function(str, orientation) {
  return orientation == gviz.canviz.axis.AxisTools.Orientation.HORIZONTAL ? this.getWidth(str) : this.getHeight(str)
};
// Input 320
// Input 321
gviz.canviz.dateTicks = {};
gviz.canviz.dateTicks.Definer = function(roundDurationTable, durationTableRepeatingIntervals, units, options, getAbsoluteOptionsPathFunc) {
  this.logger_ = gviz.util.VisCommon.createLogger(gviz.canviz.dateTicks.NAME_);
  this.roundDurationTable_ = roundDurationTable;
  this.durationTableRepeatingIntervals_ = durationTableRepeatingIntervals;
  goog.asserts.assert(7 == units.length);
  this.units_ = units;
  this.minStrongLineDistance = options.inferNonNegativeNumberValue(getAbsoluteOptionsPathFunc("gridlines.minStrongLineDistance"));
  this.minWeakLineDistance = options.inferNonNegativeNumberValue(getAbsoluteOptionsPathFunc("gridlines.minWeakLineDistance"));
  this.minStrongToWeakLineDistance = options.inferNonNegativeNumberValue(getAbsoluteOptionsPathFunc("gridlines.minStrongToWeakLineDistance"));
  this.minNotchDistance = options.inferNonNegativeNumberValue(getAbsoluteOptionsPathFunc("gridlines.minNotchDistance"));
  this.minMajorTextDistance = options.inferNonNegativeNumberValue(getAbsoluteOptionsPathFunc("gridlines.minMajorTextDistance"));
  this.minMinorTextDistance = options.inferNonNegativeNumberValue(getAbsoluteOptionsPathFunc("gridlines.minMinorTextDistance"));
  this.unitThreshold = options.inferNonNegativeNumberValue(getAbsoluteOptionsPathFunc("gridlines.unitThreshold"));
  this.allowMinor = options.inferBooleanValue(getAbsoluteOptionsPathFunc("gridlines.allowMinor"))
};
gviz.canviz.dateTicks.Definer.build = function(options, getAbsoluteOptionsPathFunc) {
  return new gviz.canviz.dateTicks.Definer(gviz.canviz.dateTicks.defaultDatetimeRoundUnits_, gviz.canviz.dateTicks.datetimeRoundUnitsRepeatingIntervals_, gviz.canviz.dateTicks.defaultUnitsConfig_, options, getAbsoluteOptionsPathFunc)
};
gviz.canviz.dateTicks.Definer.prototype.calc = function(minValue, maxValue, dataGranularity, dateToPositionFunc, tickOptions, measureFunction) {
  var da = this.analyzeData_(minValue, maxValue, dataGranularity), majorGridlinesConfig = {minValue:da.minValue, maxValue:da.maxValue, unitIndex:da.majorUnit.index, unitDuration:da.majorUnit.duration, unitFormats:da.majorUnit.formats, unitMultiples:da.majorUnit.multiples, maxMultiple:goog.array.peek(da.majorUnit.multiples), minLineDistance:this.minStrongLineDistance, gridlineBrush:tickOptions.gridlineBrush, tickTextStyle:tickOptions.tickTextStyle, minTextDistance:this.minMajorTextDistance, gridlinesToAvoid:[], 
  minCrossGridlinesDistance:0}, majorG = this.computeGridlines_(majorGridlinesConfig, dateToPositionFunc, measureFunction);
  goog.asserts.assert(null != majorG);
  this.logger_.info("# major gridlines: " + majorG.gridlines.length);
  if(!(this.allowMinor && 1 == majorG.multiple && 0 < da.majorUnitIndex && da.dataIsMoreRefinedThanMajorUnit)) {
    var tickSpan = 1 == majorG.multiple && da.dataIsMoreRefinedThanMajorUnit ? gviz.canviz.dateTicks.TickSpanType_.SPAN_LEFT : gviz.canviz.dateTicks.TickSpanType_.BELLOW, tickTextLayout = this.getTickText_(tickOptions.tickTextStyle, tickSpan, majorG.gridlines, majorG.texts), gridlines;
    if(this.allowMinor && 1 < majorG.multiple) {
      var refinedMajorGridlines = this.computeRefinedMajorGridlines_(da, majorG, tickOptions, dateToPositionFunc);
      gridlines = goog.array.concat(majorG.gridlines, refinedMajorGridlines)
    }else {
      gridlines = majorG.gridlines
    }
    return{gridlines:gridlines, tickTextLayout:tickTextLayout}
  }
  var minorUnitIndex = da.majorUnitIndex - 1, minorUnit = this.units_[minorUnitIndex], minorGridlinesConfig = {minValue:da.minValue, maxValue:da.maxValue, unitIndex:minorUnit.index, unitDuration:minorUnit.duration, unitFormats:minorUnit.minorFormats, unitMultiples:minorUnit.minorMultiples, minLineDistance:this.minWeakLineDistance, gridlineBrush:tickOptions.minorGridlineBrush, tickTextStyle:tickOptions.minorTickTextStyle, minTextDistance:this.minMinorTextDistance, gridlinesToAvoid:majorG.gridlines, 
  minCrossGridlinesDistance:this.minStrongToWeakLineDistance}, minorG = this.computeGridlines_(minorGridlinesConfig, dateToPositionFunc, measureFunction);
  if(null == minorG) {
    var majorTickTextLayout = this.getTickText_(tickOptions.tickTextStyle, gviz.canviz.dateTicks.TickSpanType_.SPAN_CENTER, majorG.gridlines, majorG.texts);
    return{gridlines:majorG.gridlines, tickTextLayout:majorTickTextLayout}
  }
  this.logger_.info("# minor gridlines: " + minorG.gridlines.length);
  var majorTickTextLayout = this.getTickText_(tickOptions.tickTextStyle, gviz.canviz.dateTicks.TickSpanType_.SPAN_LEFT, majorG.gridlines, majorG.texts), minorTickTextLayout = this.getTickText_(tickOptions.minorTickTextStyle, gviz.canviz.dateTicks.TickSpanType_.SPAN_LEFT, minorG.gridlines, minorG.texts, majorTickTextLayout);
  gridlines = goog.array.concat(minorG.gridlines, majorG.gridlines);
  tickTextLayout = goog.array.concat(majorTickTextLayout, minorTickTextLayout);
  return{gridlines:gridlines, tickTextLayout:tickTextLayout}
};
gviz.canviz.dateTicks.Definer.prototype.analyzeData_ = function(minValue, maxValue, dataGranularity) {
  var extraMs = Math.round(0.15 * (maxValue.getTime() - minValue.getTime()));
  minValue = new Date(minValue.getTime() - extraMs);
  maxValue = new Date(maxValue.getTime() + extraMs);
  var granularity = gviz.canviz.timeutil.roundMillisAccordingToTable(dataGranularity, gviz.canviz.dateTicks.granularityRoundUnits_, this.durationTableRepeatingIntervals_);
  this.logger_.info("rounded granularity: " + goog.json.serialize(granularity));
  var rangeGranularity = gviz.canviz.timeutil.roundMillisAccordingToTable((maxValue.getTime() - minValue.getTime()) / this.unitThreshold / 2, this.roundDurationTable_, this.durationTableRepeatingIntervals_);
  this.logger_.info("rounded range granularity: " + goog.json.serialize(rangeGranularity));
  var majorUnitDuration = gviz.canviz.dateTicks.getUnit(rangeGranularity);
  this.logger_.info("major unit: " + majorUnitDuration);
  var majorUnitIndex = gviz.canviz.timeutil.durationGranularity(majorUnitDuration), majorUnit = this.units_[majorUnitIndex], dataIsMoreRefinedThanMajorUnit = gviz.canviz.timeutil.durationAsMillis(granularity) < gviz.canviz.timeutil.durationAsMillis(majorUnitDuration);
  return{minValue:minValue, maxValue:maxValue, majorUnit:majorUnit, majorUnitIndex:majorUnitIndex, dataIsMoreRefinedThanMajorUnit:dataIsMoreRefinedThanMajorUnit}
};
gviz.canviz.dateTicks.Definer.prototype.computeGridlines_ = function(gridlinesConfig, dateToPositionFunc, measureFunction) {
  for(var formatters = goog.array.map(gridlinesConfig.unitFormats, function(format) {
    return new google.visualization.DateFormat({pattern:format})
  }), i = 0;i < gridlinesConfig.unitMultiples.length;++i) {
    var multiple = gridlinesConfig.unitMultiples[i], nextGridlineToAvoidIdx = 0, multipleUnitDuration = gviz.canviz.timeutil.multiplyDuration(gridlinesConfig.unitDuration, multiple), firstValue = gviz.canviz.timeutil.floorDate(gridlinesConfig.minValue, multipleUnitDuration);
    4 == gridlinesConfig.unitIndex && (firstValue = gviz.canviz.timeutil.floorDateToMonday(firstValue));
    for(var dateIter = new gviz.canviz.timeutil.DateRangeIter(firstValue, gridlinesConfig.maxValue, gridlinesConfig.unitIndex, multiple), gridlines = [], gridlinesAreSpaced = !0, minPos = dateToPositionFunc(gridlinesConfig.minValue), firstGridlineInView = -1;dateIter.hasNext();) {
      var d = dateIter.next(), pos = dateToPositionFunc(d);
      -1 == firstGridlineInView && pos >= minPos && (firstGridlineInView = gridlines.length);
      var nextD = dateIter.peek();
      if(null != nextD) {
        var nPos = dateToPositionFunc(nextD);
        if(nPos < pos + 1) {
          continue
        }
        if(nPos - pos < gridlinesConfig.minLineDistance) {
          gridlinesAreSpaced = !1;
          break
        }
      }
      for(var tooClose = !1;nextGridlineToAvoidIdx < gridlinesConfig.gridlinesToAvoid.length;) {
        var nextGridlineToAvoid = gridlinesConfig.gridlinesToAvoid[nextGridlineToAvoidIdx];
        if(Math.abs(nextGridlineToAvoid.coordinate - pos) < gridlinesConfig.minCrossGridlinesDistance) {
          tooClose = !0;
          break
        }
        if(nextGridlineToAvoid.coordinate > pos) {
          nextGridlineToAvoidIdx = Math.max(0, nextGridlineToAvoidIdx - 1);
          break
        }
        nextGridlineToAvoidIdx++
      }
      tooClose || gridlines.push({dataValue:d, coordinate:pos, isVisible:!0, brush:gridlinesConfig.gridlineBrush, length:null})
    }
    if(gridlinesAreSpaced) {
      1 < firstGridlineInView && (gridlines = goog.array.slice(gridlines, firstGridlineInView - 1));
      for(var chosenFormatter = null, chosenTexts = null, f = 0;f < formatters.length;++f) {
        for(var formatter = formatters[f], textsFit = !0, texts = [], j = 0;j < gridlines.length;++j) {
          var gridline = gridlines[j], text = formatter.formatValue(gridline.dataValue), textWidth = measureFunction(text, gridlinesConfig.tickTextStyle).width;
          if(j + 1 < gridlines.length) {
            var nextGridline = gridlines[j + 1];
            if(nextGridline.coordinate - gridline.coordinate < gridlinesConfig.minTextDistance + textWidth) {
              textsFit = !1;
              break
            }
          }
          texts.push({text:text, textWidth:textWidth})
        }
        if(textsFit) {
          chosenFormatter = f;
          chosenTexts = texts;
          break
        }
      }
      if(null != chosenFormatter) {
        goog.asserts.assert(null != chosenTexts);
        for(var minimumSpaceBetweenGridlines = Infinity, j = 0;j < gridlines.length - 1;++j) {
          minimumSpaceBetweenGridlines = Math.min(minimumSpaceBetweenGridlines, gridlines[j + 1].coordinate - gridlines[j].coordinate)
        }
        return{gridlines:gridlines, texts:chosenTexts, multiple:multiple, minimumSpaceBetweenGridlines:minimumSpaceBetweenGridlines}
      }
    }
  }
  return null
};
gviz.canviz.dateTicks.Definer.prototype.computeRefinedMajorGridlines_ = function(da, majorG, tickOptions, dateToPositionFunc) {
  var approxMinSpaceBetweenGridlines = majorG.minimumSpaceBetweenGridlines / majorG.multiple;
  if(approxMinSpaceBetweenGridlines < this.minNotchDistance) {
    return[]
  }
  for(var length = gviz.canviz.dateTicks.NOTCH_LENGTH_, brush = tickOptions.gridlineBrush, gridlines = [], firstValue = majorG.gridlines[0].dataValue, majorDateIter = new gviz.canviz.timeutil.DateRangeIter(firstValue, da.maxValue, da.majorUnitIndex, 1), modulo = 0;majorDateIter.hasNext();) {
    if(0 != modulo % majorG.multiple) {
      var d = majorDateIter.next(), pos = dateToPositionFunc(d);
      gridlines.push({dataValue:d, coordinate:pos, isVisible:!0, brush:brush, length:length})
    }
    modulo++
  }
  return gridlines
};
gviz.canviz.dateTicks.TickSpanType_ = {BELLOW:0, SPAN_LEFT:1, SPAN_CENTER:2};
gviz.canviz.dateTicks.Definer.prototype.getTickText_ = function(textStyle, spanType, gridlines, texts, opt_textsToAvoid) {
  var regionsToAvoid = [];
  if(goog.isDefAndNotNull(opt_textsToAvoid)) {
    for(var j = 0;j < opt_textsToAvoid.length;++j) {
      var textBlock = opt_textsToAvoid[j].textBlock, line = textBlock.lines[0];
      regionsToAvoid.push(gviz.canviz.dateTicks.getTextBounds_(line.x, line.length, textBlock.paralAlign, this.minMinorTextDistance))
    }
  }
  for(var paralTextAlign = spanType == gviz.canviz.dateTicks.TickSpanType_.SPAN_LEFT ? gviz.graphics.TextAlign.START : gviz.graphics.TextAlign.CENTER, nextRegionToAvoidIdx = 0, tickTextLayout = [], length = spanType == gviz.canviz.dateTicks.TickSpanType_.SPAN_CENTER ? gridlines.length - 1 : gridlines.length, i = 0;i < length;++i) {
    var gridline = gridlines[i];
    if(gridline.isVisible && texts[i]) {
      for(var c = Math.round(spanType == gviz.canviz.dateTicks.TickSpanType_.SPAN_CENTER ? (gridlines[i + 1].coordinate + gridline.coordinate) / 2 : gridline.coordinate), w = texts[i].textWidth, textRange = gviz.canviz.dateTicks.getTextBounds_(c, w, paralTextAlign), fits = !0;nextRegionToAvoidIdx < regionsToAvoid.length;) {
        var nextRegionToAvoid = regionsToAvoid[nextRegionToAvoidIdx];
        if(goog.math.Range.hasIntersection(textRange, nextRegionToAvoid)) {
          fits = !1;
          break
        }
        if(nextRegionToAvoid.start > textRange.end) {
          nextRegionToAvoidIdx = Math.max(0, nextRegionToAvoidIdx - 1);
          break
        }
        nextRegionToAvoidIdx++
      }
      fits && tickTextLayout.push({dataValue:gridline.dataValue, isVisible:!0, textBlock:{text:texts[i].text, textStyle:textStyle, lines:[{x:c, y:0, text:texts[i].text, length:w}], paralAlign:paralTextAlign, perpenAlign:gviz.graphics.TextAlign.END, tooltip1:texts[i].text, anchor:null, angle:0}})
    }
  }
  return tickTextLayout
};
gviz.canviz.dateTicks.getUnit = function(duration) {
  var unit = goog.array.map(duration, function(value) {
    return 0 < value ? 1 : 0
  });
  return unit
};
gviz.canviz.dateTicks.getTextBounds_ = function(x, length, align, opt_padding) {
  var padding = goog.isDef(opt_padding) ? opt_padding : 0, left, right;
  align == gviz.graphics.TextAlign.START ? (left = x, right = left + length) : (goog.asserts.assert(align == gviz.graphics.TextAlign.CENTER), left = Math.round(x - length / 2), right = Math.round(x + length / 2));
  return new goog.math.Range(left - padding, right + padding)
};
gviz.canviz.dateTicks.granularityRoundUnits_ = [[1], [50], [500], [0, 1], [0, 15], [0, 30], [0, 0, 1], [0, 0, 15], [0, 0, 30], [0, 0, 0, 1], [0, 0, 0, 6], [0, 0, 0, 12], [0, 0, 0, 0, 1], [0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 0, 0, 1]];
gviz.canviz.dateTicks.dateRoundUnitsRepeatingIntervals_ = 3;
gviz.canviz.dateTicks.defaultDatetimeRoundUnits_ = [[1], [2], [5], [10], [20], [50], [100], [200], [500], [0, 1], [0, 2], [0, 5], [0, 10], [0, 15], [0, 30], [0, 0, 1], [0, 0, 2], [0, 0, 5], [0, 0, 10], [0, 0, 15], [0, 0, 30], [0, 0, 0, 1], [0, 0, 0, 2], [0, 0, 0, 3], [0, 0, 0, 4], [0, 0, 0, 6], [0, 0, 0, 12], [0, 0, 0, 0, 1], [0, 0, 0, 0, 2], [0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 10], [0, 0, 0, 0, 0, 0, 50], [0, 0, 0, 0, 0, 0, 100]];
gviz.canviz.dateTicks.datetimeRoundUnitsRepeatingIntervals_ = 3;
gviz.canviz.dateTicks.NOTCH_LENGTH_ = 5;
gviz.canviz.dateTicks.defaultUnitsConfig_ = [{index:0, duration:[1], formats:["h:mm:ss a"], multiples:[1, 5, 10, 50, 100, 500], minorFormats:["h:mm:ss a"], minorMultiples:[1, 5, 10, 50, 100]}, {index:1, duration:[0, 1], formats:["h:mm:ss a"], multiples:[1, 5, 10, 15, 30], minorFormats:[":ss"], minorMultiples:[1, 5, 10, 15]}, {index:2, duration:[0, 0, 1], formats:["h:mm a"], multiples:[1, 2, 5, 15, 20, 30], minorFormats:[":mm"], minorMultiples:[1, 2, 5, 15]}, {index:3, duration:[0, 0, 0, 1], formats:["h a"], 
multiples:[1, 2, 6, 12], minorFormats:["h a"], minorMultiples:[1, 2, 6]}, {index:4, duration:[0, 0, 0, 0, 1], formats:["MMM d", "d"], multiples:[1, 2, 7], minorFormats:["d"], minorMultiples:[1, 7]}, {index:5, duration:[0, 0, 0, 0, 0, 1], formats:["MMM y", "MMM yy", "MMM"], multiples:[1, 3, 6], minorFormats:["MMM"], minorMultiples:[1, 3]}, {index:6, duration:[0, 0, 0, 0, 0, 0, 1], formats:["y"], multiples:[1, 2, 5, 10, 20, 50, 100, 200, 500, 1E3], minorFormats:["y"], minorMultiples:[1, 2, 5, 10, 20, 
50, 100, 200, 500, 1E3]}];
gviz.canviz.dateTicks.NAME_ = "DateTickDefiner";
// Input 322
gviz.canviz.AxisDefiner = function(chartDef, options, optionsPath, index, defaultType, defaultViewWindowMode) {
  this.optionsPath_ = optionsPath;
  this.options_ = options;
  this.index = index;
  this.type = options.inferEnumValue(this.getAbsoluteOptionsPath("type"), gviz.canviz.Options.AxisType, defaultType);
  goog.asserts.assert(this.type, "Unspecified " + optionsPath + " type.");
  this.maxValue = this.minValue = null;
  this.allNumericValues_ = [];
  this.userBaseline = null;
  this.allowDataTruncation = 0 < chartDef.serieTypeCount[gviz.canviz.Options.SerieType.BARS];
  var titleText = options.inferStringValue(this.getAbsoluteOptionsPath("title")), axisTitlesPosition = chartDef.axisTitlesPosition, defaultTitleTextStyle = {fontName:chartDef.defaultFontName, fontSize:chartDef.defaultFontSize, auraColor:axisTitlesPosition == gviz.canviz.Options.InOutPosition.INSIDE ? chartDef.insideLabelsAuraColor : "none"}, titleTextStyle = options.inferTextStyleValue(this.getAbsoluteOptionsPath("titleTextStyle"), defaultTitleTextStyle);
  this.title = {text:titleText, textStyle:titleTextStyle, lines:[], paralAlign:gviz.graphics.TextAlign.CENTER, perpenAlign:gviz.graphics.TextAlign.START, tooltip:"", anchor:null, angle:0};
  this.tickTextLayout = null;
  this.tickTextPosition = options.inferEnumValue(this.getAbsoluteOptionsPath("textPosition"), gviz.canviz.Options.InOutPosition, gviz.canviz.Options.InOutPosition.OUTSIDE);
  var defaultTickTextColor = this.type != gviz.canviz.Options.AxisType.VALUE || chartDef.chartType == gviz.canviz.Options.ChartType.SCATTER ? options.inferStringValue("majorAxisTextColor") : options.inferStringValue("minorAxisTextColor"), defaultTickTextStyle = {color:defaultTickTextColor, fontName:chartDef.defaultFontName, fontSize:chartDef.defaultFontSize, auraColor:this.tickTextPosition == gviz.canviz.Options.InOutPosition.INSIDE ? chartDef.insideLabelsAuraColor : "none"};
  this.tickTextStyle = options.inferTextStyleValue(this.getAbsoluteOptionsPath("textStyle"), defaultTickTextStyle);
  var labelColorRatio = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("gridlines.minorTextOpacity")), minorLabelColor = gviz.util.blendHexColors(this.tickTextStyle.color, chartDef.actualChartAreaBackgoundColor || "#fff", labelColorRatio);
  this.minorTickTextStyle = options.inferTextStyleValue(this.getAbsoluteOptionsPath("textStyle"), defaultTickTextStyle);
  this.minorTickTextStyle.color = minorLabelColor;
  this.tickOutTextPosition = options.inferEnumValue(this.getAbsoluteOptionsPath("outTextPosition"), gviz.canviz.Options.BoundUnboundPosition, gviz.canviz.Options.BoundUnboundPosition.UNBOUND);
  this.tickInTextPosition = options.inferEnumValue(this.getAbsoluteOptionsPath("inTextPosition"), gviz.canviz.Options.HighLowPosition, gviz.canviz.Options.HighLowPosition.LOW);
  var baselineColor = options.inferColorValue(this.getAbsoluteOptionsPath("baselineColor"), chartDef.baselineColor);
  this.baselineBrush = new gviz.graphics.Brush({fill:baselineColor});
  var gridlineColor = options.inferColorValue(this.getAbsoluteOptionsPath("gridlines.color"), chartDef.gridlineColor);
  this.gridlineBrush = new gviz.graphics.Brush({fill:gridlineColor});
  this.minorGridlinesCount_ = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("minorGridlines.count"), 0);
  var gridlineColorRatio = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("gridlines.minorGridlineOpacity")), defaultMinorGridlineColor = gviz.util.blendHexColors(gridlineColor, chartDef.actualChartAreaBackgoundColor || "#fff", gridlineColorRatio), minorGridlineColor = options.inferColorValue(this.getAbsoluteOptionsPath("minorGridlines.color"), defaultMinorGridlineColor);
  this.minorGridlineBrush = new gviz.graphics.Brush({fill:minorGridlineColor});
  this.minGap = 2;
  this.gapBetweenTitleLines = Math.max(this.minGap, Math.round(this.title.textStyle.fontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO)));
  this.ticks = [];
  (this.tickValues_ = options.inferValue(this.getAbsoluteOptionsPath("ticks"))) && 2 > this.tickValues_.length && (this.tickValues_ = null);
  this.tickValues_ && (this.tickValues_ = goog.array.map(this.tickValues_, function(tick) {
    var newTick = {};
    newTick.v = goog.isDef(tick.v) ? tick.v : tick;
    goog.isString(tick.f) && (newTick.f = tick.f);
    return newTick
  }));
  this.axisLength = 0;
  this.direction = this.dataDirection = options.inferNumberValue(this.getAbsoluteOptionsPath("direction"), 1);
  this.endPos = this.startPos = null;
  this.valueAtStartPos_ = this.numericValueToPixelsFactor = 0;
  this.viewWindow_ = {min:-Infinity, max:Infinity};
  this.viewWindowMode = null;
  this.defaultViewWindowMode = defaultViewWindowMode;
  var scaleType = gviz.NumberScaleUtil.getScaleType(this.options_, this.getAbsoluteOptionsPath(gviz.NumberScaleUtil.LOG_SCALE_OPTIONS_KEY), this.getAbsoluteOptionsPath(gviz.NumberScaleUtil.SCALE_TYPE_OPTIONS_KEY));
  this.mirrorLog_ = scaleType === gviz.NumberScaleUtil.SCALE_TYPE.MIRROR_LOG;
  this.logScale_ = scaleType === gviz.NumberScaleUtil.SCALE_TYPE.LOG || this.mirrorLog_;
  this.type == gviz.canviz.Options.AxisType.VALUE ? (this.variableNumberOfGridlines_ = this.baseline = this.valueScale = null, this.timeGranularity_ = options.inferEnumValue(this.getAbsoluteOptionsPath("timeGranularity"), gviz.canviz.axis.Milliseconds.TIME_UNIT, gviz.canviz.axis.Milliseconds.TIME_UNIT.MILLISECOND), this.zeroToClosestValueDistance_ = Infinity) : this.tickValues_ = null
};
gviz.canviz.AxisDefiner.MIN_TICK_SPACING_ = 40;
gviz.canviz.AxisDefiner.prototype.getAbsoluteOptionsPath = function(property) {
  return gviz.canviz.util.concatSuffix(this.optionsPath_, property)
};
gviz.canviz.AxisDefiner.prototype.markClosestValueToZero = function(numericValue) {
  0 == numericValue || isNaN(numericValue) || (this.zeroToClosestValueDistance_ = Math.min(Math.abs(numericValue), this.zeroToClosestValueDistance_))
};
gviz.canviz.AxisDefiner.prototype.initPreCalculator = function(opt_gaps) {
  var gaps = opt_gaps || [];
  this.valueScale.initPreCalculator(this.zeroToClosestValueDistance_, gaps)
};
gviz.canviz.AxisDefiner.prototype.initScale = function(dataType, options) {
  var valueScale = gviz.canviz.ScaleRepository.instance().getScale(dataType);
  goog.asserts.assert(valueScale, "Type " + dataType + " is not a valid VALUE type");
  var gridlineCount = options.inferOptionalNumberValue(this.getAbsoluteOptionsPath("gridlines.count"));
  if(!this.tickValues_ && goog.isNull(gridlineCount) && this.logScale_ || 0 > gridlineCount) {
    this.variableNumberOfGridlines_ = !0, gridlineCount = -1
  }
  valueScale.init(options, this.optionsPath_, gridlineCount);
  this.valueScale = valueScale;
  this.minValue = valueScale.inferValue(options, this.getAbsoluteOptionsPath("minValue"));
  this.maxValue = valueScale.inferValue(options, this.getAbsoluteOptionsPath("maxValue"));
  this.userBaseline = options.inferValue(this.getAbsoluteOptionsPath("baseline"), gviz.canviz.Options.DEFAULTS.vAxis.gridlines.baseline, function(value) {
    return"auto" === value ? value : gviz.Options.convertToNumber(value)
  })
};
gviz.canviz.AxisDefiner.prototype.initViewWindow = function(options) {
  this.viewWindowMode = options.inferOptionalEnumValue(this.getAbsoluteOptionsPath("viewWindowMode"), gviz.canviz.Options.ViewWindowMode);
  if(goog.isNull(this.viewWindowMode) || this.viewWindowMode == gviz.canviz.Options.ViewWindowMode.EXPLICIT) {
    if(this.type == gviz.canviz.Options.AxisType.VALUE) {
      var valueScale = this.valueScale, viewWindowMin = valueScale.valueToNumber(valueScale.inferValue(options, this.getAbsoluteOptionsPath("viewWindow.min"))), viewWindowMax = valueScale.valueToNumber(valueScale.inferValue(options, this.getAbsoluteOptionsPath("viewWindow.max")));
      goog.isDefAndNotNull(viewWindowMin) && (this.viewWindow_.min = viewWindowMin);
      goog.isDefAndNotNull(viewWindowMax) && (this.viewWindow_.max = viewWindowMax)
    }else {
      this.viewWindow_.min = options.inferNumberValue(this.getAbsoluteOptionsPath("viewWindow.min"), this.viewWindow_.min), this.viewWindow_.max = options.inferNumberValue(this.getAbsoluteOptionsPath("viewWindow.max"), this.viewWindow_.max)
    }
    if(-Infinity != this.viewWindow_.min || Infinity != this.viewWindow_.max) {
      if(this.viewWindowMode = gviz.canviz.Options.ViewWindowMode.EXPLICIT, this.viewWindow_.min > this.viewWindow_.max) {
        throw Error("viewWindow.max must be greater than viewWindow.min");
      }
    }else {
      if(this.viewWindowMode == gviz.canviz.Options.ViewWindowMode.EXPLICIT) {
        throw Error('Option "viewWindowMode" was set to "' + gviz.canviz.Options.ViewWindowMode.EXPLICIT + '" but "viewWindow" was not specified.');
      }
      this.viewWindowMode = this.defaultViewWindowMode
    }
    this.type == gviz.canviz.Options.AxisType.VALUE && this.viewWindowMode == gviz.canviz.Options.ViewWindowMode.EXPLICIT && (-Infinity != this.viewWindow_.min && (this.valueScale.numericMinValue = this.viewWindow_.min), Infinity != this.viewWindow_.max && (this.valueScale.numericMaxValue = this.viewWindow_.max))
  }
};
gviz.canviz.AxisDefiner.prototype.isViewWindowSemiExplicit_ = function() {
  return this.viewWindowMode == gviz.canviz.Options.ViewWindowMode.EXPLICIT && (-Infinity == this.viewWindow_.min || Infinity == this.viewWindow_.max)
};
gviz.canviz.AxisDefiner.prototype.validateHasScale = function() {
  if(this.type == gviz.canviz.Options.AxisType.VALUE && !this.valueScale) {
    throw Error("Axis type/data type mismatch for " + this.optionsPath_);
  }
};
gviz.canviz.AxisDefiner.prototype.calcCommonAxisDefinition = function(chartDef, axisLength, startPos, legendDefiner, colorBarDefiner) {
  this.startPos = startPos + (1 == this.direction ? 0.5 : -0.5);
  this.axisLength = axisLength - 1;
  this.endPos = startPos + axisLength * this.direction;
  var ticklinesOrigin = this.calcTicklinesOrigin(chartDef), directionalityParams = this.getAxisDirectionalityParameters(chartDef), newTimeline = !1;
  this.options_.inferBooleanValue(this.getAbsoluteOptionsPath("gridlines.newTimeline")) && this.isDatetimeValueScale_() && this.tickTextPosition === gviz.canviz.Options.InOutPosition.OUTSIDE && directionalityParams.orientation === gviz.canviz.axis.AxisTools.Orientation.HORIZONTAL && !directionalityParams.reversed && (newTimeline = !0);
  var ticklinesInfo = newTimeline ? this.calcTicklinesForNewTimeline_(chartDef, legendDefiner, colorBarDefiner) : this.calcTicklines_(chartDef, axisLength, startPos, legendDefiner, colorBarDefiner);
  return{title:this.title, name:this.getAxisName(), type:this.type, dataDirection:this.dataDirection, startPos:this.startPos, endPos:this.endPos, number:{fromValue:goog.bind(this.numberFromValue, this), toValue:goog.bind(this.numberToValue, this)}, position:{fromValue:goog.bind(this.calcPositionFromDataValue, this), toValue:goog.bind(this.calcDataValueFromPosition, this)}, ticklinesOrigin:ticklinesOrigin, baseline:ticklinesInfo.baseline, gridlines:ticklinesInfo.gridlines, text:this.tickTextLayout}
};
gviz.canviz.AxisDefiner.prototype.calcTicklines_ = function(chartDef, axisLength, startPos, legendDefiner, colorBarDefiner) {
  this.type == gviz.canviz.Options.AxisType.VALUE ? (goog.isDefAndNotNull(this.userBaseline) && "auto" !== this.userBaseline && this.extendRangeToIncludeNumber(this.valueScale.valueToNumber(this.userBaseline)), goog.isDefAndNotNull(this.minValue) && this.extendRangeToIncludeNumber(this.valueScale.valueToNumber(this.minValue)), goog.isDefAndNotNull(this.maxValue) && this.extendRangeToIncludeNumber(this.valueScale.valueToNumber(this.maxValue)), this.tickValues_ ? this.calcExplicitTickValues_() : this.variableNumberOfGridlines_ ? 
  this.isDatetimeValueScale_() ? this.calcAxisLayoutVariableNumOfSectionsForTime_(chartDef) : this.calcAxisLayoutVariableNumOfSections_(chartDef) : this.calcAxisLayoutFixedNumOfSections_()) : this.calcCategoryAxisLayout_(chartDef, axisLength);
  var baseline = null;
  this.type == gviz.canviz.Options.AxisType.VALUE && this.baseline && (baseline = {dataValue:this.baseline.dataValue, coordinate:this.baseline.coordinate, isVisible:!0, length:null, brush:this.baselineBrush});
  var gridlines = null;
  if(this.type == gviz.canviz.Options.AxisType.VALUE) {
    var gridlines = goog.array.map(this.ticks, function(tick) {
      return{tick:tick, dataValue:tick.dataValue, coordinate:tick.coordinate, isVisible:!0, length:null, brush:this.gridlineBrush}
    }, this), minorGridlineCoordinates;
    if(minorGridlineCoordinates = this.logScale_ ? this.calcLogScaleMinorGridlines_(gridlines) : this.calcMinorGridlines_(gridlines)) {
      var minorGridlines = goog.array.map(minorGridlineCoordinates, function(c) {
        return{dataValue:this.calcDataValueFromPosition(c), coordinate:c, isVisible:!0, length:null, brush:this.minorGridlineBrush}
      }, this);
      goog.array.extend(gridlines, minorGridlines)
    }
    goog.array.forEach(gridlines, function(gridline) {
      var invisible = this.isPositionBeforeTheStart(gridline.coordinate) || this.isPositionPastTheEnd(gridline.coordinate);
      invisible && (gridline.isVisible = !1, goog.array.remove(this.ticks, gridline.tick));
      delete gridline.tick
    }, this)
  }
  this.calcOutsideTextLayout(chartDef, legendDefiner, colorBarDefiner, null);
  this.calcInsideTextLayout(chartDef);
  return{gridlines:gridlines, baseline:baseline}
};
gviz.canviz.AxisDefiner.prototype.calcTicklinesForNewTimeline_ = function(chartDef, legendDefiner, colorBarDefiner) {
  this.setMinMaxProps_();
  goog.array.sort(this.allNumericValues_);
  for(var dataGranularity = Infinity, i = 1;i < this.allNumericValues_.length;++i) {
    var delta = this.allNumericValues_[i] - this.allNumericValues_[i - 1];
    delta && (dataGranularity = Math.min(dataGranularity, delta))
  }
  var algo = gviz.canviz.dateTicks.Definer.build(this.options_, goog.bind(this.getAbsoluteOptionsPath, this)), tickOptions = {tickTextStyle:this.tickTextStyle, gridlineBrush:this.gridlineBrush, minorTickTextStyle:this.minorTickTextStyle, minorGridlineBrush:this.minorGridlineBrush}, result = algo.calc(this.valueScale.numberToValue(this.valueScale.numericMinValue), this.valueScale.numberToValue(this.valueScale.numericMaxValue), dataGranularity, goog.bind(this.calcPositionFromDataValue, this), tickOptions, 
  chartDef.textMeasureFunction);
  this.calcOutsideTextLayout(chartDef, legendDefiner, colorBarDefiner, result.tickTextLayout);
  this.calcInsideTextLayout(chartDef);
  return{gridlines:result.gridlines, baseline:null}
};
gviz.canviz.AxisDefiner.prototype.calcCategoryAxisLayout_ = function(chartDef, axisLength) {
  var numberOfAxisDivisions;
  this.viewWindowMode == gviz.canviz.Options.ViewWindowMode.EXPLICIT ? (-Infinity == this.viewWindow_.min ? this.viewWindow_.min = Math.min(0, this.viewWindow_.max - 1) : Infinity == this.viewWindow_.max && (this.viewWindow_.max = Math.max(chartDef.categories.length, this.viewWindow_.min + 1)), numberOfAxisDivisions = this.viewWindow_.max - this.viewWindow_.min) : (this.viewWindow_.min = 0, numberOfAxisDivisions = this.viewWindow_.max = chartDef.categories.length);
  this.allowDataTruncation && (numberOfAxisDivisions = Math.min(numberOfAxisDivisions, Math.floor((axisLength + 1) / 2)));
  this.type == gviz.canviz.Options.AxisType.CATEGORY_POINT && (numberOfAxisDivisions = Math.max(1, numberOfAxisDivisions - 1));
  this.valueAtStartPos_ = this.getMinNumericValue();
  this.numericValueToPixelsFactor = this.axisLength / numberOfAxisDivisions;
  this.ticks = gviz.canviz.util.rangeMap(chartDef.categories.length, function(i) {
    var tickIndex = i - this.valueAtStartPos_, tick = {dataValue:chartDef.categories[i].data, coordinate:this.calcPositionForNumericValue(i), text:chartDef.categories[i].titles[0], isVisible:0 <= tickIndex && tickIndex <= numberOfAxisDivisions};
    return tick
  }, this)
};
gviz.canviz.AxisDefiner.prototype.calcExplicitTickValues_ = function() {
  goog.asserts.assert(this.tickValues_);
  var valueScale = this.valueScale;
  valueScale.calibrate(this.minValue, this.maxValue, !1);
  goog.array.sort(this.tickValues_, function(v1, v2) {
    return valueScale.compareValues(v1.v, v2.v)
  });
  this.extendRangeToIncludeNumber(valueScale.valueToNumber(this.tickValues_[0].v));
  this.extendRangeToIncludeNumber(valueScale.valueToNumber(this.tickValues_[this.tickValues_.length - 1].v));
  this.setMinMaxProps_();
  -1 === this.dataDirection && (this.tickValues_ = goog.array.clone(this.tickValues_), this.tickValues_.reverse());
  this.ticks = goog.array.map(this.tickValues_, function(tick) {
    var value = tick.v, number = valueScale.valueToNumber(value), coordinate = this.calcPositionForNumericValue(number);
    goog.asserts.assert(!isNaN(coordinate), "Bad explicit tick value: " + value + ".");
    var text = tick.f;
    goog.isString(text) || (text = valueScale.valueToString(value));
    return{dataValue:value, coordinate:coordinate, text:text, isVisible:!0}
  }, this)
};
gviz.canviz.AxisDefiner.prototype.calcAxisLayoutFixedNumOfSections_ = function() {
  var shouldExpand = this.viewWindowMode == gviz.canviz.Options.ViewWindowMode.PRETTY || this.isViewWindowSemiExplicit_();
  this.valueScale.calibrate(this.minValue, this.maxValue, shouldExpand);
  this.logScale_ && this.fixLogScaleMajorTicks_();
  this.isViewWindowSemiExplicit_() && (this.valueScale.ticks = goog.array.filter(this.valueScale.ticks, function(tick) {
    return tick >= this.viewWindow_.min && tick <= this.viewWindow_.max
  }, this));
  this.setMinMaxProps_();
  this.ticks = goog.array.map(this.valueScale.ticks, function(tick) {
    var value = this.valueScale.numberToValue(tick), text = this.valueScale.valueToString(value), coordinate = this.calcPositionForNumericValue(tick);
    goog.asserts.assert(!isNaN(coordinate), "Bad tick value for fixed number of sections.");
    return{dataValue:value, coordinate:coordinate, text:text, isVisible:!0}
  }, this)
};
gviz.canviz.AxisDefiner.prototype.fixLogScaleMajorTicks_ = function() {
  var minTickGap = Infinity, previousTick = null, sign;
  this.valueScale.ticks = goog.array.map(this.valueScale.ticks, function(tick) {
    sign = 0 < tick - previousTick ? 1 : -1;
    var newTick = sign * Math.floor(sign * tick);
    previousTick && 0 !== newTick * previousTick && 0 < newTick - previousTick && (minTickGap = Math.min(minTickGap, Math.abs(newTick - previousTick)));
    return previousTick = newTick
  });
  var ticks = this.valueScale.ticks;
  Infinity !== minTickGap && (previousTick = null, goog.array.forEachRight(ticks, function(tick, index) {
    if(null !== previousTick && (previousTick === tick && goog.array.removeAt(ticks, index), Math.abs(tick - previousTick) > minTickGap)) {
      sign = 0 < tick - previousTick ? 1 : -1;
      var newTick = previousTick + sign * minTickGap;
      goog.array.insertAt(ticks, newTick, index + 1)
    }
    previousTick = tick
  }))
};
gviz.canviz.AxisDefiner.prototype.calcAxisLayoutVariableNumOfSectionsForTime_ = function(chartDef) {
  this.setMinMaxProps_();
  var directionalityParams = this.getAxisDirectionalityParameters(chartDef), timeFormatter = new gviz.canviz.formatting.TimeFormatterImpl;
  timeFormatter.setTimeUnit(this.timeGranularity_);
  var textMeasurer = new gviz.canviz.axis.TextMeasurerAdapter(chartDef.textMeasureFunction, this.tickTextStyle), decorations = gviz.canviz.axis.AxisDecorationsCreator.getTimeDecorations(this.valueScale.numericMinValue, this.valueScale.numericMaxValue, directionalityParams.screenStart, directionalityParams.screenEnd - 1, directionalityParams.reversed, this.timeGranularity_, directionalityParams.orientation, 10, textMeasurer, timeFormatter, !0);
  this.ticks = [];
  for(var i = 0;i < decorations.length;i++) {
    var decoration = decorations[i];
    decoration.getLabel() && this.ticks.push({dataValue:this.valueScale.numberToValue(decoration.getValue()), coordinate:decoration.getPosition(), text:decoration.getLabel(), isVisible:!0})
  }
};
gviz.canviz.AxisDefiner.prototype.calcMinorGridlines_ = function(gridlines) {
  if(!gridlines || 1 >= gridlines.length || 0 == this.minorGridlinesCount_) {
    return null
  }
  var numberOfParts = this.minorGridlinesCount_ + 1, jump = (gridlines[1].coordinate - gridlines[0].coordinate) / numberOfParts, minorGridlines = [], i, j, gridlineCoordinate = gridlines[0].coordinate, count = Math.floor((gridlineCoordinate - this.startPos) / jump);
  for(i = count;0 < i;i--) {
    var minorGridlineCoordinate = Math.floor(gridlineCoordinate - jump * i);
    1 < Math.abs(minorGridlineCoordinate - this.startPos) && minorGridlines.push(minorGridlineCoordinate)
  }
  for(i = 0;i < gridlines.length - 1;i++) {
    for(gridlineCoordinate = gridlines[i].coordinate, j = 0;j < this.minorGridlinesCount_;j++) {
      gridlineCoordinate += jump, minorGridlines.push(Math.floor(gridlineCoordinate))
    }
  }
  gridlineCoordinate = goog.array.peek(gridlines).coordinate;
  count = Math.floor((this.endPos - gridlineCoordinate) / jump);
  for(i = 1;i <= count;i++) {
    minorGridlineCoordinate = Math.floor(gridlineCoordinate + jump * i), 1 < Math.abs(minorGridlineCoordinate - this.endPos) && minorGridlines.push(minorGridlineCoordinate)
  }
  return minorGridlines
};
gviz.canviz.AxisDefiner.prototype.calcLogScaleMinorGridlines_ = function(gridlines) {
  if(!gridlines || 1 >= gridlines.length || 0 == this.minorGridlinesCount_) {
    return null
  }
  for(var gridline = gridlines[0], thisValue = gridline.dataValue, previousValue = thisValue, newGridlines = [gridline], i = 1;i < gridlines.length - 1;i++) {
    gridline = gridlines[i], previousValue = thisValue, thisValue = gridline.dataValue, 0 !== thisValue && (gviz.canviz.axis.Pow10Math.isPowerOf10(thisValue) || previousValue && gviz.canviz.axis.Pow10Math.isPowerOf10(previousValue / thisValue)) && newGridlines.push(gridline)
  }
  newGridlines.push(gridlines[gridlines.length - 1]);
  gridlines = newGridlines;
  if(1 >= gridlines.length) {
    return null
  }
  var gapSize = gridlines[1].coordinate - gridlines[0].coordinate, minorGridlines = [], fracts = [], j, alternatives = gviz.canviz.Options.DEFAULT_LOG_MINOR_TICK_ALTERNATIVES;
  this.minorGridlinesCount_ = Math.min(alternatives.length, this.minorGridlinesCount_);
  var units = alternatives[this.minorGridlinesCount_ - 1];
  this.minorGridlinesCount_ = units.length;
  for(i = 0;i < this.minorGridlinesCount_;i++) {
    var unit = units[i], fract = Math.log(unit) / Math.log(10);
    fracts.push(fract)
  }
  for(var gridlineCoordinate, i = 0;i < gridlines.length - 1;i++) {
    gridlineCoordinate = gridlines[i].coordinate;
    var sign = 1, ratio = gridlines[i + 1].dataValue / gridlines[i].dataValue;
    if(!(0 > ratio) && gviz.canviz.axis.Pow10Math.isPowerOf10(ratio)) {
      for(1 > ratio && (sign = -1, gridlineCoordinate = gridlines[i + 1].coordinate), gapSize = gridlines[i + 1].coordinate - gridlines[i].coordinate, j = 0;j < this.minorGridlinesCount_;j++) {
        var minorGridlineCoordinate = gridlineCoordinate + sign * gapSize * fracts[j];
        minorGridlines.push(minorGridlineCoordinate)
      }
    }
  }
  return minorGridlines
};
gviz.canviz.AxisDefiner.prototype.setMinMaxProps_ = function() {
  var numericMinValue = goog.math.isFiniteNumber(this.viewWindow_.min) ? this.viewWindow_.min : this.valueScale.numericMinValue, numericMaxValue = goog.math.isFiniteNumber(this.viewWindow_.max) ? this.viewWindow_.max : this.valueScale.numericMaxValue;
  numericMinValue === numericMaxValue && (numericMinValue -= 1, numericMaxValue += 1);
  this.numericValueToPixelsFactor = this.axisLength / (numericMaxValue - numericMinValue);
  Infinity !== numericMinValue && (this.valueAtStartPos_ = numericMinValue);
  var numericBaseline;
  if(goog.isNumber(this.userBaseline)) {
    numericBaseline = this.valueScale.valueToNumber(this.userBaseline)
  }else {
    var defaultBaseline = this.valueScale.valueToNumber(this.valueScale.getDefaultBaseline());
    numericBaseline = goog.math.clamp(defaultBaseline, numericMinValue, numericMaxValue)
  }
  this.baseline = null;
  if(goog.math.isFiniteNumber(numericBaseline)) {
    var coordinate = this.calcPositionForNumericValue(numericBaseline);
    !isNaN(coordinate) && this.isValueInViewWindow(numericBaseline) && (this.baseline = {dataValue:this.valueScale.numberToValue(numericBaseline), coordinate:coordinate})
  }
};
gviz.canviz.AxisDefiner.prototype.calcAxisLayoutVariableNumOfSections_ = function(chartDef) {
  this.extendRangeForPrettyMode_();
  this.setMinMaxProps_();
  var directionalityParams = this.getAxisDirectionalityParameters(chartDef), unscaledMinValue = this.valueScale.unscaleNumericValue(this.valueScale.numericMinValue), unscaledMaxValue = this.valueScale.unscaleNumericValue(this.valueScale.numericMaxValue), lambda = this.logScale_ ? 0 : 1, textMeasurer = new gviz.canviz.axis.TextMeasurerAdapter(chartDef.textMeasureFunction, this.tickTextStyle), decorations = gviz.canviz.axis.AxisDecorationsCreator.getNumberDecorations(unscaledMinValue, unscaledMaxValue, 
  directionalityParams.screenStart, directionalityParams.screenEnd - 1, directionalityParams.reversed, lambda, this.zeroToClosestValueDistance_, directionalityParams.orientation, gviz.canviz.AxisDefiner.MIN_TICK_SPACING_, textMeasurer, this.createFormatter_(this.options_));
  this.ticks = [];
  for(var i = 0;i < decorations.length;i++) {
    var decoration = decorations[i], value = decoration.getValue(), tick = this.valueScale.scaleNumericValue(value), coordinate = this.calcPositionForNumericValue(tick);
    goog.asserts.assert(!isNaN(coordinate), "Bad tick value for variable number of sections.");
    this.ticks.push({dataValue:value, coordinate:coordinate, text:decoration.getLabel(), isVisible:!0})
  }
};
gviz.canviz.AxisDefiner.prototype.createFormatter_ = function(options) {
  var builder = new gviz.canviz.formatting.NumberFormatterBuilder, customPattern = options.inferOptionalStringValue(this.getAbsoluteOptionsPath("format"));
  if(customPattern) {
    builder.useCustomPattern(customPattern)
  }else {
    var numDecimals = options.inferOptionalNumberValue(this.getAbsoluteOptionsPath("formatter.numDecimals"));
    goog.isNumber(numDecimals) && builder.maxNumDecimals(numDecimals);
    var numSignificantDigits = options.inferOptionalNumberValue(this.getAbsoluteOptionsPath("formatter.numSignificantDigits"));
    goog.isNumber(numSignificantDigits) && builder.numSignificantDigits(numSignificantDigits);
    var unit = options.inferValue(this.getAbsoluteOptionsPath("formatter.unit"));
    unit && builder.unit({symbol:unit.symbol, position:unit.position, usePadding:unit.usePadding});
    options.inferBooleanValue(this.getAbsoluteOptionsPath("formatter.useMagnitudes")) && builder.useShortI18nMagnitudes(5)
  }
  return builder.build()
};
gviz.canviz.AxisDefiner.prototype.extendRangeForPrettyMode_ = function() {
  if(this.viewWindowMode == gviz.canviz.Options.ViewWindowMode.PRETTY && isFinite(this.valueScale.numericMinValue) && isFinite(this.valueScale.numericMaxValue)) {
    var newRange = gviz.canviz.axis.Utils.expandRange(new goog.math.Range(this.valueScale.numericMinValue, this.valueScale.numericMaxValue), 0.1);
    this.extendRangeToIncludeNumber(newRange.start);
    this.extendRangeToIncludeNumber(newRange.end)
  }
};
gviz.canviz.AxisDefiner.prototype.extendRangeToIncludeNumber = function(number) {
  this.type == gviz.canviz.Options.AxisType.VALUE && goog.isDefAndNotNull(number) && this.isValueInViewWindow(number) && (this.valueScale.extendRangeToIncludeNumber(number), this.allNumericValues_.push(number))
};
gviz.canviz.AxisDefiner.prototype.expandRangeABit = function() {
  if(this.type == gviz.canviz.Options.AxisType.VALUE) {
    var scale = this.valueScale, expand = 0.01 * (scale.numericMaxValue - scale.numericMinValue);
    0 < scale.numericMinValue && -Infinity == this.viewWindow_.min && (scale.numericMinValue = Math.max(scale.numericMinValue - expand, 0));
    0 > scale.numericMaxValue && Infinity == this.viewWindow_.max && (scale.numericMaxValue = Math.min(scale.numericMaxValue + expand, 0))
  }
};
gviz.canviz.AxisDefiner.prototype.calcPositionForNumericValue = function(value) {
  if(!goog.isDefAndNotNull(value)) {
    return null
  }
  var result = this.startPos + (value - this.valueAtStartPos_) * this.direction * this.numericValueToPixelsFactor;
  goog.asserts.assert(!isNaN(result));
  return result
};
gviz.canviz.AxisDefiner.prototype.calcNumericValueFromPosition = function(position) {
  if(!goog.isDefAndNotNull(position)) {
    return null
  }
  var result = (position - this.startPos) * this.direction / this.numericValueToPixelsFactor + this.valueAtStartPos_;
  goog.asserts.assert(!isNaN(result));
  return result
};
gviz.canviz.AxisDefiner.prototype.numberFromValue = function(value) {
  var numericValue = this.type == gviz.canviz.Options.AxisType.VALUE ? this.valueScale.valueToNumber(value) : value;
  return numericValue
};
gviz.canviz.AxisDefiner.prototype.numberToValue = function(numericValue) {
  if(!goog.isDefAndNotNull(numericValue)) {
    return null
  }
  var value = this.type == gviz.canviz.Options.AxisType.VALUE ? this.valueScale.numberToValue(numericValue) : numericValue;
  return value
};
gviz.canviz.AxisDefiner.prototype.calcDataValueFromPosition = function(position) {
  var numericValue = this.calcNumericValueFromPosition(position);
  return goog.isDefAndNotNull(numericValue) ? this.numberToValue(numericValue) : null
};
gviz.canviz.AxisDefiner.prototype.calcPositionFromDataValue = function(value) {
  return this.calcPositionForNumericValue(this.numberFromValue(value))
};
gviz.canviz.AxisDefiner.prototype.getMinNumericValue = function() {
  switch(this.type) {
    case gviz.canviz.Options.AxisType.VALUE:
    ;
    case gviz.canviz.Options.AxisType.CATEGORY_POINT:
      break;
    case gviz.canviz.Options.AxisType.CATEGORY:
      return this.viewWindow_.min - 0.5;
    default:
      goog.asserts.fail('Invalid axis type "' + this.type + '"')
  }
  return this.viewWindow_.min
};
gviz.canviz.AxisDefiner.prototype.getMaxNumericValue = function() {
  switch(this.type) {
    case gviz.canviz.Options.AxisType.VALUE:
      break;
    case gviz.canviz.Options.AxisType.CATEGORY_POINT:
      return this.viewWindow_.max - 1;
    case gviz.canviz.Options.AxisType.CATEGORY:
      return this.viewWindow_.max - 0.5;
    default:
      goog.asserts.fail('Invalid axis type "' + this.type + '"')
  }
  return this.viewWindow_.max
};
gviz.canviz.AxisDefiner.prototype.isValueInViewWindow = function(value) {
  return this.type == gviz.canviz.Options.AxisType.VALUE ? value >= this.viewWindow_.min && value <= this.viewWindow_.max : value >= Math.floor(this.viewWindow_.min) && value < Math.ceil(this.viewWindow_.max)
};
gviz.canviz.AxisDefiner.prototype.isPositionPastTheEnd = function(pos) {
  return pos * this.direction > this.endPos * this.direction
};
gviz.canviz.AxisDefiner.prototype.isPositionBeforeTheStart = function(pos) {
  return pos * this.direction < this.startPos * this.direction
};
gviz.canviz.AxisDefiner.prototype.isDatetimeValueScale_ = function() {
  return goog.isDefAndNotNull(this.valueScale) && this.valueScale.constructor == gviz.canviz.DatetimeValueScale
};
// Input 323
gviz.canviz.TickDiluter = function(totalLength, ticks, firstTickIdx, maxLines, maxAltCount, forceSkip, skipMode, minSpacing, allowContainerBoundaryCufoff, calcTextLayout) {
  this.totalLength_ = totalLength;
  this.ticks_ = ticks;
  this.firstTickIdx_ = firstTickIdx;
  this.maxLines_ = maxLines;
  this.maxAltCount_ = maxAltCount;
  this.forceSkip_ = forceSkip;
  this.skipMode_ = skipMode;
  this.minSpacing_ = minSpacing;
  this.allowContainerBoundaryCufoff_ = allowContainerBoundaryCufoff;
  this.calcTextLayout_ = calcTextLayout
};
gviz.canviz.TickDiluter.getFirstTickIdx = function(idx, numOfTicks, compositeSkip, skipMode) {
  switch(skipMode) {
    case gviz.canviz.Options.TextSkipMode.ATTACH_TO_END:
      return(numOfTicks - 1 - idx) % compositeSkip;
    default:
      return idx
  }
};
gviz.canviz.TickDiluter.prototype.getEffectiveInterval_ = function(compositeSkip) {
  if(1 >= this.ticks_.length) {
    return this.totalLength_
  }
  var interval = Math.abs(this.ticks_[1].coordinate - this.ticks_[0].coordinate);
  return interval * compositeSkip - this.minSpacing_
};
gviz.canviz.TickDiluter.prototype.altSkipTooLarge_ = function(firstTickIdx, altCount, skip) {
  var numberOfDisplayedTicks = Math.ceil((this.ticks_.length - firstTickIdx) / (altCount * skip));
  return 2 > this.ticks_.length || 2 > numberOfDisplayedTicks
};
gviz.canviz.TickDiluter.prototype.getTicksInfoForAlt_ = function(firstTickIdx, lineIdx, compositeSkip, numOfLines) {
  firstTickIdx = gviz.canviz.TickDiluter.getFirstTickIdx(firstTickIdx, this.ticks_.length, compositeSkip, this.skipMode_);
  for(var interval = this.getEffectiveInterval_(compositeSkip), result = [], i = firstTickIdx;i < this.ticks_.length;i += compositeSkip) {
    var tick = this.ticks_[i], width = tick.isVisible && !this.allowContainerBoundaryCufoff_ ? Math.min(interval, 2 * tick.coordinate, 2 * (this.totalLength_ - tick.coordinate)) : interval, layout = this.calcTextLayout_(tick.text, width, numOfLines), needTooltip = layout.needTooltip;
    if(width < interval) {
      var needTooltipLayout = this.calcTextLayout_(tick.text, interval, numOfLines), needTooltip = needTooltipLayout.needTooltip
    }
    result.push({dataValue:tick.dataValue, isVisible:tick.isVisible, coordinate:tick.coordinate, lineIdx:lineIdx, text:tick.text, width:layout.maxLineWidth, layout:layout, needTooltip:needTooltip})
  }
  return result
};
gviz.canviz.TickDiluter.prototype.getTicksInfo_ = function(altCount, skip, numOfLines) {
  for(var compositeSkip = altCount * skip, numOfLinesPerAlt = 1 < altCount ? 1 : numOfLines, result = [], i = 0;i < altCount;i++) {
    var ticksInfo = this.getTicksInfoForAlt_(this.firstTickIdx_ + i * skip, i * numOfLinesPerAlt, compositeSkip, numOfLinesPerAlt);
    goog.array.extend(result, ticksInfo)
  }
  goog.array.sort(result, function(a, b) {
    return a.coordinate - b.coordinate
  });
  return result
};
gviz.canviz.TickDiluter.prototype.getDesiredTickLines_ = function(altCount, skip) {
  var ticksInfo = this.getTicksInfo_(altCount, skip, this.maxLines_), desiredLines = goog.array.reduce(ticksInfo, function(res, tickInfo) {
    var numOfLines = Math.max(res.numOfLines, tickInfo.layout.lines.length), needTooltip = res.needTooltip || tickInfo.needTooltip;
    return{numOfLines:numOfLines, needTooltip:needTooltip}
  }, {numOfLines:0, needTooltip:!1});
  return desiredLines
};
gviz.canviz.TickDiluter.prototype.calcOptimisticTickArrangement = function() {
  for(var altCount = 1, skip = this.forceSkip_ || 1, desiredLines = this.getDesiredTickLines_(altCount, skip), safeAltCount = altCount;desiredLines.needTooltip && altCount < this.maxAltCount_;) {
    altCount++;
    if(this.altSkipTooLarge_(0, altCount, skip)) {
      break
    }
    safeAltCount = altCount;
    desiredLines = this.getDesiredTickLines_(safeAltCount, skip)
  }
  var safeSkip = skip;
  if(!this.forceSkip_) {
    for(;desiredLines.needTooltip;) {
      skip++;
      if(this.altSkipTooLarge_(0, safeAltCount, skip)) {
        break
      }
      safeSkip = skip;
      desiredLines = this.getDesiredTickLines_(safeAltCount, safeSkip)
    }
  }
  return{altCount:safeAltCount, skip:safeSkip, numOfLines:desiredLines.numOfLines * safeAltCount}
};
gviz.canviz.TickDiluter.prototype.getTicksInfoWithAcceptableFlag_ = function(altCount, skip, numOfLines, maxAcceptableRatio) {
  var ticksInfo = this.getTicksInfo_(altCount, skip, numOfLines), needTooltipCount = goog.array.reduce(ticksInfo, function(count, tickInfo) {
    var needTooltip = tickInfo.needTooltip ? 1 : 0;
    delete tickInfo.needTooltip;
    return count + needTooltip
  }, 0), acceptable = needTooltipCount <= ticksInfo.length * maxAcceptableRatio;
  return{ticksInfo:ticksInfo, acceptable:acceptable}
};
gviz.canviz.TickDiluter.prototype.calcFinalTickArrangement = function(optimisticAltCount, optimisticSkip, numOfLines, maxAcceptableRatio) {
  for(var maxAltCount = Math.min(this.maxAltCount_, numOfLines), altCount = Math.min(optimisticAltCount, maxAltCount), skip = this.forceSkip_ || optimisticSkip, ticksInfoAcceptable = this.getTicksInfoWithAcceptableFlag_(altCount, skip, numOfLines, maxAcceptableRatio), safeAltCount = altCount;!ticksInfoAcceptable.acceptable && altCount < maxAltCount;) {
    altCount++;
    if(this.altSkipTooLarge_(0, altCount, skip)) {
      break
    }
    safeAltCount = altCount;
    ticksInfoAcceptable = this.getTicksInfoWithAcceptableFlag_(safeAltCount, skip, numOfLines, maxAcceptableRatio)
  }
  var safeSkip = skip;
  if(!this.forceSkip_) {
    for(;!ticksInfoAcceptable.acceptable;) {
      skip++;
      if(this.altSkipTooLarge_(0, safeAltCount, skip)) {
        break
      }
      safeSkip = skip;
      ticksInfoAcceptable = this.getTicksInfoWithAcceptableFlag_(safeAltCount, safeSkip, numOfLines, maxAcceptableRatio)
    }
  }
  return{altCount:safeAltCount, skip:safeSkip, ticksInfo:ticksInfoAcceptable.ticksInfo}
};
// Input 324
gviz.canviz.HorizontalAxisDefiner = function(chartDef, options, optionsPath, index, defaultType, defaultViewWindowMode) {
  gviz.canviz.AxisDefiner.call(this, chartDef, options, goog.array.concat(["hAxes." + index, "hAxis"], optionsPath), index, defaultType, defaultViewWindowMode);
  this.slantedTickText = options.inferOptionalBooleanValue(this.getAbsoluteOptionsPath("slantedText"));
  var defaultSlantedTickTextAngleDegrees = 30, slantedTickTextAngleDegrees = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("slantedTextAngle"), defaultSlantedTickTextAngleDegrees);
  if(0 > slantedTickTextAngleDegrees || 90 < slantedTickTextAngleDegrees) {
    slantedTickTextAngleDegrees = defaultSlantedTickTextAngleDegrees
  }
  this.slantedTickTextAngleDegrees = slantedTickTextAngleDegrees;
  this.slantedTickTextAngle = goog.math.toRadians(slantedTickTextAngleDegrees);
  this.firstTickIdx = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("firstVisibleText"));
  this.maxTextLines = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("maxTextLines"), Infinity);
  this.maxAlternation = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("maxAlternation"), 2);
  this.forceSkip = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("showTextEvery"), 0);
  this.skipMode = options.inferEnumValue(this.getAbsoluteOptionsPath("showTextEveryMode"), gviz.canviz.Options.TextSkipMode, gviz.canviz.Options.TextSkipMode.ATTACH_TO_START);
  this.minTextSpacing = options.inferNonNegativeNumberValue(this.getAbsoluteOptionsPath("minTextSpacing"), this.tickTextStyle.fontSize);
  this.allowContainerBoundaryTextCufoff = options.inferBooleanValue(this.getAbsoluteOptionsPath("allowContainerBoundaryTextCufoff"), !1)
};
goog.inherits(gviz.canviz.HorizontalAxisDefiner, gviz.canviz.AxisDefiner);
gviz.canviz.HorizontalAxisDefiner.prototype.getAxisName = function() {
  return"hAxis#" + this.index
};
gviz.canviz.HorizontalAxisDefiner.prototype.calcAxisDefinition = function(chartDef, legendDefiner, colorBarDefiner) {
  return this.calcCommonAxisDefinition(chartDef, chartDef.chartArea.width, 1 == this.direction ? chartDef.chartArea.left : chartDef.chartArea.right, legendDefiner, colorBarDefiner)
};
gviz.canviz.HorizontalAxisDefiner.prototype.calcOutsideTextLayout = function(chartDef, legendDefiner, colorBarDefiner, predefinedTickTextLayout) {
  if(0 == this.index) {
    var measureFunction = chartDef.textMeasureFunction, tickFontSize = this.tickTextStyle.fontSize, titleFontSize = this.title.textStyle.fontSize, legendFontSize = legendDefiner.getTextStyle().fontSize, titleText = chartDef.axisTitlesPosition == gviz.canviz.Options.InOutPosition.OUTSIDE ? this.title.text : "", that = this, tickDiluter = new gviz.canviz.TickDiluter(chartDef.width, this.ticks, this.firstTickIdx, this.maxTextLines, this.maxAlternation, this.forceSkip, this.skipMode, this.minTextSpacing, 
    this.allowContainerBoundaryTextCufoff, function(text, width, numOfLines) {
      return gviz.canviz.textutils.calcTextLayout(measureFunction, text, that.tickTextStyle, width, numOfLines)
    }), skipThreshold = this.forceSkip || 1, optimisticHorizontalTicks, optimisticSlantedTicks;
    if(this.tickTextPosition == gviz.canviz.Options.InOutPosition.OUTSIDE && !predefinedTickTextLayout) {
      if(goog.isDefAndNotNull(this.slantedTickText)) {
        this.slantedTickText ? optimisticSlantedTicks = this.calcOptimisticSlantedTicks_(measureFunction) : optimisticHorizontalTicks = tickDiluter.calcOptimisticTickArrangement()
      }else {
        if(this.ticks.length * tickFontSize / (this.maxAlternation * skipThreshold) <= chartDef.width) {
          if(optimisticHorizontalTicks = tickDiluter.calcOptimisticTickArrangement(), optimisticHorizontalTicks.skip > skipThreshold || 0 == optimisticHorizontalTicks.numOfLines) {
            optimisticSlantedTicks = this.calcOptimisticSlantedTicks_(measureFunction), optimisticHorizontalTicks = null
          }
        }else {
          optimisticSlantedTicks = this.calcOptimisticSlantedTicks_(measureFunction)
        }
      }
    }
    var optimisticTitleLayout = gviz.canviz.textutils.calcTextLayout(measureFunction, titleText, this.title.textStyle, chartDef.chartArea.width, Infinity), minGap = this.minGap, gapAboveTicks = Math.max(minGap, Math.round(tickFontSize / gviz.canviz.Constants.GOLDEN_RATIO)), gapBetweenTickLines = Math.max(minGap, Math.round(tickFontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO))), keyBottomSpace = "bottom-space", keyTicks = "ticks", keyTitle = "title", keyLegend = "legend", keyColorBar = "colorBar", 
    getSlantedTicksItem = function() {
      return{key:keyTicks, min:optimisticSlantedTicks.minHeight + minGap, max:optimisticSlantedTicks.maxHeight + minGap, extra:[gapAboveTicks - minGap]}
    }, items = [];
    items.push({key:keyBottomSpace, min:minGap, extra:[Infinity]});
    0 < optimisticTitleLayout.lines.length && items.push({key:keyTitle, min:titleFontSize + minGap, extra:[Infinity]});
    legendDefiner.getPosition() == gviz.canviz.Options.LegendPosition.BOTTOM && items.push({key:keyLegend, min:legendFontSize + minGap, extra:[Infinity]});
    colorBarDefiner.getPosition() == gviz.canviz.Options.ColorBarPosition.BOTTOM && items.push({key:keyColorBar, min:colorBarDefiner.getHeight() + minGap, extra:[Infinity]});
    var tickFirstLineIdx = items.length;
    predefinedTickTextLayout || optimisticHorizontalTicks && 0 < optimisticHorizontalTicks.numOfLines ? items.push({key:keyTicks, min:tickFontSize + minGap, extra:[gapAboveTicks - minGap]}) : optimisticSlantedTicks && items.push(getSlantedTicksItem());
    var tickRestLinesBeginIdx = items.length;
    if(optimisticHorizontalTicks) {
      for(var i$$0 = 1;i$$0 < optimisticHorizontalTicks.numOfLines;i$$0++) {
        items.push({key:keyTicks, min:tickFontSize + minGap, extra:[gapBetweenTickLines - minGap]})
      }
    }
    for(var tickRestLinesEndIdx = items.length, i$$0 = 1;i$$0 < optimisticTitleLayout.lines.length;i$$0++) {
      items.push({key:keyTitle, min:titleFontSize + minGap, extra:[this.gapBetweenTitleLines - minGap]})
    }
    var allocatedHeights = gviz.canviz.util.distributeRealEstateWithKeys(items, chartDef.height - chartDef.chartArea.bottom), actualTickLines = allocatedHeights[keyTicks] || [], finalHorizontalTicks;
    optimisticHorizontalTicks && (finalHorizontalTicks = tickDiluter.calcFinalTickArrangement(optimisticHorizontalTicks.altCount, optimisticHorizontalTicks.skip, actualTickLines.length, 0), !goog.isDefAndNotNull(this.slantedTickText) && finalHorizontalTicks.skip > skipThreshold && (finalHorizontalTicks = optimisticHorizontalTicks = null, optimisticSlantedTicks = this.calcOptimisticSlantedTicks_(measureFunction), items[tickFirstLineIdx] = getSlantedTicksItem(), items = gviz.canviz.util.arrayMultiSlice(items, 
    0, tickRestLinesBeginIdx, tickRestLinesEndIdx, void 0), allocatedHeights = gviz.canviz.util.distributeRealEstateWithKeys(items, chartDef.height - chartDef.chartArea.bottom)));
    var y = chartDef.chartArea.bottom, actualTickLines = allocatedHeights[keyTicks] || [];
    if(0 < actualTickLines.length) {
      for(i$$0 = 1;i$$0 < actualTickLines.length;i$$0++) {
        actualTickLines[i$$0] += actualTickLines[i$$0 - 1]
      }
      if(predefinedTickTextLayout) {
        goog.asserts.assert(1 == actualTickLines.length);
        for(var singleLineY = y + actualTickLines[0], i$$0 = 0;i$$0 < predefinedTickTextLayout.length;i$$0++) {
          var textBlock = predefinedTickTextLayout[i$$0].textBlock;
          textBlock.anchor = textBlock.anchor || new gviz.math.Coordinate(0, 0);
          textBlock.anchor.y = singleLineY;
          goog.asserts.assert(1 == textBlock.lines.length)
        }
        this.tickTextLayout = predefinedTickTextLayout
      }else {
        if(optimisticHorizontalTicks) {
          this.tickTextLayout = goog.array.map(finalHorizontalTicks.ticksInfo, function(tickInfo) {
            var lines = goog.array.map(tickInfo.layout.lines, function(line, i) {
              return{x:0, y:actualTickLines[tickInfo.lineIdx + i], length:tickInfo.width, text:line}
            }, this);
            return{dataValue:tickInfo.dataValue, isVisible:tickInfo.isVisible, textBlock:{text:tickInfo.text, textStyle:this.tickTextStyle, lines:lines, paralAlign:gviz.graphics.TextAlign.CENTER, perpenAlign:gviz.graphics.TextAlign.END, tooltip:tickInfo.layout.needTooltip ? tickInfo.text : "", anchor:new gviz.math.Coordinate(tickInfo.coordinate, y), angle:0}}
          }, this)
        }else {
          if(optimisticSlantedTicks) {
            var heightWithSpace = actualTickLines[0], height = Math.min(heightWithSpace - minGap, optimisticSlantedTicks.maxHeight), top = y + heightWithSpace - height;
            this.tickTextLayout = this.calcFinalSlantedTicks_(measureFunction, top, height, optimisticSlantedTicks.skip)
          }
        }
      }
      y += goog.array.peek(actualTickLines)
    }
    var actualTitleLines = allocatedHeights[keyTitle] || [];
    if(0 < actualTitleLines.length) {
      var layout = gviz.canviz.textutils.calcTextLayout(measureFunction, titleText, this.title.textStyle, chartDef.chartArea.width, actualTitleLines.length);
      this.title.tooltip = layout.needTooltip ? titleText : "";
      for(i$$0 = 0;i$$0 < actualTitleLines.length;i$$0++) {
        y += actualTitleLines[i$$0], this.title.perpenAlign = gviz.graphics.TextAlign.END, this.title.lines.push({x:chartDef.chartArea.left + chartDef.chartArea.width / 2, y:y, length:chartDef.chartArea.width, text:layout.lines[i$$0]})
      }
    }
    var actualLegendLines = allocatedHeights[keyLegend] || [];
    if(0 < actualLegendLines.length) {
      var y = y + actualLegendLines[0], legendArea = new goog.math.Box(y - legendFontSize, chartDef.chartArea.right, y, chartDef.chartArea.left);
      legendDefiner.setArea(legendArea)
    }
    var actualColorBarLines = allocatedHeights[keyColorBar] || [];
    if(0 < actualColorBarLines.length) {
      var y = y + actualColorBarLines[0], colorBarArea = new goog.math.Box(y - colorBarDefiner.getHeight(), chartDef.chartArea.right, y, chartDef.chartArea.left);
      colorBarDefiner.setArea(colorBarArea)
    }
  }
};
gviz.canviz.HorizontalAxisDefiner.prototype.calcOptimisticSlantedTicks_ = function(textMeasureFunction) {
  var tickTextStyle = this.tickTextStyle, tickFontSize = tickTextStyle.fontSize, sin = Math.sin(this.slantedTickTextAngle), cos = Math.cos(this.slantedTickTextAngle), getHeight = function(tick) {
    var textWidth = textMeasureFunction(tick.text, tickTextStyle).width, height = textWidth * sin + tickFontSize * cos;
    return Math.ceil(height)
  }, skip = this.forceSkip;
  if(!skip) {
    if(2 > this.ticks.length) {
      skip = 1
    }else {
      var tickInterval = Math.abs(this.ticks[1].coordinate - this.ticks[0].coordinate), minWidth = (tickFontSize + this.minGap) / sin, skip = Math.ceil(minWidth / tickInterval)
    }
  }
  for(var maxHeight = 0, i = 0;i < this.ticks.length;i += skip) {
    maxHeight = Math.max(getHeight(this.ticks[i]), maxHeight)
  }
  var missingTextIndicatorHeight = getHeight({text:gviz.canviz.Messages.MSG_MISSING_TEXT_INDICATION}), minHeight = Math.min(maxHeight, missingTextIndicatorHeight);
  return{minHeight:minHeight, maxHeight:maxHeight, skip:skip}
};
gviz.canviz.HorizontalAxisDefiner.prototype.calcFinalSlantedTicks_ = function(textMeasureFunction, top, height, skip) {
  for(var tickFontSize = this.tickTextStyle.fontSize, sin = Math.sin(this.slantedTickTextAngle), cos = Math.cos(this.slantedTickTextAngle), firstTickIdx = gviz.canviz.TickDiluter.getFirstTickIdx(0, this.ticks.length, skip, this.skipMode), textWidth = (height - tickFontSize * cos) / sin, textWidth = Math.floor(textWidth), result = [], i = firstTickIdx;i < this.ticks.length;i += skip) {
    var tick = this.ticks[i], textLayout = gviz.canviz.textutils.calcTextLayout(textMeasureFunction, tick.text, this.tickTextStyle, textWidth, 1), left = tick.coordinate - 0.5 * sin * tickFontSize, textBlock = {text:tick.text, textStyle:this.tickTextStyle, lines:[], angle:-this.slantedTickTextAngleDegrees, paralAlign:gviz.graphics.TextAlign.END, perpenAlign:gviz.graphics.TextAlign.START, tooltip:textLayout.needTooltip ? tick.text : "", anchor:new gviz.math.Coordinate(left, top)};
    0 < textLayout.lines.length && textBlock.lines.push({x:0, y:0, length:textWidth, text:textLayout.lines[0]});
    result.push({dataValue:tick.dataValue, isVisible:tick.isVisible, textBlock:textBlock})
  }
  return result
};
gviz.canviz.HorizontalAxisDefiner.prototype.calcInsideTextLayout = function(chartDef) {
  if(0 == this.index) {
    var measureFunction = chartDef.textMeasureFunction, tickFontSize = this.tickTextStyle.fontSize, tickDiluter = new gviz.canviz.TickDiluter(chartDef.width, this.ticks, this.firstTickIdx, this.maxTextLines, this.maxAlternation, this.forceSkip, this.skipMode, this.minTextSpacing, this.allowContainerBoundaryTextCufoff, goog.bind(function(text, width, numOfLines) {
      return gviz.canviz.textutils.calcTextLayout(measureFunction, text, this.tickTextStyle, width, numOfLines)
    }, this)), optimisticHorizontalTicks;
    this.tickTextPosition == gviz.canviz.Options.InOutPosition.INSIDE && (optimisticHorizontalTicks = tickDiluter.calcOptimisticTickArrangement());
    var minGap = this.minGap, gapFromValueAxis = Math.max(this.minGap, Math.round(tickFontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO))), gapFromCategoryAxis = Math.max(this.minGap, Math.round(tickFontSize / gviz.canviz.Constants.GOLDEN_RATIO)), gapBelowTicks = this.type == gviz.canviz.Options.AxisType.VALUE ? gapFromValueAxis : gapFromCategoryAxis, gapBetweenTickLines = Math.max(minGap, Math.round(tickFontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO))), paralAlign, horizontalOffset;
    this.type == gviz.canviz.Options.AxisType.VALUE ? this.tickInTextPosition == gviz.canviz.Options.HighLowPosition.HIGH ? (paralAlign = gviz.graphics.TextAlign.START, horizontalOffset = gapFromValueAxis) : (paralAlign = gviz.graphics.TextAlign.END, horizontalOffset = -gapFromValueAxis) : (paralAlign = gviz.graphics.TextAlign.CENTER, horizontalOffset = 0);
    var keyTopSpace = "top-space", keyTicks = "ticks", items = [];
    items.push({key:keyTopSpace, min:minGap, extra:[Infinity]});
    if(optimisticHorizontalTicks) {
      for(var i$$0 = 0;i$$0 < optimisticHorizontalTicks.numOfLines;i$$0++) {
        var gap = 0 == i$$0 ? gapBelowTicks : gapBetweenTickLines;
        items.push({key:keyTicks, min:tickFontSize + minGap, extra:[gap - minGap]})
      }
    }
    var availableRealEstate = Math.floor(chartDef.chartArea.height / 2), allocatedHeights = gviz.canviz.util.distributeRealEstateWithKeys(items, availableRealEstate), actualTickLines = allocatedHeights[keyTicks] || [];
    if(0 < actualTickLines.length) {
      for(i$$0 = 1;i$$0 < actualTickLines.length;i$$0++) {
        actualTickLines[i$$0] += actualTickLines[i$$0 - 1]
      }
      var finalHorizontalTicks = tickDiluter.calcFinalTickArrangement(optimisticHorizontalTicks.altCount, optimisticHorizontalTicks.skip, actualTickLines.length, 0.5);
      this.tickTextLayout = goog.array.map(finalHorizontalTicks.ticksInfo, function(tickInfo) {
        var layoutLines = tickInfo.layout.lines;
        layoutLines.reverse();
        var lines = goog.array.map(layoutLines, function(line, i) {
          return{x:0, y:-actualTickLines[tickInfo.lineIdx + i], length:tickInfo.width, text:line}
        }, this);
        return{dataValue:tickInfo.dataValue, isVisible:tickInfo.isVisible, textBlock:{text:tickInfo.text, textStyle:this.tickTextStyle, lines:lines, paralAlign:paralAlign, perpenAlign:gviz.graphics.TextAlign.START, tooltip:tickInfo.layout.needTooltip ? tickInfo.text : "", anchor:new gviz.math.Coordinate(horizontalOffset + tickInfo.coordinate, chartDef.chartArea.bottom), angle:0}}
      }, this)
    }
  }
};
gviz.canviz.HorizontalAxisDefiner.prototype.getAxisDirectionalityParameters = function(chartDef) {
  var res = {};
  res.reversed = -1 == this.direction;
  res.screenStart = chartDef.chartArea.left;
  res.screenEnd = chartDef.chartArea.right;
  res.orientation = gviz.canviz.axis.AxisTools.Orientation.HORIZONTAL;
  return res
};
gviz.canviz.HorizontalAxisDefiner.prototype.calcTicklinesOrigin = function(chartDef) {
  return 0 == this.index ? {coordinate:chartDef.chartArea.bottom, direction:-1} : {coordinate:chartDef.chartArea.top, direction:1}
};
// Input 325
gviz.canviz.vectorutils = {};
gviz.canviz.vectorutils.round = function(vec) {
  return new goog.math.Vec2(Math.round(vec.x), Math.round(vec.y))
};
gviz.canviz.vectorutils.sumAll = function(var_args) {
  return goog.array.reduce(arguments, goog.math.Vec2.sum, new goog.math.Vec2(0, 0))
};
gviz.canviz.vectorutils.sumOfSizes = function(var_args) {
  return goog.array.reduce(arguments, function(s1, s2) {
    return new goog.math.Size(s1.width + s2.width, s1.height + s2.height)
  }, new goog.math.Size(0, 0))
};
gviz.canviz.vectorutils.vectorInDirection = function(angle, magnitude) {
  return gviz.canviz.vectorutils.vectorOnEllipse(angle, magnitude, magnitude)
};
gviz.canviz.vectorutils.vectorOnEllipse = function(angle, radiusX, radiusY) {
  return new goog.math.Vec2(Math.cos(angle) * radiusX, Math.sin(angle) * radiusY)
};
gviz.canviz.vectorutils.pairToVector = function(pair) {
  return new goog.math.Vec2(pair[0], pair[1])
};
gviz.canviz.vectorutils.pairsToVectors = function(pairs) {
  return goog.array.map(pairs, gviz.canviz.vectorutils.pairToVector)
};
gviz.canviz.vectorutils.rectangleDiagonal = function(rectangleSize) {
  return new goog.math.Vec2(rectangleSize.width, rectangleSize.height)
};
gviz.canviz.vectorutils.cornersOfRectangle = function(center, size) {
  return gviz.canviz.vectorutils.pairsToVectors([[center.x - size.width / 2, center.y - size.height / 2], [center.x + size.width / 2, center.y - size.height / 2], [center.x + size.width / 2, center.y + size.height / 2], [center.x - size.width / 2, center.y + size.height / 2]])
};
gviz.canviz.vectorutils.centerOfRectangleAdjacentToPerpendicular = function(ray, rectangleSize, isInside) {
  var squaredMagnitude = ray.squaredMagnitude();
  if(0 == squaredMagnitude) {
    return new goog.math.Vec2(0, 0)
  }
  var candidates = gviz.canviz.vectorutils.cornersOfRectangle(ray, rectangleSize), scores = goog.array.map(candidates, function(candidate) {
    return goog.math.Vec2.dot(candidate, ray)
  }), f = function(a, b) {
    return isInside ? Math.min(a, b) : Math.max(a, b)
  }, winningScore = goog.array.reduce(scores, f, isInside ? Infinity : -Infinity);
  ray = ray.clone();
  ray.scale(winningScore / squaredMagnitude);
  return ray
};
gviz.canviz.vectorutils.cornersToRectangle = function(x1, y1, x2, y2) {
  return new goog.math.Rect(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x2 - x1), Math.abs(y2 - y1))
};
gviz.canviz.vectorutils.positionBoxInEllipticSlice = function(radiusX, radiusY, fromAngle, toAngle, boxSize, opt_paddingToSliceBoundries, opt_paddingToCenter) {
  var stretchedTextBoxSize = new goog.math.Size(boxSize.width / radiusX, boxSize.height / radiusY), stretchedPadding = new goog.math.Size((opt_paddingToSliceBoundries || 0) / radiusX, (opt_paddingToSliceBoundries || 0) / radiusY), stretchedTextBoxCenter = gviz.canviz.vectorutils.positionBoxInSliceOfAUnitCircle_(fromAngle, toAngle, stretchedTextBoxSize, stretchedPadding, opt_paddingToCenter || 0);
  return stretchedTextBoxCenter && new goog.math.Vec2(stretchedTextBoxCenter.x * radiusX, stretchedTextBoxCenter.y * radiusY)
};
gviz.canviz.vectorutils.positionBoxInSliceOfAUnitCircle_ = function(fromAngle, toAngle, boxSize, paddingToSliceBoundries, paddingToCenter) {
  var bisectionInverseAngle = (fromAngle + toAngle) / 2 + Math.PI, circleCenterDirection = gviz.canviz.vectorutils.vectorInDirection(bisectionInverseAngle, 1), zeroCenteredBoxCorners = gviz.canviz.vectorutils.cornersOfRectangle(new goog.math.Vec2(0, 0), boxSize), distanceToCircleCenter = gviz.canviz.vectorutils.circleAdjacentToConvexShape_(circleCenterDirection, zeroCenteredBoxCorners, !1);
  if(goog.isDefAndNotNull(paddingToCenter) && distanceToCircleCenter < paddingToCenter) {
    return null
  }
  var boxCenter = circleCenterDirection.clone();
  boxCenter.scale(-distanceToCircleCenter);
  var sizeIncludingPadding = gviz.canviz.vectorutils.sumOfSizes(boxSize, paddingToSliceBoundries, paddingToSliceBoundries), inSlice = gviz.canviz.vectorutils.isConvexShapeInInfiniteSlice_(gviz.canviz.vectorutils.cornersOfRectangle(boxCenter, sizeIncludingPadding), fromAngle, toAngle);
  return inSlice ? boxCenter : null
};
gviz.canviz.vectorutils.circleAdjacentToConvexShape_ = function(direction, vertices, isConvexOutsideCircle) {
  for(var distance = 1, reducer = isConvexOutsideCircle ? Math.max : Math.min, i = 0;i < vertices.length;++i) {
    var points = gviz.canviz.vectorutils.pointsOnLineOfDistanceOneToPoint_(direction, vertices[i]);
    if(goog.isNull(points) || 0 > points[1]) {
      return null
    }
    distance = reducer(distance, points[1])
  }
  return distance
};
gviz.canviz.vectorutils.pointsOnLineOfDistanceOneToPoint_ = function(ray, point) {
  var squareNormP = point.squaredMagnitude(), rayDotPoint = goog.math.Vec2.dot(ray, point), dext = rayDotPoint * rayDotPoint + 1 - squareNormP;
  if(0 > dext) {
    return null
  }
  var sqrtDext = Math.sqrt(dext);
  return[rayDotPoint - sqrtDext, rayDotPoint + sqrtDext]
};
gviz.canviz.vectorutils.isConvexShapeInInfiniteSlice_ = function(vertices, fromAngle, toAngle) {
  for(var range = goog.math.modulo(toAngle - fromAngle, 2 * Math.PI), max = 0, min = range, i = 0;i < vertices.length;++i) {
    var angle = Math.atan2(vertices[i].y, vertices[i].x), angleMinusFrom = goog.math.modulo(angle - fromAngle, 2 * Math.PI);
    if(angleMinusFrom >= range || 0 == angleMinusFrom) {
      return!1
    }
    min = Math.min(angleMinusFrom, min);
    max = Math.max(angleMinusFrom, max)
  }
  return max - min < Math.PI
};
// Input 326
gviz.canviz.VerticalAxisDefiner = function(chartDef, options, optionsPath, index, defaultType, defaultViewWindowMode) {
  gviz.canviz.AxisDefiner.call(this, chartDef, options, goog.array.concat(["vAxes." + index, "vAxis"], optionsPath), index, defaultType, defaultViewWindowMode);
  this.type == gviz.canviz.Options.AxisType.VALUE && (this.direction = -this.direction)
};
goog.inherits(gviz.canviz.VerticalAxisDefiner, gviz.canviz.AxisDefiner);
gviz.canviz.VerticalAxisDefiner.prototype.getAxisName = function() {
  return"vAxis#" + this.index
};
gviz.canviz.VerticalAxisDefiner.prototype.calcAxisDefinition = function(chartDef, legendDefiner, colorBarDefiner) {
  return this.calcCommonAxisDefinition(chartDef, chartDef.chartArea.height, 1 == this.direction ? chartDef.chartArea.top : chartDef.chartArea.bottom, legendDefiner, colorBarDefiner)
};
gviz.canviz.VerticalAxisDefiner.prototype.calcOutsideTextLayout = function(chartDef) {
  var measureFunction = chartDef.textMeasureFunction, tickFontSize = this.tickTextStyle.fontSize, titleFontSize = this.title.textStyle.fontSize, titleText = chartDef.axisTitlesPosition == gviz.canviz.Options.InOutPosition.OUTSIDE ? this.title.text : "", minGap = this.minGap, maximalTickTextWidth = goog.array.reduce(this.ticks, function(prev, curr) {
    return Math.max(prev, measureFunction(curr.text, this.tickTextStyle).width)
  }, 0, this), missingItemsText = gviz.canviz.Messages.MSG_MISSING_TEXT_INDICATION, missingItemsTextWidth = measureFunction(missingItemsText, this.tickTextStyle).width, minimalTickTextWidth = Math.min(missingItemsTextWidth, maximalTickTextWidth), optimisticTitleLayout = gviz.canviz.textutils.calcTextLayout(measureFunction, titleText, this.title.textStyle, chartDef.chartArea.height, Infinity), keyRightSpace = "right-space", keyTicks = "ticks", keyTitle = "title", items = [];
  this.tickTextPosition == gviz.canviz.Options.InOutPosition.OUTSIDE ? items.push({key:keyRightSpace, min:minGap, extra:[tickFontSize - minGap]}) : items.push({key:keyRightSpace, min:0, extra:[Infinity]});
  0 < optimisticTitleLayout.lines.length && items.push({key:keyTitle, min:titleFontSize + minGap, extra:[Infinity]});
  this.tickTextPosition == gviz.canviz.Options.InOutPosition.OUTSIDE && items.push({key:keyTicks, min:minimalTickTextWidth + minGap, max:maximalTickTextWidth + minGap, extra:[Infinity]});
  for(var i = 1;i < optimisticTitleLayout.lines.length;i++) {
    items.push({key:keyTitle, min:titleFontSize + minGap, extra:[this.gapBetweenTitleLines - minGap]})
  }
  var allocatedWidths = gviz.canviz.util.distributeRealEstateWithKeys(items, 0 == this.index ? chartDef.chartArea.left : chartDef.width - chartDef.chartArea.right), x = 0 == this.index ? 0 : chartDef.width, actualTitleLines = allocatedWidths[keyTitle] || [];
  if(0 < actualTitleLines.length) {
    var layout = gviz.canviz.textutils.calcTextLayout(measureFunction, titleText, this.title.textStyle, chartDef.chartArea.height, actualTitleLines.length);
    1 === this.index && layout.lines.reverse();
    this.title.tooltip = layout.needTooltip ? titleText : "";
    for(i = 0;i < actualTitleLines.length;i++) {
      x += actualTitleLines[i] * (0 == this.index ? 1 : -1), this.title.angle = -90, this.title.perpenAlign = 0 == this.index ? gviz.graphics.TextAlign.END : gviz.graphics.TextAlign.START, this.title.lines.push({x:x, y:chartDef.chartArea.top + chartDef.chartArea.height / 2, length:chartDef.chartArea.height, text:layout.lines[i]})
    }
  }
  if(this.tickTextPosition == gviz.canviz.Options.InOutPosition.OUTSIDE) {
    var tickWidth = allocatedWidths[keyTicks][0] || 0, x = x + tickWidth * (0 == this.index ? 1 : -1), tickTextWidth = Math.min(maximalTickTextWidth, tickWidth - minGap);
    this.tickTextLayout = tickTextWidth < minimalTickTextWidth ? [] : goog.array.map(this.ticks, function(tick, tickIndex) {
      var paralAlign = 0 == this.index ? gviz.graphics.TextAlign.END : gviz.graphics.TextAlign.START, perpenAlign = gviz.graphics.TextAlign.CENTER;
      this.tickOutTextPosition == gviz.canviz.Options.BoundUnboundPosition.BOUND && (0 == tickIndex && (perpenAlign = 1 == this.direction ? gviz.graphics.TextAlign.START : gviz.graphics.TextAlign.END), tickIndex == this.ticks.length - 1 && (perpenAlign = 1 == this.direction ? gviz.graphics.TextAlign.END : gviz.graphics.TextAlign.START));
      return this.getTickTextLayout_(chartDef, tick, x, tickTextWidth, paralAlign, perpenAlign, 0)
    }, this)
  }
};
gviz.canviz.VerticalAxisDefiner.prototype.calcInsideTextLayout = function(chartDef) {
  var measureFunction = chartDef.textMeasureFunction, tickFontSize = this.tickTextStyle.fontSize, minGap = this.minGap, gapFromValueAxis = Math.max(this.minGap, Math.round(tickFontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO))), gapFromCategoryAxis = Math.max(this.minGap, Math.round(tickFontSize / gviz.canviz.Constants.GOLDEN_RATIO)), horizontalOffset = this.type == gviz.canviz.Options.AxisType.VALUE ? gapFromValueAxis : gapFromCategoryAxis, perpenAlign, verticalOffset;
  this.type == gviz.canviz.Options.AxisType.VALUE ? this.tickInTextPosition == gviz.canviz.Options.HighLowPosition.HIGH ? (perpenAlign = gviz.graphics.TextAlign.END, verticalOffset = gapFromValueAxis) : (perpenAlign = gviz.graphics.TextAlign.START, verticalOffset = -gapFromValueAxis) : (perpenAlign = gviz.graphics.TextAlign.CENTER, verticalOffset = 0);
  var maximalTickTextWidth = goog.array.reduce(this.ticks, function(prev, curr) {
    return Math.max(prev, measureFunction(curr.text, this.tickTextStyle).width)
  }, 0, this), missingItemsText = gviz.canviz.Messages.MSG_MISSING_TEXT_INDICATION, missingItemsTextWidth = measureFunction(missingItemsText, this.tickTextStyle).width, minimalTickTextWidth = Math.min(missingItemsTextWidth, maximalTickTextWidth), keyRightSpace = "right-space", keyTicks = "ticks", items = [];
  items.push({key:keyRightSpace, min:minGap, extra:[Infinity]});
  this.tickTextPosition == gviz.canviz.Options.InOutPosition.INSIDE && items.push({key:keyTicks, min:minimalTickTextWidth + minGap, max:maximalTickTextWidth + horizontalOffset, extra:[]});
  var allocatedWidths = gviz.canviz.util.distributeRealEstateWithKeys(items, chartDef.chartArea.width / 2), x = 0 == this.index ? chartDef.chartArea.left : chartDef.chartArea.right;
  if(this.tickTextPosition == gviz.canviz.Options.InOutPosition.INSIDE) {
    var tickWidth = allocatedWidths[keyTicks][0] || 0, tickTextWidth = Math.min(maximalTickTextWidth, tickWidth - minGap), x = x + (tickWidth - tickTextWidth) * (0 == this.index ? 1 : -1);
    this.tickTextLayout = goog.array.map(this.ticks, function(tick) {
      var paralAlign = 0 == this.index ? gviz.graphics.TextAlign.START : gviz.graphics.TextAlign.END;
      return this.getTickTextLayout_(chartDef, tick, x, tickTextWidth, paralAlign, perpenAlign, verticalOffset)
    }, this)
  }
};
gviz.canviz.VerticalAxisDefiner.prototype.getTickTextLayout_ = function(chartDef, tick, x, tickTextWidth, paralAlign, perpenAlign, verticalOffset) {
  var layout = gviz.canviz.textutils.calcTextLayout(chartDef.textMeasureFunction, tick.text, this.tickTextStyle, tickTextWidth, 1), lines = goog.array.map(layout.lines, function(line) {
    return{x:0, y:0, length:tickTextWidth, text:line}
  }, this);
  return{dataValue:tick.dataValue, isVisible:tick.isVisible, textBlock:{text:tick.text, textStyle:this.tickTextStyle, lines:lines, paralAlign:paralAlign, perpenAlign:perpenAlign, tooltip:layout.needTooltip ? tick.text : "", anchor:new gviz.math.Coordinate(x, tick.coordinate - verticalOffset), angle:0}}
};
gviz.canviz.VerticalAxisDefiner.prototype.getAxisDirectionalityParameters = function(chartDef) {
  var res = {};
  res.reversed = -1 == this.direction;
  res.screenStart = chartDef.chartArea.top;
  res.screenEnd = chartDef.chartArea.bottom;
  res.orientation = gviz.canviz.axis.AxisTools.Orientation.VERTICAL;
  return res
};
gviz.canviz.VerticalAxisDefiner.prototype.calcTicklinesOrigin = function(chartDef) {
  return 0 == this.index ? {coordinate:chartDef.chartArea.left, direction:1} : {coordinate:chartDef.chartArea.right, direction:-1}
};
// Input 327
gviz.canviz.AxisChartDefiner = function(dataView, options, textMeasureFunction, chartDef) {
  this.dataView_ = dataView;
  this.options_ = options;
  this.textMeasureFunction_ = textMeasureFunction;
  this.colors_ = null;
  this.chartDef_ = chartDef;
  this.colorBarDefiner_ = this.legendDefiner_ = this.bubbleChartDefiner_ = this.targetAxisSerieTypeCount_ = this.targetAxisIndices_ = this.targetAxisDefiners_ = this.domainAxisDefiner_ = this.vAxisDefiners_ = this.hAxisDefiners_ = null;
  this.numOfSubDivisions_ = 1;
  this.subDivisionDefinition_ = null;
  var tooltipTrigger = options.inferOptionalEnumValue("tooltip.trigger", gviz.Options.TooltipTrigger);
  this.isTooltipEnabled_ = tooltipTrigger != gviz.Options.TooltipTrigger.NONE;
  this.chartDef_.focusTarget = options.inferEnumValue("focusTarget", gviz.canviz.Options.FocusTarget, gviz.canviz.Options.FocusTarget.DATUM);
  if(chartDef.focusTarget == gviz.canviz.Options.FocusTarget.CATEGORY && chartDef.chartType != gviz.canviz.Options.ChartType.FUNCTION) {
    throw Error("Focus target " + chartDef.focusTarget + " is not supported for the chosen chart type.");
  }
  this.chartDef_.isDiff = this.options_.inferBooleanValue("isDiff");
  chartDef.chartType == gviz.canviz.Options.ChartType.BUBBLE ? this.bubbleChartDefiner_ = new gviz.canviz.BubbleChartDefiner(this.dataView_, this.options_, this.textMeasureFunction_, chartDef) : (this.colors_ = options.inferValue("colors", gviz.canviz.Options.DEFAULT_DISCRETE_COLORS), this.createSeriesAndCategoriesDrawingData_());
  var serieType = gviz.canviz.Options.SerieType, hasBarsOrArea = 0 < chartDef.serieTypeCount[serieType.BARS] || 0 < chartDef.serieTypeCount[serieType.AREA] || 0 < chartDef.serieTypeCount[serieType.STEPPED_AREA];
  this.chartDef_.isStacked = this.options_.inferBooleanValue("isStacked") && hasBarsOrArea;
  this.chartDef_.showRemoveSerieButton = this.options_.inferBooleanValue("showRemoveSeriesButton", !1);
  this.createAxes_()
};
gviz.canviz.AxisChartDefiner.prototype.createSeriesAndCategoriesDrawingData_ = function() {
  var chartDef = this.chartDef_, dataView = this.dataView_, serieTypeExtractor = chartDef.chartType == gviz.canviz.Options.ChartType.SCATTER ? function() {
    return gviz.canviz.Options.SerieType.SCATTER
  } : chartDef.chartType == gviz.canviz.Options.ChartType.HISTOGRAM ? function() {
    return gviz.canviz.Options.SerieType.BARS
  } : goog.bind(function(serieIndex) {
    return this.options_.inferEnumValue("series." + serieIndex + ".type", gviz.canviz.Options.SerieType, chartDef.defaultSerieType)
  }, this), columnStructure = chartDef.isDiff ? gviz.canviz.AxisChartDefiner.inferSerieAndCategoryStructuresForDiffChart_(dataView, serieTypeExtractor, chartDef.chartType) : gviz.canviz.AxisChartDefiner.inferSerieAndCategoryStructures_(dataView, serieTypeExtractor);
  chartDef.categories = [];
  chartDef.dataTableToCategoryMap = {};
  for(var domainsColumnStructure = columnStructure.domainsColumnStructure, i = 0;i < dataView.getNumberOfRows();i++) {
    var dataTableIdx = dataView.getTableRowIndex(i), data = dataView.getValue(i, 0), titles = goog.array.map(domainsColumnStructure, function(domainColumnsStructure) {
      var columnIndex = domainColumnsStructure.columns[gviz.canviz.ColumnRole.DOMAIN][0], title = dataView.getFormattedValue(i, columnIndex) || "";
      return title
    }), category = {data:data, titles:titles, dataTableIdx:dataTableIdx}, domain = domainsColumnStructure[0], tooltipColumnIndices = domain.columns[gviz.canviz.ColumnRole.TOOLTIP];
    if(tooltipColumnIndices) {
      goog.asserts.assert(1 == tooltipColumnIndices.length);
      var tooltipColumnIndex = tooltipColumnIndices[0];
      category.tooltipText = this.getCustomTooltipText_(tooltipColumnIndex, i)
    }
    chartDef.categories.push(category);
    chartDef.dataTableToCategoryMap[dataTableIdx] = i
  }
  chartDef.series = [];
  for(i = 0;i < columnStructure.seriesColumnStructure.length;i++) {
    var serieStructure = columnStructure.seriesColumnStructure[i], serieDefinition = this.createSerieDefinition_(i, serieStructure);
    chartDef.series.push(serieDefinition);
    goog.object.isEmpty(dataView.getColumnProperties(i)) || (chartDef.series[i].properties = dataView.getColumnProperties(i))
  }
  chartDef.dataTableColumnRoleInfo = columnStructure.columnRoleInfo;
  chartDef.domainsColumnStructure = columnStructure.domainsColumnStructure;
  chartDef.domainDataType = columnStructure.domainDataType;
  chartDef.targetAxisToDataType = {};
  chartDef.serieTypeCount = {};
  this.targetAxisIndices_ = new goog.structs.Set;
  this.targetAxisSerieTypeCount_ = [];
  for(i = 0;i < chartDef.series.length;++i) {
    var serie = chartDef.series[i];
    this.targetAxisIndices_.add(serie.targetAxisIndex);
    var targetAxisType = chartDef.targetAxisToDataType[serie.targetAxisIndex];
    if(!goog.isDefAndNotNull(targetAxisType)) {
      chartDef.targetAxisToDataType[serie.targetAxisIndex] = serie.dataType
    }else {
      if(targetAxisType != serie.dataType) {
        throw Error("All series on a given axis must be of the same data type");
      }
    }
    chartDef.serieTypeCount[serie.type] = (chartDef.serieTypeCount[serie.type] || 0) + 1;
    var axisSTC = this.targetAxisSerieTypeCount_[serie.targetAxisIndex] || {};
    this.targetAxisSerieTypeCount_[serie.targetAxisIndex] = axisSTC;
    axisSTC[serie.type] = (axisSTC[serie.type] || 0) + 1
  }
};
gviz.canviz.AxisChartDefiner.prototype.initLegend_ = function() {
  var addedIndices = {}, chartDef = this.chartDef_;
  chartDef.legendEntries = [];
  var addLegendEntry = goog.bind(function(serieIndex) {
    var serieDef = chartDef.series[serieIndex];
    if(chartDef.isDiff && serieDef.type === gviz.canviz.Options.ChartType.SCATTER) {
      var alpha = [this.options_.inferValue("diff.oldData.opacity", gviz.canviz.Options.DEFAULT_DIFF_OLD_DATA_OPACITY), this.options_.inferValue("diff.newData.opacity", gviz.canviz.Options.DEFAULT_DIFF_NEW_DATA_OPACITY)], color = serieDef.color.color;
      chartDef.legendEntries.push({id:serieDef.id, text:serieDef.labelInLegend, brush:new gviz.graphics.Brush({gradient:{color1:color, color2:color, opacity1:alpha[0], opacity2:alpha[1], x1:"100%", y1:"0%", x2:"0%", y2:"0%", useObjectBoundingBoxUnits:!0, sharpTransition:!0}}), index:serieIndex, isVisible:serieDef.visibleInLegend})
    }else {
      var brush = new gviz.graphics.Brush({fill:serieDef.color.color});
      serieDef.colorOpacity && brush.setFillOpacity(serieDef.colorOpacity);
      chartDef.legendEntries.push({id:serieDef.id, text:serieDef.labelInLegend, brush:brush, index:serieIndex, isVisible:serieDef.visibleInLegend})
    }
    addedIndices[serieIndex] = !0
  }, this);
  goog.array.forEach(chartDef.series, function(serieDef, serieIndex) {
    addedIndices[serieIndex] || (addLegendEntry(serieIndex), goog.isDefAndNotNull(serieDef.trendlineIndex) && addLegendEntry(serieDef.trendlineIndex))
  }, this);
  if(chartDef.isDiff) {
    var serieType = chartDef.series[0].type;
    serieType === gviz.canviz.Options.SerieType.BARS && chartDef.legendEntries.push({id:-1, text:"Previous data", brush:new gviz.graphics.Brush({fill:gviz.canviz.Options.DEFAULT_DIFF_SERIES_BACKGROUND_COLOR.color}), index:-1, isVisible:!0})
  }
};
gviz.canviz.AxisChartDefiner.prototype.initTrendlines_ = function(data) {
  for(var baseTime = (new Date(1900, 0, 1, 0, 0, 0)).getTime(), timeScale = 864E5, dateTransformDomain = function(numericValue) {
    numericValue -= baseTime;
    return numericValue /= timeScale
  }, dateUntransformDomain = function(numericValue) {
    numericValue *= timeScale;
    return numericValue += baseTime
  }, numberFormat = new goog.i18n.NumberFormat("#.###"), stringRenderer = new gviz.math.expression.renderer.StringRenderer(function(n) {
    return numberFormat.format(n)
  }), chartDef = this.chartDef_, trendlineSeriesType = chartDef.chartType == gviz.canviz.Options.ChartType.SCATTER ? gviz.canviz.Options.SerieType.SCATTER : gviz.canviz.Options.SerieType.LINE, trendlineCount = 0, seriesCount = chartDef.series.length, i$$0 = 0;i$$0 < seriesCount;i$$0++) {
    var series = chartDef.series[i$$0], optionPrefix = "trendlines." + i$$0 + ".", trendlineExists = null != this.options_.inferWholeObjectValue("trendlines." + i$$0);
    if(trendlineExists) {
      trendlineCount++;
      var trendlineType = this.options_.inferEnumValue(optionPrefix + "type", gviz.canviz.trendlines.TrendlineType, gviz.canviz.Options.DEFAULT_TRENDLINE_TYPE), rawColor = this.options_.inferValue(optionPrefix + "color", "<default>"), isDefaultColor = "<default>" === rawColor;
      isDefaultColor && (rawColor = series.pointBrush.getFill());
      var opacity = this.options_.inferRatioNumberValue([optionPrefix + "opacity", "opacity"], isDefaultColor ? 0.5 : 1), pointSize = this.options_.inferNonNegativeNumberValue([optionPrefix + "pointSize", "pointSize"], 0), visiblePoints = 0 < pointSize;
      0 >= pointSize && (pointSize = gviz.canviz.Options.DEFAULT_POINT_SIZE_FOR_LINE);
      var pointRadius = pointSize / 2;
      0 < pointRadius && (pointRadius += 1);
      var trendlineColumns = {};
      goog.isDefAndNotNull(series.columns[gviz.canviz.ColumnRole.DATA]) && (trendlineColumns[gviz.canviz.ColumnRole.DATA] = series.columns[gviz.canviz.ColumnRole.DATA]);
      var lineWidth = this.options_.inferNonNegativeNumberValue([optionPrefix + "lineWidth", "lineWidth"], gviz.canviz.Options.DEFAULT_LINE_WIDTH);
      this.options_.inferEnumValue(optionPrefix + "curveType", gviz.canviz.Options.CurveType, gviz.canviz.Options.CurveType.NONE);
      this.options_.inferBooleanValue(optionPrefix + "visibleInLegend", !1);
      var color = gviz.canviz.Theme.toStandardColor(rawColor), trendlineGenerator = gviz.canviz.trendlines.Trendline[trendlineType], hAxisDefiner = this.hAxisDefiners_[0], vAxisDefiner = this.vAxisDefiners_[0];
      if(chartDef.orientation === gviz.canviz.Options.Orientation.VERTICAL) {
        var tempAxisDefiner = hAxisDefiner, hAxisDefiner = vAxisDefiner, vAxisDefiner = tempAxisDefiner
      }
      if(hAxisDefiner.type === gviz.canviz.Options.AxisType.VALUE) {
        var hAxisValueScale = hAxisDefiner.valueScale, vAxisValueScale = vAxisDefiner.valueScale, domainColumn = 0, dataColumn = series.columns[gviz.canviz.ColumnRole.DATA][0], transformDomain = goog.functions.identity, untransformDomain = goog.functions.identity, isDomainDateLike = 0 < data.getNumberOfRows() && goog.isDateLike(data.getValue(0, domainColumn));
        isDomainDateLike && (transformDomain = dateTransformDomain, untransformDomain = dateUntransformDomain);
        var range = {min:transformDomain(hAxisValueScale.numericMinValue), max:transformDomain(hAxisValueScale.numericMaxValue)}, trendlineDefinition = trendlineGenerator(data.getNumberOfRows(), function(i) {
          var value = data.getValue(i, 0), number = hAxisValueScale.valueToUnscaledNumber(value);
          return transformDomain(number)
        }, function(i) {
          return vAxisValueScale.valueToUnscaledNumber(data.getValue(i, dataColumn))
        }, {range:range, degree:this.options_.inferNumberValue(optionPrefix + "degree", 3)});
        if(!goog.isNull(trendlineDefinition)) {
          var title = this.options_.inferStringValue(optionPrefix + "title", stringRenderer.render(trendlineDefinition.equation.compose()) || "Trendline " + trendlineCount), trendlineData = goog.array.map(trendlineDefinition.data, function(row) {
            var domainNumber = untransformDomain(row[0]), domainValue = hAxisValueScale.unscaledNumberToValue(domainNumber);
            return[domainValue, vAxisValueScale.unscaledNumberToValue(row[1])]
          });
          series.trendlineIndex = chartDef.series.length;
          var lineBrush = gviz.graphics.Brush.createStrokeBrush(color.color, lineWidth);
          lineBrush.setStrokeOpacity(opacity);
          var pointBrush = gviz.graphics.Brush.createFillBrush(color.color);
          pointBrush.setFillOpacity(opacity);
          var labelInLegend = this.options_.inferStringValue(optionPrefix + "labelInLegend", title);
          this.options_.inferBooleanValue(optionPrefix + "showR2", !1) && (labelInLegend += "\n" + stringRenderer.render((new gviz.math.expression.Eq([new gviz.math.expression.Pow([new gviz.math.expression.Variable("r"), new gviz.math.expression.Number(2)]), new gviz.math.expression.Number(trendlineDefinition.r2)])).compose()));
          chartDef.series.push({id:series.id + "_trendline", title:title, isVirtual:!0, data:trendlineData, dataType:series.dataType, isVisible:!0, dataTableIdx:0, columns:trendlineColumns, domainIndex:series.domainIndex, intervals:null, color:color, colorOpacity:opacity, pointBrush:pointBrush, lineBrush:lineBrush, areaBrush:null, candlestick:null, type:trendlineSeriesType, zOrder:this.options_.inferNumberValue(optionPrefix + "zOrder", 0), lineWidth:lineWidth, pointRadius:pointRadius, pointSensitivityAreaRadius:gviz.canviz.Options.DEFAULT_POINT_SENSITIVITY_AREA_RADIUS, 
          curveType:this.options_.inferEnumValue(optionPrefix + "curveType", gviz.canviz.Options.CurveType, gviz.canviz.Options.CurveType.NONE), smoothingFactor:this.options_.inferNonNegativeNumberValue([optionPrefix + "smoothingFactor", "smoothingFactor"], 1), visiblePoints:visiblePoints, points:[], controlPoints:[], targetAxisIndex:series.targetAxisIndex, visibleInLegend:this.options_.inferBooleanValue(optionPrefix + "visibleInLegend", !1), labelInLegend:labelInLegend})
        }
      }
    }
  }
};
gviz.canviz.AxisChartDefiner.inferSerieAndCategoryStructures_ = function(data, serieTypeInferenceFunction) {
  for(var seriesColumnStructure = [], domainsColumnStructure = [], currentUpdatedDescription = null, currentIndex = null, remainingDataColumns = 0, columnRoleInfo = [], i = 0;i < data.getNumberOfColumns();++i) {
    var columnType = data.getColumnType(i), columnRole = data.getColumnProperty(i, "role") || (0 == i ? gviz.canviz.ColumnRole.DOMAIN : gviz.canviz.ColumnRole.DATA);
    if(0 == i && columnRole !== gviz.canviz.ColumnRole.DOMAIN) {
      throw Error("First column must be a " + gviz.canviz.ColumnRole.DOMAIN + " column");
    }
    if(columnRole == gviz.canviz.ColumnRole.DOMAIN) {
      if(0 < remainingDataColumns) {
        throw Error("Unexpected " + gviz.canviz.ColumnRole.DOMAIN + " column (column #" + i + ")");
      }
      currentUpdatedDescription = {columns:{}, dataType:columnType};
      currentIndex = {serieIndex:null, domainIndex:domainsColumnStructure.length};
      domainsColumnStructure.push(currentUpdatedDescription)
    }
    if(0 == remainingDataColumns && columnRole === gviz.canviz.ColumnRole.DATA) {
      var newSerieIndex = seriesColumnStructure.length, serieType = serieTypeInferenceFunction(newSerieIndex), currentUpdatedDescription = {type:serieType, dataType:columnType, columns:{}}, currentIndex = {serieIndex:newSerieIndex, domainIndex:null};
      seriesColumnStructure.push(currentUpdatedDescription);
      remainingDataColumns = serieType === gviz.canviz.Options.SerieType.CANDLESTICKS ? 4 : 1
    }
    if(columnRole === gviz.canviz.ColumnRole.DATA && (remainingDataColumns--, columnType !== currentUpdatedDescription.dataType)) {
      throw Error("All data columns of the same series must be of the same data type");
    }
    if(columnRole === gviz.canviz.ColumnRole.TOOLTIP && currentUpdatedDescription.columns[columnRole]) {
      throw Error("Only one data column with role 'tooltip' per series is allowed");
    }
    currentUpdatedDescription.columns[columnRole] = currentUpdatedDescription.columns[columnRole] || [];
    columnRoleInfo.push({serieIndex:currentIndex.serieIndex, domainIndex:currentIndex.domainIndex, role:columnRole, roleIndex:currentUpdatedDescription.columns[columnRole].length});
    currentUpdatedDescription.columns[columnRole].push(i)
  }
  if(0 < remainingDataColumns) {
    throw Error("Last serie does not have enough data columns (missing " + remainingDataColumns + ")");
  }
  for(var currentDomain = 0, domainDataType = domainsColumnStructure[0].dataType, i = 0;i < seriesColumnStructure.length;++i) {
    if(domainsColumnStructure.length <= currentDomain) {
      throw Error("Serie #" + i + " does not have a " + gviz.canviz.ColumnRole.DOMAIN + " column.");
    }
    var nextColumnStructure = domainsColumnStructure[currentDomain + 1], dataColumns = seriesColumnStructure[i].columns[gviz.canviz.ColumnRole.DATA];
    if(nextColumnStructure && nextColumnStructure.columns[gviz.canviz.ColumnRole.DOMAIN][0] <= dataColumns[0] && (++currentDomain, domainDataType !== domainsColumnStructure[currentDomain].dataType)) {
      throw Error("All domains must be of the same data type");
    }
    seriesColumnStructure[i].domainIndex = currentDomain
  }
  return{seriesColumnStructure:seriesColumnStructure, domainsColumnStructure:domainsColumnStructure, domainDataType:domainDataType, columnRoleInfo:columnRoleInfo}
};
gviz.canviz.AxisChartDefiner.validateColumnDataType_ = function(expectedColumnType, columnType) {
  if(expectedColumnType !== columnType) {
    throw Error("Column types must be consistent: equal for domain columns and for columns in the same serie.");
  }
};
gviz.canviz.AxisChartDefiner.inferSerieAndCategoryStructuresForDiffChart_ = function(data, serieTypeInferenceFunction, chartType) {
  var seriesColumnStructure = [], domainsColumnStructure = [], domainDataType = null, columnRoleInfo = [];
  if(chartType === gviz.canviz.Options.ChartType.SCATTER) {
    var numberOfDataColumns = data.getNumberOfColumns(), numberOfDomainColumns = 2, numberOfSeries = numberOfDataColumns - numberOfDomainColumns, validateColumnRole = function(columnRole) {
      if(columnRole !== gviz.canviz.ColumnRole.DATA && columnRole !== gviz.canviz.ColumnRole.DIFF_OLD_DATA) {
        throw Error("All columns must be either " + gviz.canviz.ColumnRole.DATA + " or " + gviz.canviz.ColumnRole.DIFF_OLD_DATA + " columns");
      }
    }, domainColumns = {};
    domainColumns[gviz.canviz.ColumnRole.DATA] = null;
    domainColumns[gviz.canviz.ColumnRole.DIFF_OLD_DATA] = null;
    for(var domainDataType = data.getColumnType(0), i = 0;i < numberOfDomainColumns;++i) {
      var columnType = data.getColumnType(i), columnRole$$0 = data.getColumnProperty(i, "role");
      validateColumnRole(columnRole$$0);
      gviz.canviz.AxisChartDefiner.validateColumnDataType_(domainDataType, columnType);
      var domainColumnStructure = {columns:{}, dataType:columnType};
      domainColumnStructure.columns[gviz.canviz.ColumnRole.DOMAIN] = [i];
      domainsColumnStructure.push(domainColumnStructure);
      domainColumns[columnRole$$0] = i;
      columnRoleInfo.push({domainIndex:i, role:gviz.canviz.ColumnRole.DOMAIN, roleIndex:0, serieIndex:null})
    }
    for(var serieIndex = 0;serieIndex < numberOfSeries;++serieIndex) {
      var columnIndex = numberOfDomainColumns + serieIndex, columnType = data.getColumnType(serieIndex), columnRole$$0 = data.getColumnProperty(serieIndex, "role");
      validateColumnRole(columnRole$$0);
      if(serieIndex % 2) {
        var previousSerieDataType = seriesColumnStructure[serieIndex - 1].dataType;
        gviz.canviz.AxisChartDefiner.validateColumnDataType_(previousSerieDataType, columnType)
      }
      var domainColumnIndex = domainColumns[columnRole$$0], serieColumnStructure = {type:serieTypeInferenceFunction(serieIndex), dataType:columnType, domainIndex:domainColumnIndex, columns:{}};
      serieColumnStructure.columns[columnRole$$0] = [columnIndex];
      seriesColumnStructure.push(serieColumnStructure);
      columnRoleInfo.push({domainIndex:domainColumnIndex, role:columnRole$$0, roleIndex:0, serieIndex:serieIndex})
    }
  }else {
    if(chartType === gviz.canviz.Options.ChartType.FUNCTION) {
      for(var currentUpdatedDescription = null, currentIndex = null, remainingDataColumns = 0, i = 0;i < data.getNumberOfColumns();++i) {
        columnType = data.getColumnType(i);
        columnRole$$0 = data.getColumnProperty(i, "role") || (0 === i ? gviz.canviz.ColumnRole.DOMAIN : gviz.canviz.ColumnRole.DATA);
        if(0 === i && columnRole$$0 !== gviz.canviz.ColumnRole.DOMAIN) {
          throw Error("First column must be a " + gviz.canviz.ColumnRole.DOMAIN + " column");
        }
        if(columnRole$$0 === gviz.canviz.ColumnRole.DOMAIN) {
          if(0 < remainingDataColumns) {
            throw Error("Unexpected " + gviz.canviz.ColumnRole.DOMAIN + " column (column #" + i + ")");
          }
          currentUpdatedDescription = {columns:{}, dataType:columnType};
          currentIndex = {serieIndex:null, domainIndex:domainsColumnStructure.length};
          domainsColumnStructure.push(currentUpdatedDescription)
        }
        if(0 === remainingDataColumns && (columnRole$$0 === gviz.canviz.ColumnRole.DATA || columnRole$$0 === gviz.canviz.ColumnRole.DIFF_OLD_DATA)) {
          var newSerieIndex = seriesColumnStructure.length, serieType = serieTypeInferenceFunction(newSerieIndex), currentUpdatedDescription = {type:serieType, dataType:columnType, columns:{}}, currentIndex = {serieIndex:newSerieIndex, domainIndex:null};
          seriesColumnStructure.push(currentUpdatedDescription);
          remainingDataColumns = serieType === gviz.canviz.Options.SerieType.CANDLESTICKS ? 4 : columnRole$$0 === gviz.canviz.ColumnRole.DIFF_OLD_DATA ? 2 : 1
        }
        if(columnRole$$0 === gviz.canviz.ColumnRole.DATA || columnRole$$0 === gviz.canviz.ColumnRole.DIFF_OLD_DATA) {
          if(remainingDataColumns--, columnType !== currentUpdatedDescription.dataType) {
            throw Error("All data columns of the same series must be of the same data type");
          }
        }
        if(columnRole$$0 === gviz.canviz.ColumnRole.TOOLTIP && currentUpdatedDescription.columns[columnRole$$0]) {
          throw Error("Only one data column with role 'tooltip' per series is allowed");
        }
        currentUpdatedDescription.columns[columnRole$$0] = currentUpdatedDescription.columns[columnRole$$0] || [];
        columnRoleInfo.push({serieIndex:currentIndex.serieIndex, domainIndex:currentIndex.domainIndex, role:columnRole$$0, roleIndex:currentUpdatedDescription.columns[columnRole$$0].length});
        currentUpdatedDescription.columns[columnRole$$0].push(i)
      }
      if(0 < remainingDataColumns) {
        throw Error("Last serie does not have enough data columns (missing " + remainingDataColumns + ")");
      }
      for(var currentDomain = 0, domainDataType = domainsColumnStructure[0].dataType, i = 0;i < seriesColumnStructure.length;++i) {
        if(domainsColumnStructure.length <= currentDomain) {
          throw Error("Serie #" + i + " does not have a " + gviz.canviz.ColumnRole.DOMAIN + " column.");
        }
        var nextColumnStructure = domainsColumnStructure[currentDomain + 1], dataColumns = seriesColumnStructure[i].columns[gviz.canviz.ColumnRole.DIFF_OLD_DATA] || seriesColumnStructure[i].columns[gviz.canviz.ColumnRole.DATA];
        if(nextColumnStructure && nextColumnStructure.columns[gviz.canviz.ColumnRole.DOMAIN][0] <= dataColumns[0] && (++currentDomain, domainDataType !== domainsColumnStructure[currentDomain].dataType)) {
          throw Error("All domains must be of the same data type");
        }
        seriesColumnStructure[i].domainIndex = currentDomain
      }
    }
  }
  return{seriesColumnStructure:seriesColumnStructure, domainsColumnStructure:domainsColumnStructure, domainDataType:domainDataType, columnRoleInfo:columnRoleInfo}
};
gviz.canviz.AxisChartDefiner.prototype.serieHasOldData_ = function(serieStructure) {
  var oldDataColumns = serieStructure.columns[gviz.canviz.ColumnRole.DIFF_OLD_DATA];
  return goog.isDefAndNotNull(oldDataColumns) && 0 < oldDataColumns.length
};
gviz.canviz.AxisChartDefiner.prototype.createSerieDefinition_ = function(serieIndex, serieStructure) {
  var serieType = serieStructure.type, columns = serieStructure.columns, domainIndex = serieStructure.domainIndex, options = this.options_, optionPrefix = "series." + serieIndex + ".", dataColumns = columns[gviz.canviz.ColumnRole.DATA] || columns[gviz.canviz.ColumnRole.DIFF_OLD_DATA], dataTableIdx = this.dataView_.getTableColumnIndex(dataColumns[0]), title = this.dataView_.getColumnLabel(dataColumns[0]) || "", defaultLineWidth = serieType == gviz.canviz.Options.SerieType.SCATTER ? 0 : gviz.canviz.Options.DEFAULT_LINE_WIDTH, 
  defaultPointSize = serieType == gviz.canviz.Options.SerieType.SCATTER ? gviz.canviz.Options.DEFAULT_POINT_SIZE_FOR_SCATTER : 0, pointSize = options.inferNonNegativeNumberValue([optionPrefix + "pointSize", "pointSize"], defaultPointSize), visiblePoints = serieType == gviz.canviz.Options.SerieType.LINE || serieType == gviz.canviz.Options.SerieType.AREA || serieType == gviz.canviz.Options.SerieType.SCATTER ? 0 < pointSize : !0;
  0 == pointSize && (pointSize = serieType == gviz.canviz.Options.SerieType.SCATTER ? gviz.canviz.Options.DEFAULT_POINT_SIZE_FOR_SCATTER : gviz.canviz.Options.DEFAULT_POINT_SIZE_FOR_LINE);
  var pointRadius = pointSize / 2;
  0 < pointRadius && (pointRadius += 1);
  var serieColorIndex;
  serieColorIndex = this.chartDef_.isDiff && serieType == gviz.canviz.Options.SerieType.SCATTER ? Math.floor(serieIndex / 2) : serieIndex;
  var rawColor = options.inferValue(optionPrefix + "color", this.colors_[serieColorIndex % this.colors_.length]), color = gviz.canviz.Theme.toStandardColor(rawColor), areaBrush = null;
  if(serieType == gviz.canviz.Options.SerieType.AREA || serieType == gviz.canviz.Options.SerieType.STEPPED_AREA) {
    var areaOpacity = options.inferRatioNumberValue([optionPrefix + "areaOpacity", "areaOpacity"]), areaBrush = gviz.graphics.Brush.createFillBrush(color.color, areaOpacity)
  }
  var candlestick = null;
  if(serieType == gviz.canviz.Options.SerieType.CANDLESTICKS) {
    var filledBrush = new gviz.graphics.Brush({stroke:color.color, strokeWidth:2, fill:color.color}), hollowBrush = new gviz.graphics.Brush({stroke:color.color, strokeWidth:2, fill:"#fff"}), hollowIsRising = options.inferBooleanValue("candlestick.hollowIsRising"), defaultRisingBrush = hollowIsRising ? hollowBrush : filledBrush, defaultFallingBrush = hollowIsRising ? filledBrush : hollowBrush, candlestick = {risingBrush:options.inferBrushValue([optionPrefix + "candlestick.risingColor", "candlestick.risingColor"], 
    defaultRisingBrush), fallingBrush:options.inferBrushValue([optionPrefix + "candlestick.fallingColor", "candlestick.fallingColor"], defaultFallingBrush)}
  }
  var lineWidth = options.inferNonNegativeNumberValue([optionPrefix + "lineWidth", "lineWidth"], defaultLineWidth), lineBrush = gviz.graphics.Brush.createStrokeBrush(color.color, lineWidth), dataOpacity = options.inferNonNegativeNumberValue([optionPrefix + "dataOpacity", "dataOpacity"], 1), visibleInLegend = null;
  if(this.chartDef_.isDiff && serieType === gviz.canviz.Options.SerieType.SCATTER) {
    var isOldDataSerie = this.serieHasOldData_(serieStructure), dataOpacity = isOldDataSerie ? this.options_.inferValue("diff.oldData.opacity", gviz.canviz.Options.DEFAULT_DIFF_OLD_DATA_OPACITY) : this.options_.inferValue("diff.newData.opacity", gviz.canviz.Options.DEFAULT_DIFF_NEW_DATA_OPACITY);
    isOldDataSerie && (visibleInLegend = !1)
  }
  var pointBrush = serieType == gviz.canviz.Options.SerieType.STEPPED_AREA ? areaBrush : gviz.graphics.Brush.createFillBrush(color.color, dataOpacity);
  if(this.chartDef_.isDiff) {
    if(serieType === gviz.canviz.Options.SerieType.BARS) {
      var diffBgRawColor = options.inferValue("diff.oldData.color", gviz.canviz.Options.DEFAULT_DIFF_SERIES_BACKGROUND_COLOR), diffBgColor = gviz.canviz.Theme.toStandardColor(diffBgRawColor), diff = {background:{pointBrush:gviz.graphics.Brush.createFillBrush(diffBgColor.color, dataOpacity)}}
    }else {
      serieType === gviz.canviz.Options.SerieType.SCATTER && this.serieHasOldData_(serieStructure) && (visiblePoints = !1)
    }
  }
  var intervals = this.getIntervalDefinitions_(columns, options, optionPrefix, color);
  return{id:this.dataView_.getColumnId(dataColumns[0]), title:title, dataType:serieStructure.dataType, isVisible:!0, dataTableIdx:dataTableIdx, columns:columns, domainIndex:domainIndex, intervals:intervals, color:color, pointBrush:pointBrush, lineBrush:lineBrush, diff:diff, areaBrush:areaBrush, candlestick:candlestick, type:serieType, zOrder:options.inferNumberValue(optionPrefix + "zOrder", 0), lineWidth:lineWidth, pointRadius:pointRadius, pointSensitivityAreaRadius:gviz.canviz.Options.DEFAULT_POINT_SENSITIVITY_AREA_RADIUS, 
  curveType:options.inferEnumValue([optionPrefix + "curveType", "curveType"], gviz.canviz.Options.CurveType, gviz.canviz.Options.CurveType.NONE), smoothingFactor:options.inferNonNegativeNumberValue([optionPrefix + "smoothingFactor", "smoothingFactor"], 1), visiblePoints:visiblePoints, points:[], controlPoints:[], targetAxisIndex:options.inferNonNegativeNumberValue([optionPrefix + "targetAxisIndex", "targetAxisIndex"], 0), visibleInLegend:goog.isDefAndNotNull(visibleInLegend) ? visibleInLegend : options.inferBooleanValue(optionPrefix + 
  "visibleInLegend", !0), labelInLegend:options.inferStringValue(optionPrefix + "labelInLegend", title)}
};
gviz.canviz.AxisChartDefiner.prototype.getIntervalDefinitions_ = function(columns, options, optionPrefix, color) {
  var intervalColumns = columns[gviz.canviz.ColumnRole.INTERVAL];
  if(!intervalColumns) {
    return null
  }
  for(var intervals = {bars:[], sticks:[], boxes:[], points:[], areas:[], lines:[], settings:{}}, columnsOfInterval = {}, optionNamesOfIntervalOption = function(intervalName, optionName) {
    return[optionPrefix + "interval." + intervalName + "." + optionName, optionPrefix + "intervals." + optionName, "interval." + intervalName + "." + optionName, "intervals." + optionName]
  }, optionNamesOfIntervalOrGlobalOption = function(intervalName, optionName) {
    var names = optionNamesOfIntervalOption(intervalName, optionName);
    return names.concat([optionPrefix + optionName, optionName])
  }, i = 0;i < intervalColumns.length;i++) {
    var columnIndex = intervalColumns[i], intervalName = this.dataView_.getColumnId(columnIndex) || this.dataView_.getColumnLabel(columnIndex) || "default", intervalStyle = options.inferOptionalEnumValue(optionNamesOfIntervalOption(intervalName, "style"), gviz.canviz.Options.IntervalStyle);
    switch(intervalStyle) {
      case gviz.canviz.Options.IntervalStyle.BARS:
        intervals.bars.push(columnIndex);
        break;
      case gviz.canviz.Options.IntervalStyle.STICKS:
        intervals.sticks.push(columnIndex);
        break;
      case gviz.canviz.Options.IntervalStyle.BOXES:
        intervals.boxes.push(columnIndex);
        break;
      case gviz.canviz.Options.IntervalStyle.POINTS:
        intervals.points.push(columnIndex);
        break;
      case gviz.canviz.Options.IntervalStyle.AREA:
        intervals.areas.push(columnIndex);
        break;
      case gviz.canviz.Options.IntervalStyle.LINE:
        intervals.lines.push(columnIndex);
        break;
      case gviz.canviz.Options.IntervalStyle.NONE:
        break;
      default:
        throw Error("Invalid interval style: " + intervalStyle);
    }
    intervalName in columnsOfInterval ? columnsOfInterval[intervalName].push(columnIndex) : columnsOfInterval[intervalName] = [columnIndex]
  }
  1 < intervals.bars.length && 0 == intervals.sticks.length && (intervals.sticks = [intervals.bars[0], intervals.bars[intervals.bars.length - 1]]);
  if(0 != intervals.sticks.length % 2) {
    throw Error("Stick-intervals must be defined by an even number of columns");
  }
  if(0 != intervals.areas.length % 2) {
    throw Error("Area-intervals must be defined by an even number of columns");
  }
  for(intervalName in columnsOfInterval) {
    for(var intervalLineWidth = options.inferNonNegativeNumberValue(optionNamesOfIntervalOption(intervalName, "lineWidth")), intervalFillOpacity = options.inferRatioNumberValue(optionNamesOfIntervalOption(intervalName, "fillOpacity")), intervalColor = options.inferExtendedColorValue(optionNamesOfIntervalOption(intervalName, "color"), goog.object.getValues(gviz.canviz.Options.SeriesRelativeColor), ""), intervalColor = gviz.canviz.AxisChartDefiner.resolveSerieRelativeColor_(intervalColor, color), intervalBrush = 
    new gviz.graphics.Brush({stroke:intervalColor, fill:intervalColor, fillOpacity:intervalFillOpacity, strokeWidth:intervalLineWidth}), intervalBarWidth = options.inferNonNegativeNumberValue(optionNamesOfIntervalOption(intervalName, "barWidth")), intervalShortBarWidth = options.inferNonNegativeNumberValue(optionNamesOfIntervalOption(intervalName, "shortBarWidth")), intervalBoxWidth = options.inferNonNegativeNumberValue(optionNamesOfIntervalOption(intervalName, "boxWidth")), intervalPointSize = options.inferNonNegativeNumberValue(optionNamesOfIntervalOption(intervalName, 
    "pointSize")), intervalStyle = options.inferOptionalEnumValue(optionNamesOfIntervalOption(intervalName, "style"), gviz.canviz.Options.IntervalStyle), interpolateNulls = options.inferBooleanValue(optionNamesOfIntervalOrGlobalOption(intervalName, "interpolateNulls")), curveType = options.inferEnumValue(optionNamesOfIntervalOrGlobalOption(intervalName, "curveType"), gviz.canviz.Options.CurveType, gviz.canviz.Options.CurveType.NONE), smoothingFactor = options.inferNonNegativeNumberValue(optionNamesOfIntervalOrGlobalOption(intervalName, 
    "smoothingFactor"), 1), intervalSettings = {style:intervalStyle, brush:intervalBrush, barWidth:intervalBarWidth, shortBarWidth:intervalShortBarWidth, boxWidth:intervalBoxWidth, pointSize:intervalPointSize, interpolateNulls:interpolateNulls, curveType:curveType, smoothingFactor:smoothingFactor}, columnIndices = columnsOfInterval[intervalName], i = 0;i < columnIndices.length;++i) {
      columnIndex = columnIndices[i], intervals.settings[columnIndex] = intervalSettings
    }
  }
  return intervals
};
gviz.canviz.AxisChartDefiner.prototype.createAxes_ = function() {
  var chartDef = this.chartDef_;
  switch(chartDef.chartType) {
    case gviz.canviz.Options.ChartType.FUNCTION:
    ;
    case gviz.canviz.Options.ChartType.HISTOGRAM:
      chartDef.orientation = this.options_.inferEnumValue("orientation", gviz.canviz.Options.Orientation, "");
      if(!chartDef.orientation) {
        throw Error("Unspecified orientation.");
      }
      this.targetAxisDefiners_ = {};
      this.hAxisDefiners_ = {};
      this.vAxisDefiners_ = {};
      var targetAxisCtor, targetAxisChartDefField, domainAxisCtor, domainAxisChartDefField;
      switch(chartDef.orientation) {
        case gviz.canviz.Options.Orientation.HORIZONTAL:
          domainAxisCtor = gviz.canviz.HorizontalAxisDefiner;
          domainAxisChartDefField = this.hAxisDefiners_;
          targetAxisCtor = gviz.canviz.VerticalAxisDefiner;
          targetAxisChartDefField = this.vAxisDefiners_;
          break;
        case gviz.canviz.Options.Orientation.VERTICAL:
          domainAxisCtor = gviz.canviz.VerticalAxisDefiner, domainAxisChartDefField = this.vAxisDefiners_, targetAxisCtor = gviz.canviz.HorizontalAxisDefiner, targetAxisChartDefField = this.hAxisDefiners_
      }
      for(var targetAxisIndices = this.targetAxisIndices_.getValues(), i = 0;i < targetAxisIndices.length;++i) {
        var targetAxisIndex = targetAxisIndices[i], targetAxisDefiner = new targetAxisCtor(chartDef, this.options_, ["targetAxes." + targetAxisIndex, "targetAxis"], targetAxisIndex, gviz.canviz.Options.AxisType.VALUE, gviz.canviz.Options.ViewWindowMode.PRETTY);
        if(targetAxisDefiner.type != gviz.canviz.Options.AxisType.VALUE) {
          throw Error("Target-axis must be of type " + gviz.canviz.Options.AxisType.VALUE);
        }
        this.targetAxisDefiners_[targetAxisIndex] = targetAxisDefiner;
        targetAxisChartDefField[targetAxisIndex] = targetAxisDefiner
      }
      this.domainAxisDefiner_ = new domainAxisCtor(chartDef, this.options_, ["domainAxis"], 0, this.getDefaultDomainAxisType_(), gviz.canviz.Options.ViewWindowMode.MAXIMIZED);
      domainAxisChartDefField[0] = this.domainAxisDefiner_;
      break;
    case gviz.canviz.Options.ChartType.SCATTER:
    ;
    case gviz.canviz.Options.ChartType.BUBBLE:
      this.hAxisDefiners_ = {0:new gviz.canviz.HorizontalAxisDefiner(chartDef, this.options_, [], 0, gviz.canviz.Options.AxisType.VALUE, gviz.canviz.Options.ViewWindowMode.PRETTY)}, this.vAxisDefiners_ = {0:new gviz.canviz.VerticalAxisDefiner(chartDef, this.options_, [], 0, gviz.canviz.Options.AxisType.VALUE, gviz.canviz.Options.ViewWindowMode.PRETTY)}
  }
  this.initScales_()
};
gviz.canviz.AxisChartDefiner.prototype.getDefaultDomainAxisType_ = function() {
  if("string" == this.dataView_.getColumnType(0)) {
    var dominantSerieType = this.findDominantSerieType_();
    return this.getRecommendedDomainAxisTypeForSerieType_(dominantSerieType)
  }
  return gviz.canviz.Options.AxisType.VALUE
};
gviz.canviz.AxisChartDefiner.prototype.findDominantSerieType_ = function() {
  var serieTypeHierarchy = [gviz.canviz.Options.SerieType.LINE, gviz.canviz.Options.SerieType.AREA, gviz.canviz.Options.SerieType.STEPPED_AREA, gviz.canviz.Options.SerieType.BARS, gviz.canviz.Options.SerieType.CANDLESTICKS], serieTypePriorities = {};
  goog.array.forEach(serieTypeHierarchy, function(serieType, i) {
    serieTypePriorities[serieType] = i
  });
  var highest = goog.array.reduce(this.chartDef_.series, function(highest, serie) {
    return Math.max(highest, serieTypePriorities[serie.type])
  }, 0);
  return serieTypeHierarchy[highest]
};
gviz.canviz.AxisChartDefiner.prototype.getRecommendedDomainAxisTypeForSerieType_ = function(serieType) {
  switch(serieType) {
    case gviz.canviz.Options.SerieType.AREA:
      return 1 < this.chartDef_.categories.length ? gviz.canviz.Options.AxisType.CATEGORY_POINT : gviz.canviz.Options.AxisType.CATEGORY;
    case gviz.canviz.Options.SerieType.LINE:
    ;
    case gviz.canviz.Options.SerieType.BARS:
    ;
    case gviz.canviz.Options.SerieType.STEPPED_AREA:
    ;
    case gviz.canviz.Options.SerieType.CANDLESTICKS:
      return gviz.canviz.Options.AxisType.CATEGORY
  }
  goog.asserts.fail('Invalid serie type "' + serieType + '"');
  return null
};
gviz.canviz.AxisChartDefiner.prototype.initScales_ = function() {
  var chartDef = this.chartDef_;
  switch(chartDef.chartType) {
    case gviz.canviz.Options.ChartType.SCATTER:
    ;
    case gviz.canviz.Options.ChartType.BUBBLE:
      if("string" == chartDef.domainDataType) {
        throw Error("X values column cannot be of type string");
      }
      var targetDataType = chartDef.targetAxisToDataType[0];
      if("string" == targetDataType) {
        throw Error("Data column(s) cannot be of type string");
      }
      var hAxis = this.hAxisDefiners_[0], vAxis = this.vAxisDefiners_[0];
      if(hAxis.type != gviz.canviz.Options.AxisType.VALUE) {
        throw Error("The x-axis must be of type " + gviz.canviz.Options.AxisType.VALUE);
      }
      hAxis.initScale(chartDef.domainDataType, this.options_);
      if(vAxis.type != gviz.canviz.Options.AxisType.VALUE) {
        throw Error("The y-axis must be of type " + gviz.canviz.Options.AxisType.VALUE);
      }
      vAxis.initScale(targetDataType, this.options_);
      break;
    case gviz.canviz.Options.ChartType.FUNCTION:
    ;
    case gviz.canviz.Options.ChartType.HISTOGRAM:
      var domainAxis = this.domainAxisDefiner_;
      if(domainAxis.type == gviz.canviz.Options.AxisType.VALUE) {
        if("string" == chartDef.domainDataType) {
          throw Error("Domain column cannot be of type string, it should be the X values on a continuous domain axis");
        }
        domainAxis.initScale(chartDef.domainDataType, this.options_)
      }
      goog.object.forEach(this.targetAxisDefiners_, function(axisDefiner, idx) {
        var dataType = chartDef.targetAxisToDataType[idx];
        if("string" == dataType) {
          throw Error("Data column(s) for axis #" + idx + " cannot be of type string");
        }
        axisDefiner.initScale(dataType, this.options_);
        var axisSTC = this.targetAxisSerieTypeCount_[idx], serieType = gviz.canviz.Options.SerieType;
        goog.isNull(axisDefiner.userBaseline) && (0 < axisSTC[serieType.BARS] || 0 < axisSTC[serieType.AREA] || 0 < axisSTC[serieType.STEPPED_AREA]) && (axisDefiner.userBaseline = 0)
      }, this)
  }
  goog.object.forEach(this.hAxisDefiners_, function(axisDefiner) {
    axisDefiner.validateHasScale()
  });
  goog.object.forEach(this.vAxisDefiners_, function(axisDefiner) {
    axisDefiner.validateHasScale()
  })
};
gviz.canviz.AxisChartDefiner.prototype.calcGaps_ = function() {
  var chartDef = this.chartDef_, domainAxis = this.domainAxisDefiner_;
  goog.asserts.assert(chartDef.chartType == gviz.canviz.Options.ChartType.FUNCTION);
  goog.asserts.assert(domainAxis.type == gviz.canviz.Options.AxisType.VALUE);
  if(goog.isNull(this.findGapColumn_())) {
    return[]
  }
  var domainRelatedColumns = chartDef.domainsColumnStructure[0].columns, domainColumns = domainRelatedColumns[gviz.canviz.ColumnRole.DOMAIN] || [];
  goog.asserts.assert(!goog.array.isEmpty(domainColumns));
  for(var domainColumn = domainColumns[0], gaps = [], prevDomainValue = null, dataView = this.dataView_, i = 0;i < dataView.getNumberOfRows();i++) {
    var domainValue = dataView.getValue(i, domainColumn), gapValue = this.calcGap_(i);
    if(!goog.isNull(prevDomainValue) && goog.isDefAndNotNull(gapValue)) {
      if(0 > gapValue) {
        throw Error("Invalid gap value (" + gapValue + ") in data row #" + i + ". Gap value must be non-negative.");
      }
      var gap = {startValue:prevDomainValue, endValue:domainValue, gapValue:gapValue};
      gaps.push(gap)
    }
    prevDomainValue = domainValue
  }
  return gaps
};
gviz.canviz.AxisChartDefiner.prototype.hasLeftAxis_ = function() {
  return goog.isDefAndNotNull(this.vAxisDefiners_[0])
};
gviz.canviz.AxisChartDefiner.prototype.hasRightAxis_ = function() {
  return goog.isDefAndNotNull(this.vAxisDefiners_[1])
};
gviz.canviz.AxisChartDefiner.prototype.getDefaultLegendPosition = function() {
  return this.bubbleChartDefiner_ && this.bubbleChartDefiner_.isContinuousColorMode() ? null : this.hasLeftAxis_() && this.hasRightAxis_() ? gviz.canviz.Options.LegendPosition.TOP : this.hasRightAxis_() ? gviz.canviz.Options.LegendPosition.LEFT : gviz.canviz.Options.LegendPosition.RIGHT
};
gviz.canviz.AxisChartDefiner.prototype.getDefaultColorBarPosition = function() {
  return this.bubbleChartDefiner_ && this.bubbleChartDefiner_.isContinuousColorMode() ? gviz.canviz.Options.ColorBarPosition.TOP : null
};
gviz.canviz.AxisChartDefiner.prototype.getFirstDataColumnIndex_ = function(serie) {
  var dataColumns = serie.columns[gviz.canviz.ColumnRole.DATA];
  if(dataColumns) {
    return dataColumns[0]
  }
  var oldDataColumns = serie.columns[gviz.canviz.ColumnRole.DIFF_OLD_DATA];
  goog.asserts.assert(oldDataColumns && 0 < oldDataColumns.length);
  return oldDataColumns[0]
};
gviz.canviz.AxisChartDefiner.prototype.findValuesClosestToZeroFunctionChart_ = function() {
  for(var chartDef = this.chartDef_, dataView = this.dataView_, domainAxis = this.domainAxisDefiner_, i = 0;i < chartDef.categories.length;i++) {
    for(var j = 0;j < chartDef.series.length;j++) {
      var serie = chartDef.series[j], targetAxisIndex = serie.targetAxisIndex, targetAxis = this.targetAxisDefiners_[targetAxisIndex], columnIdx = this.getFirstDataColumnIndex_(serie), targetValue = dataView.getValue(i, columnIdx), numericTargetValue = targetAxis.valueScale.valueToUnscaledNumber(targetValue);
      goog.isDefAndNotNull(numericTargetValue) && targetAxis.markClosestValueToZero(numericTargetValue)
    }
    if(domainAxis.type == gviz.canviz.Options.AxisType.VALUE) {
      var domainValue = dataView.getValue(i, 0), numericDomainValue = domainAxis.valueScale.valueToUnscaledNumber(domainValue);
      domainAxis.markClosestValueToZero(numericDomainValue)
    }
  }
};
gviz.canviz.AxisChartDefiner.prototype.findValuesClosestToZeroScatter_ = function() {
  for(var chartDef = this.chartDef_, dataView = this.dataView_, hAxis = this.hAxisDefiners_[0], vAxis = this.vAxisDefiners_[0], i = 0;i < dataView.getNumberOfRows();i++) {
    for(var j = 0;j < chartDef.series.length;j++) {
      var serie = chartDef.series[j], domainIndex = serie.domainIndex, columnIdxX = chartDef.domainsColumnStructure[domainIndex].columns[gviz.canviz.ColumnRole.DOMAIN][0], columnIdxY = this.getFirstDataColumnIndex_(serie), xValue = dataView.getValue(i, columnIdxX), yValue = dataView.getValue(i, columnIdxY), xNumeric = hAxis.valueScale.valueToUnscaledNumber(xValue), yNumeric = vAxis.valueScale.valueToUnscaledNumber(yValue);
      goog.isDefAndNotNull(xNumeric) && hAxis.markClosestValueToZero(xNumeric);
      goog.isDefAndNotNull(yNumeric) && vAxis.markClosestValueToZero(yNumeric)
    }
  }
};
gviz.canviz.AxisChartDefiner.prototype.calcLayout = function(legendDefiner, colorBarDefiner) {
  var chartDef = this.chartDef_;
  this.legendDefiner_ = legendDefiner;
  this.colorBarDefiner_ = colorBarDefiner;
  this.calcTopAxisChartAreaLayout_();
  (chartDef.isStacked || chartDef.isDiff || chartDef.chartType === gviz.canviz.Options.ChartType.HISTOGRAM) && goog.object.forEach(this.targetAxisDefiners_, function(targetAxisDefiner) {
    targetAxisDefiner.extendRangeToIncludeNumber(0)
  });
  if(chartDef.chartType === gviz.canviz.Options.ChartType.FUNCTION || chartDef.chartType === gviz.canviz.Options.ChartType.HISTOGRAM) {
    this.findValuesClosestToZeroFunctionChart_(), this.domainAxisDefiner_.type == gviz.canviz.Options.AxisType.VALUE && this.domainAxisDefiner_.initPreCalculator(this.calcGaps_()), this.domainAxisDefiner_.initViewWindow(this.options_), goog.object.forEach(this.targetAxisDefiners_, function(targetAxisDefiner) {
      targetAxisDefiner.initPreCalculator();
      targetAxisDefiner.initViewWindow(this.options_)
    }, this)
  }else {
    var hAxisDefiner = this.hAxisDefiners_[0], vAxisDefiner = this.vAxisDefiners_[0];
    chartDef.chartType == gviz.canviz.Options.ChartType.BUBBLE ? this.bubbleChartDefiner_.findValuesClosestToZero(hAxisDefiner, vAxisDefiner) : chartDef.chartType == gviz.canviz.Options.ChartType.SCATTER && this.findValuesClosestToZeroScatter_();
    hAxisDefiner.initPreCalculator();
    hAxisDefiner.initViewWindow(this.options_);
    vAxisDefiner.initPreCalculator();
    vAxisDefiner.initViewWindow(this.options_)
  }
  chartDef.serieTypeCount[gviz.canviz.Options.SerieType.BARS] && this.calcBarLikeLayout_(gviz.canviz.Options.SerieType.BARS);
  if(chartDef.serieTypeCount[gviz.canviz.Options.SerieType.STEPPED_AREA]) {
    if(this.domainAxisDefiner_.type == gviz.canviz.Options.AxisType.VALUE) {
      throw Error("Stepped area series with value domain axis is not supported.");
    }
    this.calcBarLikeLayout_(gviz.canviz.Options.SerieType.STEPPED_AREA)
  }
  chartDef.serieTypeCount[gviz.canviz.Options.SerieType.CANDLESTICKS] && this.calcCandlesticksLayout_();
  chartDef.serieTypeCount[gviz.canviz.Options.SerieType.LINE] && (this.calcLinesLayout_(), this.calculateControlPoints_());
  chartDef.serieTypeCount[gviz.canviz.Options.SerieType.AREA] && this.calcAreaLayout_();
  chartDef.serieTypeCount[gviz.canviz.Options.SerieType.SCATTER] && (this.calcScatterLayout_(), this.calculateControlPoints_());
  chartDef.serieTypeCount[gviz.canviz.Options.SerieType.BUBBLES] && (goog.asserts.assert(goog.isDefAndNotNull(this.hAxisDefiners_) && this.hAxisDefiners_[0]), goog.asserts.assert(goog.isDefAndNotNull(this.vAxisDefiners_) && this.vAxisDefiners_[0]), goog.asserts.assert(this.bubbleChartDefiner_), this.bubbleChartDefiner_.calcBubblesLayout(this.hAxisDefiners_[0], this.vAxisDefiners_[0], colorBarDefiner));
  (chartDef.serieTypeCount[gviz.canviz.Options.SerieType.BARS] || chartDef.serieTypeCount[gviz.canviz.Options.SerieType.CANDLESTICKS]) && this.domainAxisDefiner_ && this.domainAxisDefiner_.type == gviz.canviz.Options.AxisType.VALUE && this.expandMinMaxValuesForBarLikeCharts_();
  chartDef.hAxes = goog.object.map(this.hAxisDefiners_, function(definer) {
    return definer.calcAxisDefinition(chartDef, legendDefiner, colorBarDefiner)
  });
  chartDef.vAxes = goog.object.map(this.vAxisDefiners_, function(definer) {
    return definer.calcAxisDefinition(chartDef, legendDefiner, colorBarDefiner)
  });
  this.calcSubDivisionDefinition_();
  this.calcCategorySensitivityAreas_();
  this.positionNonScaledElements_();
  (chartDef.chartType === gviz.canviz.Options.ChartType.FUNCTION && chartDef.orientation === gviz.canviz.Options.Orientation.HORIZONTAL || chartDef.serieTypeCount[gviz.canviz.Options.SerieType.BARS]) && this.positionAnnotations_();
  var legendPosition = this.legendDefiner_.getPosition(), sideMargin = this.legendDefiner_.getTextStyle().fontSize, legendArea = null;
  legendPosition != gviz.canviz.Options.LegendPosition.RIGHT && legendPosition != gviz.canviz.Options.LegendPosition.LABELED || this.hasRightAxis_() || (legendArea = new goog.math.Box(chartDef.chartArea.top, chartDef.width - sideMargin, chartDef.chartArea.bottom, chartDef.chartArea.right + sideMargin));
  legendPosition != gviz.canviz.Options.LegendPosition.LEFT || this.hasLeftAxis_() || (legendArea = new goog.math.Box(chartDef.chartArea.top, chartDef.chartArea.left - sideMargin, chartDef.chartArea.bottom, sideMargin));
  legendArea && legendArea.right >= legendArea.left && this.legendDefiner_.setArea(legendArea);
  this.resolveTextCollisions_();
  this.bubbleChartDefiner_ || (this.initTrendlines_(this.dataView_), this.initLegend_(), this.calcTrendlinesLayout())
};
gviz.canviz.AxisChartDefiner.prototype.calcTopAxisChartAreaLayout_ = function() {
  var chartDef = this.chartDef_, measureFunction = this.textMeasureFunction_, titleFontSize = chartDef.title.textStyle.fontSize, axisTitleTextStyle = goog.object.getAnyValue(this.hAxisDefiners_).title.textStyle, axisTitleFontSize = axisTitleTextStyle.fontSize, maxTitleFontSize = Math.max(titleFontSize, axisTitleFontSize), legendFontSize = this.legendDefiner_.getTextStyle().fontSize, legendPosition = this.legendDefiner_.getPosition(), colorBarFontSize = this.colorBarDefiner_.getTextStyle().fontSize, 
  colorBarPosition = this.colorBarDefiner_.getPosition(), titleText = chartDef.titlePosition == gviz.canviz.Options.InOutPosition.INSIDE ? chartDef.title.text : "", firstAxisTitleText = "", secondAxisTitleText = "";
  if(chartDef.axisTitlesPosition == gviz.canviz.Options.InOutPosition.INSIDE) {
    var getJointAxesTitle = function(axisDefiners) {
      var axisIndices = goog.object.getKeys(axisDefiners);
      goog.array.sort(axisIndices);
      var titles = goog.array.map(axisIndices, function(idx) {
        var axisDefiner = axisDefiners[idx];
        return axisDefiner.title.text
      }), nonEmptyTitles = goog.array.filter(titles, function(title) {
        return"" != title
      });
      return nonEmptyTitles.join(", ")
    };
    switch(chartDef.chartType) {
      case gviz.canviz.Options.ChartType.SCATTER:
      ;
      case gviz.canviz.Options.ChartType.BUBBLE:
        firstAxisTitleText = getJointAxesTitle(this.hAxisDefiners_);
        secondAxisTitleText = getJointAxesTitle(this.vAxisDefiners_);
        break;
      case gviz.canviz.Options.ChartType.FUNCTION:
        firstAxisTitleText = getJointAxesTitle({0:this.domainAxisDefiner_}), secondAxisTitleText = getJointAxesTitle(this.targetAxisDefiners_)
    }
  }
  var axisTitleText;
  axisTitleText = firstAxisTitleText && secondAxisTitleText ? firstAxisTitleText + " / " + secondAxisTitleText : firstAxisTitleText ? firstAxisTitleText : secondAxisTitleText ? secondAxisTitleText : "";
  var minGap = 2, gapAboveTitle = Math.max(minGap, Math.round(maxTitleFontSize / gviz.canviz.Constants.GOLDEN_RATIO)), gapBesidesTitle = gapAboveTitle, gapAboveLegend = Math.max(minGap, Math.round(legendFontSize / gviz.canviz.Constants.GOLDEN_RATIO)), gapAboveColorBar = Math.max(minGap, Math.round(colorBarFontSize / gviz.canviz.Constants.GOLDEN_RATIO)), availableTitleWidth = chartDef.chartArea.width - 2 * gapBesidesTitle, titleLayout = gviz.canviz.textutils.calcTextLayout(measureFunction, titleText, 
  chartDef.title.textStyle, availableTitleWidth, 1), displayedTitle = 0 < titleLayout.lines.length ? titleLayout.lines[0] : "", displayedTitleWidth = measureFunction(displayedTitle, chartDef.title.textStyle).width, gapBetweenTitles = Math.round(Math.max(minGap, maxTitleFontSize * gviz.canviz.Constants.GOLDEN_RATIO)), availableAxisTitleWidth = Math.max(availableTitleWidth - displayedTitleWidth - gapBetweenTitles, 0), axisTitleLayout = gviz.canviz.textutils.calcTextLayout(measureFunction, axisTitleText, 
  axisTitleTextStyle, availableAxisTitleWidth, 1), displayedAxisTitle = 0 < axisTitleLayout.lines.length ? axisTitleLayout.lines[0] : "", keyBottomSpace = "bottom-space", keyTitle = "title", keyLegend = "legend", keyColorBar = "colorBar", items = [];
  items.push({key:keyBottomSpace, min:minGap, extra:[Infinity]});
  (displayedTitle || displayedAxisTitle) && items.push({key:keyTitle, min:maxTitleFontSize + minGap, extra:[gapAboveTitle - minGap]});
  legendPosition == gviz.canviz.Options.LegendPosition.INSIDE && items.push({key:keyLegend, min:legendFontSize + minGap, extra:[gapAboveLegend - minGap]});
  colorBarPosition == gviz.canviz.Options.ColorBarPosition.INSIDE && items.push({key:keyColorBar, min:this.colorBarDefiner_.getHeight() + minGap, extra:[gapAboveColorBar - minGap]});
  var availableRealEstate = Math.floor(chartDef.chartArea.height / 2), allocatedHeights = gviz.canviz.util.distributeRealEstateWithKeys(items, availableRealEstate), y = chartDef.chartArea.top, actualTitleLines = allocatedHeights[keyTitle] || [];
  0 < actualTitleLines.length && (y += actualTitleLines[0], displayedTitle && (chartDef.title.lines.push({text:displayedTitle, x:chartDef.chartArea.left + gapBesidesTitle, y:y, length:displayedTitleWidth}), chartDef.title.tooltip = titleLayout.needTooltip ? titleText : ""), displayedAxisTitle && (chartDef.innerAxisTitle = {text:axisTitleText, textStyle:axisTitleTextStyle, lines:[], paralAlign:gviz.graphics.TextAlign.END, perpenAlign:gviz.graphics.TextAlign.END, tooltip:axisTitleLayout.needTooltip ? 
  axisTitleText : "", anchor:null, angle:0}, chartDef.innerAxisTitle.lines.push({text:displayedAxisTitle, x:chartDef.chartArea.right - gapBesidesTitle, y:y, length:availableAxisTitleWidth})));
  var actualLegendLines = allocatedHeights[keyLegend] || [];
  if(0 < actualLegendLines.length) {
    var y = y + actualLegendLines[0], legendArea = new goog.math.Box(y - legendFontSize, chartDef.chartArea.right, y, chartDef.chartArea.left);
    this.legendDefiner_.setArea(legendArea)
  }
  var actualColorBarLines = allocatedHeights[keyColorBar] || [];
  if(0 < actualColorBarLines.length) {
    var y = y + actualColorBarLines[0], colorBarArea = new goog.math.Box(y - this.colorBarDefiner_.getHeight(), chartDef.chartArea.right, y, chartDef.chartArea.left);
    this.colorBarDefiner_.setArea(colorBarArea)
  }
};
gviz.canviz.AxisChartDefiner.prototype.calcBarLikeLayout_ = function(seriesType) {
  var chartDef = this.chartDef_;
  chartDef.isDiff ? this.calcDiffBars_(seriesType) : this.calcBars_(seriesType, chartDef.isStacked)
};
gviz.canviz.AxisChartDefiner.prototype.expandMinMaxValuesForBarLikeCharts_ = function() {
  var domainAxis = this.domainAxisDefiner_, categories = goog.array.filter(this.chartDef_.categories, function(category, i) {
    return 0 != this.calcGap_(i)
  }, this), minDistance = Infinity, previousValue;
  goog.array.forEach(categories, function(category) {
    var dataValue = category.data, numericValue = domainAxis.valueScale.valueToNumber(dataValue);
    goog.isDef(previousValue) && (minDistance = Math.min(minDistance, Math.abs(numericValue - previousValue)));
    previousValue = numericValue
  }, this);
  if(goog.math.isFiniteNumber(minDistance)) {
    var halfBarWidthNumericValue = minDistance / 2;
    domainAxis.extendRangeToIncludeNumber(domainAxis.valueScale.numericMinValue - halfBarWidthNumericValue);
    domainAxis.extendRangeToIncludeNumber(domainAxis.valueScale.numericMaxValue + halfBarWidthNumericValue)
  }
};
gviz.canviz.AxisChartDefiner.prototype.calcBars_ = function(seriesType, isStacked$$0) {
  for(var chartDef = this.chartDef_, dataView = this.dataView_, domainAxis = this.domainAxisDefiner_, isHistogram = this.chartDef_.chartType === gviz.canviz.Options.ChartType.HISTOGRAM, i = 0;i < chartDef.categories.length;i++) {
    for(var isCollapsed = 0 == this.calcGap_(i), accumulatedValues = goog.object.map(this.targetAxisDefiners_, function() {
      return[0, 0]
    }), j = 0;j < chartDef.series.length;j++) {
      var serie = chartDef.series[j];
      if(serie.type == seriesType) {
        !1 == isStacked$$0 && (accumulatedValues[serie.targetAxisIndex] = [0, 0]);
        var points = serie.points;
        if(isCollapsed) {
          points.push(null)
        }else {
          var targetAxisIndex = serie.targetAxisIndex, targetAxis = this.targetAxisDefiners_[targetAxisIndex], columnIdx = serie.columns[gviz.canviz.ColumnRole.DATA][0], value = dataView.getValue(i, columnIdx), numericValue = targetAxis.valueScale.valueToNumber(value);
          if(goog.isNull(numericValue)) {
            points.push(null)
          }else {
            var numericDomainValue = this.getNumericDomainValue_(i);
            domainAxis.extendRangeToIncludeNumber(numericDomainValue);
            var idx = 0 < numericValue ? 0 : 1, accumulated = accumulatedValues[targetAxisIndex], shouldExtendTargetAxisRange = domainAxis.isValueInViewWindow(numericDomainValue);
            shouldExtendTargetAxisRange && (isStacked$$0 ? targetAxis.extendRangeToIncludeNumber(numericValue + accumulated[idx]) : targetAxis.extendRangeToIncludeNumber(numericValue));
            isStacked$$0 || this.allocateSubDivisions_(j + 1);
            var addAndAccumulate = function(val, subdivision, fromVal, isStacked) {
              var point = {nonScaled:{division:i, subDivision:subdivision, from:fromVal, to:val + (isStacked || isHistogram ? accumulated[idx] : 0), d:numericDomainValue, intervalMarks:this.calcIntervalsLayout_(serie, i, accumulated[idx], !0)}};
              if(serie.type == gviz.canviz.Options.SerieType.STEPPED_AREA) {
                var len = points.length;
                point.nonScaled.previousTo = 0 != len && points[len - 1] ? points[len - 1].nonScaled.to : null
              }
              this.addCommonPointProperties_(point, serie, j, i);
              points.push(point);
              accumulated[idx] += val
            }, subdivision = isStacked$$0 ? 0 : j, from = isStacked$$0 || isHistogram ? accumulated[idx] : null;
            if(isHistogram) {
              for(var p = 0;p < numericValue;p++) {
                from = isStacked$$0 || isHistogram ? accumulated[idx] : null, addAndAccumulate.call(this, 1, subdivision, from, isStacked$$0)
              }
            }else {
              addAndAccumulate.call(this, numericValue, subdivision, from, isStacked$$0)
            }
          }
        }
      }
    }
  }
  isStacked$$0 || goog.object.forEach(this.targetAxisDefiners_, function(targetAxisDefiner) {
    targetAxisDefiner.expandRangeABit()
  })
};
gviz.canviz.AxisChartDefiner.prototype.calcDiffBars_ = function(seriesType) {
  for(var chartDef = this.chartDef_, dataView = this.dataView_, domainAxis = this.domainAxisDefiner_, plottedSeries = goog.array.filter(chartDef.series, function(serie) {
    return serie.type == seriesType
  }), catIndex = 0;catIndex < chartDef.categories.length;++catIndex) {
    var isCollapsed = 0 == this.calcGap_(catIndex), numericDomainValue = this.getNumericDomainValue_(catIndex);
    domainAxis.extendRangeToIncludeNumber(numericDomainValue);
    for(var shouldExtendTargetAxisRange = domainAxis.isValueInViewWindow(numericDomainValue), rolesToHandle = [gviz.canviz.ColumnRole.DIFF_OLD_DATA, gviz.canviz.ColumnRole.DATA], serieIndex = 0;serieIndex < plottedSeries.length;++serieIndex) {
      var serie$$0 = plottedSeries[serieIndex];
      if(isCollapsed) {
        serie$$0.points.push(null);
        return
      }
      for(var targetAxisIndex = serie$$0.targetAxisIndex, targetAxis = this.targetAxisDefiners_[targetAxisIndex], valueScale = targetAxis.valueScale, roleIndex = 0;roleIndex < rolesToHandle.length;++roleIndex) {
        var role = rolesToHandle[roleIndex], columnIdx = serie$$0.columns[role][0], value = dataView.getValue(catIndex, columnIdx), numericValue = valueScale.valueToNumber(value);
        if(goog.isNull(numericValue)) {
          serie$$0.points.push(null);
          return
        }
        shouldExtendTargetAxisRange && targetAxis.extendRangeToIncludeNumber(numericValue);
        this.allocateSubDivisions_(serieIndex + 1);
        var point = {brush:this.getDiffBarBrush_(serie$$0, role), nonScaled:{division:catIndex, subDivision:serieIndex, from:null, to:numericValue, d:numericDomainValue, isDiffForeground:role == gviz.canviz.ColumnRole.DATA, intervalMarks:this.calcIntervalsLayout_(serie$$0, catIndex, 0, !0)}};
        this.addCommonPointProperties_(point, serie$$0, serieIndex, catIndex);
        serie$$0.points.push(point)
      }
    }
  }
  goog.object.forEach(this.targetAxisDefiners_, function(targetAxisDefiner) {
    targetAxisDefiner.expandRangeABit()
  })
};
gviz.canviz.AxisChartDefiner.prototype.calcCandlesticksLayout_ = function() {
  var chartDef = this.chartDef_, dataView = this.dataView_, domainAxis = this.domainAxisDefiner_, plottedSeries = goog.array.filter(chartDef.series, function(serie) {
    return serie.type == gviz.canviz.Options.SerieType.CANDLESTICKS
  });
  goog.array.forEach(chartDef.categories, function(category, i) {
    var isCollapsed = 0 == this.calcGap_(i);
    goog.array.forEach(plottedSeries, function(serie, j) {
      if(isCollapsed) {
        serie.points.push(null)
      }else {
        var dataColumns = serie.columns[gviz.canviz.ColumnRole.DATA], targetAxisIndex = serie.targetAxisIndex, targetAxis = this.targetAxisDefiners_[targetAxisIndex];
        this.allocateSubDivisions_(j + 1);
        var minValue = dataView.getValue(i, dataColumns[0]), openValue = dataView.getValue(i, dataColumns[1]), closeValue = dataView.getValue(i, dataColumns[2]), maxValue = dataView.getValue(i, dataColumns[3]), numericMinValue = targetAxis.valueScale.valueToNumber(minValue), numericOpenValue = targetAxis.valueScale.valueToNumber(openValue), numericCloseValue = targetAxis.valueScale.valueToNumber(closeValue), numericMaxValue = targetAxis.valueScale.valueToNumber(maxValue);
        if(goog.isNull(numericMinValue) || goog.isNull(numericMaxValue) || goog.isNull(numericOpenValue) || goog.isNull(numericCloseValue)) {
          serie.points.push(null)
        }else {
          var numericDomainValue = this.getNumericDomainValue_(i);
          domainAxis.extendRangeToIncludeNumber(numericDomainValue);
          var inverted = numericCloseValue < numericOpenValue, shouldExtendTargetAxisRange = domainAxis.isValueInViewWindow(numericDomainValue);
          shouldExtendTargetAxisRange && (targetAxis.extendRangeToIncludeNumber(numericMinValue), targetAxis.extendRangeToIncludeNumber(numericMaxValue));
          var barBrush = this.getCandleStickBrush_(inverted, serie), point = {barBrush:barBrush, lineBrush:gviz.graphics.Brush.createFillBrush(serie.color.color), nonScaled:{division:i, subDivision:j, lineFrom:numericMinValue, lineTo:numericMaxValue, rectFrom:inverted ? numericCloseValue : numericOpenValue, rectTo:inverted ? numericOpenValue : numericCloseValue, inverted:inverted, d:numericDomainValue}};
          this.addCommonPointProperties_(point, serie, j, i);
          serie.points.push(point)
        }
      }
    }, this)
  }, this)
};
gviz.canviz.AxisChartDefiner.prototype.calcLineSerieLayout_ = function(serieIndex) {
  var chartDef = this.chartDef_, dataView = this.dataView_, domainAxis = this.domainAxisDefiner_, serie = chartDef.series[serieIndex];
  if(serie.type == gviz.canviz.Options.SerieType.LINE) {
    for(var serieCategories = serie.isVirtual ? serie.data : chartDef.categories, i = 0;i < serieCategories.length;i++) {
      var targetAxisIndex = serie.targetAxisIndex, targetAxis = this.targetAxisDefiners_[targetAxisIndex], columnIdx = serie.columns[gviz.canviz.ColumnRole.DATA][0], targetValue = serie.isVirtual ? serie.data[i][1] : dataView.getValue(i, columnIdx), numericTargetValue = targetAxis.valueScale.valueToNumber(targetValue), shouldExtendTargetAxisRange, intervalMarks;
      if(goog.isDefAndNotNull(numericTargetValue)) {
        var numericDomainValue = this.getNumericDomainValue_(i, serie);
        domainAxis.extendRangeToIncludeNumber(numericDomainValue);
        (shouldExtendTargetAxisRange = domainAxis.isValueInViewWindow(numericDomainValue) && !serie.isVirtual) && targetAxis.extendRangeToIncludeNumber(numericTargetValue);
        intervalMarks = serie.isVirtual ? null : this.calcIntervalsLayout_(serie, i, 0, shouldExtendTargetAxisRange)
      }else {
        shouldExtendTargetAxisRange = !1, intervalMarks = null
      }
      var point = {nonScaled:{division:i, subDivision:0, d:numericDomainValue, t:numericTargetValue, intervalMarks:intervalMarks}, shouldExtendTargetAxisRange:shouldExtendTargetAxisRange};
      goog.isDefAndNotNull(numericTargetValue) || (point.isNull = !0);
      this.addCommonPointProperties_(point, serie, serieIndex, i);
      serie.points.push(point)
    }
  }
};
gviz.canviz.AxisChartDefiner.prototype.calcLinesLayout_ = function() {
  for(var chartDef = this.chartDef_, j = 0;j < chartDef.series.length;j++) {
    this.calcLineSerieLayout_(j)
  }
  this.extendToIncludeLineValuesAtViewWindow_();
  this.adjustLineBrushProperties_()
};
gviz.canviz.AxisChartDefiner.prototype.extendToIncludeLineValuesAtViewWindow_ = function() {
  for(var domainAxis = this.domainAxisDefiner_, series = this.chartDef_.series, i = 0;i < series.length;i++) {
    var serie = series[i];
    if((serie.type == gviz.canviz.Options.SerieType.LINE || serie.type == gviz.canviz.Options.SerieType.AREA) && 0 != serie.lineWidth) {
      var targetAxis = this.targetAxisDefiners_[serie.targetAxisIndex], points = goog.array.map(serie.points, function(point) {
        return gviz.canviz.chartdefinitionutil.isDatumNull(point) ? null : new goog.math.Coordinate(point.nonScaled.d, point.nonScaled.t)
      }), interpolateNulls = this.chartDef_.interpolateNulls, valueAtDomainMin = gviz.canviz.util.piecewiseLinearInterpolation(points, domainAxis.getMinNumericValue(), interpolateNulls), valueAtDomainMax = gviz.canviz.util.piecewiseLinearInterpolation(points, domainAxis.getMaxNumericValue(), interpolateNulls);
      targetAxis.extendRangeToIncludeNumber(valueAtDomainMin);
      targetAxis.extendRangeToIncludeNumber(valueAtDomainMax)
    }
  }
};
gviz.canviz.AxisChartDefiner.prototype.calcAreaLayout_ = function() {
  for(var chartDef = this.chartDef_, dataView = this.dataView_, domainAxis = this.domainAxisDefiner_, i = 0;i < chartDef.categories.length;i++) {
    for(var lastValueTo = goog.object.map(this.targetAxisDefiners_, function() {
      return 0
    }), lastValueFrom = goog.object.clone(lastValueTo), accumulatedValue = goog.object.clone(lastValueTo), j = 0;j < chartDef.series.length;j++) {
      var serie = chartDef.series[j];
      if(serie.type == gviz.canviz.Options.SerieType.AREA) {
        var targetAxisIndex = serie.targetAxisIndex, targetAxis = this.targetAxisDefiners_[targetAxisIndex], bottomTo = null, bottomFrom = null, columnIdx = serie.columns[gviz.canviz.ColumnRole.DATA][0], targetValue = dataView.getValue(i, columnIdx), numericTargetValue = targetAxis.valueScale.valueToNumber(targetValue), numericDomainValue = this.getNumericDomainValue_(i), nonScaledPoint, shouldExtendTargetAxisRange;
        if(goog.isDefAndNotNull(numericTargetValue)) {
          var t, continueFrom, continueTo;
          chartDef.isStacked ? (t = numericTargetValue + accumulatedValue[targetAxisIndex], bottomTo = lastValueFrom[targetAxisIndex], bottomFrom = lastValueTo[targetAxisIndex], continueFrom = lastValueFrom[targetAxisIndex] + numericTargetValue, continueTo = lastValueTo[targetAxisIndex] + numericTargetValue, i != dataView.getNumberOfRows() - 1 && goog.isNull(dataView.getValue(i + 1, columnIdx)) ? continueFrom = lastValueFrom[targetAxisIndex] : lastValueFrom[targetAxisIndex] += numericTargetValue, 
          0 != i && goog.isNull(dataView.getValue(i - 1, columnIdx)) ? continueTo = lastValueTo[targetAxisIndex] : lastValueTo[targetAxisIndex] += numericTargetValue) : (continueFrom = continueTo = t = numericTargetValue, continueFrom = i != dataView.getNumberOfRows() - 1 && goog.isNull(dataView.getValue(i + 1, columnIdx)) ? null : t, continueTo = 0 != i && goog.isNull(dataView.getValue(i - 1, columnIdx)) ? null : t);
          domainAxis.extendRangeToIncludeNumber(numericDomainValue);
          (shouldExtendTargetAxisRange = domainAxis.isValueInViewWindow(numericDomainValue)) && targetAxis.extendRangeToIncludeNumber(t);
          var intervalMarks = this.calcIntervalsLayout_(serie, i, accumulatedValue[targetAxisIndex], shouldExtendTargetAxisRange);
          chartDef.isStacked && (accumulatedValue[targetAxisIndex] = t);
          nonScaledPoint = {d:numericDomainValue, t:t, division:i, subDivision:0, continueToD:numericDomainValue, continueToT:continueTo, continueFromD:numericDomainValue, continueFromT:continueFrom, bottomToD:numericDomainValue, bottomToT:bottomTo, bottomFromD:numericDomainValue, bottomFromT:bottomFrom, intervalMarks:intervalMarks}
        }else {
          chartDef.isStacked && (bottomTo = lastValueFrom[targetAxisIndex], bottomFrom = lastValueTo[targetAxisIndex]), nonScaledPoint = {bottomToD:numericDomainValue, bottomToT:bottomTo, bottomFromD:numericDomainValue, bottomFromT:bottomFrom, continueToD:numericDomainValue, continueToT:bottomFrom, continueFromD:numericDomainValue, continueFromT:bottomTo}, shouldExtendTargetAxisRange = !1
        }
        var point = {nonScaled:nonScaledPoint, shouldExtendTargetAxisRange:shouldExtendTargetAxisRange};
        this.addCommonPointProperties_(point, serie, j, i);
        goog.isDefAndNotNull(numericTargetValue) || (point.isNull = !0);
        serie.points.push(point)
      }
    }
  }
  this.extendToIncludeLineValuesAtViewWindow_();
  this.adjustLineBrushProperties_()
};
gviz.canviz.AxisChartDefiner.prototype.calcTrendlinesLayout = function() {
  var chartDef = this.chartDef_;
  goog.array.forEach(chartDef.series, function(serie, i) {
    serie.isVirtual && (serie.type === gviz.canviz.Options.SerieType.SCATTER ? this.calcScatterSerieLayout_(i) : serie.type === gviz.canviz.Options.SerieType.LINE && this.calcLineSerieLayout_(i), this.positionNonScaledElementsForSerie_(i))
  }, this)
};
gviz.canviz.AxisChartDefiner.prototype.calcScatterSerieLayout_ = function(serieIndex) {
  var chartDef = this.chartDef_, dataView = this.dataView_, hAxis = this.hAxisDefiners_[0], vAxis = this.vAxisDefiners_[0], serie = chartDef.series[serieIndex], domainIndex = serie.domainIndex;
  if(serie.type === gviz.canviz.Options.SerieType.SCATTER) {
    for(var dataLength = serie.isVirtual ? serie.data.length : dataView.getNumberOfRows(), i = 0;i < dataLength;i++) {
      var columnIdxX = chartDef.domainsColumnStructure[domainIndex].columns[gviz.canviz.ColumnRole.DOMAIN][0], columnIdxY = this.getFirstDataColumnIndex_(serie), xValue = serie.isVirtual ? serie.data[i][0] : dataView.getValue(i, columnIdxX), yValue = serie.isVirtual ? serie.data[i][1] : dataView.getValue(i, columnIdxY), xNumeric = hAxis.valueScale.valueToNumber(xValue), yNumeric = vAxis.valueScale.valueToNumber(yValue);
      if(goog.isNull(xNumeric) || goog.isNull(yNumeric)) {
        serie.points.push(null)
      }else {
        var shouldExtendAxesRange = hAxis.isValueInViewWindow(xNumeric) && vAxis.isValueInViewWindow(yNumeric);
        shouldExtendAxesRange && !serie.isVirtual && (hAxis.extendRangeToIncludeNumber(xNumeric), vAxis.extendRangeToIncludeNumber(yNumeric));
        var point = {nonScaled:{x:xNumeric, y:yNumeric}, shouldExtendAxesRange:shouldExtendAxesRange};
        this.addCommonPointProperties_(point, serie, serieIndex, i);
        serie.points.push(point)
      }
    }
  }
};
gviz.canviz.AxisChartDefiner.prototype.calcScatterLayout_ = function() {
  for(var chartDef = this.chartDef_, j = 0;j < chartDef.series.length;j++) {
    this.calcScatterSerieLayout_(j)
  }
  this.adjustLineBrushProperties_()
};
gviz.canviz.AxisChartDefiner.prototype.adjustLineBrushProperties_ = function() {
  for(var isNotNull = function(point) {
    return!gviz.canviz.chartdefinitionutil.isDatumNull(point)
  }, getProperties = goog.bind(function(point) {
    var division = goog.isDefAndNotNull(point.nonScaled) ? point.nonScaled.division : null;
    return{certainty:goog.isDefAndNotNull(point.certainty) ? point.certainty : 1, emphasis:goog.isDefAndNotNull(point.emphasis) ? point.emphasis : 1, scope:goog.isDefAndNotNull(point.scope) ? point.scope : !0, gap:goog.isDefAndNotNull(division) ? this.calcGap_(division) : null}
  }, this), noGaps = goog.isNull(this.findGapColumn_()), s = 0;s < this.chartDef_.series.length;s++) {
    var serie = this.chartDef_.series[s], areaBrush = serie.areaBrush, certaintyCols = serie.columns[gviz.canviz.ColumnRole.CERTAINTY] || [], emphasisCols = serie.columns[gviz.canviz.ColumnRole.EMPHASIS] || [], scopeCols = serie.columns[gviz.canviz.ColumnRole.SCOPE] || [];
    if(0 != certaintyCols.length || 0 != emphasisCols.length || 0 != scopeCols.length || !noGaps) {
      for(var prevPoint = goog.array.findRight(serie.points, isNotNull), prevProperties = getProperties(prevPoint || {}), p = 0;p < serie.points.length;p++) {
        var point$$0 = serie.points[p];
        if(isNotNull(point$$0)) {
          var properties = getProperties(point$$0), lineBrush = serie.lineBrush;
          properties.scope || prevProperties.scope || (serie.grayLineBrush = serie.grayLineBrush || lineBrush.grayOut(), lineBrush = serie.grayLineBrush, point$$0.incomingLineBrush = lineBrush, areaBrush && (serie.grayAreaBrush = serie.grayAreaBrush || areaBrush.grayOut(), point$$0.incomingAreaBrush = serie.grayAreaBrush));
          if(1 > properties.certainty || 1 > prevProperties.certainty) {
            lineBrush = this.createUncertainBrush_(lineBrush, !1), point$$0.incomingLineBrush = lineBrush
          }
          if(1 != properties.emphasis && 1 != prevProperties.emphasis) {
            var actualEmphasis = Math.min(prevProperties.emphasis, properties.emphasis), lineBrush = this.createEmphasizedBrush_(lineBrush, actualEmphasis);
            point$$0.incomingLineBrush = lineBrush
          }
          0 == properties.gap && isNotNull(prevPoint) && (point$$0.incomingLineBrush = null);
          prevProperties = properties
        }
        prevPoint = point$$0
      }
    }
  }
};
gviz.canviz.AxisChartDefiner.canonicalizeCssStyle_ = function(rules) {
  var style = {fill:{}, stroke:{}};
  goog.isDefAndNotNull(rules) && (goog.isDefAndNotNull(rules.color) && (style.fill.color = style.stroke.color = rules.color), goog.isDefAndNotNull(rules.opacity) && (style.fill.opacity = style.stroke.opacity = rules.opacity), goog.isDefAndNotNull(rules.fillColor) && (style.fill.color = rules.fillColor), goog.isDefAndNotNull(rules.fillOpacity) && (style.fill.opacity = rules.fillOpacity), goog.isDefAndNotNull(rules.strokeColor) && (style.stroke.color = rules.strokeColor), goog.isDefAndNotNull(rules.strokeOpacity) && 
  (style.stroke.opacity = rules.strokeOpacity), goog.isDefAndNotNull(rules.strokeWidth) && (style.stroke.width = rules.strokeWidth));
  return style
};
gviz.canviz.AxisChartDefiner.processStyleString_ = function(style) {
  var customStyle;
  style = goog.string.trim(style);
  if(goog.color.isValidColor(style)) {
    customStyle = {fill:{color:style}, stroke:{color:style}}
  }else {
    if("{" === style.charAt(0)) {
      try {
        var customPointStyle = goog.json.parse(style)
      }catch(e) {
      }
      goog.isDefAndNotNull(customPointStyle) && (customStyle = customPointStyle)
    }
  }
  if(!goog.isDefAndNotNull(customStyle)) {
    var canonicalizeCssStyle = gviz.canviz.AxisChartDefiner.canonicalizeCssStyle_;
    goog.string.contains(style, "{") ? (customStyle = goog.object.map(google.visualization.style.parseStyle(style), canonicalizeCssStyle), goog.object.containsKey(customStyle, "") && (goog.object.extend(customStyle, customStyle[""]), goog.object.remove(customStyle, "")), goog.object.containsKey(customStyle, "*") && (goog.object.extend(customStyle, customStyle["*"]), goog.object.remove(customStyle, "*"))) : customStyle = canonicalizeCssStyle(goog.style.parseStyleAttribute(style))
  }
  return customStyle
};
gviz.canviz.AxisChartDefiner.prototype.getCustomPointStyle_ = function(serie, categoryIndex) {
  var customStyle = void 0, styleColumnIndex = goog.isDefAndNotNull(serie.columns[gviz.canviz.ColumnRole.STYLE]) ? serie.columns[gviz.canviz.ColumnRole.STYLE][0] : void 0;
  if(goog.isDefAndNotNull(styleColumnIndex) && "string" === this.dataView_.getColumnType(styleColumnIndex)) {
    var customStyleString = this.dataView_.getValue(categoryIndex, styleColumnIndex);
    goog.isDefAndNotNull(customStyleString) && (customStyle = gviz.canviz.AxisChartDefiner.processStyleString_(customStyleString))
  }
  if(goog.isDefAndNotNull(customStyle)) {
    return new gviz.Options([customStyle])
  }
};
gviz.canviz.AxisChartDefiner.prototype.addCommonPointProperties_ = function(point, serie, serieIndex, categoryIndex) {
  this.isTooltipEnabled_ && (point.tooltipText = this.getTooltipText_(serie, serieIndex, categoryIndex));
  var customStyle = this.getCustomPointStyle_(serie, categoryIndex), certainty = this.calcCertainty_(serie, categoryIndex), emphasis = this.calcEmphasis_(serie, categoryIndex), scope = this.calcScope_(serie, categoryIndex), brush$$0 = serie.pointBrush;
  if(goog.isDefAndNotNull(customStyle)) {
    var brush$$0 = brush$$0.clone(), mutateBrush = function(brush, opt_subpath) {
      var subpath = opt_subpath || "";
      brush.setFill(customStyle.inferColorValue([subpath + "fill.color", subpath + "fill"], brush.getFill()));
      brush.setFillOpacity(customStyle.inferRatioNumberValue(subpath + "fill.opacity", brush.getFillOpacity()));
      brush.setStroke(customStyle.inferColorValue([subpath + "stroke.color", subpath + "stroke"], brush.getStroke()));
      brush.setStrokeOpacity(customStyle.inferRatioNumberValue(subpath + "stroke.opacity", brush.getStrokeOpacity()));
      brush.setStrokeWidth(customStyle.inferNumberValue(subpath + "stroke.width", brush.getStrokeWidth()))
    };
    mutateBrush(brush$$0);
    switch(serie.type) {
      case gviz.canviz.Options.SerieType.LINE:
      ;
      case gviz.canviz.Options.SerieType.SCATTER:
      ;
      case gviz.canviz.Options.SerieType.AREA:
        mutateBrush(brush$$0, "point.");
        goog.isDefAndNotNull(customStyle.inferValue("line", null)) && (point.incomingLineBrush = serie.lineBrush.clone(), mutateBrush(point.incomingLineBrush, "line."));
        break;
      case gviz.canviz.Options.SerieType.STEPPED_AREA:
        goog.isDefAndNotNull(customStyle.inferValue("line", null)) && mutateBrush(brush$$0, "line.");
      case gviz.canviz.Options.SerieType.BARS:
        mutateBrush(brush$$0, "bar.");
        break;
      case gviz.canviz.Options.SerieType.CANDLESTICKS:
        point.barBrush = point.barBrush.clone(), mutateBrush(point.barBrush), mutateBrush(point.lineBrush), mutateBrush(point.barBrush, "bar."), mutateBrush(point.lineBrush, "line.")
    }
    point.brush = brush$$0
  }
  var radius = gviz.canviz.chartdefinitionutil.getPointTotalRadius(point, serie);
  scope || (point.scope = scope, serie.grayPointBrush = serie.grayPointBrush || brush$$0.grayOut(), brush$$0 = serie.grayPointBrush, point.brush = brush$$0);
  1 != emphasis && (point.emphasis = emphasis, serie.type == gviz.canviz.Options.SerieType.LINE || serie.type == gviz.canviz.Options.SerieType.AREA || serie.type == gviz.canviz.Options.SerieType.SCATTER) && (radius = Math.round(10 * radius * Math.sqrt(emphasis)) / 10, point.radius = radius);
  if(1 > certainty) {
    switch(point.certainty = certainty, serie.type) {
      case gviz.canviz.Options.SerieType.LINE:
      ;
      case gviz.canviz.Options.SerieType.AREA:
      ;
      case gviz.canviz.Options.SerieType.SCATTER:
        point.brush = this.createUncertainBrush_(brush$$0, !0);
        point.radius = gviz.canviz.util.calcCompensatedPointRadius(point.brush, radius);
        break;
      case gviz.canviz.Options.SerieType.BARS:
      ;
      case gviz.canviz.Options.SerieType.STEPPED_AREA:
        point.brush = this.createUncertainBrush_(brush$$0, !1)
    }
  }
};
gviz.canviz.AxisChartDefiner.prototype.getTooltipText_ = function(serie, serieIndex, categoryIndex) {
  var tooltipText = this.calcTooltipText_(serie, serieIndex, categoryIndex), tooltipColumnIndices = serie.columns[gviz.canviz.ColumnRole.TOOLTIP];
  if(tooltipColumnIndices && !serie.isVirtual) {
    goog.asserts.assert(1 == tooltipColumnIndices.length);
    var tooltipColumnIndex = tooltipColumnIndices[0], customTooltipText = this.getCustomTooltipText_(tooltipColumnIndex, categoryIndex);
    customTooltipText && goog.object.extend(tooltipText, customTooltipText)
  }
  tooltipText.hasHtmlContent = !!tooltipText.hasHtmlContent;
  return tooltipText
};
gviz.canviz.AxisChartDefiner.prototype.getCustomTooltipText_ = function(tooltipColumnIndex, rowIndex) {
  var dataView = this.dataView_, hasHtmlContent = this.chartDef_.isHtmlTooltip && (dataView.getProperty(rowIndex, tooltipColumnIndex, "html") || dataView.getColumnProperty(tooltipColumnIndex, "html")), tooltipContent = dataView.getFormattedValue(rowIndex, tooltipColumnIndex);
  return{hasHtmlContent:!!hasHtmlContent, hasCustomContent:tooltipContent ? !0 : !1, content:tooltipContent}
};
gviz.canviz.AxisChartDefiner.prototype.calcTooltipText_ = function(serie, serieIndex, categoryIndex) {
  var chartType = this.chartDef_.chartType;
  return chartType === gviz.canviz.Options.ChartType.SCATTER || serie.isVirtual ? this.calcScatterTooltipText_(serie, serieIndex, categoryIndex) : this.calcFunctionTooltipText_(serie, categoryIndex)
};
gviz.canviz.AxisChartDefiner.prototype.calcScatterTooltipText_ = function(serie, serieIndex, categoryIndex) {
  var dataView = this.dataView_, chartDef = this.chartDef_, valueX, valueY, content;
  if(serie.isVirtual) {
    valueX = serie.data[categoryIndex][0].toString(), valueY = serie.data[categoryIndex][1].toString(), content = valueX + ", " + valueY
  }else {
    if(this.chartDef_.isDiff) {
      var hAxisTitle = this.hAxisDefiners_[0].title.text, vAxisTitle = this.vAxisDefiners_[0].title.text, valueXPrefixText = hAxisTitle || gviz.canviz.Options.DEFAULT_SCATTER_TOOLTIP_X_PREFIX_TEXT, valueYPrefixText = vAxisTitle || gviz.canviz.Options.DEFAULT_SCATTER_TOOLTIP_Y_PREFIX_TEXT, oldDataSerieIndex = serieIndex % 2 ? serieIndex - 1 : serieIndex, newDataSerieIndex = oldDataSerieIndex + 1, oldDataSerie = chartDef.series[oldDataSerieIndex], newDataSerie = chartDef.series[newDataSerieIndex], 
      columnIdxX, columnIdxY;
      columnIdxX = chartDef.domainsColumnStructure[newDataSerie.domainIndex].columns[gviz.canviz.ColumnRole.DOMAIN][0];
      columnIdxY = this.getFirstDataColumnIndex_(newDataSerie);
      valueX = dataView.getFormattedValue(categoryIndex, columnIdxX);
      valueY = dataView.getFormattedValue(categoryIndex, columnIdxY);
      content = valueXPrefixText + ": " + valueX + ", " + valueYPrefixText + ": " + valueY;
      columnIdxX = chartDef.domainsColumnStructure[oldDataSerie.domainIndex].columns[gviz.canviz.ColumnRole.DOMAIN][0];
      columnIdxY = this.getFirstDataColumnIndex_(oldDataSerie);
      valueX = dataView.getFormattedValue(categoryIndex, columnIdxX);
      valueY = dataView.getFormattedValue(categoryIndex, columnIdxY);
      content += "\n" + valueXPrefixText + ": " + valueX + ", " + valueYPrefixText + ": " + valueY
    }else {
      columnIdxX = chartDef.domainsColumnStructure[serie.domainIndex].columns[gviz.canviz.ColumnRole.DOMAIN][0], columnIdxY = this.getFirstDataColumnIndex_(serie), valueX = dataView.getFormattedValue(categoryIndex, columnIdxX), valueY = dataView.getFormattedValue(categoryIndex, columnIdxY), content = valueX + ", " + valueY
    }
  }
  return{hasCustomContent:!1, content:content, serieTitle:serie.title}
};
gviz.canviz.AxisChartDefiner.prototype.calcFunctionTooltipText_ = function(serie, categoryIndex) {
  var dataView = this.dataView_, category = this.chartDef_.categories[categoryIndex], categoryTitle = serie.isVirtual ? serie.data[categoryIndex][0].toString() : category.titles[serie.domainIndex], formattedDataValue, hasHtmlContent = !1;
  if(serie.type == gviz.canviz.Options.SerieType.CANDLESTICKS) {
    var dataColumns = serie.columns[gviz.canviz.ColumnRole.DATA];
    formattedDataValue = dataView.getFormattedValue(categoryIndex, dataColumns[0]) + " - " + dataView.getFormattedValue(categoryIndex, dataColumns[3]) + ", " + dataView.getFormattedValue(categoryIndex, dataColumns[1]) + " - " + dataView.getFormattedValue(categoryIndex, dataColumns[2])
  }else {
    if(this.chartDef_.isDiff) {
      var oldDataColumns = serie.columns[gviz.canviz.ColumnRole.DIFF_OLD_DATA], newDataColumns = serie.columns[gviz.canviz.ColumnRole.DATA], oldValue = this.dataView_.getValue(categoryIndex, oldDataColumns[0]), newValue = this.dataView_.getValue(categoryIndex, newDataColumns[0]), formattedOldDataValue = dataView.getFormattedValue(categoryIndex, oldDataColumns[0]), formattedNewDataValue = dataView.getFormattedValue(categoryIndex, newDataColumns[0]);
      if(goog.isNull(oldValue) && goog.string.isEmpty(formattedOldDataValue) && goog.isNull(newValue) && goog.string.isEmpty(formattedNewDataValue)) {
        return{hasCustomContent:!1, content:null}
      }
      formattedDataValue = formattedNewDataValue + "\n" + formattedOldDataValue
    }else {
      var dataColumns = serie.columns[gviz.canviz.ColumnRole.DATA], value = serie.isVirtual ? serie.data[categoryIndex][1] : this.dataView_.getValue(categoryIndex, dataColumns[0]);
      formattedDataValue = serie.isVirtual ? serie.data[categoryIndex][1].toString() : this.dataView_.getFormattedValue(categoryIndex, dataColumns[0]);
      if(goog.isNull(value) && goog.string.isEmpty(formattedDataValue)) {
        return{hasCustomContent:!1, content:null}
      }
      var intervalColumns = serie.columns[gviz.canviz.ColumnRole.INTERVAL] || [];
      if(intervalColumns.length) {
        var values = goog.array.map(intervalColumns, function(columnIndex) {
          return dataView.getFormattedValue(categoryIndex, columnIndex)
        });
        formattedDataValue += " [" + values.join(", ") + "]"
      }
    }
  }
  return{hasCustomContent:!1, content:formattedDataValue, categoryTitle:categoryTitle, serieTitle:serie.title, hasHtmlContent:hasHtmlContent}
};
gviz.canviz.AxisChartDefiner.prototype.calculateControlPoints_ = function() {
  var chartDef = this.chartDef_, domainAxis = this.domainAxisDefiner_, scatterNonScaledToVec = function(nonScaled) {
    return new goog.math.Vec2(nonScaled.x, nonScaled.y)
  }, scatterVecToNonScaled = function(vec) {
    return{x:vec.x, y:vec.y}
  }, scatterExtendRangeToIncludePoint = goog.bind(function(serie, point, nonScaled) {
    point.shouldExtendAxesRange && (this.hAxisDefiners_[0].extendRangeToIncludeNumber(nonScaled.x), this.vAxisDefiners_[0].extendRangeToIncludeNumber(nonScaled.y))
  }, this), functionNonScaledToVec = function(nonScaled) {
    return new goog.math.Vec2(nonScaled.d, nonScaled.t)
  }, functionVecToNonScaled = function(vec) {
    return{d:vec.x, t:vec.y}
  }, functionExtendRangeToIncludePoint = goog.bind(function(serie, point, nonScaled) {
    domainAxis.extendRangeToIncludeNumber(nonScaled.d);
    if(point.shouldExtendTargetAxisRange) {
      var targetAxis = this.targetAxisDefiners_[serie.targetAxisIndex];
      targetAxis.extendRangeToIncludeNumber(nonScaled.t)
    }
  }, this), nonScaledToVec, vecToNonScaled, extendRangeToIncludePoint;
  switch(chartDef.chartType) {
    case gviz.canviz.Options.ChartType.SCATTER:
      nonScaledToVec = scatterNonScaledToVec;
      vecToNonScaled = scatterVecToNonScaled;
      extendRangeToIncludePoint = scatterExtendRangeToIncludePoint;
      break;
    case gviz.canviz.Options.ChartType.FUNCTION:
      nonScaledToVec = functionNonScaledToVec, vecToNonScaled = functionVecToNonScaled, extendRangeToIncludePoint = functionExtendRangeToIncludePoint
  }
  for(var j = 0;j < chartDef.series.length;j++) {
    var serie$$0 = chartDef.series[j];
    if(serie$$0.type == gviz.canviz.Options.SerieType.SCATTER || serie$$0.type == gviz.canviz.Options.SerieType.LINE) {
      if(goog.array.contains([gviz.canviz.Options.CurveType.FUNCTION, gviz.canviz.Options.CurveType.PHASE, gviz.canviz.Options.CurveType.CLOSED_PHASE], serie$$0.curveType)) {
        var isClosed = serie$$0.type == gviz.canviz.Options.SerieType.SCATTER && serie$$0.curveType == gviz.canviz.Options.CurveType.CLOSED_PHASE, isFunction = serie$$0.curveType == gviz.canviz.Options.CurveType.FUNCTION;
        serie$$0.isCurved = !0;
        serie$$0.isClosed = isClosed;
        for(var controlPoints = gviz.canviz.util.calculateControlPoints(goog.array.map(serie$$0.points, function(p) {
          return gviz.canviz.chartdefinitionutil.isDatumNull(p) ? null : nonScaledToVec(p.nonScaled)
        }), serie$$0.smoothingFactor, isFunction, isClosed, chartDef.interpolateNulls), i = 0;i < serie$$0.points.length;++i) {
          var point$$0 = serie$$0.points[i];
          if(controlPoints[i]) {
            var leftControlPoint = vecToNonScaled(controlPoints[i][0]), rightControlPoint = vecToNonScaled(controlPoints[i][1]);
            point$$0.nonScaledLeftControlPoint = leftControlPoint;
            point$$0.nonScaledRightControlPoint = rightControlPoint;
            extendRangeToIncludePoint(serie$$0, point$$0, leftControlPoint);
            extendRangeToIncludePoint(serie$$0, point$$0, rightControlPoint)
          }
        }
      }else {
        serie$$0.isCurved = !1
      }
    }
  }
};
gviz.canviz.AxisChartDefiner.prototype.calcCategorySensitivityAreas_ = function() {
  if(this.chartDef_.focusTarget == gviz.canviz.Options.FocusTarget.CATEGORY) {
    var categories = this.chartDef_.categories, domainAxisDefiner = this.domainAxisDefiner_, startPos = domainAxisDefiner.startPos;
    goog.asserts.assert(goog.isDefAndNotNull(startPos));
    var endPos = domainAxisDefiner.endPos;
    goog.asserts.assert(goog.isDefAndNotNull(endPos));
    for(var firstCategoryInViewWindow, currentCategoryPosition, i = 0;i < categories.length;i++) {
      if(currentCategoryPosition = this.calcCategoryPosition_(i), goog.isDefAndNotNull(currentCategoryPosition)) {
        if(domainAxisDefiner.isPositionPastTheEnd(currentCategoryPosition)) {
          return
        }
        if(!domainAxisDefiner.isPositionBeforeTheStart(currentCategoryPosition)) {
          firstCategoryInViewWindow = i;
          break
        }
      }
    }
    if(goog.isDef(firstCategoryInViewWindow)) {
      for(var sensitivityAreaStart, sensitivityAreaEnd = startPos, nextCategoryPosition, i = firstCategoryInViewWindow;i < categories.length;i++) {
        sensitivityAreaStart = sensitivityAreaEnd;
        if(i == categories.length - 1) {
          this.setCategorySensitivityArea_(i, sensitivityAreaStart, endPos);
          break
        }
        nextCategoryPosition = this.calcCategoryPosition_(i + 1);
        if(goog.isDefAndNotNull(nextCategoryPosition)) {
          if(domainAxisDefiner.isPositionPastTheEnd(nextCategoryPosition)) {
            this.setCategorySensitivityArea_(i, sensitivityAreaStart, endPos);
            break
          }
          goog.asserts.assert(goog.isDefAndNotNull(currentCategoryPosition));
          sensitivityAreaEnd = goog.math.average(currentCategoryPosition, nextCategoryPosition);
          this.setCategorySensitivityArea_(i, sensitivityAreaStart, sensitivityAreaEnd);
          currentCategoryPosition = nextCategoryPosition
        }
      }
    }
  }
};
gviz.canviz.AxisChartDefiner.prototype.calcCategoryPosition_ = function(categoryIndex) {
  var categories = this.chartDef_.categories, domainAxisDefiner = this.domainAxisDefiner_;
  return domainAxisDefiner.type == gviz.canviz.Options.AxisType.VALUE ? goog.isDefAndNotNull(categories[categoryIndex].data) ? domainAxisDefiner.calcPositionFromDataValue(categories[categoryIndex].data) : null : domainAxisDefiner.calcPositionForNumericValue(categoryIndex)
};
gviz.canviz.AxisChartDefiner.prototype.setCategorySensitivityArea_ = function(categoryIndex, sensitivityAreaStart, sensitivityAreaEnd) {
  var top = this.chartDef_.chartArea.top, bottom = this.chartDef_.chartArea.bottom, left = this.chartDef_.chartArea.left, right = this.chartDef_.chartArea.right, orientation = this.chartDef_.orientation, direction = this.domainAxisDefiner_.direction, category = this.chartDef_.categories[categoryIndex];
  category.sensitivityArea = orientation == gviz.canviz.Options.Orientation.HORIZONTAL ? 1 == direction ? new goog.math.Box(top, sensitivityAreaEnd, bottom, sensitivityAreaStart) : new goog.math.Box(top, sensitivityAreaStart, bottom, sensitivityAreaEnd) : 1 == direction ? new goog.math.Box(sensitivityAreaStart, right, sensitivityAreaEnd, left) : new goog.math.Box(sensitivityAreaEnd, right, sensitivityAreaStart, left)
};
gviz.canviz.AxisChartDefiner.prototype.resolveTextCollisions_ = function() {
  this.resolveTicksWithChartCollisions_();
  this.resolveTicksWithTicksCollisions_()
};
gviz.canviz.AxisChartDefiner.prototype.resolveTicksWithChartCollisions_ = function() {
  var chartDef = this.chartDef_;
  goog.object.forEach(chartDef.vAxes, function(vAxis, i) {
    this.filterAxisTicks_(this.vAxisDefiners_[i], chartDef.vAxes[i], this.isVerticalTickClearOfChartCollisions_)
  }, this);
  goog.object.forEach(chartDef.hAxes, function(hAxis, i) {
    this.filterAxisTicks_(this.hAxisDefiners_[i], chartDef.hAxes[i], this.isHorizontalTickClearOfChartCollisions_)
  }, this)
};
gviz.canviz.AxisChartDefiner.prototype.resolveTicksWithTicksCollisions_ = function() {
  var chartDef = this.chartDef_;
  goog.object.forEach(chartDef.hAxes, function(hAxis, i) {
    this.filterAxisTicks_(this.hAxisDefiners_[i], chartDef.hAxes[i], this.isHorizontalTickClearOfTicksCollisions_)
  }, this)
};
gviz.canviz.AxisChartDefiner.prototype.filterAxisTicks_ = function(axisDefiner, axisDefinition, filterFunc) {
  axisDefinition.text && (axisDefinition.text = goog.array.filter(axisDefinition.text, goog.bind(filterFunc, this, axisDefiner)))
};
gviz.canviz.AxisChartDefiner.prototype.isHorizontalTickClearOfChartCollisions_ = function(hAxisDefiner, tickText) {
  var chartDef = this.chartDef_, textBlock = tickText.textBlock;
  if(textBlock.angle) {
    return!0
  }
  var boundingBox = gviz.canviz.TextBlockUtil.calcBoundingBox(textBlock);
  if(!boundingBox) {
    return!0
  }
  if(hAxisDefiner.tickTextPosition == gviz.canviz.Options.InOutPosition.INSIDE) {
    var chartAreaBox = new goog.math.Box(chartDef.chartArea.top, chartDef.chartArea.right, chartDef.chartArea.bottom, chartDef.chartArea.left);
    if(!chartAreaBox.contains(boundingBox)) {
      return!1
    }
  }
  return!0
};
gviz.canviz.AxisChartDefiner.prototype.isHorizontalTickClearOfTicksCollisions_ = function(hAxisDefiner, tickText) {
  var chartDef = this.chartDef_;
  if(hAxisDefiner.tickTextPosition != gviz.canviz.Options.InOutPosition.INSIDE) {
    return!0
  }
  var textBlock = tickText.textBlock;
  if(textBlock.angle) {
    return!0
  }
  var boundingBox = gviz.canviz.TextBlockUtil.calcBoundingBox(textBlock);
  if(!boundingBox) {
    return!0
  }
  var margin = textBlock.textStyle.fontSize / 2, boundingBoxWithMargin = new goog.math.Box(boundingBox.top, boundingBox.right + margin, boundingBox.bottom, boundingBox.left - margin), idx;
  for(idx in chartDef.vAxes) {
    var i = Number(idx);
    if(this.vAxisDefiners_[i].tickTextPosition == gviz.canviz.Options.InOutPosition.INSIDE) {
      var numberOfVerticalTicks = chartDef.vAxes[i].text ? chartDef.vAxes[i].text.length : 0;
      if(!(1 > numberOfVerticalTicks)) {
        var firstVerticalTickBoundingBox = gviz.canviz.TextBlockUtil.calcBoundingBox(chartDef.vAxes[i].text[0].textBlock), lastVerticalTickBoundingBox = gviz.canviz.TextBlockUtil.calcBoundingBox(goog.array.peek(chartDef.vAxes[i].text).textBlock);
        if(firstVerticalTickBoundingBox || lastVerticalTickBoundingBox) {
          if(firstVerticalTickBoundingBox && goog.math.Box.intersects(boundingBoxWithMargin, firstVerticalTickBoundingBox) || lastVerticalTickBoundingBox && goog.math.Box.intersects(boundingBoxWithMargin, lastVerticalTickBoundingBox)) {
            return!1
          }
          var verticalMinLeft, verticalMaxRight;
          firstVerticalTickBoundingBox ? lastVerticalTickBoundingBox ? (verticalMinLeft = Math.min(firstVerticalTickBoundingBox.left, lastVerticalTickBoundingBox.left), verticalMaxRight = Math.max(firstVerticalTickBoundingBox.right, lastVerticalTickBoundingBox.right)) : (verticalMinLeft = firstVerticalTickBoundingBox.left, verticalMaxRight = firstVerticalTickBoundingBox.right) : (verticalMinLeft = lastVerticalTickBoundingBox.left, verticalMaxRight = lastVerticalTickBoundingBox.right);
          if(Math.abs(boundingBox.left - verticalMinLeft) < margin || Math.abs(boundingBox.right - verticalMaxRight) < margin) {
            return!1
          }
        }
      }
    }
  }
  return!0
};
gviz.canviz.AxisChartDefiner.prototype.isVerticalTickClearOfChartCollisions_ = function(vAxisDefiner, tickText) {
  var chartDef = this.chartDef_, chartAreaBox = new goog.math.Box(chartDef.chartArea.top, chartDef.chartArea.right, chartDef.chartArea.bottom, chartDef.chartArea.left), textBlock = tickText.textBlock, margin = textBlock.textStyle.fontSize / 2, boundingBox = gviz.canviz.TextBlockUtil.calcBoundingBox(textBlock);
  if(!boundingBox) {
    return!0
  }
  if(vAxisDefiner.tickTextPosition == gviz.canviz.Options.InOutPosition.INSIDE && !chartAreaBox.contains(boundingBox)) {
    return!1
  }
  var boundingBoxWithMargin = new goog.math.Box(boundingBox.top, boundingBox.right + margin, boundingBox.bottom, boundingBox.left - margin), titleBoundingBox = gviz.canviz.TextBlockUtil.calcBoundingBox(chartDef.title);
  if(titleBoundingBox && goog.math.Box.intersects(boundingBoxWithMargin, titleBoundingBox)) {
    return!1
  }
  var axisTitlesBoundingBox = chartDef.innerAxisTitle ? gviz.canviz.TextBlockUtil.calcBoundingBox(chartDef.innerAxisTitle) : null;
  if(axisTitlesBoundingBox && goog.math.Box.intersects(boundingBoxWithMargin, axisTitlesBoundingBox)) {
    return!1
  }
  var legendBoundingBox = this.legendDefiner_.getArea();
  return legendBoundingBox && goog.math.Box.intersects(boundingBoxWithMargin, legendBoundingBox) ? !1 : !0
};
gviz.canviz.AxisChartDefiner.prototype.positionAnnotations_ = function() {
  var chartDef = this.chartDef_, domainAxis = this.domainAxisDefiner_, options = this.options_, defaultTextStyle = {fontName:chartDef.defaultFontName, fontSize:chartDef.defaultFontSize, auraColor:chartDef.insideLabelsAuraColor}, domainAnnotationTextStyle = options.inferTextStyleValue(["annotations.domain.textStyle", "annotations.textStyle"], defaultTextStyle), domainAnnotationStemColor = options.inferColorValue(["annotations.domain.stemColor", "annotations.stemColor"], ""), domainAnnotationStyle = 
  options.inferEnumValue(["annotations.domain.style", "annotations.style"], gviz.canviz.Options.AnnotationStyle, gviz.canviz.Options.AnnotationStyle.LETTER);
  goog.array.forEach(this.chartDef_.categories, function(category, categoryIndex) {
    var categoryLetterAnnotations = [], categoryLineAnnotations = [];
    goog.array.forEach(chartDef.domainsColumnStructure, function(domainsColumnStructure) {
      var annotations = this.extractAnnotations_(categoryIndex, domainsColumnStructure.columns, domainAnnotationStyle);
      goog.array.extend(categoryLetterAnnotations, annotations.letter);
      goog.array.extend(categoryLineAnnotations, annotations.line)
    }, this);
    if(categoryLetterAnnotations.length || categoryLineAnnotations.length) {
      var numericDomainValue = this.getNumericDomainValue_(categoryIndex), x = domainAxis.calcPositionForNumericValue(numericDomainValue);
      goog.asserts.assert(goog.isDefAndNotNull(x));
      var y = chartDef.chartArea.top + chartDef.chartArea.height;
      goog.asserts.assert(goog.isDefAndNotNull(this.chartDef_.orientation));
      if(categoryLetterAnnotations.length) {
        var targetPoint = {x:x, y:y};
        category.annotation = this.positionLetterAnnotation_(targetPoint, gviz.canviz.Options.SerieType.NONE, {color:"#ffffff"}, !1, this.chartDef_.orientation, categoryLetterAnnotations, domainAnnotationTextStyle, 5, domainAnnotationStemColor)
      }
      categoryLineAnnotations.length && (targetPoint = {x:x, y:null}, category.annotation = this.positionLineAnnotation_(targetPoint, categoryLineAnnotations, domainAnnotationTextStyle, domainAnnotationStemColor))
    }
  }, this);
  var relativeColors = goog.object.getValues(gviz.canviz.Options.SeriesRelativeColor), defaultDatumAnnotationTextStyle = options.inferExtendedColorTextStyleValue(["annotations.datum.textStyle", "annotations.textStyle"], relativeColors, defaultTextStyle), defaultDatumAnnotationStemColor = options.inferExtendedColorValue(["annotations.datum.stemColor", "annotations.stemColor"], relativeColors, ""), defaultDatumAnnotationStyle = options.inferEnumValue(["annotations.datum.style", "annotations.style"], 
  gviz.canviz.Options.AnnotationStyle, gviz.canviz.Options.AnnotationStyle.LETTER);
  goog.array.forEach(this.chartDef_.series, function(serie, serieIndex) {
    if(serie.type == gviz.canviz.Options.SerieType.AREA || serie.type == gviz.canviz.Options.SerieType.BARS || serie.type == gviz.canviz.Options.SerieType.LINE || serie.type == gviz.canviz.Options.SerieType.SCATTER) {
      var optionsPrefix = "series." + serieIndex + ".annotations.", serieAnnotationTextStyle = options.inferExtendedColorTextStyleValue(optionsPrefix + "textStyle", relativeColors, defaultDatumAnnotationTextStyle);
      serieAnnotationTextStyle.color = gviz.canviz.AxisChartDefiner.resolveSerieRelativeColor_(serieAnnotationTextStyle.color, serie.color);
      var serieAnnotationStemColor = options.inferExtendedColorValue(optionsPrefix + "stemColor", relativeColors, defaultDatumAnnotationStemColor), serieAnnotationStemColor = gviz.canviz.AxisChartDefiner.resolveSerieRelativeColor_(serieAnnotationStemColor, serie.color);
      options.inferEnumValue(optionsPrefix + "style", gviz.canviz.Options.AnnotationStyle, defaultDatumAnnotationStyle);
      for(var i = 0;i < serie.points.length;++i) {
        if(goog.isDefAndNotNull(serie.points[i]) && goog.isDefAndNotNull(serie.points[i].scaled)) {
          var annotations = this.extractAnnotations_(i, serie.columns, defaultDatumAnnotationStyle), scaledPoint = serie.points[i].scaled;
          goog.asserts.assert(goog.isDefAndNotNull(this.chartDef_.orientation));
          annotations.letter.length && (serie.points[i].annotation = this.positionLetterAnnotation_(scaledPoint, serie.type, serie.color, this.chartDef_.isStacked, this.chartDef_.orientation, annotations.letter, serieAnnotationTextStyle, 12, serieAnnotationStemColor));
          annotations.line.length && (serie.points[i].annotation = this.positionLineAnnotation_(scaledPoint, annotations.line, serieAnnotationTextStyle, serieAnnotationStemColor))
        }
      }
    }
  }, this)
};
gviz.canviz.AxisChartDefiner.prototype.extractAnnotations_ = function(rowNumber, roleToColumns, defaultStyle) {
  var dataView = this.dataView_, annotationColumns = roleToColumns[gviz.canviz.ColumnRole.ANNOTATION], annotations = {line:[], letter:[]};
  if(!goog.isDefAndNotNull(annotationColumns)) {
    return annotations
  }
  for(var tooltipColumns = roleToColumns[gviz.canviz.ColumnRole.ANNOTATION_TEXT] || [], i = 0;i < annotationColumns.length;++i) {
    var annotationColumn = annotationColumns[i], annotationTooltipColumn = annotationColumn + 1, hasAnnotationTooltipColumn = 0 <= goog.array.indexOf(tooltipColumns, annotationTooltipColumn);
    if(dataView.getValue(rowNumber, annotationColumn)) {
      var annotation = {text:dataView.getFormattedValue(rowNumber, annotationColumn), tooltipColumnIndex:hasAnnotationTooltipColumn ? annotationTooltipColumn : null, rowIndex:rowNumber}, optionPath = "annotation." + annotationColumn + ".style", style = this.options_.inferEnumValue(optionPath, gviz.canviz.Options.AnnotationStyle, defaultStyle);
      style == gviz.canviz.Options.AnnotationStyle.LINE ? annotations.line.push(annotation) : annotations.letter.push(annotation)
    }
  }
  return annotations
};
gviz.canviz.AxisChartDefiner.prototype.createAnnotationBundle_ = function(target, type, annotations, textStyle, x, y) {
  var bundle = null, collapsedText = annotations[0].text + " [+]", collapsedSize = this.textMeasureFunction_(collapsedText, textStyle);
  if(type === gviz.canviz.Options.SerieType.BARS && collapsedSize.width > target.width) {
    var bundleLabelX = target.left, bundleParalAlign = gviz.graphics.TextAlign.START
  }else {
    bundleLabelX = x, bundleParalAlign = gviz.graphics.TextAlign.CENTER
  }
  bundle = {isExpanded:!1, label:{text:collapsedText, textStyle:textStyle, lines:[{x:0, y:0, length:collapsedSize.width, text:collapsedText}], paralAlign:bundleParalAlign, perpenAlign:gviz.graphics.TextAlign.END, anchor:new gviz.math.Coordinate(bundleLabelX, y), angle:0}};
  this.isTooltipEnabled_ && (bundle.label.tooltip = "Click to expand annotations");
  return bundle
};
gviz.canviz.AxisChartDefiner.prototype.positionLetterAnnotation_ = function(target, type, color, isStacked, orientation, annotations, textStyle, stemLength, stemColor) {
  var annotationColors = [[64, 64, 64], [128, 128, 128], [255, 255, 255]], isBar = type === gviz.canviz.Options.SerieType.BARS, stemX, stemY;
  if(isBar) {
    var barRect = new goog.math.Rect(target.left, target.top, target.width, target.height), y = stemY = target.top, x = stemX = Math.floor(target.left + target.width / 2)
  }else {
    var x = stemX = target.x, y = stemY = target.y
  }
  var labelY = y - stemLength, bundleLabelY = labelY, actualStemLength = -stemLength, numOfAnnotations = annotations.length, totalHeight = stemLength + textStyle.fontSize * numOfAnnotations;
  y - totalHeight < this.chartDef_.chartArea.top && y + totalHeight < this.chartDef_.chartArea.bottom && (labelY = y + totalHeight, bundleLabelY = y + stemLength + textStyle.fontSize, actualStemLength = stemLength);
  var bundle = null;
  1 < numOfAnnotations && (bundle = this.createAnnotationBundle_(target, type, annotations, textStyle, x, bundleLabelY));
  for(var labels = [], i = 0;i < numOfAnnotations;i++) {
    var annotation = annotations[i], textSize = this.textMeasureFunction_(annotation.text, textStyle), label = {}, anchor = new gviz.math.Coordinate(stemX, labelY), labelInBar = null;
    label.textStyle = gviz.json.clone(textStyle);
    if(isBar) {
      if(barRect) {
        var seriesColor = goog.color.hexToRgb(color.color), candidateLabelColor = goog.color.rgbArrayToHex(goog.color.highContrast(seriesColor, annotationColors)), position = orientation === gviz.canviz.Options.Orientation.HORIZONTAL ? gviz.common.text.TextBlock.Position.TOP : gviz.common.text.TextBlock.Position.RIGHT, newTextStyle = gviz.json.clone(textStyle);
        newTextStyle.auraColor = "none";
        newTextStyle.color = candidateLabelColor;
        labelInBar = gviz.common.text.TextBlock.createToFit(annotation.text, newTextStyle, position, barRect, this.textMeasureFunction_, this.isTooltipEnabled_, 2, 2)
      }
      if(!isStacked && (!labelInBar || 1 < labelInBar.lines.length || labelInBar.truncated)) {
        switch(orientation) {
          case gviz.canviz.Options.Orientation.HORIZONTAL:
            label.perpenAlign = gviz.graphics.TextAlign.END;
            target.width > textSize.width ? (anchor.x = stemX, label.paralAlign = gviz.graphics.TextAlign.CENTER) : (anchor.x = barRect.left, label.paralAlign = gviz.graphics.TextAlign.START);
            break;
          case gviz.canviz.Options.Orientation.VERTICAL:
            anchor.x = barRect.left + barRect.width + 2, label.paralAlign = gviz.graphics.TextAlign.START, label.perpenAlign = gviz.graphics.TextAlign.CENTER, anchor.y = barRect.getCenter().y
        }
      }
    }else {
      anchor.x = x, label.paralAlign = gviz.graphics.TextAlign.CENTER, label.perpenAlign = gviz.graphics.TextAlign.END
    }
    if(labelInBar && (isStacked || !isStacked && !labelInBar.truncated)) {
      labels.push(labelInBar);
      var noStem = !0
    }else {
      label.text = annotation.text;
      label.textStyle = textStyle;
      label.anchor = anchor;
      label.truncated = !1;
      label.lines = [{x:0, y:0, length:textSize.width, text:annotation.text}];
      label.angle = 0;
      var tooltipColumnIndex = annotation.tooltipColumnIndex;
      this.isTooltipEnabled_ && goog.isDefAndNotNull(tooltipColumnIndex) && (label.tooltipText = this.getCustomTooltipText_(tooltipColumnIndex, annotation.rowIndex));
      labels.push(label);
      labelY -= textStyle.fontSize
    }
  }
  stemLength = noStem ? 0 : actualStemLength;
  var stemOrientation = gviz.canviz.Options.Orientation.VERTICAL;
  isBar && orientation === gviz.canviz.Options.Orientation.VERTICAL && (stemLength = 0, stemOrientation = gviz.canviz.Options.Orientation.HORIZONTAL, stemX = target.left + target.width, stemY = Math.floor(target.top + target.height / 2));
  return{stem:{x:stemX, y:stemY, length:stemLength, orientation:stemOrientation, color:stemColor}, labels:labels, bundle:bundle ? bundle : null}
};
gviz.canviz.AxisChartDefiner.prototype.positionLineAnnotation_ = function(point, annotations, textStyle, lineColor) {
  for(var x = point.x, y = point.y, margins = textStyle.fontSize, textLayouts = [], i = 0;i < annotations.length;i++) {
    var annotation = annotations[i], textLayout = gviz.canviz.textutils.calcTextLayout(this.chartDef_.textMeasureFunction, annotation.text, textStyle, this.chartDef_.chartArea.height - margins);
    textLayouts.push(textLayout)
  }
  var stemTop, stemBottom;
  if(goog.isDefAndNotNull(y)) {
    for(var maxAnnotationLength = 0, i = 0;i < textLayouts.length;i++) {
      textLayout = textLayouts[i], maxAnnotationLength = Math.max(maxAnnotationLength, textLayout.maxLineWidth)
    }
    var stemLength = maxAnnotationLength + margins;
    stemTop = Math.round(y - stemLength / 2);
    stemTop < this.chartDef_.chartArea.top && (stemTop = this.chartDef_.chartArea.top);
    stemBottom = stemTop + stemLength;
    stemBottom > this.chartDef_.chartArea.bottom && (stemBottom = this.chartDef_.chartArea.bottom, stemTop = stemBottom - stemLength)
  }else {
    stemTop = this.chartDef_.chartArea.top, stemBottom = this.chartDef_.chartArea.bottom
  }
  for(var stemMiddle = Math.round((stemTop + stemBottom) / 2), labelX = x + 2, labels = [], i = 0;i < annotations.length;i++) {
    var annotation = annotations[i], textLayout = textLayouts[i], label = {text:annotation, textStyle:textStyle, lines:[{x:labelX, y:stemMiddle, length:textLayout.maxLineWidth, text:textLayout.lines[0]}], paralAlign:gviz.graphics.TextAlign.CENTER, perpenAlign:gviz.graphics.TextAlign.START, anchor:null, angle:270}, tooltipColumnIndex = annotation.tooltipColumnIndex;
    this.isTooltipEnabled_ && goog.isDefAndNotNull(tooltipColumnIndex) && (label.tooltipText = this.getCustomTooltipText_(tooltipColumnIndex, annotation.rowIndex));
    labels.push(label);
    labelX += textStyle.fontSize
  }
  return{stem:{x:x, y:stemTop, length:stemBottom - stemTop, orientation:gviz.canviz.Options.Orientation.VERTICAL, color:lineColor}, labels:labels, bundle:null}
};
gviz.canviz.AxisChartDefiner.prototype.positionNonScaledElementsForSerie_ = function(serieIndex) {
  var chartDef = this.chartDef_, serie = chartDef.series[serieIndex], scaleFunction = this.chooseScaleFunctionForSerie_(serie);
  serie.points && goog.array.forEach(serie.points, function(point) {
    goog.isDefAndNotNull(point) && (point.scaled = scaleFunction(point.nonScaled), goog.isDefAndNotNull(point.nonScaledLeftControlPoint) && (point.leftControlPoint = scaleFunction(point.nonScaledLeftControlPoint)), goog.isDefAndNotNull(point.nonScaledRightControlPoint) && (point.rightControlPoint = scaleFunction(point.nonScaledRightControlPoint)))
  });
  serie.intervals && (0 < serie.intervals.lines.length || 0 < serie.intervals.areas.length) && this.createPathIntervals_(serie)
};
gviz.canviz.AxisChartDefiner.prototype.positionNonScaledElements_ = function() {
  var chartDef = this.chartDef_;
  goog.array.forEach(chartDef.series, function(serie, serieIndex) {
    this.positionNonScaledElementsForSerie_(serieIndex)
  }, this)
};
gviz.canviz.AxisChartDefiner.prototype.createPathIntervals_ = function(serie) {
  var paths = {}, settings = serie.intervals.settings;
  serie.intervals.paths = [];
  for(var intervalIsPathInterval = function(columnIndex) {
    var style = settings[columnIndex].style;
    return style == gviz.canviz.Options.IntervalStyle.AREA || style == gviz.canviz.Options.IntervalStyle.LINE
  }, addPathVerticesFromIntervalRect = function(columnIndex, rect) {
    paths[columnIndex] || addIntervalPath(columnIndex);
    paths[columnIndex].line.push(new goog.math.Vec2(rect.left, rect.top));
    paths[columnIndex].bottom && paths[columnIndex].bottom.push(new goog.math.Vec2(rect.left + rect.width, rect.top + rect.height))
  }, addIntervalPath = function(columnIndex) {
    var brush = settings[columnIndex].brush.clone(), style = settings[columnIndex].style, path = {};
    path.columnIndex = columnIndex;
    path.line = [];
    style == gviz.canviz.Options.IntervalStyle.AREA ? (brush.setStrokeWidth(0), path.bottom = []) : brush.setFillOpacity(0);
    path.brush = brush;
    paths[columnIndex] = path
  }, flushIntervalPath = function(columnIndex) {
    var path = paths[columnIndex];
    delete paths[columnIndex];
    if(path && 1 < path.line.length) {
      path.bottom && path.bottom.reverse();
      if(settings[columnIndex].curveType != gviz.canviz.Options.CurveType.NONE) {
        var isFunction = settings[columnIndex].curveType == gviz.canviz.Options.CurveType.FUNCTION, smoothingFactor = settings[columnIndex].smoothingFactor;
        path.controlPoints = gviz.canviz.util.calculateControlPoints(path.line, smoothingFactor, isFunction, !1, !1);
        path.bottom && (path.bottomControlPoints = gviz.canviz.util.calculateControlPoints(path.bottom, smoothingFactor, isFunction, !1, !1))
      }
      serie.intervals.paths.push(path)
    }
  }, i = 0;i < serie.points.length;i++) {
    var seenColumnIndices = {}, point = serie.points[i];
    if(point && point.scaled && point.scaled.intervalRects) {
      for(var intervalRects = point.scaled.intervalRects, rectIndex = 0;rectIndex < intervalRects.length;++rectIndex) {
        var columnIndex$$0 = intervalRects[rectIndex].columnIndex;
        intervalIsPathInterval(columnIndex$$0) && (seenColumnIndices[columnIndex$$0] = !0, addPathVerticesFromIntervalRect(columnIndex$$0, intervalRects[rectIndex].rect))
      }
    }
    for(columnIndex$$0 in paths) {
      seenColumnIndices[columnIndex$$0] || settings[columnIndex$$0].interpolateNulls || flushIntervalPath(columnIndex$$0)
    }
  }
  for(columnIndex$$0 in paths) {
    flushIntervalPath(columnIndex$$0)
  }
};
gviz.canviz.AxisChartDefiner.prototype.chooseScaleFunctionForSerie_ = function(serie) {
  switch(serie.type) {
    case gviz.canviz.Options.SerieType.SCATTER:
      return goog.bind(this.scaleScatterPoint_, this, serie);
    case gviz.canviz.Options.SerieType.BUBBLES:
      return goog.bind(this.scaleBubblePoint_, this, serie);
    case gviz.canviz.Options.SerieType.LINE:
      return goog.bind(this.scaleLinePoint_, this, serie);
    case gviz.canviz.Options.SerieType.BARS:
      return goog.bind(this.scaleBar_, this, serie);
    case gviz.canviz.Options.SerieType.STEPPED_AREA:
      return goog.bind(this.scaleSteppedArea_, this, serie);
    case gviz.canviz.Options.SerieType.CANDLESTICKS:
      return goog.bind(this.scaleCandlestick_, this, serie);
    case gviz.canviz.Options.SerieType.AREA:
      return goog.bind(this.scaleAreaPoint_, this, serie)
  }
  return null
};
gviz.canviz.AxisChartDefiner.prototype.scaleScatterPoint_ = function(serie, nonScaledPoint) {
  goog.asserts.assert(goog.isDefAndNotNull(this.hAxisDefiners_) && this.hAxisDefiners_[0]);
  goog.asserts.assert(goog.isDefAndNotNull(this.vAxisDefiners_) && this.vAxisDefiners_[0]);
  var x = this.hAxisDefiners_[0].calcPositionForNumericValue(nonScaledPoint.x), y = this.vAxisDefiners_[0].calcPositionForNumericValue(nonScaledPoint.y);
  return{x:x, y:y}
};
gviz.canviz.AxisChartDefiner.prototype.scaleBubblePoint_ = function(serie, nonScaledPoint) {
  goog.asserts.assert(goog.isDefAndNotNull(this.hAxisDefiners_) && this.hAxisDefiners_[0]);
  goog.asserts.assert(goog.isDefAndNotNull(this.vAxisDefiners_) && this.vAxisDefiners_[0]);
  goog.asserts.assert(this.bubbleChartDefiner_);
  return this.bubbleChartDefiner_.scaleBubble(this.hAxisDefiners_[0], this.vAxisDefiners_[0], nonScaledPoint)
};
gviz.canviz.AxisChartDefiner.prototype.scaleLinePoint_ = function(serie, nonScaledPoint) {
  var scaled = this.getPhysicalPositionByFunctionValues_(serie.targetAxisIndex, nonScaledPoint.d, nonScaledPoint.t);
  scaled.intervalRects = this.scaleIntervals_(serie, nonScaledPoint);
  return scaled
};
gviz.canviz.AxisChartDefiner.prototype.scaleBar_ = function(serie, nonScaledPoint) {
  var scaled = this.scaleBarlike_(serie, nonScaledPoint, nonScaledPoint.from, nonScaledPoint.to);
  return scaled ? {top:scaled.top, left:scaled.left, width:scaled.width, height:scaled.height, intervalRects:this.scaleIntervals_(serie, nonScaledPoint)} : null
};
gviz.canviz.AxisChartDefiner.prototype.scaleCandlestick_ = function(serie, nonScaledPoint) {
  var rect = this.scaleBarlike_(serie, nonScaledPoint, nonScaledPoint.rectFrom, nonScaledPoint.rectTo), line = this.scaleBarlike_(serie, nonScaledPoint, nonScaledPoint.lineFrom, nonScaledPoint.lineTo);
  if(!rect || !line) {
    return null
  }
  line.width = 2;
  var lineWidth = rect.width % 2 ? 3 : 2;
  line.left += (rect.width - lineWidth) / 2;
  var barBrush = this.getCandleStickBrush_(nonScaledPoint.inverted, serie);
  if(barBrush.hasStroke()) {
    var strokeCompensation = barBrush.getStrokeWidth() / 2;
    rect.height -= 2 * strokeCompensation;
    rect.width -= 2 * strokeCompensation;
    rect.left += strokeCompensation;
    rect.top += strokeCompensation
  }
  rect.height = Math.max(rect.height, 2);
  rect.width = Math.max(rect.width, 1);
  return{rect:rect, line:line}
};
gviz.canviz.AxisChartDefiner.prototype.getCandleStickBrush_ = function(inverted, serie) {
  return inverted ? serie.candlestick.fallingBrush : serie.candlestick.risingBrush
};
gviz.canviz.AxisChartDefiner.prototype.getDiffBarBrush_ = function(serie, columnRole) {
  return columnRole == gviz.canviz.ColumnRole.DIFF_OLD_DATA ? serie.diff.background.pointBrush : null
};
gviz.canviz.AxisChartDefiner.prototype.scaleSteppedArea_ = function(serie, nonScaledPoint) {
  var targetAxis = this.targetAxisDefiners_[serie.targetAxisIndex];
  goog.isDefAndNotNull(nonScaledPoint.from) || (nonScaledPoint.from = targetAxis.valueScale.valueToNumber(targetAxis.baseline.dataValue));
  var domainAxis = this.domainAxisDefiner_, division = nonScaledPoint.division, divisionMiddle = domainAxis.ticks[division].coordinate, divisionWidth = domainAxis.numericValueToPixelsFactor, domainFrom = Math.floor(divisionMiddle - domainAxis.direction * divisionWidth / 2), domainTo = Math.floor(divisionMiddle + domainAxis.direction * divisionWidth / 2), targetFrom = targetAxis.calcPositionForNumericValue(nonScaledPoint.from), targetTo = targetAxis.calcPositionForNumericValue(nonScaledPoint.to), 
  corner1 = this.getPhysicalPositionByFunctionPositions_(domainFrom, targetFrom), corner3 = this.getPhysicalPositionByFunctionPositions_(domainFrom, targetTo), corner4 = this.getPhysicalPositionByFunctionPositions_(domainTo, targetTo), outline = [], connectSteps = this.options_.inferBooleanValue("connectSteps", !0);
  if(connectSteps && goog.isDefAndNotNull(nonScaledPoint.previousTo)) {
    var previousDomainTo = domainFrom, previousTargetTo = targetAxis.calcPositionForNumericValue(nonScaledPoint.previousTo), previousCorner4 = this.getPhysicalPositionByFunctionPositions_(previousDomainTo, previousTargetTo);
    outline.push(previousCorner4)
  }
  outline.push(corner3);
  outline.push(corner4);
  return{bar:gviz.canviz.vectorutils.cornersToRectangle(corner1.x, corner1.y, corner4.x, corner4.y), outline:outline, intervalRects:this.scaleIntervals_(serie, nonScaledPoint)}
};
gviz.canviz.AxisChartDefiner.prototype.getBarScaledMin_ = function(targetAxis, from, to) {
  return Math.min(targetAxis.calcPositionForNumericValue(from), targetAxis.calcPositionForNumericValue(to))
};
gviz.canviz.AxisChartDefiner.prototype.getBarScaledMax_ = function(targetAxis, from, to) {
  return Math.max(targetAxis.calcPositionForNumericValue(from), targetAxis.calcPositionForNumericValue(to))
};
gviz.canviz.AxisChartDefiner.prototype.scaleBarlike_ = function(serie, nonScaledPoint, from, to) {
  var domainAxis = this.domainAxisDefiner_, targetAxis = this.targetAxisDefiners_[serie.targetAxisIndex], subDivisionDef = this.subDivisionDefinition_;
  goog.asserts.assert(subDivisionDef);
  if(!goog.isDefAndNotNull(from)) {
    var targetBaseline = targetAxis.valueScale.valueToNumber(targetAxis.baseline.dataValue);
    from = targetBaseline
  }
  if(nonScaledPoint.subDivision >= subDivisionDef.actualNumOfSubDivisions || nonScaledPoint.division >= domainAxis.ticks.length && domainAxis.type != gviz.canviz.Options.AxisType.VALUE) {
    return null
  }
  var scaledMin = this.getBarScaledMin_(targetAxis, from, to), scaledMax = this.getBarScaledMax_(targetAxis, from, to), margin = Math.min(1, 0.2 * (scaledMax - scaledMin));
  Math.floor(scaledMin + margin) < Math.floor(scaledMax) && Math.floor(scaledMin + margin) > Math.floor(scaledMin) ? (scaledMin = Math.floor(scaledMin + margin), scaledMax = Math.floor(scaledMax)) : scaledMin += margin;
  var newDataWidthScaleFactor = this.options_.inferNumberValue("diff.newData.widthFactor", gviz.canviz.Options.DEFAULT_DIFF_NEW_DATA_WIDTH_FACTOR), widthScaleFactor = nonScaledPoint.isDiffForeground ? newDataWidthScaleFactor : 1, domainAxisCenter = this.getPointCenterAlongDomainAxis_(nonScaledPoint), domainAxisHalfWidth = widthScaleFactor * subDivisionDef.subDivisionWidth / 2, domainAxisFrom = Math.floor(domainAxisCenter - domainAxisHalfWidth), domainAxisTo = Math.floor(domainAxisCenter + domainAxisHalfWidth), 
  corner1 = this.getPhysicalPositionByFunctionPositions_(domainAxisFrom, scaledMin), corner2 = this.getPhysicalPositionByFunctionPositions_(domainAxisTo, scaledMax), rect = gviz.canviz.vectorutils.cornersToRectangle(corner1.x, corner1.y, corner2.x, corner2.y);
  return rect
};
gviz.canviz.AxisChartDefiner.prototype.scaleAreaPoint_ = function(serie, nonScaledPoint) {
  var targetAxis = this.targetAxisDefiners_[serie.targetAxisIndex], targetBaseline = targetAxis.valueScale.valueToNumber(targetAxis.baseline.dataValue), applyBaseline = function(v) {
    return goog.isDefAndNotNull(v) ? v : targetBaseline
  }, p = this.getPhysicalPositionByFunctionValues_(serie.targetAxisIndex, nonScaledPoint.d, nonScaledPoint.t), bottomFrom = this.getPhysicalPositionByFunctionValues_(serie.targetAxisIndex, nonScaledPoint.bottomFromD, applyBaseline(nonScaledPoint.bottomFromT)), bottomTo = this.getPhysicalPositionByFunctionValues_(serie.targetAxisIndex, nonScaledPoint.bottomToD, applyBaseline(nonScaledPoint.bottomToT)), continueFrom = this.getPhysicalPositionByFunctionValues_(serie.targetAxisIndex, nonScaledPoint.continueFromD, 
  applyBaseline(nonScaledPoint.continueFromT)), continueTo = this.getPhysicalPositionByFunctionValues_(serie.targetAxisIndex, nonScaledPoint.continueToD, applyBaseline(nonScaledPoint.continueToT)), intervalRects = this.scaleIntervals_(serie, nonScaledPoint);
  return{x:p.x, y:p.y, bottomFromX:bottomFrom.x, bottomFromY:bottomFrom.y, bottomToX:bottomTo.x, bottomToY:bottomTo.y, continueFromX:continueFrom.x, continueFromY:continueFrom.y, continueToX:continueTo.x, continueToY:continueTo.y, intervalRects:intervalRects}
};
gviz.canviz.AxisChartDefiner.prototype.scaleIntervals_ = function(serie, nonScaledPoint) {
  if(!nonScaledPoint.intervalMarks) {
    return[]
  }
  var domainAxis = this.domainAxisDefiner_, targetAxis = this.targetAxisDefiners_[serie.targetAxisIndex], subDivisionDef = this.subDivisionDefinition_;
  goog.asserts.assert(subDivisionDef);
  if(nonScaledPoint.subDivision >= subDivisionDef.actualNumOfSubDivisions || nonScaledPoint.division >= domainAxis.ticks.length && domainAxis.type != gviz.canviz.Options.AxisType.VALUE) {
    return[]
  }
  for(var domainCenter = this.getPointCenterAlongDomainAxis_(nonScaledPoint), intervalRects = [], i = 0, mark;mark = nonScaledPoint.intervalMarks[i];i++) {
    var highPosition = targetAxis.calcPositionForNumericValue(mark.highT), lowPosition = targetAxis.calcPositionForNumericValue(mark.lowT), domianSpacing;
    domianSpacing = domainAxis.type == gviz.canviz.Options.AxisType.VALUE ? domainAxis.ticks && 1 < domainAxis.ticks.length ? domainAxis.ticks[1].coordinate - domainAxis.ticks[0].coordinate : 0 : subDivisionDef.subDivisionWidth;
    var domainSize = domianSpacing * mark.spanD, targetSize = Math.abs(highPosition - lowPosition), leftTop = this.getPhysicalPositionByFunctionPositions_(domainCenter - domainSize / 2, Math.min(lowPosition, highPosition)), left = leftTop.x, top = leftTop.y, widthHeight = this.getPhysicalPositionByFunctionPositions_(domainSize, targetSize), width = widthHeight.x, height = widthHeight.y, boundingBox = new goog.math.Rect(left, top, width, height);
    intervalRects.push({rect:boundingBox, columnIndex:mark.columnIndex})
  }
  return intervalRects
};
gviz.canviz.AxisChartDefiner.prototype.getPointCenterAlongDomainAxis_ = function(nonScaledPoint) {
  var domainAxis = this.domainAxisDefiner_, subDivisionDef = this.subDivisionDefinition_;
  goog.asserts.assert(subDivisionDef);
  var targetNumericValue;
  targetNumericValue = domainAxis.type == gviz.canviz.Options.AxisType.VALUE ? domainAxis.calcPositionForNumericValue(nonScaledPoint.d) : domainAxis.ticks[nonScaledPoint.division].coordinate;
  return targetNumericValue - subDivisionDef.divisionOffsetFromTick + (subDivisionDef.subDivisionWidth + 1) * nonScaledPoint.subDivision + subDivisionDef.subDivisionWidth / 2
};
gviz.canviz.AxisChartDefiner.resolveSerieRelativeColor_ = function(colorString, serieColor) {
  switch(colorString) {
    case gviz.canviz.Options.SeriesRelativeColor.DARK:
      return serieColor.dark;
    case gviz.canviz.Options.SeriesRelativeColor.LIGHT:
      return serieColor.light;
    case gviz.canviz.Options.SeriesRelativeColor.COLOR:
      return serieColor.color;
    default:
      return colorString
  }
};
gviz.canviz.AxisChartDefiner.prototype.getPhysicalPositionByFunctionPositions_ = function(domainPos, targetPos) {
  goog.asserts.assert(!isNaN(domainPos));
  goog.asserts.assert(!isNaN(targetPos));
  switch(this.chartDef_.orientation) {
    case gviz.canviz.Options.Orientation.HORIZONTAL:
      return{x:domainPos, y:targetPos};
    case gviz.canviz.Options.Orientation.VERTICAL:
      return{x:targetPos, y:domainPos}
  }
  throw Error("Invalid orientation.");
};
gviz.canviz.AxisChartDefiner.prototype.getPhysicalPositionByFunctionValues_ = function(targetAxisIndex, domainValue, targetValue) {
  var domainAxisDefiner = this.domainAxisDefiner_, targetAxisDefiner = this.targetAxisDefiners_[targetAxisIndex], d = domainAxisDefiner.calcPositionForNumericValue(domainValue), t = targetAxisDefiner.calcPositionForNumericValue(targetValue), point = this.getPhysicalPositionByFunctionPositions_(d, t);
  return point
};
gviz.canviz.AxisChartDefiner.prototype.createUncertainBrush_ = function(normalBrush, needStroking) {
  var brush = normalBrush.clone();
  brush.hasFill() && "#ffffff" != brush.getFill() ? (brush.setPattern(new gviz.graphics.Pattern(gviz.graphics.Pattern.Style.PRIMARY_DIAGONAL_STRIPES, brush.getFill())), !brush.hasStroke() && needStroking && (brush.setStroke(brush.getFill()), brush.setStrokeWidth(1))) : brush.hasStroke() && brush.setStrokeDashStyle(gviz.graphics.Brush.StrokeDashStyle.DASH);
  return brush
};
gviz.canviz.AxisChartDefiner.prototype.createEmphasizedBrush_ = function(normalBrush, emphasis) {
  var brush = normalBrush.clone();
  brush.setStrokeWidth(brush.getStrokeWidth() * emphasis);
  return brush
};
gviz.canviz.AxisChartDefiner.prototype.calcCertainty_ = function(serie, categoryIndex) {
  var dataView = this.dataView_, certaintyColumns = serie.columns[gviz.canviz.ColumnRole.CERTAINTY] || [];
  if(certaintyColumns.length) {
    var certainty = dataView.getValue(categoryIndex, certaintyColumns[0]);
    if(goog.isDefAndNotNull(certainty)) {
      return"boolean" == dataView.getColumnType(certaintyColumns[0]) ? certainty ? 1 : 0 : certainty
    }
  }
  return 1
};
gviz.canviz.AxisChartDefiner.prototype.calcScope_ = function(serie, categoryIndex) {
  var dataView = this.dataView_, scopeColumns = serie.columns[gviz.canviz.ColumnRole.SCOPE] || [];
  if(scopeColumns.length) {
    var scope = dataView.getValue(categoryIndex, scopeColumns[0]);
    if(goog.isDefAndNotNull(scope)) {
      return!!scope
    }
  }
  return!0
};
gviz.canviz.AxisChartDefiner.prototype.calcEmphasis_ = function(serie, categoryIndex) {
  var dataView = this.dataView_, emphasisColumns = serie.columns[gviz.canviz.ColumnRole.EMPHASIS] || [];
  if(emphasisColumns.length) {
    var emphasis = dataView.getValue(categoryIndex, emphasisColumns[0]);
    if(goog.isDefAndNotNull(emphasis)) {
      return"boolean" == dataView.getColumnType(emphasisColumns[0]) ? emphasis ? 2 : 1 : emphasis
    }
  }
  return 1
};
gviz.canviz.AxisChartDefiner.prototype.calcGap_ = function(categoryIndex) {
  var gapColumn = this.findGapColumn_();
  if(!goog.isNull(gapColumn)) {
    var gap = this.dataView_.getValue(categoryIndex, gapColumn);
    return gap
  }
  return null
};
gviz.canviz.AxisChartDefiner.prototype.findGapColumn_ = function() {
  if(goog.isNull(this.domainAxisDefiner_) || this.domainAxisDefiner_.type != gviz.canviz.Options.AxisType.VALUE) {
    return null
  }
  var domainRelatedColumns = this.chartDef_.domainsColumnStructure[0].columns, gapColumns = domainRelatedColumns[gviz.canviz.ColumnRole.GAP] || [];
  return goog.array.isEmpty(gapColumns) ? null : gapColumns[0]
};
gviz.canviz.AxisChartDefiner.prototype.calcIntervalsLayout_ = function(serie, division, offset, shouldExtendTargetAxisRange) {
  var intervals = serie.intervals;
  if(!intervals) {
    return null
  }
  for(var targetAxisIndex = serie.targetAxisIndex, targetAxis = this.targetAxisDefiners_[targetAxisIndex], dataView = this.dataView_, intervalMarks = [], addIntervalRect = function(lowColumn, highColumn, span) {
    var lowValue = targetAxis.valueScale.valueToNumber(dataView.getValue(division, lowColumn)), highValue = targetAxis.valueScale.valueToNumber(dataView.getValue(division, highColumn));
    if(goog.isDefAndNotNull(lowValue) && goog.isDefAndNotNull(highValue)) {
      lowValue += offset;
      highValue += offset;
      shouldExtendTargetAxisRange && (targetAxis.extendRangeToIncludeNumber(lowValue), targetAxis.extendRangeToIncludeNumber(highValue));
      var mark = {lowT:lowValue, highT:highValue, spanD:span, columnIndex:lowColumn};
      intervalMarks.push(mark)
    }
  }, stickIndex = 0;stickIndex < intervals.sticks.length;stickIndex += 2) {
    addIntervalRect(intervals.sticks[stickIndex], intervals.sticks[stickIndex + 1], 0)
  }
  for(var boxLowIndex = 0, boxHighIndex = intervals.boxes.length - 1;boxLowIndex <= boxHighIndex;boxLowIndex++, boxHighIndex--) {
    var lowColumn = intervals.boxes[boxLowIndex], highColumn = intervals.boxes[boxHighIndex], boxWidth = intervals.settings[lowColumn].boxWidth;
    addIntervalRect(lowColumn, highColumn, boxWidth)
  }
  for(var pointIndex = 0;pointIndex < intervals.points.length;pointIndex++) {
    var column = intervals.points[pointIndex];
    addIntervalRect(column, column, 0)
  }
  for(var barIndex = 0;barIndex < intervals.bars.length;barIndex++) {
    var column = intervals.bars[barIndex], settings = intervals.settings[column], span$$0 = 0 == barIndex || barIndex == intervals.bars.length - 1 ? settings.barWidth : settings.shortBarWidth;
    addIntervalRect(column, column, span$$0)
  }
  for(var areaLowIndex = 0, areaHighIndex = intervals.areas.length - 1;areaLowIndex <= areaHighIndex;areaLowIndex++, areaHighIndex--) {
    lowColumn = intervals.areas[areaLowIndex], highColumn = intervals.areas[areaHighIndex], addIntervalRect(lowColumn, highColumn, 0)
  }
  for(var lineIndex = 0;lineIndex < intervals.lines.length;lineIndex++) {
    column = intervals.lines[lineIndex], addIntervalRect(column, column, 0)
  }
  return intervalMarks.length ? intervalMarks : null
};
gviz.canviz.AxisChartDefiner.prototype.allocateSubDivisions_ = function(numOfSubDivisions) {
  this.numOfSubDivisions_ = Math.max(this.numOfSubDivisions_, numOfSubDivisions)
};
gviz.canviz.AxisChartDefiner.prototype.calcSubDivisionDefinition_ = function() {
  var chartDef = this.chartDef_;
  if(chartDef.serieTypeCount[gviz.canviz.Options.SerieType.BARS] || chartDef.serieTypeCount[gviz.canviz.Options.SerieType.CANDLESTICKS] || !goog.isNull(goog.array.find(chartDef.series, function(serie) {
    return goog.isDefAndNotNull(serie.intervals)
  }))) {
    goog.asserts.assert(this.domainAxisDefiner_);
    var categories = goog.array.filter(chartDef.categories, function(category, i) {
      return 0 != this.calcGap_(i)
    }, this), minDistance = gviz.canviz.AxisChartDefiner.calcMinDistanceBetweenCategories_(this.domainAxisDefiner_, categories), divisionTotalWidth = Math.max(minDistance, 1), divisionWidth = this.options_.inferAbsOrPercentageValue("bar.groupWidth", divisionTotalWidth), divisionWidth = Math.max(divisionWidth, 1), actualNumOfSubDivisions = Math.min(this.numOfSubDivisions_, Math.floor((divisionWidth + 1) / 2)), subDivisionWidth = (divisionWidth - actualNumOfSubDivisions + 1) / actualNumOfSubDivisions;
    divisionTotalWidth > divisionWidth && (subDivisionWidth = Math.floor(subDivisionWidth));
    var divisionOffsetFromTick = ((subDivisionWidth + 1) * actualNumOfSubDivisions - 1) / 2;
    this.subDivisionDefinition_ = {actualNumOfSubDivisions:actualNumOfSubDivisions, subDivisionWidth:subDivisionWidth, divisionOffsetFromTick:divisionOffsetFromTick}
  }
};
gviz.canviz.AxisChartDefiner.calcMinDistanceBetweenCategories_ = function(domainAxisDefiner, categories) {
  if(goog.array.isEmpty(categories)) {
    return 0
  }
  if(domainAxisDefiner.type == gviz.canviz.Options.AxisType.VALUE) {
    for(var minDistance = domainAxisDefiner.axisLength, prevPosition = null, i = 0;i < categories.length;i++) {
      var category = categories[i], dataValue = category.data, position = domainAxisDefiner.calcPositionFromDataValue(dataValue);
      if(goog.isDefAndNotNull(prevPosition)) {
        var distance = Math.abs(position - prevPosition), minDistance = Math.min(minDistance, distance)
      }
      prevPosition = position
    }
    return minDistance
  }
  return Math.abs(domainAxisDefiner.calcPositionFromDataValue(1) - domainAxisDefiner.calcPositionFromDataValue(0))
};
gviz.canviz.AxisChartDefiner.prototype.getNumericDomainValue_ = function(row, opt_serie) {
  var dataView = this.dataView_, domainAxis = this.domainAxisDefiner_, numericDomainValue;
  if(domainAxis.type == gviz.canviz.Options.AxisType.VALUE) {
    var domainValue = opt_serie && opt_serie.isVirtual ? opt_serie.data[row][0] : dataView.getValue(row, 0);
    numericDomainValue = domainAxis.valueScale.valueToNumber(domainValue)
  }else {
    numericDomainValue = row
  }
  return numericDomainValue
};
// Input 328
gviz.canviz.Tooltip = {};
gviz.canviz.Tooltip.Aggregator = function(chartDefinition) {
  this.chartDefinition = chartDefinition
};
gviz.canviz.Tooltip.Aggregator.prototype.aggregate = function(data) {
  var aggregate = {index:{}, order:[], titles:{}};
  goog.array.forEach(data, function(datum) {
    var key = this.getKey(datum);
    if(null != key) {
      if(!aggregate.titles.hasOwnProperty(key)) {
        var title = this.getTitle(datum);
        title && (aggregate.titles[key] = title)
      }
      aggregate.index.hasOwnProperty(key) || (aggregate.index[key] = [], aggregate.order.push(key));
      aggregate.index[key].push(datum)
    }
  }, this);
  return aggregate
};
gviz.canviz.Tooltip.Aggregator.prototype.getCategoryTitle = function(datum) {
  var title = this.chartDefinition.series[datum.serie].points[datum.category].tooltipText.categoryTitle;
  return title ? title : this.chartDefinition.categories[datum.category] ? this.chartDefinition.categories[datum.category].titles[0] : null
};
gviz.canviz.Tooltip.Aggregator.prototype.getSeriesTitle = function(datum) {
  var title = this.chartDefinition.series[datum.serie].points[datum.category].tooltipText.serieTitle;
  return title || this.chartDefinition.series[datum.serie].title
};
// Input 329
gviz.canviz.Tooltip.CategoryAggregator = function(chartDefinition) {
  gviz.canviz.Tooltip.Aggregator.call(this, chartDefinition)
};
goog.inherits(gviz.canviz.Tooltip.CategoryAggregator, gviz.canviz.Tooltip.Aggregator);
gviz.canviz.Tooltip.CategoryAggregator.prototype.getKey = function(datum) {
  return datum.category
};
gviz.canviz.Tooltip.CategoryAggregator.prototype.getTitle = function(datum) {
  return this.getCategoryTitle(datum)
};
gviz.canviz.Tooltip.CategoryAggregator.prototype.getContent = function(bodyCreator, text, datum) {
  var title = this.getSeriesTitle(datum);
  return bodyCreator.getSerieLines(title, text.content || "", !0, bodyCreator.showColorCodeForAggregate, this.chartDefinition.series[datum.serie])
};
// Input 330
gviz.canviz.Tooltip.SeriesAggregator = function(chartDefinition) {
  gviz.canviz.Tooltip.Aggregator.call(this, chartDefinition)
};
goog.inherits(gviz.canviz.Tooltip.SeriesAggregator, gviz.canviz.Tooltip.Aggregator);
gviz.canviz.Tooltip.SeriesAggregator.prototype.getKey = function(datum) {
  return datum.serie
};
gviz.canviz.Tooltip.SeriesAggregator.prototype.getTitle = function(datum) {
  return this.getSeriesTitle(datum)
};
gviz.canviz.Tooltip.SeriesAggregator.prototype.getContent = function(bodyCreator, text, datum) {
  var title = this.getCategoryTitle(datum) || "";
  return[bodyCreator.getKeyValueLine(title, text.content || "")]
};
// Input 331
gviz.canviz.TooltipBodyCreator = function(chartOptions, chartTextStyle, focusTarget, opt_actionsMenuDefiner) {
  var tooltipTextStyle = chartOptions.inferTextStyleValue("tooltip.textStyle", {fontName:chartTextStyle.fontName, fontSize:chartTextStyle.fontSize});
  this.showColorCode = chartOptions.inferBooleanValue("tooltip.showColorCode", focusTarget == gviz.canviz.Options.FocusTarget.CATEGORY);
  this.showColorCodeForAggregate = chartOptions.inferBooleanValue("tooltip.showColorCode", !0);
  this.showEmpty_ = chartOptions.inferBooleanValue("tooltip.showEmpty", !0);
  this.textStyle_ = tooltipTextStyle;
  this.boldTextStyle_ = gviz.graphics.util.createBoldTextStyle(tooltipTextStyle, !0);
  this.actionsMenuDefiner = opt_actionsMenuDefiner || null
};
gviz.canviz.TooltipBodyCreator.prototype.embedActionsMenu = function() {
};
gviz.canviz.TooltipBodyCreator.prototype.createDatumAnnotationBody = function(interactionState, seriesIndex, categoryIndex, annotationIndex) {
  var series = interactionState.chartDefinition.series[seriesIndex], datum = series.points[categoryIndex], annotation = datum.annotation.labels[annotationIndex], body = {entries:[gviz.util.tooltip.definer.createBodyTextLineEntry(annotation.tooltipText.content, this.getTextStyle())]};
  this.embedActionsMenu(body, interactionState.actionsMenuEntries);
  return body
};
gviz.canviz.TooltipBodyCreator.prototype.createCategoryAnnotationBody = function(interactionState, categoryIndex, annotationIndex) {
  var category = interactionState.chartDefinition.categories[categoryIndex], annotation = category.annotation.labels[annotationIndex], body = {entries:[gviz.util.tooltip.definer.createBodyTextLineEntry(annotation.tooltipText.content, this.getTextStyle())]};
  0 < interactionState.actionsMenuEntries.length && this.embedActionsMenu(body, interactionState.actionsMenuEntries);
  return body
};
gviz.canviz.TooltipBodyCreator.prototype.getTextStyle = function() {
  return this.textStyle_
};
gviz.canviz.TooltipBodyCreator.prototype.getBoldTextStyle = function() {
  return this.boldTextStyle_
};
gviz.canviz.TooltipBodyCreator.prototype.hasActionsMenu = function() {
  return goog.isDefAndNotNull(this.actionsMenuDefiner) && 0 < this.actionsMenuDefiner.getEntries().length
};
gviz.canviz.DefaultTooltipBodyCreator = function(chartOptions, chartTextStyle, focusTarget, opt_actionsMenuDefiner) {
  gviz.canviz.TooltipBodyCreator.call(this, chartOptions, chartTextStyle, focusTarget, opt_actionsMenuDefiner)
};
goog.inherits(gviz.canviz.DefaultTooltipBodyCreator, gviz.canviz.TooltipBodyCreator);
gviz.canviz.DefaultTooltipBodyCreator.prototype.createDatumBody = function(interactionState, seriesIndex, categoryIndex) {
  var series = interactionState.chartDefinition.series[seriesIndex], text = series.points[categoryIndex].tooltipText, chartDef = interactionState.chartDefinition, isTitleInSeparateLine = !1, linesColor = null, prefixText = null, alignColumns = goog.isDefAndNotNull(chartDef.isDiff) && chartDef.isDiff;
  if(chartDef.isDiff) {
    var isTitleInSeparateLine = !0, prefixText = [gviz.canviz.Options.DEFAULT_DIFF_NEW_DATA_PREFIX_TEXT, gviz.canviz.Options.DEFAULT_DIFF_OLD_DATA_PREFIX_TEXT], serieType = series.type;
    if(serieType === gviz.canviz.Options.SerieType.BARS) {
      linesColor = [{color:series.pointBrush.getFill(), alpha:series.pointBrush.getFillOpacity()}, {color:series.diff.background.pointBrush.getFill(), alpha:series.diff.background.pointBrush.getFillOpacity()}]
    }else {
      if(serieType === gviz.canviz.Options.SerieType.SCATTER) {
        var oldDataSerieIndex = seriesIndex % 2 ? seriesIndex - 1 : seriesIndex, newDataSerieIndex = oldDataSerieIndex + 1, oldDataSerie = interactionState.chartDefinition.series[oldDataSerieIndex], newDataSerie = interactionState.chartDefinition.series[newDataSerieIndex], linesColor = [{color:newDataSerie.pointBrush.getFill(), alpha:newDataSerie.pointBrush.getFillOpacity()}, {color:oldDataSerie.pointBrush.getFill(), alpha:oldDataSerie.pointBrush.getFillOpacity()}]
      }else {
        throw Error("Diff chart not supported for the chosen chart type.");
      }
    }
  }
  var body = {entries:[]};
  if(text.lines) {
    text.title && this.addTitleLine_(body, text.title);
    for(var i = 0;i < text.lines.length;i++) {
      var line = text.lines[i];
      this.addKeyValueLine_(body, line.title, line.value)
    }
  }else {
    text.categoryTitle && !text.hasCustomContent ? (this.addTitleLine_(body, text.categoryTitle), this.addSerieLine_(body, text.serieTitle, text.content, !0, this.showColorCode, series, isTitleInSeparateLine, linesColor, prefixText, alignColumns)) : text.serieTitle && !text.hasCustomContent ? (isTitleInSeparateLine = !0, this.addSerieLine_(body, text.serieTitle, text.content, !0, this.showColorCode, series, isTitleInSeparateLine, linesColor, prefixText, alignColumns)) : this.addSerieLine_(body, null, 
    text.content, !1, this.showColorCode, series)
  }
  this.embedActionsMenu(body, interactionState.actionsMenuEntries);
  return body
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.createAggregateDataBody = function(interactionState, data, aggregationTarget) {
  var chartDefinition = interactionState.chartDefinition, categoryAggregator = new gviz.canviz.Tooltip.CategoryAggregator(chartDefinition), seriesAggregator = new gviz.canviz.Tooltip.SeriesAggregator(chartDefinition), aggregator = null;
  aggregationTarget == gviz.canviz.Options.AggregationTarget.CATEGORY ? aggregator = categoryAggregator : aggregationTarget == gviz.canviz.Options.AggregationTarget.SERIES && (aggregator = seriesAggregator);
  var aggregate;
  if(aggregator) {
    aggregate = aggregator.aggregate(data)
  }else {
    var categoryAggregate = categoryAggregator.aggregate(data), seriesAggregate = seriesAggregator.aggregate(data), aggregator = seriesAggregator;
    aggregate = seriesAggregate;
    1 == categoryAggregate.order.length && 1 < seriesAggregate.order.length && (aggregator = categoryAggregator, aggregate = categoryAggregate)
  }
  var body = {entries:[]};
  goog.array.forEach(aggregate.order, function(key) {
    var title = aggregate.titles[key];
    this.addTitleLine_(body, title.toString());
    goog.array.forEach(aggregate.index[key], function(datum) {
      var tooltipText = chartDefinition.series[datum.serie].points[datum.category].tooltipText, series = chartDefinition.series[datum.serie];
      tooltipText.hasCustomContent ? this.addSerieLine_(body, null, tooltipText.content, !1, this.showColorCode, series) : body.entries.push.apply(body.entries, aggregator.getContent(this, tooltipText, datum))
    }, this)
  }, this);
  this.embedActionsMenu(body, interactionState.actionsMenuEntries, 0 < data.length);
  return body
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.createSeriesBody = function(interactionState, seriesIndex) {
  var chartDef = interactionState.chartDefinition, series = chartDef.series[seriesIndex], text = series.tooltipText, linesColor = null, prefixText = null, alignColumns = goog.isDefAndNotNull(chartDef.isDiff) && chartDef.isDiff;
  if(chartDef.isDiff) {
    var seriesCount = chartDef.series.length, seriesInEachLayer = seriesCount / chartDef.pie.layers.length, twinIndex = (seriesIndex + seriesInEachLayer) % seriesCount, twinSeries = chartDef.series[twinIndex], seriesColor = {color:series.brush.getFill(), alpha:series.brush.getFillOpacity()}, twinColor = {color:twinSeries.brush.getFill(), alpha:twinSeries.brush.getFillOpacity()}, linesColor = seriesIndex > twinIndex ? [seriesColor, twinColor] : [twinColor, seriesColor], prefixText = [" Current: ", 
    "Previous: "]
  }
  var body = {entries:[]};
  if(text.serieTitle) {
    var isTitleInSeparateLine = !0;
    this.addSerieLine_(body, text.serieTitle, text.content, !0, this.showColorCode, series, isTitleInSeparateLine, linesColor, prefixText, alignColumns)
  }else {
    this.addSerieLine_(body, null, text.content, !1, this.showColorCode, series)
  }
  this.embedActionsMenu(body, interactionState.actionsMenuEntries);
  return body
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.createAggregateSeriesBody = function(interactionState, seriesIndices) {
  var chartDefinition = interactionState.chartDefinition, body = {entries:[]};
  goog.array.forEach(seriesIndices, goog.bind(function(seriesIndex) {
    var series = chartDefinition.series[seriesIndex], text = series.tooltipText;
    text.serieTitle ? this.addSerieLine_(body, text.serieTitle, text.content, !0, this.showColorCode, series, !0) : this.addSerieLine_(body, null, text.content, !1, this.showColorCode, series)
  }, this));
  this.embedActionsMenu(body, interactionState.actionsMenuEntries);
  return body
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.createCategoryBody = function(interactionState, categoryIndex) {
  var chartDefinition = interactionState.chartDefinition, category = chartDefinition.categories[categoryIndex], text = category.tooltipText, hasData = !1, body = {entries:[]};
  if(text && text.content) {
    this.addSerieLine_(body, null, text.content, !1, !1)
  }else {
    var seriesIndex = 0, direction = 1, lastIndex = chartDefinition.series.length;
    gviz.canviz.chartdefinitionutil.reverseSeriesLabelsVertically(chartDefinition) && (seriesIndex = chartDefinition.series.length - 1, lastIndex = direction = -1);
    for(var domainIndex = null;seriesIndex != lastIndex;seriesIndex += direction) {
      var series = chartDefinition.series[seriesIndex];
      if(domainIndex != series.domainIndex) {
        var domainIndex = series.domainIndex, domainTitle = chartDefinition.categories[categoryIndex].titles[domainIndex];
        goog.string.isEmptySafe(domainTitle) || this.addTitleLine_(body, domainTitle)
      }
      series.points[categoryIndex] && series.points[categoryIndex].tooltipText && series.points[categoryIndex].tooltipText.content && (text = series.points[categoryIndex].tooltipText, this.addSerieLine_(body, text.serieTitle, text.content, !0, this.showColorCode, series), hasData = !0)
    }
  }
  goog.isDefAndNotNull(interactionState.actionsMenuEntries) && 0 < interactionState.actionsMenuEntries.length && (hasData = !0);
  this.embedActionsMenu(body, interactionState.actionsMenuEntries);
  return hasData || this.showEmpty_ ? body : null
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.addTitleLine_ = function(body, title) {
  var lineEntry = gviz.util.tooltip.definer.createBodyTextLineEntry(title, this.getBoldTextStyle());
  body.entries.push(lineEntry)
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.getSerieLines = function(serieTitle, text, isTextBold, showColorCode, opt_serie, opt_isTitleInSeparateLine, opt_linesColor, opt_prefixText, opt_alignColumns) {
  var isTitleInSeparateLine = goog.isDefAndNotNull(opt_isTitleInSeparateLine) ? opt_isTitleInSeparateLine : !1, textStyle = isTextBold ? this.getBoldTextStyle() : this.getTextStyle(), textLines = text.split("\n");
  goog.asserts.assert(!goog.isDefAndNotNull(opt_linesColor) || opt_linesColor.length == textLines.length);
  var color = showColorCode ? opt_serie.color.color : null, lineEntry;
  lineEntry = isTitleInSeparateLine && goog.isDefAndNotNull(serieTitle) ? gviz.util.tooltip.definer.createBodyTextLineEntry(serieTitle, this.getTextStyle(), null, null, color) : gviz.util.tooltip.definer.createBodyTextLineEntry(textLines[0], textStyle, serieTitle, this.getTextStyle(), color);
  for(var entries = [lineEntry], i = isTitleInSeparateLine ? 0 : 1;i < textLines.length;i++) {
    var color = goog.isDefAndNotNull(opt_linesColor) ? opt_linesColor[i].color : showColorCode ? gviz.graphics.util.NO_COLOR : null, alpha = goog.isDefAndNotNull(opt_linesColor) ? opt_linesColor[i].alpha : null, prefixText = goog.isDefAndNotNull(opt_prefixText) ? opt_prefixText[i] : null;
    lineEntry = gviz.util.tooltip.definer.createBodyTextLineEntry(textLines[i], textStyle, null, null, color, alpha, prefixText);
    lineEntry.alignColumns = opt_alignColumns;
    entries.push(lineEntry)
  }
  return entries
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.addSerieLine_ = function(body, serieTitle, text, isTextBold, showColorCode, opt_serie, opt_isTitleInSeparateLine, opt_linesColor, opt_prefixText, opt_alignColumns) {
  body.entries.push.apply(body.entries, this.getSerieLines(serieTitle, text, isTextBold, showColorCode, opt_serie, opt_isTitleInSeparateLine, opt_linesColor, opt_prefixText, opt_alignColumns))
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.getKeyValueLine = function(key, value) {
  return key ? gviz.util.tooltip.definer.createBodyTextLineEntry(value, this.getBoldTextStyle(), key, this.getTextStyle()) : null
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.addKeyValueLine_ = function(body, key, value) {
  var line = this.getKeyValueLine(key, value);
  null != line && body.entries.push(line)
};
gviz.canviz.DefaultTooltipBodyCreator.prototype.embedActionsMenu = function(body, actionsMenuEntries, opt_addSeparator) {
  actionsMenuEntries && 0 !== actionsMenuEntries.length && ((void 0 == opt_addSeparator || opt_addSeparator) && body.entries.push(gviz.util.tooltip.definer.createBodySeparatorEntry()), goog.array.extend(body.entries, actionsMenuEntries))
};
// Input 332
gviz.canviz.DiveTooltipBodyCreator = function(chartOptions, chartTextStyle, focusTarget) {
  gviz.canviz.TooltipBodyCreator.call(this, chartOptions, chartTextStyle, focusTarget);
  this.valueStyle_ = this.getBoldTextStyle();
  this.timeStyle_ = goog.object.clone(this.getTextStyle());
  this.timeStyle_.color = "#666666";
  this.timeStyle_.fontSize -= 2
};
goog.inherits(gviz.canviz.DiveTooltipBodyCreator, gviz.canviz.TooltipBodyCreator);
gviz.canviz.DiveTooltipBodyCreator.prototype.createDatumBody = function(interactionState, seriesIndex, categoryIndex) {
  var chartDefinition = interactionState.chartDefinition, series = chartDefinition.series[seriesIndex], text = series.points[categoryIndex].tooltipText, content = [];
  if(!series.visibleInLegend) {
    var entityName = gviz.util.tooltip.definer.createBodyTextLineEntry(series.title, this.valueStyle_);
    content.push(entityName)
  }
  var value = gviz.util.tooltip.definer.createBodyTextLineEntry(text.content, this.valueStyle_);
  content.push(value);
  var time = gviz.util.tooltip.definer.createBodyTextLineEntry(text.categoryTitle, this.timeStyle_);
  content.push(time);
  return{entries:content}
};
gviz.canviz.DiveTooltipBodyCreator.prototype.createSeriesBody = function() {
  return{entries:[]}
};
gviz.canviz.DiveTooltipBodyCreator.prototype.createCategoryBody = function() {
  return{entries:[]}
};
// Input 333
gviz.canviz.TooltipDefiner = function(chartOptions, bodyCreator, chartDimensions) {
  this.bodyCreator_ = bodyCreator;
  this.boundaries_ = new goog.math.Box(0, chartDimensions.width, chartDimensions.height, 0);
  var defaultTooltipTrigger = bodyCreator.hasActionsMenu() ? gviz.Options.TooltipTrigger.BOTH : gviz.Options.TooltipTrigger.FOCUS;
  this.trigger_ = chartOptions.inferEnumValue("tooltip.trigger", gviz.Options.TooltipTrigger, defaultTooltipTrigger)
};
gviz.canviz.TooltipDefiner.prototype.getTrigger = function() {
  return this.trigger_
};
gviz.canviz.TooltipDefiner.prototype.calcChartOrigin_ = function(chartDefinition) {
  if(chartDefinition.chartType == gviz.canviz.Options.ChartType.PIE) {
    var center = chartDefinition.pie.center;
    return new goog.math.Coordinate(center.x, center.y)
  }
  var hAxis = goog.object.getAnyValue(chartDefinition.hAxes), x = goog.isDefAndNotNull(hAxis.baseline) ? hAxis.baseline.coordinate : Math.min(hAxis.startPos, hAxis.endPos), vAxis = goog.object.getAnyValue(chartDefinition.vAxes), y = goog.isDefAndNotNull(vAxis.baseline) ? vAxis.baseline.coordinate : Math.max(vAxis.startPos, vAxis.endPos);
  return new goog.math.Coordinate(x, y)
};
gviz.canviz.TooltipDefiner.prototype.setBoundaries = function(boundaries) {
  this.boundaries_ = boundaries
};
gviz.canviz.TooltipDefiner.prototype.calcPointTooltipAnchor_ = function(chartDefinition, pointData, serie) {
  var scaledPoint = pointData.scaled, pointRadius = gviz.canviz.chartdefinitionutil.getPointTotalRadius(pointData, serie), origin = this.calcChartOrigin_(chartDefinition), delta = 1 + Math.ceil(pointRadius / Math.sqrt(2)), x = scaledPoint.x + (scaledPoint.x >= origin.x ? delta : -delta), y = scaledPoint.y + (scaledPoint.y <= origin.y ? -delta : delta);
  return new goog.math.Coordinate(x, y)
};
gviz.canviz.TooltipDefiner.prototype.calcBubbleTooltipAnchor_ = function(chartDefinition, bubbleData, serie) {
  var scaledBubble = bubbleData.scaled, anchor = this.calcPointTooltipAnchor_(chartDefinition, bubbleData, serie);
  if(anchor.x < chartDefinition.chartArea.left || anchor.x > chartDefinition.chartArea.right) {
    anchor.x += 2 * (scaledBubble.x - anchor.x)
  }
  if(anchor.y < chartDefinition.chartArea.top || anchor.y > chartDefinition.chartArea.bottom) {
    anchor.y += 2 * (scaledBubble.y - anchor.y)
  }
  return anchor
};
gviz.canviz.TooltipDefiner.prototype.calcBarTooltipAnchor_ = function(chartDefinition, barData) {
  var scaledBar = barData.scaled.bar || barData.scaled, origin = this.calcChartOrigin_(chartDefinition), x = scaledBar.left + (scaledBar.left < origin.x ? 0 : scaledBar.width), y = scaledBar.top + (scaledBar.top < origin.y ? 0 : scaledBar.height), anchor = new goog.math.Coordinate(x, y);
  this.clampAnchorToChartArea_(chartDefinition, anchor);
  return anchor
};
gviz.canviz.TooltipDefiner.prototype.calcCandlestickTooltipAnchor_ = function(chartDefinition, candlestickData) {
  var scaledRect = candlestickData.scaled.rect, origin = this.calcChartOrigin_(chartDefinition), x = scaledRect.left + scaledRect.width > origin.x ? scaledRect.left + scaledRect.width : scaledRect.left, y = scaledRect.top < origin.y ? scaledRect.top : scaledRect.top + scaledRect.height, anchor = new goog.math.Coordinate(x, y);
  this.clampAnchorToChartArea_(chartDefinition, anchor);
  return anchor
};
gviz.canviz.TooltipDefiner.prototype.calcSliceTooltipAnchor_ = function(chartDefinition, slice) {
  var degrees = slice.isWholeCircle ? 45 : (slice.fromDegrees + slice.toDegrees) / 2, locationDxDy = gviz.canviz.vectorutils.vectorOnEllipse((degrees / 180 - 0.5) * Math.PI, chartDefinition.pie.radiusX, chartDefinition.pie.radiusY), location = goog.math.Vec2.sum(chartDefinition.pie.center, locationDxDy), anchor = new goog.math.Coordinate(location.x + slice.offset.x, location.y + slice.offset.y);
  this.clampAnchorToFrame_(chartDefinition, anchor);
  return anchor
};
gviz.canviz.TooltipDefiner.prototype.calcAnnotationTooltipAnchor_ = function(chartDefinition, annotation) {
  goog.asserts.assert(0 < annotation.lines.length);
  var anchor = annotation.anchor ? annotation.anchor : new goog.math.Coordinate(0, 0), line = annotation.lines[0], fontSize = annotation.textStyle.fontSize;
  if(270 == annotation.angle) {
    return new goog.math.Coordinate(anchor.x + line.x + fontSize, anchor.y + line.y - line.length / 2)
  }
  goog.asserts.assert(!annotation.angle);
  return new goog.math.Coordinate(anchor.x + line.x + line.length / 2, anchor.y + line.y - fontSize)
};
gviz.canviz.TooltipDefiner.prototype.calcDatumTooltipAnchor_ = function(chartDefinition, seriesIndex, categoryIndex) {
  var series = chartDefinition.series[seriesIndex], seriesType = series.type;
  switch(chartDefinition.chartType) {
    case gviz.canviz.Options.ChartType.FUNCTION:
    ;
    case gviz.canviz.Options.ChartType.HISTOGRAM:
      switch(seriesType) {
        case gviz.canviz.Options.SerieType.BARS:
        ;
        case gviz.canviz.Options.SerieType.STEPPED_AREA:
          return this.calcBarTooltipAnchor_(chartDefinition, series.points[categoryIndex]);
        case gviz.canviz.Options.SerieType.LINE:
        ;
        case gviz.canviz.Options.SerieType.AREA:
          return this.calcPointTooltipAnchor_(chartDefinition, series.points[categoryIndex], series);
        case gviz.canviz.Options.SerieType.CANDLESTICKS:
          return this.calcCandlestickTooltipAnchor_(chartDefinition, series.points[categoryIndex]);
        default:
          goog.asserts.fail('Invalid series type "' + seriesType + '"')
      }
    ;
    case gviz.canviz.Options.ChartType.SCATTER:
      return this.calcPointTooltipAnchor_(chartDefinition, series.points[categoryIndex], series);
    case gviz.canviz.Options.ChartType.BUBBLE:
      return this.calcBubbleTooltipAnchor_(chartDefinition, series.points[categoryIndex], series)
  }
  return new goog.math.Coordinate(0, 0)
};
gviz.canviz.TooltipDefiner.prototype.clampAnchorToChartArea_ = function(chartDefinition, anchor) {
  var chartArea = chartDefinition.chartArea;
  anchor.x = goog.math.clamp(anchor.x, chartArea.left, chartArea.right);
  anchor.y = goog.math.clamp(anchor.y, chartArea.top, chartArea.bottom)
};
gviz.canviz.TooltipDefiner.prototype.clampAnchorToFrame_ = function(chartDefinition, anchor) {
  anchor.x = goog.math.clamp(anchor.x, 0, chartDefinition.width);
  anchor.y = goog.math.clamp(anchor.y, 0, chartDefinition.height)
};
gviz.canviz.TooltipDefiner.prototype.calcCategoryTooltipAnchor_ = function(chartDefinition, cursorPosition) {
  var hDirection = goog.object.getAnyValue(chartDefinition.hAxes).dataDirection, vDirection = goog.object.getAnyValue(chartDefinition.vAxes).dataDirection, fontSize = this.bodyCreator_.getTextStyle().fontSize, x = cursorPosition.x - 4 * hDirection * fontSize, y = cursorPosition.y - vDirection * fontSize;
  return new goog.math.Coordinate(x, y)
};
gviz.canviz.TooltipDefiner.prototype.calcBarTooltipPivot_ = function(chartDefinition, barData) {
  var left = barData.left, width = barData.width, right = left + width, top = barData.top, height = barData.height, bottom = top + height, origin = this.calcChartOrigin_(chartDefinition), orientation = chartDefinition.orientation;
  return orientation == gviz.canviz.Options.Orientation.HORIZONTAL ? bottom > origin.y ? new goog.math.Coordinate(left + width / 2, bottom - 0.1) : new goog.math.Coordinate(left + width / 2, top + 0.1) : left < origin.x ? new goog.math.Coordinate(left + 0.1, top + height / 2) : new goog.math.Coordinate(right - 0.1, top + height / 2)
};
gviz.canviz.TooltipDefiner.prototype.calcSliceTooltipPivot_ = function(chartDefinition, slice) {
  var degrees = slice.isWholeCircle ? 45 : (slice.fromDegrees + slice.toDegrees) / 2, locationDxDy = gviz.canviz.vectorutils.vectorOnEllipse((degrees / 180 - 0.5) * Math.PI, chartDefinition.pie.radiusX - 0.1, chartDefinition.pie.radiusY - 0.1), location = goog.math.Vec2.sum(chartDefinition.pie.center, locationDxDy);
  return new goog.math.Coordinate(location.x + slice.offset.x, location.y + slice.offset.y)
};
gviz.canviz.TooltipDefiner.prototype.calcAnnotationTooltipPivot_ = function(chartDefinition, annotation) {
  goog.asserts.assert(0 < annotation.lines.length);
  var line = annotation.lines[0], fontSize = annotation.textStyle.fontSize;
  if(270 == annotation.angle) {
    return new goog.math.Coordinate(line.x + fontSize / 2, line.y)
  }
  goog.asserts.assert(!annotation.angle);
  return new goog.math.Coordinate(line.x, line.y - fontSize / 2)
};
gviz.canviz.TooltipDefiner.prototype.calcDatumTooltipPivot_ = function(chartDefinition, seriesIndex, categoryIndex) {
  var series = chartDefinition.series[seriesIndex], seriesType = series.type, scaledDatum = series.points[categoryIndex].scaled;
  if(seriesType == gviz.canviz.Options.SerieType.BARS || seriesType == gviz.canviz.Options.SerieType.STEPPED_AREA || seriesType == gviz.canviz.Options.SerieType.CANDLESTICKS) {
    var barData = scaledDatum.bar || scaledDatum.rect || scaledDatum;
    return this.calcBarTooltipPivot_(chartDefinition, barData)
  }
  return new goog.math.Coordinate(scaledDatum.x, scaledDatum.y)
};
gviz.canviz.TooltipDefiner.prototype.createTooltip = function(interactionState, seriesIndex, categoryIndex, annotationIndex, opt_cursorPosition) {
  goog.asserts.assert(!goog.isNull(seriesIndex) || !goog.isNull(categoryIndex));
  return goog.isNull(seriesIndex) || goog.isNull(categoryIndex) || goog.isNull(annotationIndex) ? goog.isNull(seriesIndex) || goog.isNull(categoryIndex) ? !goog.isNull(seriesIndex) && goog.isNull(categoryIndex) ? this.createSeriesTooltip_(interactionState, seriesIndex) : !goog.isNull(seriesIndex) || goog.isNull(categoryIndex) || goog.isNull(annotationIndex) ? goog.isNull(seriesIndex) && !goog.isNull(categoryIndex) ? (goog.asserts.assert(goog.isDef(opt_cursorPosition)), this.createCategoryTooltip_(interactionState, 
  categoryIndex, opt_cursorPosition)) : null : this.createCategoryAnnotationTooltip_(interactionState, categoryIndex, annotationIndex) : this.createDatumTooltip_(interactionState, seriesIndex, categoryIndex) : this.createDatumAnnotationTooltip_(interactionState, seriesIndex, categoryIndex, annotationIndex)
};
gviz.canviz.TooltipDefiner.prototype.createAggregateTooltip = function(interactionState, data, positionDatum, aggregationTarget) {
  return this.createAggregateDataTooltip(interactionState, data, positionDatum, aggregationTarget)
};
gviz.canviz.TooltipDefiner.prototype.createDatumTooltip_ = function(interactionState, seriesIndex, categoryIndex) {
  var chartDefinition = interactionState.chartDefinition, anchor = this.calcDatumTooltipAnchor_(chartDefinition, seriesIndex, categoryIndex), pivot = this.calcDatumTooltipPivot_(chartDefinition, seriesIndex, categoryIndex), tooltipText = chartDefinition.series[seriesIndex].points[categoryIndex].tooltipText;
  if(tooltipText.hasHtmlContent && tooltipText.hasCustomContent) {
    return this.createHTMLTooltipWithCustomContent_(tooltipText.content, pivot)
  }
  if("histogram" == chartDefinition.chartType) {
    var label = interactionState.chartDefinition.series[seriesIndex].properties.histogramTooltips[categoryIndex], point = interactionState.chartDefinition.series[seriesIndex].points[categoryIndex];
    point.tooltipText = label
  }
  var body = this.bodyCreator_.createDatumBody(interactionState, seriesIndex, categoryIndex);
  return gviz.util.tooltip.definer.createTooltipDefinition(body, chartDefinition.textMeasureFunction, !0, anchor, this.boundaries_, pivot, void 0, chartDefinition.isHtmlTooltip)
};
gviz.canviz.TooltipDefiner.prototype.createAggregateSeriesTooltip = function(interactionState, seriesIndices, positionSeriesIndex) {
  var chartDefinition = interactionState.chartDefinition;
  goog.asserts.assert(chartDefinition.chartType == gviz.canviz.Options.ChartType.PIE);
  var positionSlice = interactionState.chartDefinition.series[positionSeriesIndex], anchor = this.calcSliceTooltipAnchor_(chartDefinition, positionSlice), pivot = this.calcSliceTooltipPivot_(chartDefinition, positionSlice), tooltipText$$0 = goog.array.map(seriesIndices, function(seriesIndex) {
    return chartDefinition.series[seriesIndex].tooltipText
  });
  goog.array.some(tooltipText$$0, function(tooltipText) {
    return tooltipText.hasHtmlContent && tooltipText.hasCustomContent
  });
  var body = this.bodyCreator_.createAggregateSeriesBody(interactionState, seriesIndices);
  return gviz.util.tooltip.definer.createTooltipDefinition(body, chartDefinition.textMeasureFunction, !0, anchor, this.boundaries_, pivot, void 0, chartDefinition.isHtmlTooltip)
};
gviz.canviz.TooltipDefiner.prototype.createAggregateDataTooltip = function(interactionState, data, positionDatum, aggregateTarget) {
  var chartDefinition = interactionState.chartDefinition, anchor = this.calcDatumTooltipAnchor_(chartDefinition, positionDatum.serie, positionDatum.category), pivot = this.calcDatumTooltipPivot_(chartDefinition, positionDatum.serie, positionDatum.category), tooltipText$$0 = goog.array.map(data, function(datum) {
    return chartDefinition.series[datum.serie].points[datum.category].tooltipText
  });
  goog.array.some(tooltipText$$0, function(tooltipText) {
    return tooltipText.hasHtmlContent && tooltipText.hasCustomContent
  });
  var body = this.bodyCreator_.createAggregateDataBody(interactionState, data, aggregateTarget);
  return gviz.util.tooltip.definer.createTooltipDefinition(body, chartDefinition.textMeasureFunction, !0, anchor, this.boundaries_, pivot, void 0, chartDefinition.isHtmlTooltip)
};
gviz.canviz.TooltipDefiner.prototype.createSeriesTooltip_ = function(interactionState, seriesIndex) {
  var chartDefinition = interactionState.chartDefinition;
  goog.asserts.assert(chartDefinition.chartType == gviz.canviz.Options.ChartType.PIE);
  var slice = chartDefinition.series[seriesIndex], anchor = this.calcSliceTooltipAnchor_(chartDefinition, slice), pivot = this.calcSliceTooltipPivot_(chartDefinition, slice), tooltipText = chartDefinition.series[seriesIndex].tooltipText;
  if(tooltipText.hasHtmlContent && tooltipText.hasCustomContent) {
    return this.createHTMLTooltipWithCustomContent_(tooltipText.content, pivot)
  }
  var body = this.bodyCreator_.createSeriesBody(interactionState, seriesIndex);
  return gviz.util.tooltip.definer.createTooltipDefinition(body, chartDefinition.textMeasureFunction, !0, anchor, this.boundaries_, pivot, void 0, chartDefinition.isHtmlTooltip)
};
gviz.canviz.TooltipDefiner.prototype.createDatumAnnotationTooltip_ = function(interactionState, seriesIndex, categoryIndex, annotationIndex) {
  var chartDefinition = interactionState.chartDefinition, series = chartDefinition.series[seriesIndex], datum = series.points[categoryIndex], annotation = datum.annotation.labels[annotationIndex], tooltipText = annotation.tooltipText;
  if(!tooltipText) {
    return null
  }
  var anchor = this.calcAnnotationTooltipAnchor_(chartDefinition, annotation), pivot = this.calcAnnotationTooltipPivot_(chartDefinition, annotation);
  if(tooltipText.hasHtmlContent && tooltipText.hasCustomContent) {
    return this.createHTMLTooltipWithCustomContent_(tooltipText.content, pivot)
  }
  var body = this.bodyCreator_.createDatumAnnotationBody(interactionState, seriesIndex, categoryIndex, annotationIndex);
  return gviz.util.tooltip.definer.createTooltipDefinition(body, chartDefinition.textMeasureFunction, !1, anchor, this.boundaries_, pivot, void 0, chartDefinition.isHtmlTooltip)
};
gviz.canviz.TooltipDefiner.prototype.createCategoryTooltip_ = function(interactionState, categoryIndex, cursorPosition) {
  var chartDefinition = interactionState.chartDefinition, anchor = this.calcCategoryTooltipAnchor_(chartDefinition, cursorPosition), pivot = cursorPosition, tooltipText = chartDefinition.categories[categoryIndex].tooltipText;
  if(tooltipText && tooltipText.hasHtmlContent && tooltipText.hasCustomContent) {
    return this.createHTMLTooltipWithCustomContent_(tooltipText.content, pivot)
  }
  var body = this.bodyCreator_.createCategoryBody(interactionState, categoryIndex);
  return goog.isNull(body) ? null : gviz.util.tooltip.definer.createTooltipDefinition(body, chartDefinition.textMeasureFunction, !1, anchor, this.boundaries_, pivot, void 0, chartDefinition.isHtmlTooltip)
};
gviz.canviz.TooltipDefiner.prototype.createHTMLTooltipWithCustomContent_ = function(content, pivot) {
  return{html:{content:content, properties:{className:"google-visualization-tooltip"}}, customHtml:!0, pivot:pivot, anchor:pivot, boundaries:this.boundaries_, spacing:gviz.util.tooltip.htmldefiner.SPACING, margin:gviz.util.tooltip.definer.DEFAULT_MARGINS}
};
gviz.canviz.TooltipDefiner.prototype.createCategoryAnnotationTooltip_ = function(interactionState, categoryIndex, annotationIndex) {
  var chartDefinition = interactionState.chartDefinition, category = chartDefinition.categories[categoryIndex], annotation = category.annotation.labels[annotationIndex], tooltipText = annotation.tooltipText;
  if(!tooltipText) {
    return null
  }
  var anchor = this.calcAnnotationTooltipAnchor_(chartDefinition, annotation), pivot = this.calcAnnotationTooltipPivot_(chartDefinition, annotation);
  if(tooltipText.hasHtmlContent && tooltipText.hasCustomContent) {
    return this.createHTMLTooltipWithCustomContent_(tooltipText.content, pivot)
  }
  var body = this.bodyCreator_.createCategoryAnnotationBody(interactionState, categoryIndex, annotationIndex);
  return gviz.util.tooltip.definer.createTooltipDefinition(body, chartDefinition.textMeasureFunction, !1, anchor, this.boundaries_, pivot, void 0, chartDefinition.isHtmlTooltip)
};
// Input 334
gviz.canviz.ChartInteractivityDefiner = function(chartOptions, chartDimensions, chartTextStyle, interactivityModel, focusTarget, opt_actionsMenuDefiner) {
  this.actionsMenuDefiner = opt_actionsMenuDefiner;
  interactivityModel == gviz.canviz.Options.InteractivityModel.DIVE || this.actionsMenuDefiner ? goog.isDefAndNotNull(this.actionsMenuDefiner) && this.actionsMenuDefiner.updateOptions(chartOptions, chartTextStyle) : this.actionsMenuDefiner = new gviz.canviz.ActionsMenuDefiner(chartOptions, chartTextStyle);
  var tooltipBodyCreator = this.createTooltipBodyCreator_(chartOptions, chartTextStyle, interactivityModel, focusTarget);
  this.tooltipDefiner = new gviz.canviz.TooltipDefiner(chartOptions, tooltipBodyCreator, chartDimensions)
};
gviz.canviz.ChartInteractivityDefiner.prototype.getActionsMenuDefiner = function() {
  return this.actionsMenuDefiner
};
gviz.canviz.ChartInteractivityDefiner.prototype.generateInteractivityLayer = function(chartDefinition, chartState) {
  var interactivityLayer = {};
  goog.isDefAndNotNull(chartState.legend.currentPageIndex) && this.calcLegendScrolling_(chartDefinition, chartState, interactivityLayer);
  this.extendInteractivityLayer(chartDefinition, chartState, interactivityLayer);
  return interactivityLayer
};
gviz.canviz.ChartInteractivityDefiner.prototype.setAction = function(action) {
  this.actionsMenuDefiner && this.actionsMenuDefiner.setEntry(action)
};
gviz.canviz.ChartInteractivityDefiner.prototype.getAction = function(action) {
  if(this.actionsMenuDefiner) {
    return this.actionsMenuDefiner.getAction(action)
  }
};
gviz.canviz.ChartInteractivityDefiner.prototype.removeAction = function(action) {
  this.actionsMenuDefiner && this.actionsMenuDefiner.removeEntry(action)
};
gviz.canviz.ChartInteractivityDefiner.prototype.createTooltipBodyCreator_ = function(chartOptions, chartTextStyle, interactivityModel, focusTarget) {
  return interactivityModel == gviz.canviz.Options.InteractivityModel.DIVE ? new gviz.canviz.DiveTooltipBodyCreator(chartOptions, chartTextStyle, focusTarget) : new gviz.canviz.DefaultTooltipBodyCreator(chartOptions, chartTextStyle, focusTarget, this.actionsMenuDefiner)
};
gviz.canviz.ChartInteractivityDefiner.prototype.calcLegendScrolling_ = function(chartDefinition, chartState, interactivityLayer) {
  interactivityLayer.legend = interactivityLayer.legend || {};
  var legendDefinition = chartDefinition.legend, currentPageIndex = chartState.legend.currentPageIndex;
  interactivityLayer.legend.currentPage = legendDefinition.pages[currentPageIndex];
  var interactivePageIndexText = currentPageIndex + 1 + "/" + legendDefinition.pages.length, interactivePageIndexTextBlock = {text:interactivePageIndexText, lines:{0:{text:interactivePageIndexText}}}, previousButton = legendDefinition.scrollItems.previousButton, hasPrevious = 0 < currentPageIndex, interactivePreviousButton = {brush:hasPrevious ? previousButton.brushes.active : previousButton.brushes.inactive, active:hasPrevious}, nextButton = legendDefinition.scrollItems.nextButton, hasNext = currentPageIndex < 
  chartDefinition.legend.pages.length - 1, interactiveNextButton = {brush:hasNext ? nextButton.brushes.active : nextButton.brushes.inactive, active:hasNext};
  interactivityLayer.legend.scrollItems = {previousButton:interactivePreviousButton, nextButton:interactiveNextButton, pageIndexTextBlock:interactivePageIndexTextBlock}
};
// Input 335
gviz.canviz.AxisChartInteractivityDefiner = function(chartOptions, chartDimensions, chartTextStyle, interactivityModel, focusTarget, numberOfSeries, opt_actionsMenuDefiner) {
  gviz.canviz.ChartInteractivityDefiner.call(this, chartOptions, chartDimensions, chartTextStyle, interactivityModel, focusTarget, opt_actionsMenuDefiner);
  var enableInteractivity = chartOptions.inferBooleanValue("enableInteractivity", !0);
  this.enableInteractivityForCategoryAnnotations_ = enableInteractivity;
  this.aggregationTarget_ = chartOptions.inferEnumValue("aggregationTarget", gviz.canviz.Options.AggregationTarget, gviz.canviz.Options.AggregationTarget.NONE);
  this.enableInteractivityPerSerie_ = gviz.canviz.util.rangeMap(numberOfSeries, function(serieIndex) {
    return chartOptions.inferBooleanValue("series." + serieIndex + ".enableInteractivity", enableInteractivity)
  });
  this.isSomeSerieInteractive_ = goog.array.some(this.enableInteractivityPerSerie_, goog.functions.identity);
  this.ignoreCursorInChartStateComparison_ = !0
};
goog.inherits(gviz.canviz.AxisChartInteractivityDefiner, gviz.canviz.ChartInteractivityDefiner);
gviz.canviz.AxisChartInteractivityDefiner.prototype.extendInteractivityLayer = function(chartDefinition, chartState, interactivityLayer) {
  this.ignoreCursorInChartStateComparison_ = !0;
  switch(chartDefinition.interactivityModel) {
    case gviz.canviz.Options.InteractivityModel.DEFAULT:
      this.defaultInteractivityModel(chartDefinition, chartState, interactivityLayer);
      break;
    case gviz.canviz.Options.InteractivityModel.DIVE:
      this.diveInteractivityModel(chartDefinition, chartState, interactivityLayer);
      break;
    default:
      goog.asserts.fail('Invalid interactivity model "' + chartDefinition.interactivityModel + '"')
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.equalChartStates = function(chartState1, chartState2) {
  return chartState1.equals(chartState2, this.ignoreCursorInChartStateComparison_)
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.isSerieInteractive_ = function(serieIndex) {
  return this.enableInteractivityPerSerie_[serieIndex]
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.isAnnotationInteractive_ = function(serieIndex) {
  return goog.isDefAndNotNull(serieIndex) ? this.isSerieInteractive_(serieIndex) : this.enableInteractivityForCategoryAnnotations_
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.createInteractiveDatum_ = function(interactivityLayer, serieIndex, datumIndex) {
  interactivityLayer.series = interactivityLayer.series || {};
  var series = interactivityLayer.series;
  series[serieIndex] = series[serieIndex] || {};
  var serie = series[serieIndex];
  serie.points = serie.points || {};
  var points = serie.points;
  points[datumIndex] = points[datumIndex] || {};
  return points[datumIndex]
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.createInteractiveAnnotation_ = function(interactivityLayer, serieIndex, datumOrCategoryIndex) {
  if(goog.isDefAndNotNull(serieIndex)) {
    var datum = this.createInteractiveDatum_(interactivityLayer, serieIndex, datumOrCategoryIndex);
    datum.annotation = datum.annotation || {};
    return datum.annotation
  }
  var category = this.createInteractiveCategory_(interactivityLayer, datumOrCategoryIndex);
  category.annotation = category.annotation || {};
  return category.annotation
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.createInteractiveSerie_ = function(interactivityLayer, serieIndex) {
  interactivityLayer.series = interactivityLayer.series || {};
  var series = interactivityLayer.series;
  series[serieIndex] = series[serieIndex] || {};
  return series[serieIndex]
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.createInteractiveCategory_ = function(interactivityLayer, categoryIndex) {
  interactivityLayer.categories = interactivityLayer.categories || {};
  var categories = interactivityLayer.categories;
  categories[categoryIndex] = categories[categoryIndex] || {};
  return categories[categoryIndex]
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.createInteractiveLegendEntry_ = function(interactivityLayer, legendEntryIndex) {
  interactivityLayer.legend = interactivityLayer.legend || {};
  var legend = interactivityLayer.legend;
  legend.currentPage = legend.currentPage || {};
  var currentPage = legend.currentPage;
  currentPage[legendEntryIndex] = currentPage[legendEntryIndex] || {};
  return currentPage[legendEntryIndex]
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.defaultInteractivityModel = function(chartDefinition, chartState, interactivityLayer) {
  var interactionState = {chartDefinition:chartDefinition, actionsMenuEntries:this.actionsMenuDefiner.getEntries(), interactivityLayer:interactivityLayer, actionsMenuState:chartState.actionsMenu}, focusedActionId = chartState.actionsMenu.focused.entryID;
  null != focusedActionId && (chartState.actionsMenu.focused.action = this.actionsMenuDefiner.getAction(focusedActionId).action);
  for(var tooltipTrigger = this.tooltipDefiner.getTrigger(), selectionTriggersTooltip = gviz.canviz.chartdefinitionutil.isTooltipTriggeredBySelection(tooltipTrigger), focusTriggersTooltip = gviz.canviz.chartdefinitionutil.isTooltipTriggeredByFocus(tooltipTrigger, chartState.selected), shouldAggregate = this.aggregationTarget_ != gviz.canviz.Options.AggregationTarget.NONE, showActionsMenu = this.actionsMenuDefiner && 0 < interactionState.actionsMenuEntries.length, selectedCells = chartState.selected.getCells(), 
  showAggregateTooltip = 1 < selectedCells.length && (shouldAggregate || showActionsMenu), isHistogram = chartDefinition.chartType === gviz.canviz.Options.ChartType.HISTOGRAM, i = 0;i < selectedCells.length;++i) {
    var selectedCell = selectedCells[i], selectedColumn = selectedCell.column, selectedRow = selectedCell.row, selectedColumnInfo = chartDefinition.dataTableColumnRoleInfo[selectedColumn], selectedSerieIndex = selectedColumnInfo.serieIndex, selectedCategoryIndex = isHistogram ? selectedRow : chartDefinition.dataTableToCategoryMap[selectedRow];
    switch(selectedColumnInfo.role) {
      case gviz.canviz.ColumnRole.DATA:
        goog.asserts.assert(goog.isDefAndNotNull(selectedSerieIndex));
        if(!this.isSerieInteractive_(selectedSerieIndex)) {
          break
        }
        this.ringDatum_(chartDefinition, selectedSerieIndex, selectedCategoryIndex, interactivityLayer);
        selectionTriggersTooltip && !showAggregateTooltip && this.addTooltipToDatum_(interactionState, selectedSerieIndex, selectedCategoryIndex);
        break;
      case gviz.canviz.ColumnRole.ANNOTATION:
        if(!this.isAnnotationInteractive_(selectedSerieIndex)) {
          break
        }
        var selectedAnnotationIndex = selectedColumnInfo.roleIndex;
        this.makeAnnotationBold_(chartDefinition, selectedSerieIndex, selectedCategoryIndex, selectedAnnotationIndex, interactivityLayer);
        selectionTriggersTooltip && this.addTooltipToAnnotation_(interactionState, selectedSerieIndex, selectedCategoryIndex, selectedAnnotationIndex)
    }
  }
  if(selectionTriggersTooltip && showAggregateTooltip) {
    var data = goog.array.map(selectedCells, function(cell) {
      var column = cell.column, row = cell.row, columnInfo = chartDefinition.dataTableColumnRoleInfo[column], categoryIndex = isHistogram ? row : chartDefinition.dataTableToCategoryMap[row];
      return{serie:columnInfo.serieIndex, category:categoryIndex}
    });
    this.addAggregateTooltipToData_(interactionState, shouldAggregate ? data : [], data[data.length - 1])
  }
  for(var selectedColumns = chartState.selected.getColumnIndexes(), i = 0;i < selectedColumns.length;++i) {
    selectedColumn = selectedColumns[i], selectedColumnInfo = chartDefinition.dataTableColumnRoleInfo[selectedColumn], selectedSerieIndex = selectedColumnInfo.serieIndex, goog.isDefAndNotNull(selectedSerieIndex) && this.isSerieInteractive_(selectedSerieIndex) && this.ringSerie_(chartDefinition, selectedSerieIndex, interactivityLayer)
  }
  for(var isBubbleChart = chartDefinition.chartType === gviz.canviz.Options.ChartType.BUBBLE, selectedRows = chartState.selected.getRowIndexes(), showAggregateTooltipRows = 1 < selectedRows.length && (shouldAggregate || showActionsMenu), i = 0;i < selectedRows.length;++i) {
    selectedRow = selectedRows[i], selectedCategoryIndex = chartDefinition.dataTableToCategoryMap[selectedRow], isBubbleChart ? (selectedSerieIndex = 0, this.isSerieInteractive_(selectedSerieIndex) && (this.ringDatum_(chartDefinition, selectedSerieIndex, selectedCategoryIndex, interactivityLayer), selectionTriggersTooltip && !showAggregateTooltipRows && this.addTooltipToDatum_(interactionState, selectedSerieIndex, selectedCategoryIndex))) : (this.ringCategory_(chartDefinition, selectedCategoryIndex, 
    interactivityLayer), selectionTriggersTooltip && this.addTooltipToCategory_(interactionState, chartState.cursor.positionAtLastClick, selectedCategoryIndex))
  }
  if(showAggregateTooltipRows && isBubbleChart) {
    var lastSelectedRow = selectedRows[selectedRows.length - 1];
    this.addTooltipToDatum_(interactionState, 0, chartDefinition.dataTableToCategoryMap[lastSelectedRow])
  }
  var focusedSerieIndex = chartState.focused.serie, focusedDatumIndex = chartState.focused.datum;
  goog.isDefAndNotNull(focusedDatumIndex) && goog.asserts.assert(goog.isDefAndNotNull(focusedSerieIndex));
  goog.isDefAndNotNull(focusedDatumIndex) ? this.isSerieInteractive_(focusedSerieIndex) && (this.glowDatum_(chartDefinition, focusedSerieIndex, focusedDatumIndex, interactivityLayer), focusTriggersTooltip && this.addTooltipToDatum_(interactionState, focusedSerieIndex, focusedDatumIndex), this.markDatumInColorBar_(chartDefinition, focusedSerieIndex, focusedDatumIndex, interactivityLayer)) : goog.isDefAndNotNull(focusedSerieIndex) && this.isSerieInteractive_(focusedSerieIndex) && this.glowSerie_(chartDefinition, 
  focusedSerieIndex, interactivityLayer);
  var focusedLegendEntryIndex = chartState.legend.focused.entry;
  goog.isDefAndNotNull(focusedLegendEntryIndex) && this.isSerieInteractive_(focusedLegendEntryIndex) && this.glowSerie_(chartDefinition, focusedLegendEntryIndex, interactivityLayer);
  var focusedCategoryIndex = chartState.focused.category;
  goog.isDefAndNotNull(focusedCategoryIndex) && (this.glowCategory_(chartDefinition, focusedCategoryIndex, interactivityLayer), focusTriggersTooltip && (this.addTooltipToCategory_(interactionState, chartState.cursor.position, focusedCategoryIndex), this.ignoreCursorInChartStateComparison_ = !1));
  var expandedAnnotation = chartState.annotations.expanded;
  if(expandedAnnotation) {
    var interactiveAnnotation = this.createInteractiveAnnotation_(interactivityLayer, expandedAnnotation.serieIndex, expandedAnnotation.datumOrCategoryIndex);
    interactiveAnnotation.bundle = interactiveAnnotation.bundle || {};
    interactiveAnnotation.bundle.isExpanded = !0
  }
  var focusedAnnotation = chartState.annotations.focused;
  if(focusedAnnotation && focusTriggersTooltip) {
    var annotationColumn = focusedAnnotation.column, annotationRow = focusedAnnotation.row, annotationColumnInfo = chartDefinition.dataTableColumnRoleInfo[annotationColumn], annotationSerieIndex = annotationColumnInfo.serieIndex, annotationCategoryIndex = chartDefinition.dataTableToCategoryMap[annotationRow], annotationLabelIndex = annotationColumnInfo.roleIndex;
    this.isAnnotationInteractive_(annotationSerieIndex) && this.addTooltipToAnnotation_(interactionState, annotationSerieIndex, annotationCategoryIndex, annotationLabelIndex)
  }
  var overlayBox = chartState.overlayBox;
  overlayBox && (interactivityLayer.overlayBox = overlayBox)
};
gviz.canviz.AxisChartInteractivityDefiner.GLOW_COLOR = "black";
gviz.canviz.AxisChartInteractivityDefiner.GLOW_OPACITY_LEVELS_FOR_POINTS = [0.25, 0.1, 0.05];
gviz.canviz.AxisChartInteractivityDefiner.GLOW_OPACITY_LEVELS_FOR_LINES = [0.3, 0.1, 0.05];
gviz.canviz.AxisChartInteractivityDefiner.GLOW_OPACITY_LEVELS_FOR_BARS = [0.3, 0.15, 0.05];
gviz.canviz.AxisChartInteractivityDefiner.POINT_RING_DISTANCE = 1.5;
gviz.canviz.AxisChartInteractivityDefiner.LINE_RING_DISTANCE = 2;
gviz.canviz.AxisChartInteractivityDefiner.BAR_RING_DISTANCE = 1.5;
gviz.canviz.AxisChartInteractivityDefiner.prototype.glowDatum_ = function(chartDefinition, serieIndex, datumIndex, interactivityLayer) {
  var serie = chartDefinition.series[serieIndex], datum = serie.points[datumIndex];
  if(!gviz.canviz.chartdefinitionutil.isDatumNull(datum) && datum.scaled && (!gviz.canviz.chartdefinitionutil.isSeriePathBased(serie) || 0 != serie.lineWidth || gviz.canviz.chartdefinitionutil.isDatumVisible(datum, serie))) {
    var GLOW_OPACITY_LEVELS = serie.type == gviz.canviz.Options.SerieType.BARS ? gviz.canviz.AxisChartInteractivityDefiner.GLOW_OPACITY_LEVELS_FOR_BARS : gviz.canviz.AxisChartInteractivityDefiner.GLOW_OPACITY_LEVELS_FOR_POINTS, interactiveDatum = this.createInteractiveDatum_(interactivityLayer, serieIndex, datumIndex);
    interactiveDatum.glow = {};
    var interactiveGlow = interactiveDatum.glow;
    interactiveGlow.levels = [];
    for(var i = 0;i < GLOW_OPACITY_LEVELS.length;i++) {
      var glowBrush = new gviz.graphics.Brush({fill:"none", stroke:gviz.canviz.AxisChartInteractivityDefiner.GLOW_COLOR, strokeOpacity:GLOW_OPACITY_LEVELS[i], strokeWidth:1});
      interactiveGlow.levels.push({brush:glowBrush})
    }
    switch(serie.type) {
      case gviz.canviz.Options.SerieType.BARS:
      ;
      case gviz.canviz.Options.SerieType.STEPPED_AREA:
      ;
      case gviz.canviz.Options.SerieType.CANDLESTICKS:
        for(var scaledBar = datum.scaled.bar || datum.scaled.rect || datum.scaled, rect = new goog.math.Rect(scaledBar.left, scaledBar.top, scaledBar.width, scaledBar.height), i = 0;i < GLOW_OPACITY_LEVELS.length;i++) {
          var glowStrokeWidth = interactiveGlow.levels[i].brush.getStrokeWidth();
          interactiveGlow.levels[i].rect = new goog.math.Rect(rect.left - glowStrokeWidth / 2, rect.top - glowStrokeWidth / 2, rect.width + glowStrokeWidth, rect.height + glowStrokeWidth);
          rect.left -= glowStrokeWidth;
          rect.top -= glowStrokeWidth;
          rect.width += 2 * glowStrokeWidth;
          rect.height += 2 * glowStrokeWidth
        }
        break;
      case gviz.canviz.Options.SerieType.LINE:
      ;
      case gviz.canviz.Options.SerieType.AREA:
      ;
      case gviz.canviz.Options.SerieType.SCATTER:
      ;
      case gviz.canviz.Options.SerieType.BUBBLES:
        interactiveDatum.visible = !0;
        interactiveGlow.x = datum.scaled.x;
        interactiveGlow.y = datum.scaled.y;
        var radius;
        if(interactiveDatum.ring) {
          var ring = interactiveDatum.ring;
          radius = ring.radius + ring.brush.getStrokeWidth() / 2
        }else {
          radius = gviz.canviz.chartdefinitionutil.getPointTotalRadius(datum, serie)
        }
        for(i = 0;i < GLOW_OPACITY_LEVELS.length;i++) {
          glowStrokeWidth = interactiveGlow.levels[i].brush.getStrokeWidth(), interactiveGlow.levels[i].radius = radius + glowStrokeWidth / 2, radius += glowStrokeWidth
        }
    }
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.glowSerie_ = function(chartDefinition, serieIndex, interactivityLayer) {
  var serie = chartDefinition.series[serieIndex], interactiveSerie;
  if(gviz.canviz.chartdefinitionutil.isSeriePathBased(serie) && 0 < serie.lineWidth) {
    var GLOW_OPACITY_LEVELS = gviz.canviz.AxisChartInteractivityDefiner.GLOW_OPACITY_LEVELS_FOR_LINES;
    interactiveSerie = this.createInteractiveSerie_(interactivityLayer, serieIndex);
    interactiveSerie.glow = {};
    var interactiveGlow = interactiveSerie.glow;
    interactiveGlow.levels = [];
    var pathSegments;
    pathSegments = serie.type == gviz.canviz.Options.SerieType.AREA ? chartDefinition.isStacked ? gviz.canviz.chartdefinitionutil.createPathSegmentsForStackedArea(serie) : gviz.canviz.chartdefinitionutil.createPathSegments(serie, !1) : gviz.canviz.chartdefinitionutil.createPathSegments(serie, chartDefinition.interpolateNulls);
    pathSegments = pathSegments.toSingleBrush();
    for(var glowOffset = serie.lineBrush.getStrokeWidth() / 2, i = 0;i < GLOW_OPACITY_LEVELS.length;i++) {
      var glowBrush = new gviz.graphics.Brush({fill:"none", stroke:gviz.canviz.AxisChartInteractivityDefiner.GLOW_COLOR, strokeOpacity:GLOW_OPACITY_LEVELS[i], strokeWidth:1}), glowPath = gviz.graphics.pathsegmentsutil.calcParallelPath(pathSegments, glowOffset + glowBrush.getStrokeWidth() / 2);
      interactiveGlow.levels.push({brush:glowBrush, path:glowPath});
      glowOffset += glowBrush.getStrokeWidth()
    }
  }
  for(var interactiveSeries = interactivityLayer.series, interactivePoints = (interactiveSerie = interactiveSeries && interactiveSeries[serieIndex]) && interactiveSerie.points, datumIndex = 0;datumIndex < serie.points.length;++datumIndex) {
    var datum = serie.points[datumIndex];
    gviz.canviz.chartdefinitionutil.isDatumNull(datum) || (gviz.canviz.chartdefinitionutil.isDatumVisible(datum, serie) || interactivePoints && interactivePoints[datumIndex] && interactivePoints[datumIndex].visible) && this.glowDatum_(chartDefinition, serieIndex, datumIndex, interactivityLayer)
  }
  chartDefinition.isDiff && serie.type === gviz.canviz.Options.SerieType.SCATTER && !this.serieHasOldData_(serie.columns) && this.glowSerie_(chartDefinition, serieIndex - 1, interactivityLayer)
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.serieHasOldData_ = function(serieColumns) {
  var oldDataColumns = serieColumns[gviz.canviz.ColumnRole.DIFF_OLD_DATA];
  return goog.isDefAndNotNull(oldDataColumns) && 0 < oldDataColumns.length
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.glowCategory_ = function(chartDefinition, categoryIndex, interactivityLayer) {
  for(var series = chartDefinition.series, serieIndex = 0;serieIndex < series.length;serieIndex++) {
    this.isSerieInteractive_(serieIndex) && this.glowDatum_(chartDefinition, serieIndex, categoryIndex, interactivityLayer)
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.ringDatum_ = function(chartDefinition, serieIndex, datumIndex, interactivityLayer) {
  var serie = chartDefinition.series[serieIndex], datum = serie.points[datumIndex];
  if(!gviz.canviz.chartdefinitionutil.isDatumNull(datum) && datum.scaled && (!gviz.canviz.chartdefinitionutil.isSeriePathBased(serie) || 0 != serie.lineWidth || gviz.canviz.chartdefinitionutil.isDatumVisible(datum, serie))) {
    var datumBrush = gviz.canviz.chartdefinitionutil.getDatumBrush(datum, serie), interactiveDatum = this.createInteractiveDatum_(interactivityLayer, serieIndex, datumIndex);
    interactiveDatum.ring = {};
    var interactiveRing = interactiveDatum.ring, backgroundColor = chartDefinition.actualChartAreaBackgoundColor, ringOpacity = 1;
    goog.isDefAndNotNull(backgroundColor) || (backgroundColor = "white", ringOpacity = 0);
    switch(serie.type) {
      case gviz.canviz.Options.SerieType.BARS:
      ;
      case gviz.canviz.Options.SerieType.STEPPED_AREA:
      ;
      case gviz.canviz.Options.SerieType.CANDLESTICKS:
        interactiveRing.brush = gviz.graphics.Brush.TRANSPARENT_BRUSH.clone();
        interactiveRing.brush.setStroke(backgroundColor);
        serie.type == gviz.canviz.Options.SerieType.CANDLESTICKS && datum.barBrush.getFill() == backgroundColor && interactiveRing.brush.setStroke(datumBrush.getFill());
        interactiveRing.brush.setStrokeOpacity(ringOpacity);
        interactiveRing.brush.setStrokeWidth(1);
        var BAR_RING_DISTANCE = gviz.canviz.AxisChartInteractivityDefiner.BAR_RING_DISTANCE, scaledBar = datum.scaled.bar || datum.scaled.rect || datum.scaled, barStrokeWidth = datumBrush.getStrokeWidth(), ringStrokeWidth = interactiveRing.brush.getStrokeWidth();
        interactiveRing.rect = new goog.math.Rect(scaledBar.left + barStrokeWidth / 2 + BAR_RING_DISTANCE + ringStrokeWidth / 2, scaledBar.top + barStrokeWidth / 2 + BAR_RING_DISTANCE + ringStrokeWidth / 2, scaledBar.width - (barStrokeWidth + 2 * BAR_RING_DISTANCE + ringStrokeWidth), scaledBar.height - (barStrokeWidth + 2 * BAR_RING_DISTANCE + ringStrokeWidth));
        (0 >= interactiveRing.rect.width || 0 >= interactiveRing.rect.height) && delete interactiveDatum.ring;
        break;
      case gviz.canviz.Options.SerieType.LINE:
      ;
      case gviz.canviz.Options.SerieType.AREA:
      ;
      case gviz.canviz.Options.SerieType.SCATTER:
      ;
      case gviz.canviz.Options.SerieType.BUBBLES:
        interactiveDatum.visible = !0, interactiveRing.x = datum.scaled.x, interactiveRing.y = datum.scaled.y, interactiveRing.brush = new gviz.graphics.Brush({fill:backgroundColor, fillOpacity:ringOpacity, stroke:datumBrush.getFill(), strokeWidth:1}), interactiveRing.radius = gviz.canviz.chartdefinitionutil.getPointTotalRadius(datum, serie) + gviz.canviz.AxisChartInteractivityDefiner.POINT_RING_DISTANCE + interactiveRing.brush.getStrokeWidth() / 2
    }
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.ringSerie_ = function(chartDefinition, serieIndex, interactivityLayer) {
  var serie = chartDefinition.series[serieIndex];
  if((serie.type == gviz.canviz.Options.SerieType.LINE || serie.type == gviz.canviz.Options.SerieType.AREA || serie.type == gviz.canviz.Options.SerieType.SCATTER) && 0 < serie.lineWidth) {
    var interactiveSerie = this.createInteractiveSerie_(interactivityLayer, serieIndex);
    interactiveSerie.ring = {};
    var interactiveRing = interactiveSerie.ring, pathSegments;
    pathSegments = serie.type == gviz.canviz.Options.SerieType.AREA ? chartDefinition.isStacked ? gviz.canviz.chartdefinitionutil.createPathSegmentsForStackedArea(serie) : gviz.canviz.chartdefinitionutil.createPathSegments(serie, !1) : gviz.canviz.chartdefinitionutil.createPathSegments(serie, chartDefinition.interpolateNulls);
    pathSegments = pathSegments.toSingleBrush();
    interactiveRing.brush = new gviz.graphics.Brush({stroke:serie.lineBrush.getStroke(), strokeWidth:Math.min(1, serie.lineBrush.getStrokeWidth() / 2)});
    var ringOffset = serie.lineBrush.getStrokeWidth() / 2 + gviz.canviz.AxisChartInteractivityDefiner.LINE_RING_DISTANCE + interactiveRing.brush.getStrokeWidth() / 2;
    interactiveRing.path = gviz.graphics.pathsegmentsutil.calcParallelPath(pathSegments, -ringOffset)
  }
  for(var datumIndex = 0;datumIndex < serie.points.length;++datumIndex) {
    var datum = serie.points[datumIndex];
    gviz.canviz.chartdefinitionutil.isDatumNull(datum) || gviz.canviz.chartdefinitionutil.isDatumVisible(datum, serie) && this.ringDatum_(chartDefinition, serieIndex, datumIndex, interactivityLayer)
  }
  chartDefinition.isDiff && serie.type === gviz.canviz.Options.SerieType.SCATTER && !this.serieHasOldData_(serie.columns) && this.ringSerie_(chartDefinition, serieIndex - 1, interactivityLayer)
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.ringCategory_ = function(chartDefinition, categoryIndex, interactivityLayer) {
  for(var series = chartDefinition.series, serieIndex = 0;serieIndex < series.length;++serieIndex) {
    this.isSerieInteractive_(serieIndex) && this.ringDatum_(chartDefinition, serieIndex, categoryIndex, interactivityLayer)
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.setTooltipOnDatum_ = function(interactionState, datum, tooltipDefinition) {
  var interactiveDatum = this.createInteractiveDatum_(interactionState.interactivityLayer, datum.serie, datum.category), embedActionsMenu = goog.isDefAndNotNull(interactionState.actionsMenuState);
  goog.asserts.assert(tooltipDefinition);
  interactiveDatum.tooltip = tooltipDefinition;
  if(embedActionsMenu) {
    goog.asserts.assert(this.actionsMenuDefiner);
    var actionsMenuState = interactionState.actionsMenuState;
    this.actionsMenuDefiner.extendInteractivityLayer(tooltipDefinition, actionsMenuState, interactiveDatum.tooltip)
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.addTooltipToDatum_ = function(interactionState, serieIndex, datumIndex) {
  var tooltipDefinition = this.tooltipDefiner.createTooltip(interactionState, serieIndex, datumIndex, null);
  this.setTooltipOnDatum_(interactionState, {serie:serieIndex, category:datumIndex}, tooltipDefinition)
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.addAggregateTooltipToData_ = function(interactionState, data, positionDatum) {
  var tooltipDefinition = this.tooltipDefiner.createAggregateTooltip(interactionState, data, positionDatum, this.aggregationTarget_);
  this.setTooltipOnDatum_(interactionState, positionDatum, tooltipDefinition)
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.addTooltipToCategory_ = function(interactionState, cursorPosition, categoryIndex) {
  if(cursorPosition && this.isSomeSerieInteractive_) {
    var interactiveCategory = this.createInteractiveCategory_(interactionState.interactivityLayer, categoryIndex), embedActionsMenu = goog.isDefAndNotNull(interactionState.actionsMenuState), tooltipDefinition = this.tooltipDefiner.createTooltip(interactionState, null, categoryIndex, null, cursorPosition);
    if(!goog.isNull(tooltipDefinition) && (interactiveCategory.tooltip = tooltipDefinition, embedActionsMenu)) {
      goog.asserts.assert(this.actionsMenuDefiner);
      var actionsMenuState = interactionState.actionsMenuState;
      this.actionsMenuDefiner.extendInteractivityLayer(tooltipDefinition, actionsMenuState, interactiveCategory.tooltip)
    }
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.addTooltipToAnnotation_ = function(interactionState, serieIndex, datumIndex, annotationIndex) {
  var interactiveAnnotation = this.createInteractiveAnnotation_(interactionState.interactivityLayer, serieIndex, datumIndex);
  interactiveAnnotation.labels = interactiveAnnotation.labels || {};
  var interactiveLabels = interactiveAnnotation.labels;
  interactiveLabels[annotationIndex] = interactiveLabels[annotationIndex] || {};
  var interactiveLabel = interactiveLabels[annotationIndex], embedActionsMenu = goog.isDefAndNotNull(interactionState.actionsMenuState), tooltipDefinition = this.tooltipDefiner.createTooltip(interactionState, serieIndex, datumIndex, annotationIndex);
  interactiveLabel.tooltip_ = tooltipDefinition;
  if(embedActionsMenu && tooltipDefinition) {
    goog.asserts.assert(interactiveLabel.tooltip_);
    goog.asserts.assert(this.actionsMenuDefiner);
    var actionsMenuState = interactionState.actionsMenuState;
    this.actionsMenuDefiner.extendInteractivityLayer(tooltipDefinition, actionsMenuState, interactiveLabel.tooltip_)
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.markDatumInColorBar_ = function(chartDefinition, serieIndex, datumIndex, interactivityLayer) {
  if(chartDefinition.colorBar) {
    var colorBar = chartDefinition.colorBar, point = chartDefinition.series[serieIndex].points[datumIndex], marker = {value:point.nonScaled.color}, definition = gviz.colorbar.definer.define(colorBar.scale, colorBar.drawingOptions, [marker], chartDefinition.textMeasureFunction);
    interactivityLayer.colorBar = {definition:definition}
  }
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.makeAnnotationBold_ = function(chartDefinition, serieIndex, datumOrCategoryIndex, annotationIndex, interactivityLayer) {
  var interactiveAnnotation = this.createInteractiveAnnotation_(interactivityLayer, serieIndex, datumOrCategoryIndex);
  interactiveAnnotation.labels = interactiveAnnotation.labels || {};
  var labels = interactiveAnnotation.labels;
  labels[annotationIndex] = labels[annotationIndex] || {};
  var label = labels[annotationIndex];
  label.textStyle = label.textStyle || {};
  var textStyle = label.textStyle;
  textStyle.bold = !0
};
gviz.canviz.AxisChartInteractivityDefiner.prototype.diveInteractivityModel = function(chartDefinition, chartState, interactivityLayer) {
  var interactionState = {chartDefinition:chartDefinition, actionsMenuEntries:[], interactivityLayer:interactivityLayer, actionsMenuState:null}, focusedSerieIndex = chartState.focused.serie, focusedDatumIndex = chartState.focused.datum;
  goog.isDefAndNotNull(focusedDatumIndex) && goog.asserts.assert(goog.isDefAndNotNull(focusedSerieIndex));
  if(chartDefinition.legend) {
    var tooltipBoundaries = new goog.math.Box(0, chartDefinition.legend.area.left, chartDefinition.height, 0);
    this.tooltipDefiner.setBoundaries(tooltipBoundaries)
  }
  var tooltipTrigger = this.tooltipDefiner.getTrigger();
  if(goog.isDefAndNotNull(focusedSerieIndex) && !goog.isDefAndNotNull(focusedDatumIndex)) {
    for(var cursorX = chartState.cursor.position.x, allPoints = chartDefinition.series[focusedSerieIndex].points, concretePoints = goog.array.filter(allPoints, function(element) {
      return goog.isDefAndNotNull(element)
    }), i = 0;i < concretePoints.length && concretePoints[i].scaled.x < cursorX;) {
      i++
    }
    if(0 == i) {
      focusedDatumIndex = 0
    }else {
      if(i == concretePoints.length) {
        focusedDatumIndex = concretePoints.length - 1
      }else {
        var prevX = concretePoints[i - 1].scaled.x, nextX = concretePoints[i].scaled.x, nearestDataPoint = cursorX < goog.math.average(prevX, nextX) ? i - 1 : i, focusedDatumIndex = goog.array.indexOf(allPoints, concretePoints[nearestDataPoint])
      }
    }
    this.ignoreCursorInChartStateComparison_ = !1
  }
  var interactiveDatum = null;
  if(goog.isDefAndNotNull(focusedDatumIndex)) {
    interactiveDatum = this.createInteractiveDatum_(interactivityLayer, focusedSerieIndex, focusedDatumIndex);
    interactiveDatum.visible = !0;
    tooltipTrigger == gviz.Options.TooltipTrigger.FOCUS && this.addTooltipToDatum_(interactionState, focusedSerieIndex, focusedDatumIndex);
    if(chartDefinition.legend) {
      var interactiveLegendEntry = this.createInteractiveLegendEntry_(interactivityLayer, focusedSerieIndex);
      interactiveLegendEntry.removeSerieButton = {isVisible:chartDefinition.showRemoveSerieButton}
    }
    for(var serieIndex = 0;serieIndex < chartDefinition.series.length;serieIndex++) {
      if(serieIndex != focusedSerieIndex) {
        if(chartDefinition.legend) {
          var unfocusedInteractiveLegendEntry = this.createInteractiveLegendEntry_(interactivityLayer, serieIndex);
          unfocusedInteractiveLegendEntry.textBlock = {textStyle:{color:"#CCCCCC"}}
        }
        var unfocusedInteractiveSerie = this.createInteractiveSerie_(interactivityLayer, serieIndex), unfocusedSerie = chartDefinition.series[serieIndex];
        unfocusedInteractiveSerie.lineBrush = unfocusedSerie.lineBrush.clone();
        unfocusedInteractiveSerie.lineBrush.setStrokeOpacity(0.3)
      }
    }
  }
  var expandedAnnotation = chartState.annotations.expanded;
  if(expandedAnnotation) {
    var interactiveAnnotation = this.createInteractiveAnnotation_(interactivityLayer, expandedAnnotation.serieIndex, expandedAnnotation.datumOrCategoryIndex);
    interactiveAnnotation.bundle = interactiveAnnotation.bundle || {};
    interactiveAnnotation.bundle.isExpanded = !0
  }
  var focusedAnnotation = chartState.annotations.focused;
  if(focusedAnnotation) {
    var annotationColumn = focusedAnnotation.column, annotationRow = focusedAnnotation.row, annotationColumnInfo = chartDefinition.dataTableColumnRoleInfo[annotationColumn], annotationSerieIndex = annotationColumnInfo.serieIndex, annotationCategoryIndex = chartDefinition.dataTableToCategoryMap[annotationRow], annotationLabelIndex = annotationColumnInfo.roleIndex;
    this.isAnnotationInteractive_(annotationSerieIndex) && this.addTooltipToAnnotation_(interactionState, annotationSerieIndex, annotationCategoryIndex, annotationLabelIndex)
  }
  var labeledLegendPosition = gviz.canviz.Options.LegendPosition.LABELED;
  if(chartDefinition.legend && chartDefinition.legend.position == labeledLegendPosition && goog.isDefAndNotNull(chartState.legend.focused.entry)) {
    var focusedLegendEntryIndex = chartState.legend.focused.entry, interactiveLegendEntry = this.createInteractiveLegendEntry_(interactivityLayer, focusedLegendEntryIndex);
    interactiveLegendEntry.removeSerieButton = {isVisible:chartDefinition.showRemoveSerieButton};
    for(var points = chartDefinition.series[focusedLegendEntryIndex].points, lastDatumIndex, datumIndex = points.length - 1;0 <= datumIndex;datumIndex--) {
      var datum = points[datumIndex];
      if(!gviz.canviz.chartdefinitionutil.isDatumNull(datum) && datum.scaled) {
        var chartArea = new goog.math.Box(chartDefinition.chartArea.top, chartDefinition.chartArea.right, chartDefinition.chartArea.bottom, chartDefinition.chartArea.left), coordinate = new goog.math.Coordinate(datum.scaled.x, datum.scaled.y);
        if(chartArea.contains(coordinate)) {
          lastDatumIndex = datumIndex;
          break
        }
      }
    }
    goog.isDefAndNotNull(lastDatumIndex) && (interactiveDatum = this.createInteractiveDatum_(interactivityLayer, focusedLegendEntryIndex, lastDatumIndex), interactiveDatum.visible = !0, tooltipTrigger == gviz.Options.TooltipTrigger.FOCUS && this.addTooltipToDatum_(interactionState, focusedLegendEntryIndex, lastDatumIndex));
    for(serieIndex = 0;serieIndex < chartDefinition.series.length;serieIndex++) {
      serieIndex != focusedLegendEntryIndex && (unfocusedInteractiveLegendEntry = this.createInteractiveLegendEntry_(interactivityLayer, serieIndex), unfocusedInteractiveLegendEntry.textBlock = {textStyle:{color:"#CCCCCC"}}, unfocusedInteractiveSerie = this.createInteractiveSerie_(interactivityLayer, serieIndex), unfocusedSerie = chartDefinition.series[serieIndex], unfocusedInteractiveSerie.lineBrush = unfocusedSerie.lineBrush.clone(), unfocusedInteractiveSerie.lineBrush.setStrokeOpacity(0.3))
    }
  }
};
// Input 336
var autovis = {Value:{}};
autovis.Value.Types = {DATE:"date", DATE_YMD:"date-ymd", DATE_YM:"date-ym", DATE_MD:"date-md", NUMBER:"number", NUMBER_Y:"number-y", STRING:"string", UNKNOWN:"unknown"};
autovis.Value.PATTERN_YEAR_ = /(\s|^)(1[1-9]|20)[0-9](0s|[0-9])(\s|$)/g;
autovis.Value.PRETTY_NUMBER_MAX_SIG_FIG_ = 5;
autovis.Value.isUnknownType = function(value) {
  return 0 == value.length || /^n[.\/]a.?$/i.test(value) || /^[^a-z0-9]+$/i.test(value)
};
autovis.Value.isGvizDateType = function(type) {
  return 0 <= goog.array.indexOf([autovis.Value.Types.DATE, autovis.Value.Types.DATE_YMD, autovis.Value.Types.DATE_YM, autovis.Value.Types.DATE_MD], type)
};
autovis.Value.isDateType = function(type) {
  return autovis.Value.isGvizDateType(type) || type == autovis.Value.Types.NUMBER_Y
};
autovis.Value.getGvizDataType = function(type) {
  return autovis.Value.isGvizDateType(type) ? "date" : autovis.Value.isGvizNumberType(type) ? "number" : type == autovis.Value.Types.UNKNOWN ? "string" : type
};
autovis.Value.isGvizNumberType = function(type) {
  return 0 <= goog.array.indexOf([autovis.Value.Types.NUMBER, autovis.Value.Types.NUMBER_Y], type)
};
autovis.Value.getYears = function(value) {
  return goog.isDefAndNotNull(value) ? value.match(autovis.Value.PATTERN_YEAR_) : null
};
autovis.Value.isYear = function(value) {
  autovis.Value.PATTERN_YEAR_.lastIndex = 0;
  return goog.isDefAndNotNull(value) && autovis.Value.PATTERN_YEAR_.test(value)
};
autovis.Value.isYearRange = function(value) {
  for(var fragments = value.split(/\s*[^a-z0-9]\s*/i), i = 0;i < fragments.length;i++) {
    if(!autovis.Value.isYear(fragments[i])) {
      return!1
    }
  }
  return!0
};
autovis.Value.stripYears = function(value) {
  return value.replace(autovis.Value.PATTERN_YEAR_, "")
};
autovis.Value.removeBrackets = function(value) {
  return value.replace(/\s*\(.*\)\s*/g, "").replace(/\s*\[.*\]\s*/g, "")
};
autovis.Value.calculateNormalizeFactor = function(value) {
  return 0 == value ? 1 : Math.pow(10, Math.ceil(-Math.log(Math.abs(value)) / Math.LN10) - 1)
};
autovis.Value.getPrettyNumberInRange = function(value, lowerBound, upperBound, roundFn) {
  if(value > upperBound || value < lowerBound || lowerBound >= upperBound) {
    return value
  }
  var sigfig = 1, prettyValue = value;
  do {
    prettyValue = autovis.Value.getPrettyNumberWithSigFig(value, sigfig, roundFn), sigfig++
  }while(!(prettyValue >= lowerBound && prettyValue <= upperBound) && sigfig < autovis.Value.PRETTY_NUMBER_MAX_SIG_FIG_);
  return sigfig < autovis.Value.PRETTY_NUMBER_MAX_SIG_FIG_ ? prettyValue : value
};
autovis.Value.getPrettyNumberWithSigFig = function(value, maxSigFig, roundFn) {
  if(0 == value || !goog.math.isFiniteNumber(value) || 0 >= maxSigFig) {
    return value
  }
  var normalizeFactor = autovis.Value.calculateNormalizeFactor(value) * Math.pow(10, Math.max(0, maxSigFig)), normalizeFactor = normalizeFactor * (0 < value ? 1 : -1);
  return Math.max(5 * roundFn(normalizeFactor * value / 5), 1) / normalizeFactor
};
autovis.Value.isNegNumber_ = function(value) {
  return/^\$?\s*[\u002d\u2010\u2011\u2012\u2013\u2212\ufe63]/.test(value)
};
autovis.Value.isStringLikelyNumeric = function(value) {
  if(!/[0-9]/g.test(value) || /^[0-9]+[a-z]+[0-9]+$/i.test(value)) {
    return 0
  }
  var score = 1, testValue = autovis.Value.removeBrackets(value);
  0 == testValue.length ? testValue = value : testValue.length != value.length && (score = 0.5);
  var testValue = testValue.replace(/^[^0-9a-z]/i, ""), nonNumberCharacters = testValue.match(/[^0-9.%,\s$]/g), nonNumberCount = goog.isDefAndNotNull(nonNumberCharacters) ? nonNumberCharacters.length : 0;
  return 10 < nonNumberCount ? 0 : 0 < nonNumberCount ? 0.5 : score
};
autovis.Value.getFormatter = function(type) {
  var format = autovis.Value.getFormat(type);
  return goog.isDefAndNotNull(format) ? new google.visualization.DateFormat({pattern:format}) : null
};
autovis.Value.getFormat = function(type) {
  return type == autovis.Value.Types.DATE_YM ? "MMM yyyy" : type == autovis.Value.Types.DATE_MD ? "MMM d" : type == autovis.Value.Types.NUMBER_Y ? "yyyy" : null
};
autovis.Value.getColumnPattern = function(type) {
  return type == autovis.Value.Types.NUMBER_Y ? "####" : autovis.Value.getFormat(type)
};
autovis.Value.isPhoneNumber = function(value) {
  return!/^[0-9]+\.[0-9]{3}$/.test(value) && (/^(\+?[0-9]{2,3}[-|\s])?([0-9]{3}-){1,2}[0-9]{3,4}$/.test(value) || /^(\+?[0-9]{2,3}[\.|\s])?([0-9]{3}\.){1,2}[0-9]{3,4}$/.test(value))
};
autovis.Value.convertToDurationAsSeconds = function(value) {
  var matchedValue = value.match(/^([0-9]+:){1,2}[0-9]{2}(\.[0-9]+)?$/);
  if(!goog.isDefAndNotNull(matchedValue)) {
    return null
  }
  for(var timeComponents = matchedValue[0].split(":"), seconds = 0, i = timeComponents.length - 1;0 <= i;i--) {
    seconds += parseFloat(timeComponents[i]) * Math.pow(60, timeComponents.length - 1 - i)
  }
  return isNaN(seconds) ? null : seconds
};
autovis.Value.convertFeetInchesToInches = function(value) {
  var matchedValue = value.match(/^[0-9]+\'\s?([0-9]+(\s1\/2)?)?\"?/);
  if(!goog.isDefAndNotNull(matchedValue)) {
    return null
  }
  var components = matchedValue[0].split("'"), feet = parseInt(components[0], 10);
  if(isNaN(feet)) {
    return null
  }
  var inches = parseInt(components[1], 10);
  if(isNaN(inches)) {
    return null
  }
  goog.isDefAndNotNull(components[1].match(/1\/2/)) && (inches += 0.5);
  return 12 * feet + inches
};
// Input 337
autovis.ColumnBuckets = function() {
  this.bucketSize_ = 0;
  this.lastBucketStartBoundary_ = this.firstValueBucketStartBoundary_ = -1;
  this.firstValueBucketIndex_ = 0;
  this.lastBucketIndex_ = -1
};
autovis.ColumnBuckets.LABEL_NUMBER_PRECISION_ = 10;
autovis.ColumnBuckets.prototype.create = function(arr, excludePercentile) {
  if(0 != arr.length && (arr = goog.array.filter(arr, function(item) {
    return goog.isDefAndNotNull(item)
  }), goog.array.sort(arr), 0 != arr.length)) {
    if(arr[0] == arr[arr.length - 1]) {
      this.bucketSize_ = 1, this.firstValueBucketStartBoundary_ = arr[0], this.lastBucketStartBoundary_ = arr[0], this.lastBucketIndex_ = 0
    }else {
      var medianIndex = this.calcPercentileRank_(arr, 50) - 1, pctMaxIndex = this.calcPercentileRank_(arr, 100 - excludePercentile) - 1, pctMinIndex = Math.max(0, this.calcPercentileRank_(arr, excludePercentile) - 1), isInt = this.isColumnInt_(arr), bucketMin = arr[medianIndex] - Math.min(arr[medianIndex] - arr[0], 1.5 * (arr[medianIndex] - arr[pctMinIndex]));
      bucketMin != arr[0] && (this.firstValueBucketIndex_ = 1, isInt && (bucketMin = Math.floor(bucketMin)));
      var bucketMax = arr[medianIndex] + Math.min(arr[arr.length - 1] - arr[medianIndex], 1.5 * (arr[pctMaxIndex] - arr[medianIndex])), bucketValues = goog.array.filter(arr, function(item) {
        return item < bucketMax && item > bucketMin
      });
      this.bucketSize_ = this.calcBucketSize_(bucketMin, bucketMax, bucketValues.length, isInt);
      this.firstValueBucketStartBoundary_ = this.bucketSize_ * (1 == this.firstValueBucketIndex_ ? Math.round(bucketMin / this.bucketSize_) : Math.floor(bucketMin / this.bucketSize_));
      1 == this.firstValueBucketIndex_ && this.firstValueBucketStartBoundary_ < arr[0] && (this.firstValueBucketIndex_ = 0);
      var lastValueBucketIndex = Math.floor((bucketMax - this.firstValueBucketStartBoundary_) / this.bucketSize_);
      this.lastBucketStartBoundary_ = this.bucketSize_ * lastValueBucketIndex + this.firstValueBucketStartBoundary_;
      this.lastBucketIndex_ = lastValueBucketIndex + this.firstValueBucketIndex_
    }
  }
};
autovis.ColumnBuckets.prototype.isColumnInt_ = function(columnValues) {
  for(var i = 0;i < columnValues.length;i++) {
    if(!goog.math.isInt(columnValues[i])) {
      return!1
    }
  }
  return!0
};
autovis.ColumnBuckets.prototype.getBucketIndexByValue = function(value) {
  return 0 == this.bucketSize_ || value < this.firstValueBucketStartBoundary_ ? 0 : value >= this.lastBucketStartBoundary_ ? this.lastBucketIndex_ : Math.floor((value - this.firstValueBucketStartBoundary_) / this.bucketSize_) + this.firstValueBucketIndex_
};
autovis.ColumnBuckets.prototype.getBucketLabels = function() {
  var bucketLabels = [];
  1 == this.firstValueBucketIndex_ && bucketLabels.push("< " + (this.firstValueBucketStartBoundary_.toPrecision(autovis.ColumnBuckets.LABEL_NUMBER_PRECISION_) - 0));
  for(var lastValueIndex = this.lastBucketIndex_ - this.firstValueBucketIndex_, i = 0;i < lastValueIndex + 1;i++) {
    bucketLabels.push((i * this.bucketSize_ + this.firstValueBucketStartBoundary_).toPrecision(autovis.ColumnBuckets.LABEL_NUMBER_PRECISION_) - 0 + "+")
  }
  return bucketLabels
};
autovis.ColumnBuckets.prototype.calcBucketSize_ = function(min, max, length, isInt) {
  if(min == max) {
    return 1
  }
  if(0 == length) {
    return max - min
  }
  var targetBucketSize = (max - min) / Math.sqrt(length), prettyValue = autovis.Value.getPrettyNumberInRange(targetBucketSize, 0.8 * targetBucketSize, 1.2 * targetBucketSize, Math.round);
  return isInt ? 0.5 < prettyValue ? Math.round(prettyValue) : 1 : prettyValue
};
autovis.ColumnBuckets.prototype.calcPercentileRank_ = function(arr, percentile) {
  return Math.ceil(percentile / 100 * arr.length)
};
// Input 338
gviz.canviz.ColorBarDefiner = function(chartDefinition, options, defaultPosition) {
  this.chartDef_ = chartDefinition;
  var optionsPath = gviz.colorbar.Scale.OPTIONS_PATH + ".legend.";
  this.position_ = defaultPosition ? options.inferEnumValue(optionsPath + "position", gviz.canviz.Options.ColorBarPosition, defaultPosition) : gviz.canviz.Options.ColorBarPosition.NONE;
  var defaultTextStyle = {fontName:chartDefinition.defaultFontName, fontSize:chartDefinition.defaultFontSize, auraColor:this.position_ == gviz.canviz.Options.ColorBarPosition.INSIDE ? chartDefinition.insideLabelsAuraColor : "none"};
  this.textStyle_ = options.inferTextStyleValue(optionsPath + "textStyle", defaultTextStyle);
  this.numberFormat_ = options.inferOptionalStringValue(optionsPath + "numberFormat");
  this.scale_ = this.area_ = null
};
gviz.canviz.ColorBarDefiner.prototype.getPosition = function() {
  return this.position_
};
gviz.canviz.ColorBarDefiner.prototype.getTextStyle = function() {
  return this.textStyle_
};
gviz.canviz.ColorBarDefiner.prototype.getHeight = function() {
  return 1.5 * this.textStyle_.fontSize
};
gviz.canviz.ColorBarDefiner.prototype.getArea = function() {
  return this.area_
};
gviz.canviz.ColorBarDefiner.prototype.setArea = function(area) {
  this.area_ = area
};
gviz.canviz.ColorBarDefiner.prototype.setScale = function(scale) {
  this.scale_ = scale
};
gviz.canviz.ColorBarDefiner.prototype.define = function() {
  if(!this.area_ || !this.scale_) {
    return null
  }
  var drawingOptions = {top:this.area_.top, left:this.area_.left, width:this.area_.right - this.area_.left, height:this.area_.bottom - this.area_.top, orientation:gviz.colorbar.Orientation.HORIZONTAL, textStyle:this.textStyle_, markerColor:"black", numberFormat:this.numberFormat_}, definition = gviz.colorbar.definer.define(this.scale_, drawingOptions, [], this.chartDef_.textMeasureFunction);
  return goog.isDefAndNotNull(definition) ? {position:this.position_, scale:this.scale_, drawingOptions:drawingOptions, definition:definition} : null
};
// Input 339
gviz.canviz.LineLabelDescriptor = function(dataYPos, height, labelEntry) {
  this.dataYPos_ = dataYPos;
  this.height_ = height;
  this.labelPos_ = dataYPos - height / 2;
  this.labelEntry_ = labelEntry;
  this.index = 0
};
gviz.canviz.LineLabelDescriptor.prototype.getTop = function() {
  return this.labelPos_
};
gviz.canviz.LineLabelDescriptor.prototype.setTop = function(top) {
  this.labelPos_ = top
};
gviz.canviz.LineLabelDescriptor.prototype.getCenter = function() {
  return this.labelPos_ + this.height_ / 2
};
gviz.canviz.LineLabelDescriptor.prototype.getBottom = function() {
  return this.labelPos_ + this.height_
};
gviz.canviz.LineLabelDescriptor.prototype.getHeight = function() {
  return this.height_
};
gviz.canviz.LineLabelDescriptor.prototype.getDataYPos = function() {
  return this.dataYPos_
};
gviz.canviz.LineLabelDescriptor.prototype.getLabelEntry = function() {
  return this.labelEntry_
};
// Input 340
gviz.canviz.LineLabelPositioner = function(totalHeight, labelDescriptors) {
  this.totalHeight_ = totalHeight;
  this.labelDescriptors_ = labelDescriptors;
  for(var i = 0, len = labelDescriptors.length;i < len;i++) {
    labelDescriptors[i].index = i
  }
};
gviz.canviz.LineLabelPositioner.prototype.adjustPositions = function() {
  for(var heightSum = 0, i = 0, len = this.labelDescriptors_.length;i < len;i++) {
    heightSum += this.labelDescriptors_[i].getHeight()
  }
  if(heightSum > this.totalHeight_) {
    throw Error("Not enough space for labels. Need: " + heightSum + " got: " + this.totalHeight_);
  }
  this.labelDescriptors_.sort(function(a, b) {
    var aPos = a.getDataYPos(), bPos = b.getDataYPos();
    return aPos == bPos ? a.index > b.index ? 1 : 0 : aPos > bPos ? 1 : -1
  });
  i = 0;
  for(len = this.labelDescriptors_.length;i < len;i++) {
    var descriptor = this.labelDescriptors_[i], pos = this.adjustToFitInRange_(descriptor.getTop(), descriptor.getHeight());
    descriptor.setTop(pos)
  }
  for(var descriptorGroups = [], j = 0, len = this.labelDescriptors_.length;j < len;j++) {
    descriptorGroups.push([this.labelDescriptors_[j]])
  }
  for(;this.adjustNextOverlap_(descriptorGroups);) {
  }
};
gviz.canviz.LineLabelPositioner.prototype.adjustNextOverlap_ = function(descriptorGroups) {
  for(var i = 0;i < descriptorGroups.length - 1;i++) {
    var thisGroup = descriptorGroups[i], nextGroup = descriptorGroups[i + 1];
    if(this.overlaps_(thisGroup, nextGroup)) {
      return this.mergeGroups_(thisGroup, nextGroup), descriptorGroups.splice(i + 1, 1), !0
    }
  }
  return!1
};
gviz.canviz.LineLabelPositioner.prototype.overlaps_ = function(thisGroup, nextGroup) {
  var bottom = thisGroup[thisGroup.length - 1];
  return bottom.getBottom() > nextGroup[0].getTop()
};
gviz.canviz.LineLabelPositioner.prototype.mergeGroups_ = function(thisGroup, nextGroup) {
  for(var i = 0;i < nextGroup.length;i++) {
    thisGroup.push(nextGroup[i])
  }
  for(var sumY = 0, sumHeight = 0, i = 0;i < thisGroup.length;i++) {
    sumY += thisGroup[i].getDataYPos(), sumHeight += thisGroup[i].getHeight()
  }
  for(var avgY = sumY / thisGroup.length, startPos = avgY - sumHeight / 2, startPos = this.adjustToFitInRange_(startPos, sumHeight), i = 0;i < thisGroup.length;i++) {
    var descriptor = thisGroup[i];
    descriptor.setTop(startPos);
    startPos += descriptor.getHeight()
  }
};
gviz.canviz.LineLabelPositioner.prototype.adjustToFitInRange_ = function(pos, height) {
  return goog.math.clamp(pos, 0, this.totalHeight_ - height)
};
// Input 341
gviz.canviz.LegendDefiner = function(chartDefinition, options, defaultPosition, opt_iconWidthScaleFactor) {
  this.chartDef_ = chartDefinition;
  this.position_ = defaultPosition ? options.inferEnumValue("legend.position", gviz.canviz.Options.LegendPosition, defaultPosition) : gviz.canviz.Options.LegendPosition.NONE;
  var defaultAlignment = this.position_ == gviz.canviz.Options.LegendPosition.BOTTOM ? gviz.canviz.Options.Alignment.CENTER : gviz.canviz.Options.Alignment.START;
  this.alignment_ = options.inferEnumValue("legend.alignment", gviz.canviz.Options.Alignment, defaultAlignment);
  var orientation = gviz.canviz.Options.Orientation.HORIZONTAL;
  if(this.position_ == gviz.canviz.Options.LegendPosition.LEFT || this.position_ == gviz.canviz.Options.LegendPosition.RIGHT || this.position_ == gviz.canviz.Options.LegendPosition.LABELED) {
    orientation = gviz.canviz.Options.Orientation.VERTICAL
  }
  this.orientation_ = orientation;
  var defaultTextStyle = {fontName:chartDefinition.defaultFontName, fontSize:chartDefinition.defaultFontSize, auraColor:this.position_ == gviz.canviz.Options.LegendPosition.INSIDE ? chartDefinition.insideLabelsAuraColor : "none"};
  this.textStyle_ = options.inferTextStyleValue("legend.textStyle", defaultTextStyle);
  this.showScrollButtons_ = !1;
  this.pagingTextStyle_ = options.inferTextStyleValue("legend.pagingTextStyle", this.textStyle_);
  this.textMeasureFunction_ = chartDefinition.textMeasureFunction;
  this.iconHeight = this.textStyle_.fontSize;
  opt_iconWidthScaleFactor = opt_iconWidthScaleFactor ? goog.math.clamp(opt_iconWidthScaleFactor, gviz.canviz.Options.LEGEND_ICON_WIDTH_SCALE_FACTOR_MIN, gviz.canviz.Options.LEGEND_ICON_WIDTH_SCALE_FACTOR_MAX) : 1;
  this.iconWidth = this.iconHeight * opt_iconWidthScaleFactor;
  this.gapIconRight = Math.round(this.textStyle_.fontSize / (gviz.canviz.Constants.GOLDEN_RATIO * gviz.canviz.Constants.GOLDEN_RATIO));
  this.allVisibleEntries_ = this.area_ = null;
  this.showPageIndex = options.inferBooleanValue("legend.showPageIndex", !0);
  this.scrollArrowsOrientation = options.inferEnumValue("legend.scrollArrows.orientation", gviz.canviz.Options.Orientation, this.orientation_);
  this.scrollArrowsActiveBrush = options.inferBrushValue("legend.scrollArrows.activeColor");
  this.scrollArrowsInactiveBrush = options.inferBrushValue("legend.scrollArrows.inactiveColor");
  this.pages = null;
  this.gapScrollText_ = this.gapIconRight;
  this.scrollNextX_ = this.scrollPreviousX_ = this.scrollItemsY_ = 0;
  this.maxLinesPerHorizontalPage = this.position_ == gviz.canviz.Options.LegendPosition.TOP ? options.inferNonNegativeNumberValue("legend.maxLines", 1) : 1;
  this.actualLinesPerHorizontalPage = 0
};
gviz.canviz.LegendDefiner.prototype.getPosition = function() {
  return this.position_
};
gviz.canviz.LegendDefiner.prototype.getTextStyle = function() {
  return this.textStyle_
};
gviz.canviz.LegendDefiner.prototype.getArea = function() {
  return this.area_
};
gviz.canviz.LegendDefiner.prototype.setArea = function(area) {
  this.area_ = area
};
gviz.canviz.LegendDefiner.prototype.calcLegendEntries = function() {
  this.allVisibleEntries_ = goog.array.filter(this.chartDef_.legendEntries, function(legendEntry) {
    return legendEntry.isVisible
  })
};
gviz.canviz.LegendDefiner.prototype.define = function() {
  if(!this.area_) {
    return null
  }
  goog.asserts.assert(this.allVisibleEntries_);
  this.position_ != gviz.canviz.Options.LegendPosition.NONE && (this.orientation_ == gviz.canviz.Options.Orientation.VERTICAL ? this.calcVerticalLayout_() : this.calcHorizontalLayout_());
  var currentPage = this.pages && 0 < this.pages.length ? this.pages[0] : null, scrollItems = this.showScrollButtons_ ? this.calcScrollItems_(0, !1, 1 < this.pages.length) : null;
  return{position:this.position_, area:this.area_, pages:this.pages, currentPage:currentPage, scrollItems:scrollItems}
};
gviz.canviz.LegendDefiner.prototype.calcVerticalLayout_ = function() {
  var nonTextWidth = this.iconWidth + this.gapIconRight, textWidth = Math.max(this.area_.right - this.area_.left - nonTextWidth, 0), legendHeight = this.area_.bottom - this.area_.top, legendWithPagingHeight = Math.max(legendHeight - 2 * this.iconHeight, 0), allVisibleEntries = this.allVisibleEntries_, chartDef = this.chartDef_;
  gviz.canviz.chartdefinitionutil.reverseSeriesLabelsVertically(chartDef) && allVisibleEntries.reverse();
  var optimisticLayouts = goog.array.map(allVisibleEntries, function(entry) {
    var layout = gviz.canviz.textutils.calcTextLayout(this.textMeasureFunction_, entry.text, this.textStyle_, textWidth, Infinity);
    0 == layout.lines.length && (layout.lines = [""]);
    return layout
  }, this);
  if(this.position_ == gviz.canviz.Options.LegendPosition.LABELED && chartDef.defaultSerieType == gviz.canviz.Options.SerieType.LINE) {
    var page = this.calcVerticalEntriesByDataPosition_(optimisticLayouts, legendHeight, allVisibleEntries);
    this.pages = [page]
  }else {
    var allocated = this.allocateHeightsForVerticalEntries_(optimisticLayouts, legendHeight);
    if(this.showScrollButtons_ = this.hasNextVerticalEntries_(allVisibleEntries, allocated)) {
      if(allocated = this.allocateHeightsForVerticalEntries_(optimisticLayouts, legendWithPagingHeight), goog.isDef(allocated[0]) && 0 != allocated[0].length) {
        this.pages = [];
        for(var entries = allVisibleEntries;0 < entries.length;) {
          page = this.calcVerticalEntriesByAllocation_(allocated, entries);
          this.pages.push(page);
          for(var index = 0;goog.isDef(allocated[index]) && 0 != allocated[index].length;) {
            ++index
          }
          optimisticLayouts = goog.array.slice(optimisticLayouts, index);
          allocated = this.allocateHeightsForVerticalEntries_(optimisticLayouts, legendWithPagingHeight);
          entries = goog.array.slice(entries, index)
        }
        if(this.showScrollButtons_ && (this.scrollItemsY_ = Math.round(this.area_.bottom - this.iconHeight), this.scrollPreviousX_ = this.area_.left, this.scrollNextX_ = this.scrollPreviousX_ + this.iconWidth + this.gapScrollText_, this.showPageIndex)) {
          var pageIndexSize = this.calcMaxPageIndexSize_(this.pages.length);
          this.scrollNextX_ += pageIndexSize + this.gapScrollText_
        }
      }else {
        this.showScrollButtons_ = !1
      }
    }else {
      page = this.calcVerticalEntriesByAllocation_(allocated, allVisibleEntries), this.pages = [page]
    }
  }
};
gviz.canviz.LegendDefiner.prototype.allocateHeightsForVerticalEntries_ = function(optimisticLayouts, legendHeight) {
  var fontSize = this.textStyle_.fontSize, vPadBetweenEntries = Math.round(fontSize / gviz.canviz.Constants.GOLDEN_RATIO), vPadBetweenLines = Math.round(fontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO)), entryFirstLineHeight = fontSize + vPadBetweenEntries, entryNextLinesHeight = fontSize + vPadBetweenLines, entriesRealEstate = this.calcVerticalEntriesRealEstate_(optimisticLayouts, entryFirstLineHeight, entryNextLinesHeight);
  return gviz.canviz.util.distributeRealEstateWithKeys(entriesRealEstate, legendHeight)
};
gviz.canviz.LegendDefiner.prototype.getLastLineValueOfSerie_ = function(serieIndex) {
  var hAxis = goog.object.getAnyValue(this.chartDef_.hAxes), serie = this.chartDef_.series[serieIndex], points = goog.array.map(serie.points, function(point) {
    return gviz.canviz.chartdefinitionutil.isDatumNull(point) ? null : new goog.math.Coordinate(point.scaled.x, point.scaled.y)
  }), lineValueAtViewWindowMax = gviz.canviz.util.piecewiseLinearInterpolation(points, hAxis.endPos, serie.interpolateNulls);
  return goog.isNull(lineValueAtViewWindowMax) ? this.getLastValuePreceding_(points, hAxis.endPos) : lineValueAtViewWindowMax
};
gviz.canviz.LegendDefiner.prototype.getLastValuePreceding_ = function(coordinates, x$$0) {
  coordinates = goog.array.filter(coordinates, goog.isDefAndNotNull);
  var compareFn = function(x, coordinate) {
    return goog.array.defaultCompare(x, coordinate.x)
  }, i = goog.array.binarySearch(coordinates, x$$0, compareFn), insertionIndex = -(i + 1), precedingCoordinates = goog.array.slice(coordinates, 0, insertionIndex), coordinate$$0 = goog.array.findRight(precedingCoordinates, function(coordinate) {
    return!goog.isNull(coordinate.y)
  });
  return coordinate$$0 ? coordinate$$0.y : null
};
gviz.canviz.LegendDefiner.prototype.calcVerticalEntriesByDataPosition_ = function(optimisticLayouts, legendHeight, allVisibleEntries) {
  for(var maxTextWidth = this.area_.right - this.area_.left, labelStartXPos = Math.round(this.area_.left), labelDescriptors = [], entries = [], useDiveLegend = this.chartDef_.interactivityModel == gviz.canviz.Options.InteractivityModel.DIVE, i = 0;i < allVisibleEntries.length;i++) {
    var originalEntry = allVisibleEntries[i], allocatedRowsForEntry = optimisticLayouts[i].lines.length, textLayout = gviz.canviz.textutils.calcTextLayout(this.textMeasureFunction_, originalEntry.text, this.textStyle_, maxTextWidth, allocatedRowsForEntry), entry = {};
    entry.id = originalEntry.id;
    entry.brush = originalEntry.brush.clone();
    var textStyle = goog.object.clone(this.textStyle_);
    textStyle.color = entry.brush.getFill();
    entry.textBlock = {text:originalEntry.text, textStyle:textStyle, lines:[], paralAlign:gviz.graphics.TextAlign.START, perpenAlign:gviz.graphics.TextAlign.START, tooltip:textLayout.needTooltip ? originalEntry.text : "", anchor:null, angle:0};
    textStyle.auraColor && entry.brush.setStroke(textStyle.auraColor, 1);
    entry.isVisible = !0;
    for(var j = 0;j < textLayout.lines.length;j++) {
      entry.textBlock.lines.push({length:maxTextWidth, text:textLayout.lines[j]})
    }
    if(useDiveLegend) {
      var textWidth = this.textMeasureFunction_(entry.textBlock.lines[0].text, textStyle).width;
      entry.removeSerieButton = {};
      entry.removeSerieButton.coordinates = {x:labelStartXPos + textWidth + 5};
      entry.removeSerieButton.brush = entry.brush;
      entry.removeSerieButton.isVisible = !1
    }
    entry.index = originalEntry.index;
    var desiredPosition = this.getLastLineValueOfSerie_(entry.index) || 0, firstLine = entry.textBlock.lines[0], lineHeight = this.textMeasureFunction_(firstLine, textStyle).height, textHeight = entry.textBlock.lines.length * lineHeight, descriptor = new gviz.canviz.LineLabelDescriptor(desiredPosition, textHeight, entry);
    labelDescriptors.push(descriptor);
    entries.push(entry)
  }
  var lineLabelPositioner = new gviz.canviz.LineLabelPositioner(legendHeight, labelDescriptors);
  lineLabelPositioner.adjustPositions();
  for(j = 0;j < labelDescriptors.length;j++) {
    for(var descriptor = labelDescriptors[j], calculatedYPos = descriptor.getTop(), entry = descriptor.getLabelEntry(), lines = entry.textBlock.lines, i = 0;i < lines.length;i++) {
      lines[i].y = Math.round(i * lineHeight + calculatedYPos), lines[i].x = labelStartXPos, useDiveLegend && (entry.removeSerieButton.coordinates.y = lines[i].y)
    }
  }
  return entries
};
gviz.canviz.LegendDefiner.prototype.calcVerticalEntriesByAllocation_ = function(allocated, allVisibleEntries) {
  for(var nonTextWidth = this.iconWidth + this.gapIconRight, maxTextWidth = this.area_.right - this.area_.left - nonTextWidth, fontSize = this.textStyle_.fontSize, vPadBetweenEntries = Math.round(fontSize / gviz.canviz.Constants.GOLDEN_RATIO), vPadBetweenLines = Math.round(fontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO)), entryFirstLineHeight = fontSize + vPadBetweenEntries, entryNextLinesHeight = fontSize + vPadBetweenLines, entries = [], y = 0, x = Math.round(this.area_.left), i = 0;i < allVisibleEntries.length;i++) {
    var originalEntry = allVisibleEntries[i], allocatedForEntry = allocated[i].length;
    if(0 != allocatedForEntry) {
      var textLayout = gviz.canviz.textutils.calcTextLayout(this.textMeasureFunction_, originalEntry.text, this.textStyle_, maxTextWidth, allocatedForEntry), entry = {};
      entry.id = originalEntry.id;
      entry.textBlock = {text:originalEntry.text, textStyle:this.textStyle_, lines:[], anchor:new gviz.math.Coordinate(x, 0), paralAlign:gviz.graphics.TextAlign.START, perpenAlign:gviz.graphics.TextAlign.START, tooltip:textLayout.needTooltip ? originalEntry.text : "", angle:0};
      entry.square = {};
      entry.square.coordinates = new goog.math.Rect(x, y, this.iconWidth, this.iconHeight);
      entry.square.brush = originalEntry.brush.clone();
      this.textStyle_.auraColor && entry.square.brush.setStroke(this.textStyle_.auraColor, 1);
      entry.isVisible = !0;
      for(var j = 0;j < textLayout.lines.length;j++) {
        0 < j && (y += entryNextLinesHeight), entry.textBlock.lines.push({x:nonTextWidth, y:y, length:maxTextWidth, text:textLayout.lines[j]})
      }
      entry.index = originalEntry.index;
      y += entryFirstLineHeight;
      entries.push(entry)
    }
  }
  var offsetY = Math.round(this.area_.top);
  if(!this.showScrollButtons_) {
    var usedHeight = y - vPadBetweenEntries, totalHeight = this.area_.bottom - this.area_.top;
    this.alignment_ == gviz.canviz.Options.Alignment.END ? offsetY += totalHeight - usedHeight : this.alignment_ == gviz.canviz.Options.Alignment.CENTER && (offsetY += Math.floor((totalHeight - usedHeight) / 2))
  }
  for(i = 0;i < entries.length;i++) {
    entry = entries[i], entry.square.coordinates.top += offsetY, entry.textBlock.anchor.y += offsetY
  }
  return entries
};
gviz.canviz.LegendDefiner.prototype.calcVerticalEntriesRealEstate_ = function(optimisticLayouts, entryFirstLineHeight, entryNextLinesHeight) {
  for(var maxEntryNumOfLines = goog.array.reduce(optimisticLayouts, function(max, layout) {
    return Math.max(max, layout.lines.length)
  }, 0), entriesRealEstate = [], i = 0;i < maxEntryNumOfLines;i++) {
    var lineHeight = 0 == i ? entryFirstLineHeight : entryNextLinesHeight;
    goog.array.forEach(optimisticLayouts, function(layout, j) {
      if(i < layout.lines.length) {
        var height = 0 == i && 0 == j ? this.textStyle_.fontSize : lineHeight;
        entriesRealEstate.push({key:j, min:height, extra:[]})
      }
    }, this)
  }
  return entriesRealEstate
};
gviz.canviz.LegendDefiner.prototype.hasNextVerticalEntries_ = function(allVisibleEntries, allocated) {
  var lastEntryIndex = allVisibleEntries.length - 1;
  return 1 < allVisibleEntries.length && 1 > allocated[lastEntryIndex].length
};
gviz.canviz.LegendDefiner.prototype.calcMaxNeededLines = function(legendWidth) {
  goog.asserts.assert(this.allVisibleEntries_);
  for(var entries = this.allVisibleEntries_, allocated = this.allocateWidthsForHorizontalEntries_(entries, legendWidth), lines = 1;(0 == this.maxLinesPerHorizontalPage || this.maxLinesPerHorizontalPage > lines) && allocated.length < entries.length;) {
    ++lines, entries = goog.array.slice(entries, allocated.length), allocated = this.allocateWidthsForHorizontalEntries_(entries, legendWidth)
  }
  return lines
};
gviz.canviz.LegendDefiner.prototype.calcHorizontalLayout_ = function() {
  for(var maxAllowedPages = [1, 9, 99, 0], i = 0;i < maxAllowedPages.length && !this.setHorizontalPages_(maxAllowedPages[i]);++i) {
  }
  if(this.showScrollButtons_ && (this.scrollItemsY_ = Math.round((this.area_.top + this.area_.bottom - this.iconWidth) / 2), this.scrollNextX_ = this.area_.right - this.iconWidth, this.scrollPreviousX_ = this.scrollNextX_ - this.gapScrollText_ - this.iconWidth, this.showPageIndex)) {
    var pageIndexSize = this.calcMaxPageIndexSize_(this.pages.length);
    this.scrollPreviousX_ -= pageIndexSize + this.gapScrollText_
  }
};
gviz.canviz.LegendDefiner.prototype.setHorizontalPages_ = function(maxAllowedPages) {
  var totalWidth = this.area_.right - this.area_.left, singlePage = !1;
  1 != maxAllowedPages && (totalWidth -= 2 * (this.iconWidth + this.gapIconRight), singlePage = !0, 0 != maxAllowedPages && (totalWidth -= this.calcMaxPageIndexSize_(maxAllowedPages) + this.gapIconRight));
  var allocated = this.allocateWidthsForHorizontalEntries_(this.allVisibleEntries_, totalWidth);
  if(0 == allocated.length) {
    return this.showScrollButtons_ = !1, !0
  }
  this.pages = [];
  for(var entries = this.allVisibleEntries_;0 < entries.length;) {
    if(0 < maxAllowedPages && this.pages.length == maxAllowedPages) {
      return!1
    }
    for(var row = this.calcHorizontalEntriesByAllocation_(allocated, entries, singlePage), rows = [row], linesCount = 1;linesCount < this.actualLinesPerHorizontalPage && entries.length != allocated.length;linesCount++) {
      entries = goog.array.slice(entries, allocated.length), allocated = this.allocateWidthsForHorizontalEntries_(entries, totalWidth), rows.push(this.calcHorizontalEntriesByAllocation_(allocated, entries, singlePage))
    }
    var page = this.distributeHeightsForHorizontalPage_(rows);
    this.pages.push(page);
    entries = goog.array.slice(entries, allocated.length);
    allocated = this.allocateWidthsForHorizontalEntries_(entries, totalWidth)
  }
  this.showScrollButtons_ = 1 < this.pages.length;
  return!0
};
gviz.canviz.LegendDefiner.prototype.distributeHeightsForHorizontalPage_ = function(pageRows) {
  var topY = this.area_.top, bottomY = this.area_.bottom, totalHeight = bottomY - topY, heightForOneLine = this.textStyle_.fontSize, heightForAllText = this.actualLinesPerHorizontalPage * heightForOneLine, heightForAllSpaces = totalHeight - heightForAllText, heightForOneSpace = 1 < this.actualLinesPerHorizontalPage ? heightForAllSpaces / (this.actualLinesPerHorizontalPage - 1) : 0, actualHeight = (heightForOneLine + heightForOneSpace) * pageRows.length - heightForOneSpace, offset = (totalHeight - 
  actualHeight) / 2, page = [];
  goog.array.forEach(pageRows, function(row) {
    var roundOffset = Math.round(offset);
    goog.array.forEach(row, function(entry) {
      entry.textBlock.anchor.y += roundOffset;
      entry.square.coordinates.top += roundOffset
    });
    offset += heightForOneLine + heightForOneSpace;
    goog.array.extend(page, row)
  });
  return page
};
gviz.canviz.LegendDefiner.prototype.allocateWidthsForHorizontalEntries_ = function(allVisibleEntries, totalWidth) {
  var nonTextWidth = this.iconWidth + this.gapIconRight, minTrimmedWidth = Math.min(this.chartDef_.width * (2 - gviz.canviz.Constants.GOLDEN_RATIO) / 2, totalWidth);
  if(minTrimmedWidth < nonTextWidth) {
    return[]
  }
  var entriesRealEstate = this.calcHorizontalEntriesRealEstate_(minTrimmedWidth, allVisibleEntries);
  return gviz.canviz.util.distributeRealEstate(entriesRealEstate, totalWidth)
};
gviz.canviz.LegendDefiner.prototype.calcHorizontalEntriesByAllocation_ = function(allocatedWidths, allVisibleEntries, singlePage) {
  for(var totalWidth = this.area_.right - this.area_.left, nonTextWidth = this.iconWidth + this.gapIconRight, gapBetweenItems = Math.round(this.textStyle_.fontSize * gviz.canviz.Constants.GOLDEN_RATIO), entries = [], x = 0, y = Math.round(this.area_.top), i = 0;i < allocatedWidths.length;i++) {
    var originalEntry = allVisibleEntries[i], allowedTextWidth = allocatedWidths[i] - nonTextWidth - (0 < i ? gapBetweenItems : 0), textLayout = gviz.canviz.textutils.calcTextLayout(this.textMeasureFunction_, originalEntry.text, this.textStyle_, allowedTextWidth, 1), displayedText = 0 < textLayout.lines.length ? textLayout.lines[0] : "", displayedTextWidth = this.textMeasureFunction_(displayedText, this.textStyle_).width, lines = [{x:x + nonTextWidth, y:0, length:displayedTextWidth, text:displayedText}], 
    entry = {};
    entry.id = originalEntry.id;
    entry.textBlock = {text:originalEntry.text, textStyle:this.textStyle_, lines:displayedText ? lines : [], anchor:new gviz.math.Coordinate(0, y), paralAlign:gviz.graphics.TextAlign.START, perpenAlign:gviz.graphics.TextAlign.START, tooltip:textLayout.needTooltip ? originalEntry.text : "", angle:0};
    entry.isVisible = !0;
    entry.square = {};
    entry.square.brush = originalEntry.brush.clone();
    this.textStyle_.auraColor && entry.square.brush.setStroke(this.textStyle_.auraColor, 1);
    entry.square.coordinates = new goog.math.Rect(x, y, this.iconWidth, this.iconHeight);
    entry.index = originalEntry.index;
    entries.push(entry);
    x += displayedTextWidth + nonTextWidth + gapBetweenItems
  }
  var offsetX = this.area_.left;
  if(!singlePage) {
    var usedWidth = x - gapBetweenItems;
    this.alignment_ == gviz.canviz.Options.Alignment.END ? offsetX += totalWidth - usedWidth : this.alignment_ == gviz.canviz.Options.Alignment.CENTER && (offsetX += Math.floor((totalWidth - usedWidth) / 2))
  }
  for(i = 0;i < entries.length;i++) {
    entry = entries[i], entry.square.coordinates.left += offsetX, entry.textBlock.anchor.x += offsetX
  }
  return entries
};
gviz.canviz.LegendDefiner.prototype.calcHorizontalEntriesRealEstate_ = function(minTrimmedWidth, allVisibleEntries) {
  var nonTextWidth = this.iconWidth + this.gapIconRight, gapBetweenItems = Math.round(this.textStyle_.fontSize * gviz.canviz.Constants.GOLDEN_RATIO);
  goog.asserts.assert(minTrimmedWidth >= nonTextWidth);
  var entriesRealEstate = goog.array.map(allVisibleEntries, function(entry, i) {
    var textWidth = this.textMeasureFunction_(entry.text, this.textStyle_).width, maxWidth = textWidth + nonTextWidth, minWidth = Math.min(minTrimmedWidth, maxWidth), extra = maxWidth - minWidth;
    0 < i && (minWidth += gapBetweenItems);
    return{min:minWidth, extra:[extra]}
  }, this);
  return entriesRealEstate
};
gviz.canviz.LegendDefiner.prototype.calcMaxPageIndexSize_ = function(lastPage) {
  for(var pageIndex = "0";10 <= lastPage;) {
    pageIndex += "0", lastPage /= 10
  }
  var pageText = pageIndex + "/" + pageIndex;
  return this.textMeasureFunction_(pageText, this.pagingTextStyle_).width
};
gviz.canviz.LegendDefiner.prototype.calcScrollItems_ = function(pageIndex, hasPrevious, hasNext) {
  var y = this.scrollItemsY_, pageIndexTextBlock = null;
  if(this.showPageIndex) {
    var pageIndexText = pageIndex + 1 + "/" + this.pages.length, x = this.scrollPreviousX_ + this.iconWidth, length = this.scrollNextX_ - x, pageIndexTextBlock = {text:pageIndexText, textStyle:this.pagingTextStyle_, lines:[{x:x + length / 2, y:y, text:pageIndexText, length:length}], paralAlign:gviz.graphics.TextAlign.CENTER, perpenAlign:gviz.graphics.TextAlign.START, tooltip:"", anchor:null, angle:0}
  }
  var useUpDown = this.scrollArrowsOrientation == gviz.canviz.Options.Orientation.VERTICAL, buttonWidth = this.iconWidth, halfButtonWidth = Math.round(buttonWidth / 2), prevButtonX = this.scrollPreviousX_, nextButtonX = this.scrollNextX_, previousPath = null, nextPath = null;
  useUpDown ? (previousPath = [{x:prevButtonX + buttonWidth, y:y + buttonWidth}, {x:prevButtonX + halfButtonWidth, y:y}, {x:prevButtonX, y:y + buttonWidth}], nextPath = [{x:nextButtonX, y:y}, {x:nextButtonX + buttonWidth, y:y}, {x:nextButtonX + halfButtonWidth, y:y + buttonWidth}]) : (previousPath = [{x:prevButtonX + buttonWidth, y:y + buttonWidth}, {x:prevButtonX + buttonWidth, y:y}, {x:prevButtonX, y:y + halfButtonWidth}], nextPath = [{x:nextButtonX, y:y}, {x:nextButtonX + buttonWidth, y:y + halfButtonWidth}, 
  {x:nextButtonX, y:y + buttonWidth}]);
  var brushes = {active:this.scrollArrowsActiveBrush, inactive:this.scrollArrowsInactiveBrush}, previousButton = {path:previousPath, active:hasPrevious, brushes:brushes, brush:hasPrevious ? brushes.active : brushes.inactive}, nextButton = {path:nextPath, active:hasNext, brushes:brushes, brush:hasNext ? brushes.active : brushes.inactive};
  return{previousButton:previousButton, nextButton:nextButton, pageIndexTextBlock:pageIndexTextBlock}
};
// Input 342
gviz.canviz.legend.labeledLegendDefiner = {};
gviz.canviz.legend.labeledLegendDefiner.Alignment = {LEFT:1, RIGHT:2};
gviz.canviz.legend.labeledLegendDefiner.MAX_CONSECUTIVE_FAILURES = 15;
gviz.canviz.legend.labeledLegendDefiner.define = function(legendArea, textMeasureFunction, alignment, legendTextStyle, entriesInfo) {
  var textWidth = legendArea.right - legendArea.left, aboveTextStyle = goog.object.clone(legendTextStyle), belowTextStyle = goog.object.clone(legendTextStyle);
  belowTextStyle.color = gviz.canviz.legend.labeledLegendDefiner.BELOW_TEXT_COLOR;
  var verticalTextSpacing = legendTextStyle.fontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO), aboveTextLineHeight = aboveTextStyle.fontSize + verticalTextSpacing, belowTextLineHeight = belowTextStyle.fontSize + verticalTextSpacing, layout = gviz.canviz.legend.labeledLegendDefiner.calcEntriesLayout_(legendArea, textWidth, textMeasureFunction, aboveTextStyle, belowTextStyle, verticalTextSpacing, entriesInfo), labeledLegendDefinition = [], endPointX, cornerPointX, textAlignment;
  alignment == gviz.canviz.legend.labeledLegendDefiner.Alignment.RIGHT ? (endPointX = legendArea.right, cornerPointX = legendArea.left, textAlignment = gviz.graphics.TextAlign.END) : (goog.asserts.assert(alignment == gviz.canviz.legend.labeledLegendDefiner.Alignment.LEFT), endPointX = legendArea.left, cornerPointX = legendArea.right, textAlignment = gviz.graphics.TextAlign.START);
  for(var i$$0 = 0;i$$0 < entriesInfo.length;++i$$0) {
    var entryInfo = entriesInfo[i$$0], entryLayout = layout[i$$0];
    if(goog.isDefAndNotNull(entryLayout)) {
      var aboveTextLayout = gviz.canviz.textutils.calcTextLayout(textMeasureFunction, entryInfo.aboveText, aboveTextStyle, textWidth, entryLayout.aboveTextLines), belowTextLayout = gviz.canviz.textutils.calcTextLayout(textMeasureFunction, entryInfo.belowText, belowTextStyle, textWidth, entryLayout.belowTextLines), endPoint = gviz.canviz.vectorutils.round(new goog.math.Vec2(endPointX, entryLayout.y));
      labeledLegendDefinition.push({startPointRadius:gviz.canviz.legend.labeledLegendDefiner.START_POINT_RADIUS, startPoint:gviz.canviz.vectorutils.round(entryInfo.originYToVec(goog.math.clamp(entryLayout.y, entryInfo.originRange.start, entryInfo.originRange.end))), cornerPointX:cornerPointX, endPoint:endPoint, startPointBrush:new gviz.graphics.Brush({fill:gviz.canviz.legend.labeledLegendDefiner.LINE_COLOR, fillOpacity:gviz.canviz.legend.labeledLegendDefiner.LINE_OPACITY}), lineBrush:new gviz.graphics.Brush({stroke:gviz.canviz.legend.labeledLegendDefiner.LINE_COLOR, 
      strokeWidth:gviz.canviz.legend.labeledLegendDefiner.LINE_WIDTH, strokeOpacity:gviz.canviz.legend.labeledLegendDefiner.LINE_OPACITY}), verticalTextSpacing:verticalTextSpacing, aboveText:{text:entryInfo.aboveText, textStyle:aboveTextStyle, anchor:new gviz.math.Coordinate(endPoint.x, endPoint.y), lines:goog.array.map(aboveTextLayout.lines, function(line, i) {
        return{x:0, y:(i - aboveTextLayout.lines.length) * aboveTextLineHeight, length:aboveTextLayout.maxLineWidth, text:line}
      }), paralAlign:textAlignment, perpenAlign:gviz.graphics.TextAlign.START, tooltip:aboveTextLayout.needTooltip ? entryInfo.aboveText : "", angle:0}, aboveTextStyle:aboveTextStyle, belowText:{text:entryInfo.belowText, textStyle:belowTextStyle, anchor:new gviz.math.Coordinate(endPoint.x, endPoint.y), lines:goog.array.map(belowTextLayout.lines, function(line, i) {
        return{x:0, y:(i + 1) * belowTextLineHeight, length:belowTextLayout.maxLineWidth, text:line}
      }), paralAlign:textAlignment, perpenAlign:gviz.graphics.TextAlign.END, tooltip:belowTextLayout.needTooltip ? entryInfo.belowText : "", angle:0}, belowTextStyle:belowTextStyle, alignment:textAlignment, index:entryInfo.index})
    }
  }
  return labeledLegendDefinition
};
gviz.canviz.legend.labeledLegendDefiner.calcEntriesLayout_ = function(legendArea, textWidth, textMeasureFunction, aboveTextStyle, belowTextStyle, verticalTextSpacing, entriesInfo) {
  var aboveTextLineHeight = aboveTextStyle.fontSize + verticalTextSpacing, belowTextLineHeight = belowTextStyle.fontSize + verticalTextSpacing, intervals = goog.array.map(entriesInfo, function(entryInfo, idx) {
    var aboveTextLayout = gviz.canviz.textutils.calcTextLayout(textMeasureFunction, entryInfo.aboveText, aboveTextStyle, textWidth, Infinity), belowTextLayout = gviz.canviz.textutils.calcTextLayout(textMeasureFunction, entryInfo.belowText, belowTextStyle, textWidth, Infinity);
    return{entryId:idx, preferredAnchorPosition:entryInfo.preferredOrigin, anchorPosition:entryInfo.preferredOrigin, aboveTextLines:aboveTextLayout.lines.length, belowTextLines:belowTextLayout.lines.length, aboveSpacing:verticalTextSpacing, belowSpacing:verticalTextSpacing}
  });
  goog.array.sort(intervals, function(i1, i2) {
    return i1.anchorPosition - i2.anchorPosition
  });
  var remainingIntervals = goog.array.clone(intervals);
  goog.array.sort(remainingIntervals, function(i1, i2) {
    var entryInfo1 = entriesInfo[i1.entryId], entryInfo2 = entriesInfo[i2.entryId];
    return entryInfo1.importance - entryInfo2.importance
  });
  var workingIntervals = [];
  0 < remainingIntervals.length && workingIntervals.push(remainingIntervals.pop());
  for(var lastAddedInterval = null, numFailures = 0, maxFailures = gviz.canviz.legend.labeledLegendDefiner.MAX_CONSECUTIVE_FAILURES, result;result = gviz.canviz.legend.labeledLegendDefiner.calcEntriesLayoutAttempt_(legendArea, aboveTextLineHeight, belowTextLineHeight, entriesInfo, workingIntervals, !1), !(0 === remainingIntervals.length || result.unableToFitAllTextLines && numFailures > maxFailures);) {
    result.unableToFitAllTextLines ? (numFailures++, lastAddedInterval && goog.array.remove(workingIntervals, lastAddedInterval)) : numFailures = 0, lastAddedInterval = remainingIntervals.pop(), workingIntervals.push(lastAddedInterval), goog.array.sort(workingIntervals, function(i1, i2) {
      return i1.anchorPosition - i2.anchorPosition
    })
  }
  result.unableToFitAllTextLines && lastAddedInterval && (goog.array.remove(workingIntervals, lastAddedInterval), result = gviz.canviz.legend.labeledLegendDefiner.calcEntriesLayoutAttempt_(legendArea, aboveTextLineHeight, belowTextLineHeight, entriesInfo, workingIntervals, !1));
  var result2 = gviz.canviz.legend.labeledLegendDefiner.calcEntriesLayoutAttempt_(legendArea, aboveTextLineHeight, belowTextLineHeight, entriesInfo, workingIntervals, !0);
  result2.unableToFitAllTextLines || (result = result2);
  return result.layout
};
gviz.canviz.legend.labeledLegendDefiner.calcEntriesLayoutAttempt_ = function(legendArea, aboveTextLineHeight, belowTextLineHeight, entriesInfo, intervals, striveForPreferredAnchorPosition) {
  0 < intervals.length && (intervals[0].aboveSpacing = 0, goog.array.peek(intervals).belowSpacing = 0);
  for(var i = 0;i < intervals.length;i++) {
    var interval = intervals[i], prevInterval = intervals[i - 1], anchorRangeStart = prevInterval ? entriesInfo[prevInterval.entryId].originRange.start + gviz.canviz.legend.labeledLegendDefiner.MIN_VERTICAL_LINE_SPACING : legendArea.top, nextInterval = intervals[i + 1], anchorRangeEnd = nextInterval ? entriesInfo[nextInterval.entryId].originRange.end - gviz.canviz.legend.labeledLegendDefiner.MIN_VERTICAL_LINE_SPACING : legendArea.bottom;
    interval.anchorRange = new goog.math.Range(Math.min(interval.preferredAnchorPosition, anchorRangeStart), Math.max(interval.preferredAnchorPosition, anchorRangeEnd))
  }
  for(var positions = gviz.canviz.legend.labeledLegendDefiner.calcEntriesPosition_(legendArea, aboveTextLineHeight, belowTextLineHeight, intervals, striveForPreferredAnchorPosition), someEntryUnableToFitAllTextLines = !1, layout = {}, i = 0;i < intervals.length;i++) {
    var interval = intervals[i], position = positions[i], abovePartAvailableForText = position.anchor - position.top - interval.aboveSpacing, belowPartAvailableForText = position.bottom - position.anchor - interval.belowSpacing, actualAboveTextLines = abovePartAvailableForText / aboveTextLineHeight, actualBelowTextLines = belowPartAvailableForText / belowTextLineHeight, epsilon = 0.1, actualAboveTextLines = Math.floor(actualAboveTextLines + epsilon), actualBelowTextLines = Math.floor(actualBelowTextLines + 
    epsilon), unableToFitAllTextLines = actualAboveTextLines < interval.aboveTextLines || actualBelowTextLines < interval.belowTextLines, someEntryUnableToFitAllTextLines = someEntryUnableToFitAllTextLines || unableToFitAllTextLines;
    layout[interval.entryId] = {y:position.anchor, aboveTextLines:actualAboveTextLines, belowTextLines:actualBelowTextLines, unableToFitAllTextLines:unableToFitAllTextLines}
  }
  return{layout:layout, unableToFitAllTextLines:someEntryUnableToFitAllTextLines}
};
gviz.canviz.legend.labeledLegendDefiner.calcEntriesPosition_ = function(legendArea, aboveTextLineHeight, belowTextLineHeight, intervals, striveForPreferredAnchorPosition) {
  var getAbovePart = function(interval) {
    return interval.aboveTextLines * aboveTextLineHeight + interval.aboveSpacing
  }, getBelowPart = function(interval) {
    return interval.belowTextLines * belowTextLineHeight + interval.belowSpacing
  }, initialState = goog.object.map(intervals, function(interval) {
    return{anchor:interval.anchorPosition, top:interval.anchorPosition - getAbovePart(interval), bottom:interval.anchorPosition + getBelowPart(interval)}
  }), forceFuncs = [];
  forceFuncs.push(function(state, idx) {
    var topPos = state[idx].top;
    if(0 == idx) {
      var topExceed = Math.max(legendArea.top - topPos, 0);
      return{top:topExceed}
    }
    var neighborIdx = goog.string.toNumber(idx) - 1, bottomPosOfNeighbor = state[neighborIdx].bottom, overlap = Math.max(bottomPosOfNeighbor - topPos, 0);
    return{top:overlap / 2}
  });
  forceFuncs.push(function(state, idx) {
    var bottomPos = state[idx].bottom;
    if(idx == intervals.length - 1) {
      var bottomExceed = Math.min(legendArea.bottom - bottomPos, 0);
      return{bottom:bottomExceed}
    }
    var neighborIdx = goog.string.toNumber(idx) + 1, topPosOfNeighbor = state[neighborIdx].top, overlap = Math.min(topPosOfNeighbor - bottomPos, 0);
    return{bottom:overlap / 2}
  });
  forceFuncs.push(function(state, idx, relaxationCoef) {
    var anchorPos = state[idx].anchor, topPos = state[idx].top, abovePart = anchorPos - topPos, offsetToMakePositiveSize = Math.max(-abovePart, 0), interval = intervals[idx], offsetToMakeDesiredSize = Math.max(getAbovePart(interval) - Math.max(abovePart, 0), 0), force = (offsetToMakePositiveSize + offsetToMakeDesiredSize * (striveForPreferredAnchorPosition ? 1 : relaxationCoef)) / 2;
    return{anchor:force, top:-force}
  });
  forceFuncs.push(function(state, idx, relaxationCoef) {
    var anchorPos = state[idx].anchor, bottomPos = state[idx].bottom, belowPart = bottomPos - anchorPos, offsetToMakePositiveSize = Math.max(-belowPart, 0), interval = intervals[idx], offsetToMakeDesiredSize = Math.max(getBelowPart(interval) - Math.max(belowPart, 0), 0), force = (offsetToMakePositiveSize + offsetToMakeDesiredSize * (striveForPreferredAnchorPosition ? 1 : relaxationCoef)) / 2;
    return{anchor:-force, bottom:force}
  });
  forceFuncs.push(function(state, idx) {
    var anchorPos = state[idx].anchor, interval = intervals[idx], clampedAnchorPos = goog.math.clamp(anchorPos, interval.anchorRange.start, interval.anchorRange.end);
    return{anchor:clampedAnchorPos - anchorPos}
  });
  striveForPreferredAnchorPosition && forceFuncs.push(function(state, idx, relaxationCoef) {
    var anchorPos = state[idx].anchor, interval = intervals[idx], offset = interval.preferredAnchorPosition - anchorPos;
    return{anchor:offset * relaxationCoef}
  });
  var applyForceFunc = function(intervalState, force) {
    return{anchor:intervalState.anchor + (force.anchor || 0), top:intervalState.top + (force.top || 0), bottom:intervalState.bottom + (force.bottom || 0)}
  }, diffFunc = function(intervalState1, intervalState2) {
    return Math.max(Math.abs(intervalState1.anchor - intervalState2.anchor), Math.abs(intervalState1.top - intervalState2.top), Math.abs(intervalState1.bottom - intervalState2.bottom))
  }, diffLimit = 0.05, relaxationCoefDecreaseFactor = 0.99, maxIterationCount = 1E3, finalState = gviz.canviz.util.simulateForceSystem(initialState, forceFuncs, applyForceFunc, diffFunc, diffLimit, relaxationCoefDecreaseFactor, maxIterationCount);
  return goog.array.map(intervals, function(interval, idx) {
    var intervalState = finalState[String(idx)];
    return{anchor:intervalState.anchor, top:intervalState.top, bottom:intervalState.bottom}
  })
};
gviz.canviz.legend.labeledLegendDefiner.generateInteractivityLayer = function(legendDefinition, focusedEntryIndex) {
  var legendDefinitionIndex = goog.array.findIndex(legendDefinition, function(entry) {
    return entry.index == focusedEntryIndex
  });
  if(0 > legendDefinitionIndex) {
    return{}
  }
  var interactiveLegendDefinition = {};
  interactiveLegendDefinition[legendDefinitionIndex] = {startPointRadius:gviz.canviz.legend.labeledLegendDefiner.START_POINT_RADIUS_ON_FOCUS, lineBrush:new gviz.graphics.Brush({stroke:gviz.canviz.legend.labeledLegendDefiner.LINE_COLOR, strokeWidth:gviz.canviz.legend.labeledLegendDefiner.LINE_WIDTH_ON_FOCUS, strokeOpacity:gviz.canviz.legend.labeledLegendDefiner.LINE_OPACITY})};
  return interactiveLegendDefinition
};
gviz.canviz.legend.labeledLegendDefiner.START_POINT_RADIUS = 2;
gviz.canviz.legend.labeledLegendDefiner.START_POINT_RADIUS_ON_FOCUS = 4;
gviz.canviz.legend.labeledLegendDefiner.LINE_COLOR = "636363";
gviz.canviz.legend.labeledLegendDefiner.LINE_WIDTH = 1;
gviz.canviz.legend.labeledLegendDefiner.LINE_WIDTH_ON_FOCUS = 2;
gviz.canviz.legend.labeledLegendDefiner.LINE_OPACITY = 0.7;
gviz.canviz.legend.labeledLegendDefiner.ABOVE_TEXT_COLOR = "6c6c6c";
gviz.canviz.legend.labeledLegendDefiner.BELOW_TEXT_COLOR = "9e9e9e";
gviz.canviz.legend.labeledLegendDefiner.MIN_VERTICAL_LINE_SPACING = 5;
// Input 343
gviz.canviz.PieChartDefiner = function(dataView, options, textMeasureFunction, chartDef) {
  for(var i = 0;i < dataView.getNumberOfRows();i++) {
    if(0 > dataView.getValue(i, 1)) {
      throw Error("Negative values are invalid for a pie chart.");
    }
  }
  this.dataView_ = dataView;
  this.options_ = options;
  this.textMeasureFunction_ = textMeasureFunction;
  this.colors_ = options.inferValue("colors", gviz.canviz.Options.DEFAULT_DISCRETE_COLORS);
  this.startAngle_ = options.inferNumberValue("pieStartAngle", 0);
  this.reverseDirection_ = 0 > options.inferNumberValue("direction", 1);
  this.chartDef_ = chartDef;
  this.chartDef_.focusTarget = gviz.canviz.Options.FocusTarget.SERIES;
  this.chartDef_.isDiff = this.options_.inferBooleanValue("isDiff");
  this.chartDef_.is3D &= !this.chartDef_.isDiff;
  chartDef.isDiff && (chartDef.diff = chartDef.diff || {}, chartDef.diff.pie = chartDef.diff.pie || {}, chartDef.diff.pie.isOldDataInCenter = this.options_.inferValue("diff.oldData.inCenter", gviz.canviz.Options.DEFAULT_PIE_DIFF_IS_OLD_DATA_IN_CENTER), chartDef.diff.pie.innerOuterRadiusRatio = this.options_.inferValue("diff.innerCircle.radiusFactor", gviz.canviz.Options.DEFAULT_PIE_DIFF_INNER_OUTER_RADIUS_RATIO));
  this.legendDefiner_ = null
};
gviz.canviz.PieChartDefiner.prototype.getDefaultLegendPosition = function() {
  return gviz.canviz.Options.LegendPosition.RIGHT
};
gviz.canviz.PieChartDefiner.prototype.calcLayout = function(legendDefiner) {
  var chartDef = this.chartDef_;
  this.legendDefiner_ = legendDefiner;
  if("string" != this.dataView_.getColumnType(0)) {
    throw Error("Pie chart should have a first column of type string");
  }
  var areaLayout = this.calcChartAreaLayout_();
  this.calcSeries_(areaLayout);
  var legendPosition = this.legendDefiner_.getPosition();
  areaLayout.legend ? this.legendDefiner_.setArea(areaLayout.legend) : legendPosition == gviz.canviz.Options.LegendPosition.BOTTOM ? this.legendDefiner_.setArea(this.calcBottomLegendArea_()) : legendPosition == gviz.canviz.Options.LegendPosition.LABELED && this.calcLabeledLegend_(chartDef.chartArea, areaLayout, this.legendDefiner_.getTextStyle(), chartDef.series)
};
gviz.canviz.PieChartDefiner.prototype.createBrushes_ = function(color, opt_opacity) {
  var chartDef = this.chartDef_, brushes = {}, borderColor = this.options_.inferColorValue("pieSliceBorderColor", ""), borderStrokeWidth = 1, fill = color.color, darkFill = color.dark, lightFill = color.light, stroke, darkStroke, lightStroke;
  chartDef.is3D ? (stroke = fill, darkStroke = darkFill, lightStroke = lightFill) : lightStroke = darkStroke = stroke = borderColor;
  brushes.normal = new gviz.graphics.Brush({stroke:stroke, strokeWidth:borderStrokeWidth, fill:fill, fillOpacity:opt_opacity || 1});
  brushes.dark = new gviz.graphics.Brush({stroke:darkStroke, strokeWidth:borderStrokeWidth, fill:darkFill, fillOpacity:opt_opacity || 1});
  brushes.light = new gviz.graphics.Brush({stroke:lightStroke, strokeWidth:borderStrokeWidth, fill:lightFill, fillOpacity:opt_opacity || 1});
  return brushes
};
gviz.canviz.PieChartDefiner.prototype.calcBottomLegendArea_ = function() {
  var chartDef = this.chartDef_, availableHeight = chartDef.height - chartDef.chartArea.bottom, legendFontSize = this.legendDefiner_.getTextStyle().fontSize, minGap = 2, items = [];
  items.push({min:minGap, extra:[Infinity]});
  var legendIdx = items.length;
  items.push({min:legendFontSize + minGap, extra:[Infinity]});
  var allocatedHeights = gviz.canviz.util.distributeRealEstate(items, availableHeight);
  if(allocatedHeights.length > legendIdx) {
    var y = chartDef.chartArea.bottom + allocatedHeights[legendIdx];
    return new goog.math.Box(y - legendFontSize, chartDef.chartArea.right, y, chartDef.chartArea.left)
  }
  return null
};
gviz.canviz.PieChartDefiner.prototype.calcChartAreaLayout_ = function() {
  var chartDef = this.chartDef_, chartArea = chartDef.chartArea, legendPosition = this.legendDefiner_.getPosition(), pieBoundingBox = null, legend = null, gapBetweenLegendAndPie = Math.round(chartDef.defaultFontSize * gviz.canviz.Constants.GOLDEN_RATIO), legendWidth = Math.round(chartArea.width * (1 - 1 / gviz.canviz.Constants.GOLDEN_RATIO) - gapBetweenLegendAndPie);
  legendPosition == gviz.canviz.Options.LegendPosition.LEFT ? (legend = new goog.math.Box(chartArea.top, chartArea.left + legendWidth, chartArea.bottom, chartArea.left), pieBoundingBox = new goog.math.Box(chartArea.top, chartArea.right, chartArea.bottom, legend.right + gapBetweenLegendAndPie)) : legendPosition == gviz.canviz.Options.LegendPosition.RIGHT ? (legend = new goog.math.Box(chartArea.top, chartArea.right, chartArea.bottom, chartArea.right - legendWidth), pieBoundingBox = new goog.math.Box(chartArea.top, 
  legend.left - gapBetweenLegendAndPie, chartArea.bottom, chartArea.left)) : pieBoundingBox = new goog.math.Box(chartArea.top, chartArea.right, chartArea.bottom, chartArea.left);
  var pieHeight = 0, pieSideLength = Math.min(pieBoundingBox.right - pieBoundingBox.left, pieBoundingBox.bottom - pieBoundingBox.top), radiusX = Math.floor(pieSideLength / 2), radiusY = radiusX, centerX = Math.round((pieBoundingBox.right + pieBoundingBox.left) / 2), centerY = Math.round((pieBoundingBox.bottom + pieBoundingBox.top) / 2);
  chartDef.is3D && (radiusY *= 0.8, pieHeight = radiusX / 5, centerY -= pieHeight / 2);
  if(chartDef.isDiff) {
    var innerRadii = {radiusX:radiusX * chartDef.diff.pie.innerOuterRadiusRatio, radiusY:radiusY * chartDef.diff.pie.innerOuterRadiusRatio}, outerRadii = {radiusX:radiusX, radiusY:radiusY};
    return{pie:{center:new goog.math.Vec2(centerX, centerY), radiusX:outerRadii.radiusX, radiusY:outerRadii.radiusY, pieHeight:pieHeight, layers:chartDef.diff.pie.isOldDataInCenter ? [innerRadii, outerRadii] : [outerRadii, innerRadii]}, legend:legend}
  }
  return{pie:{center:new goog.math.Vec2(centerX, centerY), radiusX:radiusX, radiusY:radiusY, pieHeight:pieHeight, layers:[{radiusX:radiusX, radiusY:radiusY}]}, legend:legend}
};
gviz.canviz.PieChartDefiner.prototype.calcSeries_ = function(chartLayout) {
  var chartDef = this.chartDef_, dataView = this.dataView_, center = chartLayout.pie.center, pieHeight = chartLayout.pie.pieHeight, rowsCount = dataView.getNumberOfRows(), residueColor = gviz.canviz.Theme.toStandardColor(this.options_.inferColorValue("pieResidueSliceColor", "")), residueBrushes = this.createBrushes_(residueColor, 1), pieSliceTextStyle = this.options_.inferTextStyleValue("pieSliceTextStyle", {fontName:chartDef.defaultFontName, fontSize:chartDef.defaultFontSize}), pieSliceTextOption = 
  chartDef.isDiff ? gviz.canviz.Options.PieSliceText.NONE : gviz.canviz.Options.PieSliceText.PERCENTAGE, pieSliceText = this.options_.inferEnumValue("pieSliceText", gviz.canviz.Options.PieSliceText, pieSliceTextOption), tooltipText = this.options_.inferEnumValue("tooltip.text", gviz.canviz.Options.PieValueText, gviz.canviz.Options.PieValueText.BOTH), sliceVisibilityThreshold = this.options_.inferRatioNumberValue("sliceVisibilityThreshold", 1 / 720), displayTinySlicesInLegend = this.options_.inferBooleanValue("displayTinySlicesInLegend"), 
  pieResidueSliceLabel = this.options_.inferStringValue("pieResidueSliceLabel", gviz.canviz.Messages.MSG_OTHER), defaultHole = this.options_.inferRatioNumberValue("pieHole", 0);
  this.options_["legend.iconWidthScaleFactor"] = 2;
  chartDef.series = [];
  chartDef.legendEntries = [];
  var holeAtLayer, isLayerVisibleInLegend, alpha;
  if(chartDef.isDiff) {
    goog.asserts.assert(dataView.getColumnRole(1) == gviz.canviz.ColumnRole.DIFF_OLD_DATA);
    var innerBorderRatio = this.options_.inferValue("diff.innerCircle.borderFactor", gviz.canviz.Options.DEFAULT_PIE_DIFF_INNER_BORDER_RATIO), innerHole = 0, outerHole = chartDef.diff.pie.innerOuterRadiusRatio * (1 + innerBorderRatio);
    holeAtLayer = chartDef.diff.pie.isOldDataInCenter ? [innerHole, outerHole] : [outerHole, innerHole];
    isLayerVisibleInLegend = [!1, !0];
    alpha = [this.options_.inferValue("diff.oldData.opacity", gviz.canviz.Options.DEFAULT_DIFF_OLD_DATA_OPACITY), this.options_.inferValue("diff.newData.opacity", gviz.canviz.Options.DEFAULT_DIFF_NEW_DATA_OPACITY)]
  }else {
    holeAtLayer = [0], isLayerVisibleInLegend = [!0], alpha = [1]
  }
  chartDef.pie = {center:center, pieHeight:pieHeight, radiusX:chartLayout.pie.radiusX, radiusY:chartLayout.pie.radiusY, layers:[]};
  for(var createSliceTooltip = goog.bind(function(sliceIndex, layersCount) {
    goog.asserts.assert(1 == layersCount || sliceIndex >= rowsCount);
    var newDataSlice = chartDef.series[sliceIndex];
    if(1 == layersCount) {
      this.createSliceTooltip_(newDataSlice, tooltipText, newDataSlice, null)
    }else {
      var oldDataSlice = chartDef.series[sliceIndex - rowsCount];
      this.createSliceTooltip_(newDataSlice, tooltipText, newDataSlice, oldDataSlice);
      this.createSliceTooltip_(oldDataSlice, tooltipText, newDataSlice, oldDataSlice)
    }
  }, this), createTooltipForOtherSlice = goog.bind(function(layersCount) {
    var newDataSlice = chartDef.pie.layers[layersCount - 1].otherSlice, oldDataSlice = chartDef.pie.layers[0].otherSlice;
    1 == layersCount && newDataSlice ? this.createSliceTooltip_(newDataSlice, tooltipText, newDataSlice, null) : 1 < layersCount && (newDataSlice && oldDataSlice ? (this.createSliceTooltip_(newDataSlice, tooltipText, newDataSlice, oldDataSlice), this.createSliceTooltip_(oldDataSlice, tooltipText, newDataSlice, oldDataSlice)) : newDataSlice ? (oldDataSlice = {percentage:"0", formattedValue:"0"}, this.createSliceTooltip_(newDataSlice, tooltipText, newDataSlice, oldDataSlice)) : oldDataSlice && (newDataSlice = 
    {percentage:"0", formattedValue:"0"}, this.createSliceTooltip_(oldDataSlice, tooltipText, newDataSlice, oldDataSlice)))
  }, this), createLegendEntry = goog.bind(function(id, text, color, sliceIndex, visibleInLegend) {
    chartDef.isDiff ? chartDef.legendEntries.push({id:id, text:text, brush:new gviz.graphics.Brush({gradient:{color1:color, color2:color, opacity1:alpha[0], opacity2:alpha[1], x1:"100%", y1:"0%", x2:"0%", y2:"0%", useObjectBoundingBoxUnits:!0, sharpTransition:!0}}), index:sliceIndex, isVisible:visibleInLegend}) : chartDef.legendEntries.push({id:id, text:text, brush:new gviz.graphics.Brush({fill:color}), index:sliceIndex, isVisible:visibleInLegend})
  }, this), pieLayers = chartDef.pie.layers, layoutLayers = chartLayout.pie.layers, layersCount = layoutLayers.length, sliceIndex$$0 = 0, layerIndex = 0;layerIndex < layersCount;++layerIndex) {
    for(var isDiffNewData = 1 == layerIndex, layer = layoutLayers[layerIndex], otherSlice = null, radiusX = layer.radiusX, radiusY = layer.radiusY, layerHole = holeAtLayer[layerIndex], isLayerInLegend = isLayerVisibleInLegend[layerIndex], sumOfNonVisibleValues = 0, partialSumOfVisibleValues = 0, sumOfAllValues = 0, rowIndex = 0;rowIndex < rowsCount;rowIndex++) {
      sumOfAllValues += dataView.getValue(rowIndex, layerIndex + 1) || 0
    }
    for(rowIndex = 0;rowIndex < rowsCount;++rowIndex) {
      var value = dataView.getValue(rowIndex, layerIndex + 1) || 0, formattedValue = dataView.getFormattedValue(rowIndex, layerIndex + 1), id$$0 = dataView.getValue(rowIndex, 0), title = dataView.getFormattedValue(rowIndex, 0), from = partialSumOfVisibleValues / sumOfAllValues, to = from + value / sumOfAllValues, isVisible = to - from >= sliceVisibilityThreshold;
      isVisible ? partialSumOfVisibleValues += value : sumOfNonVisibleValues += value;
      var optionPath = "slices." + sliceIndex$$0, rawColor = this.options_.inferValue(optionPath + ".color", this.colors_[rowIndex % this.colors_.length]), color$$0 = gviz.canviz.Theme.toStandardColor(rawColor), sliceBrushes = this.createBrushes_(color$$0, alpha[layerIndex]), offset = this.options_.inferNumberValue(optionPath + ".offset", 0), hole = this.options_.inferRatioNumberValue(optionPath + ".hole", defaultHole) + layerHole, sliceTextStyle = this.options_.inferTextStyleValue(optionPath + ".textStyle", 
      pieSliceTextStyle), slice = this.calcSliceLayout_(sliceIndex$$0, rowIndex, from, to, value, formattedValue, title, isVisible, center, radiusX, radiusY, hole, pieHeight, offset, pieSliceText, sliceTextStyle, color$$0, sliceBrushes, isDiffNewData);
      chartDef.series.push(slice);
      var visibleInLegend$$0 = this.options_.inferBooleanValue(optionPath + ".visibleInLegend", isLayerInLegend && (isVisible || displayTinySlicesInLegend));
      createLegendEntry(id$$0, title, color$$0.color, sliceIndex$$0, visibleInLegend$$0);
      layerIndex == layersCount - 1 && createSliceTooltip(sliceIndex$$0, layersCount);
      sliceIndex$$0 += 1
    }
    0 < sumOfNonVisibleValues && (from = 1 - sumOfNonVisibleValues / sumOfAllValues, to = 1, value = sumOfNonVisibleValues, formattedValue = String(sumOfNonVisibleValues), title = pieResidueSliceLabel, otherSlice = this.calcSliceLayout_(-1, -1, from, to, value, formattedValue, title, !0, center, radiusX, radiusY, defaultHole + layerHole, pieHeight, 0, pieSliceText, pieSliceTextStyle, residueColor, residueBrushes, isDiffNewData), isLayerInLegend && !displayTinySlicesInLegend && createLegendEntry("", 
    title, residueColor.color, -1, !0));
    pieLayers.push({radiusX:radiusX, radiusY:radiusY, otherSlice:otherSlice});
    layerIndex == layersCount - 1 && createTooltipForOtherSlice(layersCount)
  }
};
gviz.canviz.PieChartDefiner.calcSliceValueText_ = function(slice, valueTextType) {
  switch(valueTextType) {
    case gviz.canviz.Options.PieValueText.PERCENTAGE:
      return slice.percentage;
    case gviz.canviz.Options.PieValueText.VALUE:
      return slice.formattedValue;
    case gviz.canviz.Options.PieValueText.BOTH:
      return slice.formattedValue + " (" + slice.percentage + ")"
  }
  goog.asserts.fail("Invalid PieValueText: " + valueTextType);
  return""
};
gviz.canviz.PieChartDefiner.prototype.calcSliceLayout_ = function(sliceIndex, dataIndex, from, to, value, formattedValue, title, isVisible, center, radiusX, radiusY, hole, height, offset, pieSliceText, textStyle, color, brushes) {
  var chartDef = this.chartDef_;
  if(chartDef.is3D || 1 <= hole) {
    hole = 0
  }
  var result = {}, relativeValue = to - from;
  result.value = value;
  result.formattedValue = formattedValue;
  result.color = color;
  result.brushes = brushes;
  result.brush = result.brushes.normal;
  result.title = title;
  result.index = sliceIndex;
  result.dataTableIdx = 0 <= dataIndex ? this.dataView_.getTableRowIndex(dataIndex) : null;
  result.isVisible = isVisible;
  var innerRadiusX = radiusX * hole, innerRadiusY = radiusY * hole;
  result.innerRadiusX = innerRadiusX;
  result.innerRadiusY = innerRadiusY;
  result.fromDegrees = 360 * from + this.startAngle_;
  result.toDegrees = 360 * to + this.startAngle_;
  if(this.reverseDirection_) {
    var fromDegrees = -result.fromDegrees, toDegrees = -result.toDegrees;
    result.fromDegrees = toDegrees;
    result.toDegrees = fromDegrees
  }
  var fromRadians = Math.PI * (result.fromDegrees - 90) / 180, toRadians = Math.PI * (result.toDegrees - 90) / 180;
  result.percentage = Math.round(1E3 * relativeValue) / 10 + "%";
  var text = "";
  switch(pieSliceText) {
    case gviz.canviz.Options.PieSliceText.PERCENTAGE:
      text = result.percentage;
      break;
    case gviz.canviz.Options.PieSliceText.LABEL:
      text = result.title;
      break;
    case gviz.canviz.Options.PieSliceText.VALUE:
      text = formattedValue;
      break;
    case gviz.canviz.Options.PieSliceText.VALUE_AND_PERCENTAGE:
      text = formattedValue + " (" + result.percentage + ")"
  }
  result.text = text;
  if(!isVisible) {
    return result
  }
  result.textStyle = textStyle;
  var textWidth = this.textMeasureFunction_(result.text, textStyle).width, fontSize = textStyle.fontSize;
  result.textBoxSize = new goog.math.Size(textWidth, fontSize);
  result.isWholeCircle = 1 == relativeValue;
  if(result.text) {
    if(result.isWholeCircle) {
      result.textBoxTopLeft = goog.math.Vec2.difference(center, new goog.math.Vec2(textWidth / 2, fontSize / 2)), result.isTextVisible = !0
    }else {
      var guideEllipseRadiusX = radiusX - fontSize, guideEllipseRadiusY = radiusY - fontSize, textBoxRelativePosition = gviz.canviz.vectorutils.positionBoxInEllipticSlice(guideEllipseRadiusX, guideEllipseRadiusY, fromRadians, toRadians, result.textBoxSize, 2, 0.4);
      goog.isNull(textBoxRelativePosition) || (result.isTextVisible = !0, result.textBoxTopLeft = gviz.canviz.vectorutils.sumAll(center, textBoxRelativePosition, new goog.math.Vec2(-result.textBoxSize.width / 2, -result.textBoxSize.height / 2)))
    }
  }else {
    result.isTextVisible = !1
  }
  result.offset = gviz.canviz.vectorutils.vectorOnEllipse((fromRadians + toRadians) / 2, radiusX, radiusY).scale(offset);
  var fromDxDy = gviz.canviz.vectorutils.vectorOnEllipse(fromRadians, radiusX, radiusY), toDxDy = gviz.canviz.vectorutils.vectorOnEllipse(toRadians, radiusX, radiusY);
  result.fromPixel = goog.math.Vec2.sum(center, fromDxDy);
  result.toPixel = goog.math.Vec2.sum(center, toDxDy);
  var innerFromDxDy = gviz.canviz.vectorutils.vectorOnEllipse(fromRadians, innerRadiusX, innerRadiusY), innerToDxDy = gviz.canviz.vectorutils.vectorOnEllipse(toRadians, innerRadiusX, innerRadiusY);
  result.innerFromPixel = goog.math.Vec2.sum(center, innerFromDxDy);
  result.innerToPixel = goog.math.Vec2.sum(center, innerToDxDy);
  if(chartDef.is3D && 270 >= result.fromDegrees && 90 <= result.toDegrees) {
    var side3D = {};
    90 > result.fromDegrees ? (side3D.fromDegrees = 90, side3D.fromPixel = new goog.math.Vec2(center.x + radiusX, center.y)) : (side3D.fromDegrees = result.fromDegrees, side3D.fromPixel = result.fromPixel);
    270 < result.toDegrees ? (side3D.toDegrees = 270, side3D.toPixel = new goog.math.Vec2(center.x - radiusX, center.y)) : (side3D.toDegrees = result.toDegrees, side3D.toPixel = result.toPixel);
    side3D.brush = result.brushes.dark;
    result.side3D = side3D
  }
  result.drawInnerFrom = chartDef.is3D && 0.5 < from;
  result.drawInnerTo = chartDef.is3D && 0.5 > to;
  if(result.drawInnerFrom || result.drawInnerTo) {
    result.innerBrush = result.brushes.dark
  }
  return result
};
gviz.canviz.PieChartDefiner.prototype.createSliceTooltip_ = function(slice, pieTooltipText, newDataSlice, oldDataSlice) {
  goog.asserts.assert(!this.chartDef_.isDiff || oldDataSlice);
  var content = gviz.canviz.PieChartDefiner.calcSliceValueText_(newDataSlice, pieTooltipText);
  oldDataSlice && (content += "\n" + gviz.canviz.PieChartDefiner.calcSliceValueText_(oldDataSlice, pieTooltipText));
  slice.tooltipText = {serieTitle:slice.title, content:content}
};
gviz.canviz.PieChartDefiner.prototype.calcLabeledLegend_ = function(chartArea, areaLayout, legendTextStyle) {
  for(var chartDef = this.chartDef_, radiusX = chartDef.pie.radiusX, radiusY = chartDef.pie.radiusY, center = areaLayout.pie.center, valueTextType = this.options_.inferEnumValue("legend.labeledValueText", gviz.canviz.Options.PieValueText, gviz.canviz.Options.PieValueText.PERCENTAGE), pieCircumference = Math.PI * (3 * (radiusX + radiusY) - Math.sqrt((3 * radiusX + radiusY) * (radiusX + 3 * radiusY))), rightEntriesInfo = [], leftEntriesInfo = [], i = 0;i < chartDef.legendEntries.length;++i) {
    var legendEntry = chartDef.legendEntries[i];
    if(legendEntry.isVisible) {
      var slice;
      if(0 <= legendEntry.index) {
        slice = chartDef.series[legendEntry.index]
      }else {
        var layers = chartDef.pie.layers;
        slice = layers[layers.length - 1].otherSlice
      }
      var originRadiusX = Math.max((radiusX + slice.innerRadiusX) / 2, 0.75 * radiusX), originRadiusY = Math.max((radiusY + slice.innerRadiusY) / 2, 0.75 * radiusY), middleDegrees = (slice.toDegrees + slice.fromDegrees) / 2, standardMiddleDegrees = goog.math.standardAngle(middleDegrees), originDistanceFromPerimeter = goog.math.average(radiusX - originRadiusX, radiusY - originRadiusY), originMarginFromSliceRadialEdge = 360 * (originDistanceFromPerimeter / pieCircumference), minOrigin, maxOrigin;
      2 * originMarginFromSliceRadialEdge < slice.toDegrees - slice.fromDegrees ? (minOrigin = slice.fromDegrees + originMarginFromSliceRadialEdge, maxOrigin = slice.toDegrees - originMarginFromSliceRadialEdge, 180 > standardMiddleDegrees ? maxOrigin = Math.min(maxOrigin, 180) : minOrigin = Math.max(minOrigin, 180)) : maxOrigin = minOrigin = middleDegrees;
      var radiansToOriginVec = function(radians) {
        var vecDxDy = gviz.canviz.vectorutils.vectorOnEllipse(radians, originRadiusX, originRadiusY), vec = goog.math.Vec2.sum(center, vecDxDy);
        return vec
      }, degreesToOriginVec = function(degrees) {
        var radians = goog.math.toRadians(degrees - 90);
        return radiansToOriginVec(radians)
      }, originYRightToRadians = function(y) {
        var sin = (y - center.y) / originRadiusY;
        return Math.asin(goog.math.clamp(sin, -1, 1))
      }, originYRightToVec = function(y) {
        return radiansToOriginVec(originYRightToRadians(y))
      }, originYLeftToVec = function(y) {
        return radiansToOriginVec(Math.PI - originYRightToRadians(y))
      }, entryInfo = {preferredOrigin:degreesToOriginVec(middleDegrees).y, originRange:new goog.math.Range(degreesToOriginVec(minOrigin).y, degreesToOriginVec(maxOrigin).y), aboveText:legendEntry.text, belowText:gviz.canviz.PieChartDefiner.calcSliceValueText_(slice, valueTextType), importance:slice.value, index:slice.index};
      180 > standardMiddleDegrees ? (entryInfo.originYToVec = originYRightToVec, rightEntriesInfo.push(entryInfo)) : (entryInfo.originYToVec = originYLeftToVec, leftEntriesInfo.push(entryInfo))
    }
  }
  var legendWidth = chartArea.width / 2 - radiusX - legendTextStyle.fontSize, alignment = gviz.canviz.legend.labeledLegendDefiner.Alignment, rightLegendArea = new goog.math.Box(chartArea.top, chartArea.right, chartArea.bottom, chartArea.right - legendWidth), rightLabeledLegend = gviz.canviz.legend.labeledLegendDefiner.define(rightLegendArea, this.textMeasureFunction_, alignment.RIGHT, legendTextStyle, rightEntriesInfo), leftLegendArea = new goog.math.Box(chartArea.top, chartArea.left + legendWidth, 
  chartArea.bottom, chartArea.left), leftLabeledLegend = gviz.canviz.legend.labeledLegendDefiner.define(leftLegendArea, this.textMeasureFunction_, alignment.LEFT, legendTextStyle, leftEntriesInfo), labeledLegend = [];
  goog.array.extend(labeledLegend, rightLabeledLegend, leftLabeledLegend);
  this.chartDef_.labeledLegend = labeledLegend
};
// Input 344
gviz.canviz.ChartDefiner = function(dataTable, options, textMeasureFunction, width, height) {
  this.dataTable_ = dataTable;
  this.dataView_ = null;
  this.options_ = options;
  this.textMeasureFunction_ = textMeasureFunction;
  var chartDef = this.chartDef_ = {};
  chartDef.textMeasureFunction = textMeasureFunction;
  chartDef.width = width;
  chartDef.height = height;
  chartDef.chartType = options.inferEnumValue("type", gviz.canviz.Options.ChartType, gviz.canviz.Options.ChartType.NONE);
  chartDef.defaultFontName = options.inferStringValue("fontName");
  chartDef.defaultFontSize = options.inferNonNegativeNumberValue("fontSize", Math.round(Math.pow(2 * (chartDef.width + chartDef.height), 1 / 3)));
  chartDef.defaultSerieType = options.inferEnumValue("seriesType", gviz.canviz.Options.SerieType, gviz.canviz.Options.SerieType.LINE);
  chartDef.isHtmlTooltip = options.inferBooleanValue("tooltip.isHtml");
  chartDef.selectionMode = options.inferEnumValue("selectionMode", gviz.Options.SelectionMode, gviz.Options.SelectionMode.SINGLE);
  chartDef.backgroundBrush = options.inferBrushValue("backgroundColor");
  chartDef.chartAreaBackgroundBrush = options.inferBrushValue("chartArea.backgroundColor");
  chartDef.actualChartAreaBackgoundColor = gviz.graphics.Brush.blendFills(chartDef.chartAreaBackgroundBrush, chartDef.backgroundBrush);
  chartDef.baselineColor = options.inferColorValue("baselineColor", "");
  chartDef.gridlineColor = options.inferColorValue("gridlineColor", "");
  chartDef.insideLabelsAuraColor = chartDef.actualChartAreaBackgoundColor || "";
  var titleText = options.inferStringValue("title");
  chartDef.titlePosition = options.inferEnumValue("titlePosition", gviz.canviz.Options.InOutPosition, gviz.canviz.Options.InOutPosition.OUTSIDE);
  var defaultTitleTextStyle = {fontName:chartDef.defaultFontName, fontSize:chartDef.defaultFontSize, auraColor:chartDef.titlePosition == gviz.canviz.Options.InOutPosition.INSIDE ? chartDef.insideLabelsAuraColor : "none"}, titleTextStyle = options.inferTextStyleValue("titleTextStyle", defaultTitleTextStyle);
  chartDef.title = {text:titleText, textStyle:titleTextStyle, lines:[], paralAlign:gviz.graphics.TextAlign.START, perpenAlign:gviz.graphics.TextAlign.END, tooltip:"", anchor:null, angle:0};
  chartDef.axisTitlesPosition = options.inferEnumValue("axisTitlesPosition", gviz.canviz.Options.InOutPosition, gviz.canviz.Options.InOutPosition.OUTSIDE);
  chartDef.is3D = options.inferBooleanValue("is3D");
  chartDef.interpolateNulls = options.inferBooleanValue("interpolateNulls");
  chartDef.interactivityModel = options.inferEnumValue("interactivityModel", gviz.canviz.Options.InteractivityModel, gviz.canviz.Options.InteractivityModel.DEFAULT);
  this.init_();
  var diveInteractivityModel = gviz.canviz.Options.InteractivityModel.DIVE, lineSerieType = gviz.canviz.Options.SerieType.LINE;
  if(chartDef.interactivityModel == diveInteractivityModel && (!chartDef.serieTypeCount || chartDef.serieTypeCount[lineSerieType] != chartDef.series.length)) {
    throw Error("DIVE interactivity model is only supported when all series are of type line.");
  }
};
gviz.canviz.ChartDefiner.prototype.getChartDefinition = function() {
  return this.chartDef_
};
gviz.canviz.ChartDefiner.prototype.init_ = function() {
  var chartDef = this.chartDef_;
  this.calcDataView_();
  this.calcChartAreaLayout_();
  var axisChartDefiner = null, pieChartDefiner = null, defaultLegendPosition = null, defaultColorBarPosition = null;
  chartDef.chartType == gviz.canviz.Options.ChartType.PIE ? (pieChartDefiner = new gviz.canviz.PieChartDefiner(this.dataView_, this.options_, this.textMeasureFunction_, chartDef), defaultLegendPosition = pieChartDefiner.getDefaultLegendPosition()) : (axisChartDefiner = new gviz.canviz.AxisChartDefiner(this.dataView_, this.options_, this.textMeasureFunction_, chartDef), defaultLegendPosition = axisChartDefiner.getDefaultLegendPosition(), defaultColorBarPosition = axisChartDefiner.getDefaultColorBarPosition());
  var legendIconWidthScaleFactor = null, chartType = chartDef.chartType;
  !chartDef.isDiff || chartType !== gviz.canviz.Options.ChartType.PIE && chartType !== gviz.canviz.Options.ChartType.SCATTER || (legendIconWidthScaleFactor = gviz.canviz.Options.DEFAULT_DIFF_LEGEND_ICON_WIDTH_SCALE_FACTOR);
  this.legendDefiner_ = new gviz.canviz.LegendDefiner(chartDef, this.options_, defaultLegendPosition, legendIconWidthScaleFactor);
  this.colorBarDefiner_ = new gviz.canviz.ColorBarDefiner(chartDef, this.options_, defaultColorBarPosition);
  axisChartDefiner && axisChartDefiner.calcLayout(this.legendDefiner_, this.colorBarDefiner_);
  pieChartDefiner && pieChartDefiner.calcLayout(this.legendDefiner_);
  this.legendDefiner_.calcLegendEntries();
  this.calcTopCanvasAreaLayout_();
  chartDef.legend = this.legendDefiner_.define();
  chartDef.colorBar = this.colorBarDefiner_.define()
};
gviz.canviz.ChartDefiner.prototype.calcDataView_ = function() {
  var chartDef = this.chartDef_, dataTable = this.dataTable_, dataView = new google.visualization.DataView(dataTable);
  if(chartDef.chartType == gviz.canviz.Options.ChartType.HISTOGRAM) {
    this.calcHistogramDataView_()
  }else {
    if(2 > dataView.getNumberOfColumns()) {
      throw Error("Not enough columns given to draw the requested chart.");
    }
    if(this.options_.inferBooleanValue("reverseCategories")) {
      for(var newRowsOrder = [], i = dataTable.getNumberOfRows() - 1;0 <= i;i--) {
        newRowsOrder.push(i)
      }
      dataView.setRows(newRowsOrder)
    }
    this.dataView_ = dataView
  }
};
gviz.canviz.ChartDefiner.prototype.calcHistogramDataView_ = function() {
  for(var dataTable = this.dataTable_, firstColIsLabel = "string" === dataTable.getColumnType(0), colStart = firstColIsLabel ? 1 : 0, vals = [], numRows = dataTable.getNumberOfRows(), numCols = dataTable.getNumberOfColumns(), i = 0;i < numRows;i++) {
    for(var j = colStart;j < numCols;j++) {
      vals.push(dataTable.getValue(i, j))
    }
  }
  var buckets = new autovis.ColumnBuckets;
  buckets.create(vals, 10);
  var table = new google.visualization.DataTable, labels = buckets.getBucketLabels(), bucketContents = [];
  table.addColumn("string", "label");
  for(i = colStart;i < numCols;i++) {
    var MSG_HISTOGRAM_LABEL = dataTable.getColumnLabel(i) + " (count)";
    table.addColumn("number", MSG_HISTOGRAM_LABEL);
    bucketContents[i - colStart] = [];
    for(j = 0;j < labels.length;j++) {
      bucketContents[i - colStart].push([])
    }
  }
  for(i = 0;i < labels.length;i++) {
    table.addRow(), table.setValue(i, 0, labels[i])
  }
  for(i = 0;i < numRows;i++) {
    for(var title = firstColIsLabel ? this.dataTable_.getValue(i, 0) : "", j = colStart;j < numCols;j++) {
      var val = this.dataTable_.getValue(i, j);
      if(null !== val || this.chartDef_.interpolateNulls) {
        var b = buckets.getBucketIndexByValue(val);
        table.setValue(b, j + 1 - colStart, (table.getValue(b, j + 1 - colStart) || 0) + 1);
        var bucketItem = {title:title, lines:[{title:this.dataTable_.getColumnLabel(j) || "Value", value:val}]};
        bucketContents[j - colStart][b].push(bucketItem)
      }
    }
  }
  for(i = 0;i < bucketContents.length;i++) {
    for(var bucket = bucketContents[i], j = 0;j < bucket.length;j++) {
      0 == bucket[j].length && bucket[j].push("placeholder")
    }
  }
  for(i = 0;i < bucketContents.length;i++) {
    table.setColumnProperty(i, "histogramTooltips", goog.array.flatten(bucketContents[i]))
  }
  this.dataView_ = new google.visualization.DataView(table)
};
gviz.canviz.ChartDefiner.prototype.calcChartAreaDimension_ = function(start, size, totalSize, calcDefaultSizeFunc) {
  goog.isDefAndNotNull(size) || (size = calcDefaultSizeFunc());
  size = Math.round(size);
  goog.isDefAndNotNull(start) || (start = (totalSize - size) / 2);
  start = Math.round(start);
  var end = Math.min(start + size, totalSize);
  return{start:start, end:end}
};
gviz.canviz.ChartDefiner.prototype.calcChartAreaLayout_ = function() {
  var chartDef = this.chartDef_, userWidth = this.options_.inferOptionalAbsOrPercentageValue("chartArea.width", chartDef.width), userHeight = this.options_.inferOptionalAbsOrPercentageValue("chartArea.height", chartDef.height), userTop = this.options_.inferOptionalAbsOrPercentageValue("chartArea.top", chartDef.height), userLeft = this.options_.inferOptionalAbsOrPercentageValue("chartArea.left", chartDef.width), calcWidth = goog.bind(function() {
    var w1 = chartDef.width / gviz.canviz.Constants.GOLDEN_RATIO, w2 = chartDef.width - chartDef.height * (gviz.canviz.Constants.GOLDEN_RATIO - 1);
    return Math.round(w1 > w2 ? w1 : (w1 + 2 * w2) / 3)
  }, this), horizontalDimension = this.calcChartAreaDimension_(userLeft, userWidth, chartDef.width, calcWidth), left = Math.min(horizontalDimension.start, horizontalDimension.end), right = horizontalDimension.end, width = right - left, calcHeight = goog.bind(function() {
    var h1 = chartDef.height / gviz.canviz.Constants.GOLDEN_RATIO, h2 = chartDef.height - chartDef.width * (gviz.canviz.Constants.GOLDEN_RATIO - 1);
    return Math.round(h1 > h2 ? h1 : (h1 + 2 * h2) / 3)
  }, this), verticalDimension = this.calcChartAreaDimension_(userTop, userHeight, chartDef.height, calcHeight), top = Math.min(verticalDimension.start, verticalDimension.end), bottom = verticalDimension.end, height = bottom - top;
  chartDef.chartArea = {left:left, right:right, width:width, top:top, bottom:bottom, height:height}
};
gviz.canviz.ChartDefiner.prototype.calcTopCanvasAreaLayout_ = function() {
  var chartDef = this.chartDef_, titleFontSize = chartDef.title.textStyle.fontSize, legendFontSize = this.legendDefiner_.getTextStyle().fontSize, legendPosition = this.legendDefiner_.getPosition(), colorBarFontSize = this.colorBarDefiner_.getTextStyle().fontSize, colorBarPosition = this.colorBarDefiner_.getPosition(), titleText = chartDef.titlePosition == gviz.canviz.Options.InOutPosition.OUTSIDE ? chartDef.title.text : "", optimisticTitleLayout = gviz.canviz.textutils.calcTextLayout(this.textMeasureFunction_, 
  titleText, chartDef.title.textStyle, chartDef.chartArea.width, Infinity), minGap = 2, gapBetweenTitleLines = Math.max(minGap, Math.round(titleFontSize / (2 * gviz.canviz.Constants.GOLDEN_RATIO))), gapAboveLegend = Math.max(minGap, Math.round(legendFontSize / gviz.canviz.Constants.GOLDEN_RATIO)), gapAboveColorBar = Math.max(minGap, Math.round(colorBarFontSize / gviz.canviz.Constants.GOLDEN_RATIO)), gapAboveChart = Math.max(minGap, Math.round(chartDef.defaultFontSize * gviz.canviz.Constants.GOLDEN_RATIO)), 
  keyBottomSpace = "bottom-space", keyTopSpace = "top-space", keyTitle = "title", keyLegend = "legend", keyColorBar = "colorBar", items = [];
  items.push({key:keyBottomSpace, min:minGap, extra:[gapAboveChart - minGap]});
  items.push({key:keyTopSpace, min:0, extra:[Infinity]});
  0 < optimisticTitleLayout.lines.length && items.push({key:keyTitle, min:titleFontSize + minGap, extra:[]});
  if(legendPosition == gviz.canviz.Options.LegendPosition.TOP) {
    for(var lines = this.legendDefiner_.calcMaxNeededLines(chartDef.chartArea.width), i = 0;i < lines;++i) {
      items.push({key:keyLegend, min:legendFontSize + minGap, extra:[gapAboveLegend - minGap]})
    }
  }
  colorBarPosition == gviz.canviz.Options.ColorBarPosition.TOP && items.push({key:keyColorBar, min:this.colorBarDefiner_.getHeight() + minGap, extra:[gapAboveColorBar - minGap]});
  for(i = 1;i < optimisticTitleLayout.lines.length;i++) {
    items.push({key:keyTitle, min:titleFontSize + minGap, extra:[gapBetweenTitleLines - minGap]})
  }
  for(var allocatedHeights = gviz.canviz.util.distributeRealEstateWithKeys(items, chartDef.chartArea.top), y = allocatedHeights[keyTopSpace][0] || 0, actualTitleLines = allocatedHeights[keyTitle] || [], layout = gviz.canviz.textutils.calcTextLayout(this.textMeasureFunction_, titleText, chartDef.title.textStyle, chartDef.chartArea.width, actualTitleLines.length), i = 0;i < layout.lines.length;i++) {
    y += actualTitleLines[i], chartDef.title.lines.push({text:layout.lines[i], x:chartDef.chartArea.left, y:y, length:chartDef.chartArea.width})
  }
  chartDef.title.tooltip = layout.needTooltip ? titleText : "";
  var actualLegendLines = allocatedHeights[keyLegend] || [];
  if(0 < actualLegendLines.length) {
    this.legendDefiner_.actualLinesPerHorizontalPage = actualLegendLines.length;
    var top = y + actualLegendLines[0] - legendFontSize, y = y + goog.math.sum.apply(null, actualLegendLines), legendArea = new goog.math.Box(top, chartDef.chartArea.right, y, chartDef.chartArea.left);
    this.legendDefiner_.setArea(legendArea)
  }
  var actualColorBarLines = allocatedHeights[keyColorBar] || [];
  if(0 < actualColorBarLines.length) {
    var y = y + actualColorBarLines[0], colorBarArea = new goog.math.Box(y - this.colorBarDefiner_.getHeight(), chartDef.chartArea.right, y, chartDef.chartArea.left);
    this.colorBarDefiner_.setArea(colorBarArea)
  }
};
// Input 345
gviz.canviz.ChartDefinitionInterpolator = function(chartDef1, chartDef2) {
  this.chartDef1_ = chartDef1;
  this.chartDef2_ = chartDef2;
  this.interpolated_ = goog.object.clone(chartDef1);
  this.interpolated_.hAxes && (this.interpolated_.hAxes = goog.object.map(this.interpolated_.hAxes, goog.object.clone), this.hAxesSubstitute_ = goog.object.map(chartDef1.hAxes, function(hAxis, i) {
    return gviz.canviz.ChartDefinitionInterpolator.prepareAxis_(chartDef1.hAxes[i], chartDef2.hAxes[i], this.interpolated_.hAxes[i], !0, !1)
  }, this));
  this.interpolated_.vAxes && (this.interpolated_.vAxes = goog.object.map(this.interpolated_.vAxes, goog.object.clone), this.vAxesSubstitute_ = goog.object.map(chartDef1.vAxes, function(vAxis, i) {
    return gviz.canviz.ChartDefinitionInterpolator.prepareAxis_(chartDef1.vAxes[i], chartDef2.vAxes[i], this.interpolated_.vAxes[i], !1, !0)
  }, this));
  this.series2_ = this.series1_ = null;
  this.prepareSeries_();
  this.legendEntries2_ = this.legendEntries1_ = null;
  this.prepareLegend_()
};
gviz.canviz.ChartDefinitionInterpolator.prepareAxis_ = function(axis1, axis2, interpolated, rescaleTextX, rescaleTextY) {
  var axis1Substitute = goog.object.clone(axis1), axis2Substitute = goog.object.clone(axis1);
  if(axis1.type == gviz.canviz.Options.AxisType.VALUE && axis2.type == gviz.canviz.Options.AxisType.VALUE) {
    axis1.baseline && axis2.baseline && (axis2Substitute.baseline = axis2.baseline, interpolated.baseline = goog.object.clone(interpolated.baseline));
    axis2Substitute.number = goog.object.clone(axis2Substitute.number);
    axis2Substitute.position = goog.object.clone(axis2Substitute.position);
    interpolated.number = goog.object.clone(interpolated.number);
    interpolated.position = goog.object.clone(interpolated.position);
    axis2Substitute.position.fromValue = axis2.position.fromValue;
    if(axis1.gridlines && axis2.gridlines) {
      axis2Substitute.gridlines = goog.array.clone(axis2Substitute.gridlines);
      interpolated.gridlines = goog.array.clone(interpolated.gridlines);
      for(var substituteGridlines = axis2Substitute.gridlines, interpolatedGridlines = interpolated.gridlines, i$$0 = 0;i$$0 < substituteGridlines.length;i$$0++) {
        substituteGridlines[i$$0] = goog.object.clone(substituteGridlines[i$$0]);
        interpolatedGridlines[i$$0] = goog.object.clone(interpolatedGridlines[i$$0]);
        var substituteGridline = substituteGridlines[i$$0], substituteNumber = axis1.number.fromValue(substituteGridline.dataValue), substituteValue = axis2.number.toValue(substituteNumber);
        substituteGridline.coordinate = axis2.position.fromValue(substituteValue)
      }
    }
    if(axis1.text && axis2.text) {
      axis2Substitute.text = goog.array.clone(axis2Substitute.text);
      interpolated.text = goog.array.clone(interpolated.text);
      var substituteText = axis2Substitute.text, interpolatedText = interpolated.text;
      gviz.canviz.ChartDefinitionInterpolator.cloneAxisText_(substituteText);
      gviz.canviz.ChartDefinitionInterpolator.cloneAxisText_(interpolatedText);
      for(i$$0 = 0;i$$0 < substituteText.length;i$$0++) {
        var substituteTextItem = substituteText[i$$0];
        gviz.canviz.ChartDefinitionInterpolator.prepareTextItem_(axis1, axis2, axis1.text[i$$0], axis2.text[i$$0], substituteTextItem, rescaleTextX, rescaleTextY)
      }
    }
  }else {
    if(axis1.text && axis2.text) {
      var textEditDistance = gviz.canviz.util.calcEditDistance(axis1.text, axis2.text, function(item1, item2) {
        return item1.dataValue == item2.dataValue
      });
      axis1Substitute.text = goog.array.filter(axis1.text, function(item, i) {
        return goog.isDefAndNotNull(textEditDistance.map1[i])
      });
      axis2Substitute.text = goog.array.filter(axis2.text, function(item, i) {
        return goog.isDefAndNotNull(textEditDistance.map2[i])
      });
      interpolated.text = goog.array.clone(axis1Substitute.text);
      gviz.canviz.ChartDefinitionInterpolator.cloneAxisText_(axis1Substitute.text);
      gviz.canviz.ChartDefinitionInterpolator.cloneAxisText_(axis2Substitute.text);
      gviz.canviz.ChartDefinitionInterpolator.cloneAxisText_(interpolated.text)
    }
  }
  return[axis1Substitute, axis2Substitute]
};
gviz.canviz.ChartDefinitionInterpolator.prepareTextItem_ = function(axis1, axis2, axis1text, axis2text, substituteTextItem, rescaleX, rescaleY) {
  var substituteTextBlock = substituteTextItem.textBlock, substituteNumber = axis1.number.fromValue(substituteTextItem.dataValue), substituteValue = axis2.number.toValue(substituteNumber), scaled1 = axis1.position.fromValue(substituteTextItem.dataValue), scaled2 = axis2.position.fromValue(substituteValue);
  if(rescaleX) {
    var offset = axis1text.textBlock.anchor.x - scaled1;
    substituteTextBlock.anchor.x = scaled2 + offset
  }
  rescaleY && (offset = axis1text.textBlock.anchor.y - scaled1, substituteTextBlock.anchor.y = scaled2 + offset)
};
gviz.canviz.ChartDefinitionInterpolator.cloneAxisText_ = function(text) {
  goog.array.forEach(text, function(textItem, i) {
    text[i] = goog.object.clone(text[i]);
    textItem = text[i];
    textItem.textBlock = goog.object.clone(textItem.textBlock);
    var textBlock = textItem.textBlock;
    textBlock.anchor && (textBlock.anchor = gviz.math.Coordinate.clone(textBlock.anchor))
  })
};
gviz.canviz.ChartDefinitionInterpolator.prototype.prepareSeries_ = function() {
  var chartDef1 = this.chartDef1_, chartDef2 = this.chartDef2_;
  if(chartDef1.series && chartDef2.series) {
    var seriesEditDistance = gviz.canviz.util.calcEditDistance(chartDef1.series, chartDef2.series, function(serie1, serie2) {
      return serie1.id == serie2.id
    });
    this.series1_ = goog.array.filter(chartDef1.series, function(serie, i) {
      return goog.isDefAndNotNull(seriesEditDistance.map1[i])
    });
    this.series2_ = goog.array.filter(chartDef2.series, function(serie, i) {
      return goog.isDefAndNotNull(seriesEditDistance.map2[i])
    });
    goog.asserts.assert(this.series1_.length == this.series2_.length);
    if(chartDef1.chartType == gviz.canviz.Options.ChartType.FUNCTION || chartDef1.chartType == gviz.canviz.Options.ChartType.SCATTER) {
      var domainAxis = chartDef1.orientation == gviz.canviz.Options.Orientation.HORIZONTAL ? chartDef1.hAxes[0] : chartDef1.vAxes[0];
      domainAxis.type == gviz.canviz.Options.AxisType.VALUE ? this.preparePointsForContinuousDomain_(domainAxis.number.fromValue, domainAxis.number.toValue) : this.preparePointsForDiscreteDomain_()
    }else {
      chartDef1.chartType == gviz.canviz.Options.ChartType.BUBBLE && this.preparePointsForBubbleChart_()
    }
  }
};
gviz.canviz.ChartDefinitionInterpolator.prototype.preparePointsForDiscreteDomain_ = function() {
  var categories1 = this.chartDef1_.categories, categories2 = this.chartDef2_.categories;
  if(categories1 && categories2) {
    for(var categoriesEditDistance = gviz.canviz.util.calcEditDistance(categories1, categories2, function(category1, category2) {
      return category1.data == category2.data
    }), idx1 = 0, idx2 = 0, interpolatedCategories = [], categoryMapping = [];idx1 < categories1.length || idx2 < categories2.length;) {
      idx1 < categories1.length && !goog.isDefAndNotNull(categoriesEditDistance.map1[idx1]) ? (categoryMapping.push({c1:{idx:idx1, existsInOriginal:!0}, c2:{idx:idx2, existsInOriginal:!1}}), interpolatedCategories.push({data:categories1[idx1].data}), idx1++) : (idx2 < categories2.length && !goog.isDefAndNotNull(categoriesEditDistance.map2[idx2]) ? (categoryMapping.push({c1:{idx:idx1, existsInOriginal:!1}, c2:{idx:idx2, existsInOriginal:!0}}), interpolatedCategories.push({data:categories2[idx2].data})) : 
      (goog.asserts.assert(idx1 < categories1.length), goog.asserts.assert(idx2 < categories2.length), goog.asserts.assert(categoriesEditDistance.map1[idx1] == idx2), goog.asserts.assert(categoriesEditDistance.map2[idx2] == idx1), categoryMapping.push({c1:{idx:idx1, existsInOriginal:!0}, c2:{idx:idx2, existsInOriginal:!0}}), goog.asserts.assert(categories1[idx1].data == categories2[idx2].data), interpolatedCategories.push({data:categories1[idx1].data}), idx1++), idx2++)
    }
    this.interpolated_.categories = interpolatedCategories;
    var interpolateAdjacentPoints = function(points, idx) {
      return 0 == idx ? points[0] : idx >= points.length ? goog.array.peek(points) : gviz.canviz.ChartDefinitionInterpolator.interpolatePoint_(points[idx - 1], points[idx], 0.5)
    };
    this.chartDef1_.isDiff ? this.makeNewDiffPoints_(categoryMapping, function(points, mapping, pointsPerCategory, k) {
      return mapping.existsInOriginal ? points[mapping.idx * pointsPerCategory + k] : interpolateAdjacentPoints(points, mapping.idx * pointsPerCategory + k)
    }) : this.makeNewPoints_(categoryMapping, function(points, mapping) {
      return mapping.existsInOriginal ? points[mapping.idx] : interpolateAdjacentPoints(points, mapping.idx)
    })
  }
};
gviz.canviz.ChartDefinitionInterpolator.prototype.preparePointsForContinuousDomain_ = function(dataToNumber, numberToData) {
  var categories1 = this.chartDef1_.categories, categories2 = this.chartDef2_.categories;
  if(categories1 && categories2) {
    if(0 == categories1.length || 0 == categories2.length) {
      this.interpolated_.categories = [], this.makeNewPoints_([], function() {
        return null
      })
    }else {
      var getCategoryDataAsNumber = function(category) {
        return dataToNumber(category.data)
      }, interpolatedCategories = [], categoryMapping = [];
      if(categories1.length === categories2.length) {
        for(var i = 0;i < categories1.length;i++) {
          categoryMapping.push({c1:i, c2:i}), interpolatedCategories.push({data:numberToData(goog.math.average(getCategoryDataAsNumber(categories1[i]), getCategoryDataAsNumber(categories2[i])))})
        }
      }else {
        for(var closestValues1 = gviz.canviz.util.findClosestValues(categories1, categories2, getCategoryDataAsNumber), closestValues2 = gviz.canviz.util.findClosestValues(categories2, categories1, getCategoryDataAsNumber), idx1 = 0, idx2 = 0;idx1 < categories1.length || idx2 < categories2.length;) {
          idx1 < categories1.length && (closestValues1[idx1] < idx2 || idx2 < categories2.length && closestValues2[idx2] > idx1) ? (categoryMapping.push({c1:idx1, c2:closestValues1[idx1]}), interpolatedCategories.push({data:categories1[idx1].data}), idx1++) : (idx2 < categories2.length && (idx1 < categories1.length && closestValues1[idx1] > idx2 || closestValues2[idx2] < idx1) ? (categoryMapping.push({c1:closestValues2[idx2], c2:idx2}), interpolatedCategories.push({data:categories2[idx2].data})) : 
          (goog.asserts.assert(idx1 < categories1.length), goog.asserts.assert(idx2 < categories2.length), goog.asserts.assert(closestValues1[idx1] == idx2), goog.asserts.assert(closestValues2[idx2] == idx1), categoryMapping.push({c1:idx1, c2:idx2}), interpolatedCategories.push({data:numberToData(goog.math.average(getCategoryDataAsNumber(categories1[idx1]), getCategoryDataAsNumber(categories2[idx2])))}), idx1++), idx2++)
        }
      }
      this.interpolated_.categories = interpolatedCategories;
      this.chartDef1_.isDiff ? this.makeNewDiffPoints_(categoryMapping, function(points, idx, pointsPerCategory, k) {
        return points[idx * pointsPerCategory + k]
      }) : this.makeNewPoints_(categoryMapping, function(points, idx) {
        return points[idx]
      })
    }
  }
};
gviz.canviz.ChartDefinitionInterpolator.prototype.preparePointsForBubbleChart_ = function() {
  var serie1 = this.series1_[0], serie2 = this.series2_[0], points1 = serie1.points, points2 = serie2.points, pointsToFadeOut = [], pointsToFadeIn = [], categoryMapping = [], points2Map = {};
  goog.array.forEach(points2, function(point, idx) {
    goog.isDefAndNotNull(point) && (goog.isDef(points2Map[point.id]) || (points2Map[point.id] = []), points2Map[point.id].push(idx))
  });
  goog.object.forEach(points1, function(point, idx1) {
    if(goog.isDefAndNotNull(point)) {
      var pointsIdx = point.id && points2Map[point.id], idx2 = pointsIdx && pointsIdx.shift();
      goog.isDef(idx2) ? categoryMapping.push({c1:idx1, c2:idx2}) : pointsToFadeOut.push(point)
    }
  });
  goog.object.forEach(points2Map, function(points) {
    goog.array.forEach(points, function(idx2) {
      var point = points2[idx2];
      pointsToFadeIn.push(point)
    })
  });
  this.makeNewPoints_(categoryMapping, function(points, idx) {
    return points[idx]
  });
  var cloneMissingPoint = function(point) {
    var newPoint = goog.object.clone(point);
    newPoint.scaled = goog.object.clone(newPoint.scaled);
    newPoint.scaled.brush = newPoint.scaled.brush.clone();
    newPoint.scaled.brush.setFillOpacity(0);
    newPoint.scaled.brush.setStrokeOpacity(0);
    newPoint.textStyle = goog.object.clone(newPoint.textStyle);
    newPoint.textStyle.opacity = 0;
    return newPoint
  }, fadingOutPoints = goog.array.map(pointsToFadeOut, cloneMissingPoint), fadingInPoints = goog.array.map(pointsToFadeIn, cloneMissingPoint);
  this.series1_[0].extraPoints_ = goog.array.concat(pointsToFadeOut, fadingInPoints);
  this.series2_[0].extraPoints_ = goog.array.concat(fadingOutPoints, pointsToFadeIn)
};
gviz.canviz.ChartDefinitionInterpolator.prototype.makeNewPoints_ = function(domainMapping, getPoint) {
  for(var i = 0;i < this.series1_.length;i++) {
    var points1 = this.series1_[i].points, points2 = this.series2_[i].points, newPoints1 = [], newPoints2 = [];
    this.chartDef1_.chartType == gviz.canviz.Options.ChartType.FUNCTION && (goog.asserts.assert(points1.length == this.chartDef1_.categories.length), goog.asserts.assert(points2.length == this.chartDef2_.categories.length));
    for(var j = 0;j < domainMapping.length;j++) {
      var mapping = domainMapping[j];
      newPoints1.push(getPoint(points1, mapping.c1));
      newPoints2.push(getPoint(points2, mapping.c2))
    }
    this.series1_[i] = gviz.canviz.ChartDefinitionInterpolator.cloneSerie_(this.series1_[i], newPoints1);
    this.series2_[i] = gviz.canviz.ChartDefinitionInterpolator.cloneSerie_(this.series2_[i], newPoints2)
  }
};
gviz.canviz.ChartDefinitionInterpolator.prototype.makeNewDiffPoints_ = function(domainMapping, getPoint) {
  for(var i = 0;i < this.series1_.length;i++) {
    var points1 = this.series1_[i].points, points2 = this.series2_[i].points, newPoints1 = [], newPoints2 = [];
    if(0 < domainMapping.length) {
      var points1PerCategory = Math.ceil(points1.length / domainMapping.length), points2PerCategory = Math.ceil(points2.length / domainMapping.length);
      this.chartDef1_.chartType == gviz.canviz.Options.ChartType.FUNCTION && (goog.asserts.assert(Math.floor(points1.length / points1PerCategory) === this.chartDef1_.categories.length), goog.asserts.assert(Math.floor(points2.length / points2PerCategory) === this.chartDef2_.categories.length));
      for(var j = 0;j < domainMapping.length;j++) {
        for(var mapping = domainMapping[j], k = 0;k < points1PerCategory;k++) {
          newPoints1.push(getPoint(points1, mapping.c1, points1PerCategory, k))
        }
        for(k = 0;k < points2PerCategory;k++) {
          newPoints2.push(getPoint(points2, mapping.c2, points2PerCategory, k))
        }
      }
    }
    this.series1_[i] = gviz.canviz.ChartDefinitionInterpolator.cloneSerie_(this.series1_[i], newPoints1);
    this.series2_[i] = gviz.canviz.ChartDefinitionInterpolator.cloneSerie_(this.series2_[i], newPoints2)
  }
};
gviz.canviz.ChartDefinitionInterpolator.cloneSerie_ = function(serie, newPoints) {
  var newSerie = goog.object.clone(serie);
  newSerie.points = newPoints;
  newSerie.intervals && (newSerie.intervals = null);
  return newSerie
};
gviz.canviz.ChartDefinitionInterpolator.prototype.prepareLegend_ = function() {
  var chartDef1 = this.chartDef1_, chartDef2 = this.chartDef2_;
  if(chartDef1.legend && chartDef1.legend.pages && chartDef2.legend && chartDef2.legend.pages) {
    var page1 = chartDef1.legend.pages[0], page2 = chartDef2.legend.pages[0], legendEditDistance = gviz.canviz.util.calcEditDistance(page1, page2, function(entry1, entry2) {
      return entry1.id == entry2.id
    });
    this.legendEntries1_ = goog.array.filter(page1, function(entry, i) {
      return goog.isDefAndNotNull(legendEditDistance.map1[i])
    });
    this.legendEntries2_ = goog.array.filter(page2, function(entry, i) {
      return goog.isDefAndNotNull(legendEditDistance.map2[i])
    });
    goog.asserts.assert(this.legendEntries1_.length == this.legendEntries2_.length);
    this.interpolated_.legend = goog.object.clone(this.interpolated_.legend);
    var legend = this.interpolated_.legend;
    legend.currentPage = goog.array.clone(this.legendEntries2_);
    legend.pages = [legend.currentPage];
    for(var currentPage = legend.currentPage, i$$0 = 0;i$$0 < currentPage.length;++i$$0) {
      currentPage[i$$0] = goog.object.clone(currentPage[i$$0]);
      var entry$$0 = currentPage[i$$0];
      if(entry$$0.textBlock && (entry$$0.textBlock = goog.object.clone(entry$$0.textBlock), entry$$0.textBlock.lines)) {
        entry$$0.textBlock.lines = goog.array.clone(entry$$0.textBlock.lines);
        for(var j = 0;j < entry$$0.textBlock.lines.length;j++) {
          entry$$0.textBlock.lines[j] = goog.object.clone(entry$$0.textBlock.lines[j])
        }
      }
      entry$$0.square && (entry$$0.square = goog.object.clone(entry$$0.square), entry$$0.square.coordinates && (entry$$0.square.coordinates = entry$$0.square.coordinates.clone()));
      entry$$0.removeSerieButton && (entry$$0.removeSerieButton = goog.object.clone(entry$$0.removeSerieButton), entry$$0.removeSerieButton.coordinates && (entry$$0.removeSerieButton.coordinates = goog.object.clone(entry$$0.removeSerieButton.coordinates)))
    }
  }
};
gviz.canviz.ChartDefinitionInterpolator.interpolateValue_ = function(v1, v2, ratio) {
  return v1 === v2 ? v1 : v1 && v1.constructor == gviz.graphics.Brush && v2 && v2.constructor == gviz.graphics.Brush ? gviz.canviz.ChartDefinitionInterpolator.interpolateBrush_(v1, v2, ratio) : goog.isArray(v1) && goog.isArray(v2) ? gviz.canviz.ChartDefinitionInterpolator.interpolateArray_(v1, v2, ratio) : goog.isObject(v1) || goog.isObject(v2) ? gviz.canviz.ChartDefinitionInterpolator.interpolateObject_(v1, v2, ratio) : goog.isNumber(v1) && goog.isNumber(v2) ? v1 * (1 - ratio) + v2 * ratio : null
};
gviz.canviz.ChartDefinitionInterpolator.interpolateBrush_ = function(brush1, brush2, ratio) {
  return new gviz.graphics.Brush({fill:gviz.util.blendHexColors(brush1.getFill(), brush2.getFill(), 1 - ratio), fillOpacity:gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(brush1.getFillOpacity(), brush2.getFillOpacity(), ratio), stroke:gviz.util.blendHexColors(brush1.getStroke(), brush2.getStroke(), 1 - ratio), strokeWidth:gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(brush1.getStrokeWidth(), brush2.getStrokeWidth(), ratio), strokeOpacity:gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(brush1.getStrokeOpacity(), 
  brush2.getStrokeOpacity(), ratio), strokeDashStyle:brush1.getStrokeDashStyle(), gradient:brush1.gradient, pattern:brush1.getPattern()})
};
gviz.canviz.ChartDefinitionInterpolator.interpolateArray_ = function(arr1, arr2, ratio) {
  if(!arr1) {
    return arr2
  }
  if(!arr2) {
    return arr1
  }
  for(var result = [], len = Math.min(arr1.length, arr2.length), i = 0;i < len;i++) {
    result.push(gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(arr1[i], arr2[i], ratio))
  }
  return result
};
gviz.canviz.ChartDefinitionInterpolator.interpolateObject_ = function(obj1, obj2, ratio) {
  if(!obj1) {
    return obj2
  }
  if(!obj2) {
    return obj1
  }
  var result = {};
  goog.object.forEach(obj1, function(value, key) {
    goog.isDef(obj2[key]) && (result[key] = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(obj1[key], obj2[key], ratio))
  });
  return result
};
gviz.canviz.ChartDefinitionInterpolator.isCoordinateInLimits_ = function(x, y, chartArea, limitByX, limitByY) {
  var inXLimits = !limitByX || (chartArea ? x >= chartArea.left && x <= chartArea.right : !1), inYLimits = !limitByY || (chartArea ? y >= chartArea.top && y <= chartArea.bottom : !1);
  return inXLimits && inYLimits
};
gviz.canviz.ChartDefinitionInterpolator.interpolateTextBlock_ = function(textBlock1, textBlock2, interpolated, ratio) {
  interpolated && interpolated.anchor && (interpolated.anchor.x = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(textBlock1.anchor.x, textBlock2.anchor.x, ratio), interpolated.anchor.y = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(textBlock1.anchor.y, textBlock2.anchor.y, ratio))
};
gviz.canviz.ChartDefinitionInterpolator.interpolateTextItem_ = function(item1, item2, interpolated, isInLimits, ratio) {
  interpolated && (gviz.canviz.ChartDefinitionInterpolator.interpolateTextBlock_(item1.textBlock, item2.textBlock, interpolated.textBlock, ratio), interpolated.textBlock && (interpolated.isVisible = isInLimits(interpolated.textBlock.anchor.x, interpolated.textBlock.anchor.y)))
};
gviz.canviz.ChartDefinitionInterpolator.interpolateAxis_ = function(axis1, axis2, interpolated, isInLimits, ratio) {
  axis1.position && axis1.position.fromValue && axis2.position && axis2.position.fromValue && (interpolated.position.fromValue = function(v) {
    var p1 = axis1.position.fromValue(v), p2 = axis2.position.fromValue(v);
    return gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(p1, p2, ratio)
  });
  if(axis1.baseline && axis2.baseline) {
    var baseline = interpolated.baseline;
    baseline.coordinate = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(axis1.baseline.coordinate, axis2.baseline.coordinate, ratio)
  }
  axis1.gridlines && axis2.gridlines && goog.array.forEach(interpolated.gridlines, function(gridline, i) {
    gridline.coordinate = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(axis1.gridlines[i].coordinate, axis2.gridlines[i].coordinate, ratio);
    gridline.isVisible = isInLimits(gridline.coordinate, gridline.coordinate)
  });
  axis1.text && axis2.text && goog.array.forEach(interpolated.text, function(textItem, i) {
    gviz.canviz.ChartDefinitionInterpolator.interpolateTextItem_(axis1.text[i], axis2.text[i], textItem, isInLimits, ratio)
  })
};
gviz.canviz.ChartDefinitionInterpolator.interpolatePoint_ = function(point1, point2, ratio) {
  if(!point1 || !point2) {
    return null
  }
  var result = goog.object.clone(point1), interpolateValue = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_;
  if(goog.isDef(point1.scaled) || goog.isDef(point2.scaled)) {
    result.scaled = interpolateValue(point1.scaled || {}, point2.scaled || {}, ratio)
  }
  goog.isDef(point1.leftControlPoint) && goog.isDef(point2.leftControlPoint) && (result.leftControlPoint = interpolateValue(point1.leftControlPoint, point2.leftControlPoint, ratio));
  goog.isDef(point1.rightControlPoint) && goog.isDef(point2.rightControlPoint) && (result.rightControlPoint = interpolateValue(point1.rightControlPoint, point2.rightControlPoint, ratio));
  goog.isDef(point1.textStyle) && goog.isDef(point2.textStyle) && point1.textStyle !== point2.textStyle && (result.textStyle = goog.object.clone(point1.textStyle), result.textStyle.color = gviz.util.blendHexColors(point1.textStyle.color, point2.textStyle.color, 1 - ratio), result.textStyle.opacity = interpolateValue(goog.isDef(point1.textStyle.opacity) ? point1.textStyle.opacity : 1, goog.isDef(point2.textStyle.opacity) ? point2.textStyle.opacity : 1, ratio));
  return result
};
gviz.canviz.ChartDefinitionInterpolator.prototype.interpolate = function(ratio) {
  var interpolated = this.interpolated_;
  if(interpolated.hAxes) {
    var hIsInLimits = function(x, y) {
      return gviz.canviz.ChartDefinitionInterpolator.isCoordinateInLimits_(x, y, interpolated.chartArea, !0, !1)
    };
    goog.object.forEach(interpolated.hAxes, function(hAxis, i) {
      gviz.canviz.ChartDefinitionInterpolator.interpolateAxis_(this.hAxesSubstitute_[i][0], this.hAxesSubstitute_[i][1], hAxis, hIsInLimits, ratio)
    }, this)
  }
  if(interpolated.vAxes) {
    var vIsInLimits = function(x, y) {
      return gviz.canviz.ChartDefinitionInterpolator.isCoordinateInLimits_(x, y, interpolated.chartArea, !1, !0)
    };
    goog.object.forEach(interpolated.vAxes, function(vAxis, i) {
      gviz.canviz.ChartDefinitionInterpolator.interpolateAxis_(this.vAxesSubstitute_[i][0], this.vAxesSubstitute_[i][1], vAxis, vIsInLimits, ratio)
    }, this)
  }
  if(this.series1_ && this.series2_) {
    interpolated.series = [];
    for(var i$$0 = 0;i$$0 < this.series1_.length;++i$$0) {
      var serie1 = this.series1_[i$$0], serie2 = this.series2_[i$$0], interpolatedSerie = goog.object.clone(serie2);
      if(serie1 && serie2 && serie1.type == serie2.type) {
        if(serie1.points && serie2.points) {
          interpolatedSerie.points = [];
          goog.asserts.assert(serie1.points.length == serie2.points.length);
          for(var j = 0;j < serie1.points.length;j++) {
            interpolatedSerie.points[j] = gviz.canviz.ChartDefinitionInterpolator.interpolatePoint_(serie1.points[j], serie2.points[j], ratio)
          }
          if(serie1.extraPoints_ && serie2.extraPoints_) {
            for(j = 0;j < serie1.extraPoints_.length;j++) {
              interpolatedSerie.points.push(gviz.canviz.ChartDefinitionInterpolator.interpolatePoint_(serie1.extraPoints_[j], serie2.extraPoints_[j], ratio))
            }
          }
        }
        serie1.intervals && serie1.intervals.paths && serie2.intervals && serie2.intervals.paths && (interpolatedSerie.intervals.paths = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(serie1.intervals.paths, serie2.intervals.paths, ratio))
      }
      interpolated.series[i$$0] = interpolatedSerie
    }
  }
  if(this.legendEntries1_ && this.legendEntries2_ && interpolated.legend && interpolated.legend.currentPage) {
    for(i$$0 = 0;i$$0 < interpolated.legend.currentPage.length;i$$0++) {
      var interpolatedEntry = interpolated.legend.currentPage[i$$0], entry1 = this.legendEntries1_[i$$0], entry2 = this.legendEntries2_[i$$0];
      if(interpolatedEntry.textBlock && interpolatedEntry.textBlock.lines && entry1.textBlock && entry1.textBlock.lines && !goog.array.isEmpty(entry1.textBlock.lines) && entry2.textBlock && entry2.textBlock.lines) {
        for(var interpolatedLines = interpolatedEntry.textBlock.lines, lines1 = entry1.textBlock.lines, lines2 = entry2.textBlock.lines, lines1Len = lines1.length, j = 0;j < interpolatedLines.length;j++) {
          var pos1 = j < lines1Len ? lines1[j] : lines1[lines1Len - 1];
          interpolatedLines[j].x = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(pos1.x, lines2[j].x, ratio);
          interpolatedLines[j].y = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(pos1.y, lines2[j].y, ratio)
        }
      }
      if(interpolatedEntry.square && interpolatedEntry.square.coordinates && entry1.square && entry1.square.coordinates && entry2.square && entry2.square.coordinates) {
        var interpolatedCoordinates = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(entry1.square.coordinates, entry2.square.coordinates, ratio);
        interpolatedEntry.square.coordinates = new goog.math.Rect(interpolatedCoordinates.left, interpolatedCoordinates.top, interpolatedCoordinates.width, interpolatedCoordinates.height)
      }
      interpolatedEntry.removeSerieButton && interpolatedEntry.removeSerieButton.coordinates && entry1.removeSerieButton && entry1.removeSerieButton.coordinates && entry2.removeSerieButton && entry2.removeSerieButton.coordinates && (interpolatedEntry.removeSerieButton.coordinates = gviz.canviz.ChartDefinitionInterpolator.interpolateValue_(entry1.removeSerieButton.coordinates, entry2.removeSerieButton.coordinates, ratio))
    }
  }
  return interpolated
};
// Input 346
gviz.canviz.ChartEventDispatcher = function(eventSource) {
  this.eventSource_ = eventSource
};
gviz.canviz.ChartEventDispatcher.prototype.dispatchByStateChange = function(previousChartState, currentChartState, chartType, series) {
  var events = [], currentFocus = currentChartState.focused, previousFocus = previousChartState.focused;
  if(currentFocus.serie != previousFocus.serie || currentFocus.datum != previousFocus.datum) {
    goog.isDefAndNotNull(previousFocus.serie) && events.push(this.createDatumEvent_(gviz.ChartEventType.FOCUS_OUT, previousFocus.serie, previousFocus.datum, chartType, series)), goog.isDefAndNotNull(currentFocus.serie) && events.push(this.createDatumEvent_(gviz.ChartEventType.FOCUS_IN, currentFocus.serie, currentFocus.datum, chartType, series))
  }
  if(currentFocus.category != previousFocus.category) {
    if(goog.isDefAndNotNull(previousFocus.category)) {
      var focusedCategory = previousFocus.category;
      events.push({type:gviz.ChartEventType.FOCUS_OUT, data:{row:focusedCategory, column:null}})
    }
    goog.isDefAndNotNull(currentFocus.category) && (focusedCategory = currentFocus.category, events.push({type:gviz.ChartEventType.FOCUS_IN, data:{row:focusedCategory, column:null}}))
  }
  currentFocus = currentChartState.annotations.focused;
  previousFocus = previousChartState.annotations.focused;
  !previousFocus || currentFocus && currentFocus.row == previousFocus.row && currentFocus.column == previousFocus.column || events.push({type:gviz.ChartEventType.FOCUS_OUT, data:{row:previousFocus.row, column:previousFocus.column}});
  !currentFocus || previousFocus && currentFocus.row == previousFocus.row && currentFocus.column == previousFocus.column || events.push({type:gviz.ChartEventType.FOCUS_IN, data:{row:currentFocus.row, column:currentFocus.column}});
  currentFocus = currentChartState.legend.focused;
  previousFocus = previousChartState.legend.focused;
  currentFocus.entry != previousFocus.entry && (goog.isDefAndNotNull(previousFocus.entry) && events.push(this.createDatumEvent_(gviz.ChartEventType.FOCUS_OUT, previousFocus.entry, null, chartType, series)), goog.isDefAndNotNull(currentFocus.entry) && events.push(this.createDatumEvent_(gviz.ChartEventType.FOCUS_IN, currentFocus.entry, null, chartType, series)));
  currentChartState.selected.equals(previousChartState.selected) || events.push({type:gviz.ChartEventType.SELECT});
  goog.array.forEach(events, goog.bind(function(event) {
    this.dispatchEvent(event.type, event.data)
  }, this))
};
gviz.canviz.ChartEventDispatcher.prototype.dispatchEvent = function(eventType, opt_eventData) {
  var eventData = opt_eventData || null;
  google.visualization.events.trigger(this.eventSource_, eventType, eventData)
};
gviz.canviz.ChartEventDispatcher.prototype.createDatumEvent_ = function(eventType, serieIndex, datumIndex, chartType, series) {
  var serie = series[serieIndex], row, column;
  chartType == gviz.canviz.Options.ChartType.PIE ? (row = serie.dataTableIdx, column = null) : (row = datumIndex, column = serie.dataTableIdx);
  return{type:eventType, data:{row:row, column:column}}
};
// Input 347
gviz.canviz.EventHandler = function(chartDefinition, chartState, interactionEventTarget, chartEventDispatcher, callback, aiPublisher) {
  goog.Disposable.call(this);
  this.chartDefinition_ = chartDefinition;
  this.chartState_ = chartState;
  this.interactionEventTarget_ = interactionEventTarget;
  this.chartEventDispatcher_ = chartEventDispatcher;
  this.scheduler_ = new gviz.canviz.Scheduler(callback);
  this.registerDisposable(this.scheduler_);
  this.aiPublisher_ = aiPublisher;
  this.aiPublisher_.setScheduler(this.scheduler_);
  this.registerEventHandlers_()
};
goog.inherits(gviz.canviz.EventHandler, goog.Disposable);
gviz.canviz.EventHandler.prototype.disposeInternal = function() {
  goog.events.removeAll(this.interactionEventTarget_);
  gviz.canviz.EventHandler.superClass_.disposeInternal.call(this)
};
gviz.canviz.EventHandler.prototype.setChartDefinition = function(chartDefinition) {
  this.chartDefinition_ = chartDefinition
};
gviz.canviz.EventHandler.prototype.cancelPendingEvents = function() {
  this.scheduler_.stopCountdown()
};
gviz.canviz.EventHandler.prototype.handleChartHoverIn_ = function(event) {
  this.chartState_.cursor.position = event.data.cursorPosition;
  this.scheduler_.updateCountdown(50)
};
gviz.canviz.EventHandler.prototype.handleChartHoverOut_ = function() {
};
gviz.canviz.EventHandler.prototype.handleChartMouseMove_ = function(event) {
  this.chartState_.cursor.position = event.data.cursorPosition;
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.MOUSE_MOVE, {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y})
};
gviz.canviz.EventHandler.prototype.handleChartMouseUp_ = function(event) {
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.MOUSE_UP, {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y})
};
gviz.canviz.EventHandler.prototype.handleChartMouseDown_ = function(event) {
  var data = {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y};
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.MOUSE_DOWN, data);
  this.aiPublisher_.handleMouseDown(data, event.data.preventDefault)
};
gviz.canviz.EventHandler.prototype.handleChartClick_ = function(event) {
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.CLICK, {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y})
};
gviz.canviz.EventHandler.prototype.handleChartRightClick_ = function(event) {
  var data = {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y};
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.RIGHT_CLICK, data);
  this.aiPublisher_.handleRightClick(data)
};
gviz.canviz.EventHandler.prototype.handleChartDblClick_ = function(event) {
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.DBL_CLICK, {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y})
};
gviz.canviz.EventHandler.prototype.handleChartScroll_ = function(event) {
  var data = {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y, wheelDelta:event.data.wheelDelta};
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.SCROLL, data);
  this.aiPublisher_.handleScroll(data, event.data.preventDefault)
};
gviz.canviz.EventHandler.prototype.handleChartDragStart_ = function(event) {
  var data = {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y};
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.DRAG_START, data);
  this.aiPublisher_.handleDragStart(data)
};
gviz.canviz.EventHandler.prototype.handleChartDrag_ = function(event) {
  var data = {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y};
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.DRAG, data);
  this.aiPublisher_.handleDrag(data)
};
gviz.canviz.EventHandler.prototype.handleChartDragEnd_ = function(event) {
  var data = {targetID:event.data.targetID, x:event.data.cursorPosition.x, y:event.data.cursorPosition.y};
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.DRAG_END, data);
  this.aiPublisher_.handleDragEnd(data)
};
gviz.canviz.EventHandler.prototype.handleCategoryHoverIn_ = function(event) {
  var categoryIndex = event.data.datumIndex;
  this.chartState_.focused.category = categoryIndex;
  this.scheduler_.updateCountdown(50)
};
gviz.canviz.EventHandler.prototype.handleCategoryHoverOut_ = function() {
  this.unfocusCategory_();
  this.scheduler_.updateCountdown(50)
};
gviz.canviz.EventHandler.prototype.handleCategoryClick_ = function(event) {
  var chartDefinition = this.chartDefinition_;
  this.chartState_.cursor.positionAtLastClick = this.chartState_.cursor.position.clone();
  var categoryIndex = event.data.datumIndex, rowIndex = chartDefinition.categories[categoryIndex].dataTableIdx, isSingle = chartDefinition.selectionMode == gviz.Options.SelectionMode.SINGLE;
  this.chartState_.selected.toggleRow(rowIndex, isSingle);
  this.scheduler_.updateCountdown(0)
};
gviz.canviz.EventHandler.prototype.handleLegendEntryHoverIn_ = function(event) {
  this.chartDefinition_.chartType != gviz.canviz.Options.ChartType.BUBBLE && (this.chartState_.legend.focused.entry = event.data.legendEntryIndex, this.scheduler_.updateCountdown(50))
};
gviz.canviz.EventHandler.prototype.handleLegendEntryHoverOut_ = function() {
  this.chartDefinition_.chartType != gviz.canviz.Options.ChartType.BUBBLE && (this.chartState_.legend.focused.entry = null, this.scheduler_.updateCountdown(250))
};
gviz.canviz.EventHandler.prototype.handleLegendEntryClick_ = function(event) {
  this.chartDefinition_.chartType != gviz.canviz.Options.ChartType.BUBBLE && (this.toggleSerieSelection_(event.data.legendEntryIndex), this.scheduler_.updateCountdown(0))
};
gviz.canviz.EventHandler.prototype.handleLegendScrollButtonClick_ = function(event) {
  goog.isDefAndNotNull(this.chartState_.legend.currentPageIndex) || (this.chartState_.legend.currentPageIndex = 0);
  this.chartState_.legend.currentPageIndex += event.data.scrollStep;
  this.scheduler_.updateCountdown(0)
};
gviz.canviz.EventHandler.prototype.handleSerieHoverIn_ = function(event) {
  if(this.chartDefinition_.chartType != gviz.canviz.Options.ChartType.BUBBLE) {
    var focusTarget = this.chartDefinition_.focusTarget, interactivityModel = this.chartDefinition_.interactivityModel;
    if(focusTarget == gviz.canviz.Options.FocusTarget.SERIES || interactivityModel == gviz.canviz.Options.InteractivityModel.DIVE) {
      this.chartState_.focused.serie = event.data.serieIndex, this.scheduler_.updateCountdown(50)
    }
  }
};
gviz.canviz.EventHandler.prototype.handleSerieHoverOut_ = function() {
  if(this.chartDefinition_.chartType != gviz.canviz.Options.ChartType.BUBBLE) {
    var focusTarget = this.chartDefinition_.focusTarget, interactivityModel = this.chartDefinition_.interactivityModel;
    if(focusTarget == gviz.canviz.Options.FocusTarget.SERIES || interactivityModel == gviz.canviz.Options.InteractivityModel.DIVE) {
      this.unfocusSerie_(), this.scheduler_.updateCountdown(250)
    }
  }
};
gviz.canviz.EventHandler.prototype.handleSerieClick_ = function(event) {
  if(this.chartDefinition_.chartType != gviz.canviz.Options.ChartType.BUBBLE) {
    var focusTarget = this.chartDefinition_.focusTarget;
    focusTarget == gviz.canviz.Options.FocusTarget.SERIES && (this.toggleSerieSelection_(event.data.serieIndex), this.scheduler_.updateCountdown(0))
  }
};
gviz.canviz.EventHandler.prototype.handleRemoveSerieButtonHoverIn_ = function(event) {
  this.handleLegendEntryHoverIn_(event)
};
gviz.canviz.EventHandler.prototype.handleRemoveSerieButtonHoverOut_ = function(event) {
  this.handleLegendEntryHoverOut_(event)
};
gviz.canviz.EventHandler.prototype.handleRemoveSerieButtonClick_ = function(event) {
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.REMOVE_SERIE, {index:event.data.legendEntryIndex})
};
gviz.canviz.EventHandler.prototype.handleDatumHoverIn_ = function(event) {
  var focusTarget = this.chartDefinition_.focusTarget;
  focusTarget == gviz.canviz.Options.FocusTarget.SERIES ? this.handleSerieHoverIn_(event) : (this.chartState_.focused.serie = event.data.serieIndex, this.chartState_.focused.datum = event.data.datumIndex, this.scheduler_.updateCountdown(50))
};
gviz.canviz.EventHandler.prototype.handleDatumHoverOut_ = function(event) {
  var focusTarget = this.chartDefinition_.focusTarget;
  focusTarget == gviz.canviz.Options.FocusTarget.SERIES ? this.handleSerieHoverOut_(event) : (this.unfocusDatum_(), this.scheduler_.updateCountdown(250))
};
gviz.canviz.EventHandler.prototype.handleDatumClick_ = function(event) {
  var chartDefinition = this.chartDefinition_;
  if(chartDefinition.focusTarget == gviz.canviz.Options.FocusTarget.SERIES) {
    this.handleSerieClick_(event)
  }else {
    var isSingle = chartDefinition.selectionMode == gviz.Options.SelectionMode.SINGLE, row = event.data.datumIndex;
    if(chartDefinition.chartType == gviz.canviz.Options.ChartType.BUBBLE) {
      this.chartState_.selected.toggleRow(row, isSingle)
    }else {
      var serie = chartDefinition.series[event.data.serieIndex], column = serie.dataTableIdx, focusTarget = this.chartDefinition_.focusTarget;
      focusTarget == gviz.canviz.Options.FocusTarget.SERIES ? this.chartState_.selected.toggleColumn(column, isSingle) : this.chartState_.selected.toggleCell(row, column, isSingle)
    }
    this.scheduler_.updateCountdown(0)
  }
};
gviz.canviz.EventHandler.prototype.handleAnnotationHoverIn_ = function(event) {
  var annotationIndex = event.data.annotationIndex;
  -1 != annotationIndex && (this.chartState_.annotations.focused = {row:event.data.datumIndex, column:this.getAnnotationColumn_(event.data.serieIndex, annotationIndex)}, this.unfocusDatum_(), this.scheduler_.updateCountdown(50))
};
gviz.canviz.EventHandler.prototype.handleAnnotationHoverOut_ = function(event) {
  -1 != event.data.annotationIndex && (this.chartState_.annotations.focused = null, this.scheduler_.updateCountdown(250))
};
gviz.canviz.EventHandler.prototype.handleAnnotationClick_ = function(event) {
  var chartDefinition = this.chartDefinition_, isSingle = chartDefinition.selectionMode == gviz.Options.SelectionMode.SINGLE, datumIndex = event.data.datumIndex, serieIndex = event.data.serieIndex, annotationIndex = event.data.annotationIndex;
  if(-1 == annotationIndex) {
    this.chartState_.annotations.expanded = {serieIndex:serieIndex, datumOrCategoryIndex:datumIndex}
  }else {
    var column = this.getAnnotationColumn_(serieIndex, annotationIndex);
    this.chartState_.selected.toggleCell(datumIndex, column, isSingle)
  }
  this.scheduler_.updateCountdown(0)
};
gviz.canviz.EventHandler.prototype.handleTooltipHoverIn_ = function(event) {
  if(goog.isNull(event.data.annotationIndex)) {
    var focusTarget = this.chartDefinition_.focusTarget;
    switch(focusTarget) {
      case gviz.canviz.Options.FocusTarget.DATUM:
        this.chartState_.focused.datum = event.data.datumIndex;
        this.chartState_.focused.serie = event.data.serieIndex;
        break;
      case gviz.canviz.Options.FocusTarget.SERIES:
        this.chartState_.focused.serie = event.data.serieIndex;
        break;
      case gviz.canviz.Options.FocusTarget.CATEGORY:
        this.chartState_.focused.category = event.data.datumIndex;
        break;
      default:
        goog.asserts.fail('Illegal focus target "' + focusTarget + '"')
    }
    this.scheduler_.updateCountdown(50)
  }else {
    this.handleAnnotationHoverIn_(event)
  }
};
gviz.canviz.EventHandler.prototype.handleTooltipHoverOut_ = function(event) {
  if(goog.isNull(event.data.annotationIndex)) {
    var focusTarget = this.chartDefinition_.focusTarget;
    switch(focusTarget) {
      case gviz.canviz.Options.FocusTarget.DATUM:
        this.unfocusDatum_();
        break;
      case gviz.canviz.Options.FocusTarget.SERIES:
        this.unfocusSerie_();
        break;
      case gviz.canviz.Options.FocusTarget.CATEGORY:
        this.unfocusCategory_();
        break;
      default:
        goog.asserts.fail('Illegal focus target "' + focusTarget + '"')
    }
    this.scheduler_.updateCountdown(750)
  }else {
    this.handleAnnotationHoverOut_(event)
  }
};
gviz.canviz.EventHandler.prototype.handleActionsMenuEntryHoverIn_ = function(event) {
  this.chartState_.actionsMenu.focused.entryID = event.data.entryID;
  this.scheduler_.updateCountdown(50)
};
gviz.canviz.EventHandler.prototype.handleActionsMenuEntryHoverOut_ = function() {
  this.chartState_.actionsMenu.focused.entryID = null;
  this.scheduler_.updateCountdown(250)
};
gviz.canviz.EventHandler.prototype.handleActionsMenuEntryClick_ = function() {
  this.chartState_.actionsMenu.focused.action && this.chartState_.actionsMenu.focused.action();
  this.scheduler_.updateCountdown(250)
};
gviz.canviz.EventHandler.prototype.handleReady = function() {
  this.aiPublisher_.handleReady()
};
gviz.canviz.EventHandler.prototype.unfocusDatum_ = function() {
  this.chartState_.focused.serie = null;
  this.chartState_.focused.datum = null
};
gviz.canviz.EventHandler.prototype.unfocusSerie_ = function() {
  this.chartState_.focused.serie = null
};
gviz.canviz.EventHandler.prototype.unfocusCategory_ = function() {
  this.chartState_.cursor.position = null;
  this.chartState_.focused.category = null
};
gviz.canviz.EventHandler.prototype.getAnnotationColumn_ = function(serieIndex, annotationIndex) {
  var chartDefinition = this.chartDefinition_, annotationColumns = null;
  if(goog.isDefAndNotNull(serieIndex)) {
    var serie = chartDefinition.series[serieIndex], annotationColumns = serie.columns[gviz.canviz.ColumnRole.ANNOTATION]
  }else {
    for(var i = 0;i < chartDefinition.domainsColumnStructure.length;++i) {
      var domainColumnStructure = chartDefinition.domainsColumnStructure[i], annotationColumns = domainColumnStructure.columns[gviz.canviz.ColumnRole.ANNOTATION]
    }
  }
  goog.asserts.assert(annotationIndex < annotationColumns.length);
  return annotationColumns[annotationIndex]
};
gviz.canviz.EventHandler.prototype.registerEventHandlers_ = function() {
  var setEventHandler = goog.bind(function(eventType, eventHandler) {
    goog.events.listen(this.interactionEventTarget_, eventType, goog.bind(eventHandler, this))
  }, this);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_HOVER_IN, this.handleChartHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_HOVER_OUT, this.handleChartHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_MOUSE_MOVE, this.handleChartMouseMove_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_MOUSE_UP, this.handleChartMouseUp_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_MOUSE_DOWN, this.handleChartMouseDown_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_CLICK, this.handleChartClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_RIGHT_CLICK, this.handleChartRightClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_DBL_CLICK, this.handleChartDblClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_SCROLL, this.handleChartScroll_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_DRAG_START, this.handleChartDragStart_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_DRAG, this.handleChartDrag_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CHART_DRAG_END, this.handleChartDragEnd_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CATEGORY_HOVER_IN, this.handleCategoryHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CATEGORY_HOVER_OUT, this.handleCategoryHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.CATEGORY_CLICK, this.handleCategoryClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.LEGEND_ENTRY_HOVER_IN, this.handleLegendEntryHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.LEGEND_ENTRY_HOVER_OUT, this.handleLegendEntryHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.LEGEND_ENTRY_CLICK, this.handleLegendEntryClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.LEGEND_SCROLL_BUTTON_CLICK, this.handleLegendScrollButtonClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.SERIE_HOVER_IN, this.handleSerieHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.SERIE_HOVER_OUT, this.handleSerieHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.SERIE_CLICK, this.handleSerieClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.REMOVE_SERIE_BUTTON_HOVER_IN, this.handleRemoveSerieButtonHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.REMOVE_SERIE_BUTTON_HOVER_OUT, this.handleRemoveSerieButtonHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.REMOVE_SERIE_BUTTON_CLICK, this.handleRemoveSerieButtonClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.DATUM_HOVER_IN, this.handleDatumHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.DATUM_HOVER_OUT, this.handleDatumHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.DATUM_CLICK, this.handleDatumClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.ANNOTATION_HOVER_IN, this.handleAnnotationHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.ANNOTATION_HOVER_OUT, this.handleAnnotationHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.ANNOTATION_CLICK, this.handleAnnotationClick_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.TOOLTIP_HOVER_IN, this.handleTooltipHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.TOOLTIP_HOVER_OUT, this.handleTooltipHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.ACTIONS_MENU_ENTRY_HOVER_IN, this.handleActionsMenuEntryHoverIn_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.ACTIONS_MENU_ENTRY_HOVER_OUT, this.handleActionsMenuEntryHoverOut_);
  setEventHandler(gviz.canviz.interactionEvents.EventType.ACTIONS_MENU_ENTRY_CLICK, this.handleActionsMenuEntryClick_)
};
gviz.canviz.EventHandler.prototype.toggleSerieSelection_ = function(serieIndex) {
  var chartDefinition = this.chartDefinition_, isSingle = chartDefinition.selectionMode == gviz.Options.SelectionMode.SINGLE, dataTableIdx = chartDefinition.series[serieIndex].dataTableIdx;
  chartDefinition.chartType == gviz.canviz.Options.ChartType.PIE ? this.chartState_.selected.toggleRow(dataTableIdx, isSingle) : this.chartState_.selected.toggleColumn(dataTableIdx, isSingle)
};
// Input 348
gviz.canviz.legend.labeledLegendBuilder = {};
gviz.canviz.legend.labeledLegendBuilder.build = function(renderer, drawTextBlockFunc, labeledLegendDefinition, drawingGroup, registerElementFunc) {
  for(var i = 0;i < labeledLegendDefinition.length;++i) {
    var legendEntry = labeledLegendDefinition[i], legendEntryGroup = renderer.createGroup(), legendEntryLineGroup = renderer.createGroup(), linePath = new gviz.graphics.PathSegments;
    linePath.move(legendEntry.startPoint.x + 0.5, legendEntry.startPoint.y + 0.5);
    linePath.addLine(legendEntry.cornerPointX + 0.5, legendEntry.startPoint.y + 0.5);
    linePath.addLine(legendEntry.cornerPointX + 0.5, legendEntry.endPoint.y + 0.5);
    linePath.addLine(legendEntry.endPoint.x + 0.5, legendEntry.endPoint.y + 0.5);
    renderer.drawPath(linePath, legendEntry.lineBrush, legendEntryLineGroup);
    renderer.drawCircle(legendEntry.startPoint.x + 0.5, legendEntry.startPoint.y + 0.5, legendEntry.startPointRadius, legendEntry.startPointBrush, legendEntryLineGroup);
    drawTextBlockFunc(legendEntry.aboveText, legendEntryGroup);
    drawTextBlockFunc(legendEntry.belowText, legendEntryGroup);
    renderer.appendChild(drawingGroup, legendEntryGroup);
    renderer.appendChild(drawingGroup, legendEntryLineGroup);
    var legendEntryID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.LEGEND_ENTRY, legendEntry.index]);
    registerElementFunc(legendEntryGroup.getElement(), legendEntryID)
  }
};
// Input 349
gviz.canviz.PieChartBuilder = function(overlayArea, renderer) {
  gviz.canviz.ChartBuilder.call(this, overlayArea, renderer);
  this.labeledLegendDrawingGroup_ = this.drawingGroup_ = null
};
goog.inherits(gviz.canviz.PieChartBuilder, gviz.canviz.ChartBuilder);
gviz.canviz.PieChartBuilder.prototype.drawChartContent = function(chartDef, drawingGroup) {
  var renderer = this.renderer;
  if(1 > chartDef.series.length) {
    return!1
  }
  this.drawingGroup_ = drawingGroup;
  for(var layers = chartDef.pie.layers, seriesCountInLayer = chartDef.series.length / layers.length, layerIndex = 0;layerIndex < layers.length;++layerIndex) {
    for(var radiusX = layers[layerIndex].radiusX, radiusY = layers[layerIndex].radiusY, otherSlice = layers[layerIndex].otherSlice, middleSlice = layerIndex * seriesCountInLayer, lastSliceInLayer = middleSlice + seriesCountInLayer;middleSlice < lastSliceInLayer && 180 > chartDef.series[middleSlice].toDegrees;) {
      this.drawSlice_(chartDef.series[middleSlice], radiusX, radiusY), middleSlice += 1
    }
    otherSlice && this.drawSlice_(otherSlice, radiusX, radiusY);
    for(var i = lastSliceInLayer - 1;i >= middleSlice;--i) {
      this.drawSlice_(chartDef.series[i], radiusX, radiusY)
    }
  }
  chartDef.labeledLegend && (this.labeledLegendDrawingGroup_ = renderer.createGroup(), this.drawLabeledLegend_(chartDef.labeledLegend), renderer.appendChild(this.drawingGroup_, this.labeledLegendDrawingGroup_));
  return!0
};
gviz.canviz.PieChartBuilder.prototype.drawSlice_ = function(slice, radiusX, radiusY) {
  if(slice.isVisible) {
    var sliceGroup = this.renderer.createGroup(), chartDef = this.chartDefinition, center = chartDef.pie.center, offset = slice.offset;
    if(slice.side3D) {
      var pieHeight = chartDef.pie.pieHeight, side = slice.side3D, sliceSidePath = new gviz.graphics.PathSegments;
      sliceSidePath.move(offset.x + side.fromPixel.x, offset.y + side.fromPixel.y);
      sliceSidePath.addLine(offset.x + side.fromPixel.x, offset.y + side.fromPixel.y + pieHeight);
      sliceSidePath.addArc(offset.x + center.x, offset.y + center.y + pieHeight, radiusX, radiusY, side.fromDegrees, side.toDegrees, !0);
      sliceSidePath.addLine(offset.x + side.toPixel.x, offset.y + side.toPixel.y);
      sliceSidePath.addArc(offset.x + center.x, offset.y + center.y, radiusX, radiusY, side.toDegrees, side.fromDegrees, !1);
      this.renderer.drawPath(sliceSidePath, side.brush, sliceGroup)
    }
    if(slice.drawInnerFrom || slice.drawInnerTo) {
      var pieHeight = chartDef.pie.pieHeight, innerPath = new gviz.graphics.PathSegments;
      innerPath.move(offset.x + center.x, offset.y + center.y);
      innerPath.addLine(offset.x + center.x, offset.y + center.y + pieHeight);
      slice.drawInnerTo && (innerPath.addLine(offset.x + slice.toPixel.x, offset.y + slice.toPixel.y + pieHeight), innerPath.addLine(offset.x + slice.toPixel.x, offset.y + slice.toPixel.y));
      slice.drawInnerFrom && (innerPath.addLine(offset.x + slice.fromPixel.x, offset.y + slice.fromPixel.y + pieHeight), innerPath.addLine(offset.x + slice.fromPixel.x, offset.y + slice.fromPixel.y));
      this.renderer.drawPath(innerPath, slice.innerBrush, sliceGroup)
    }
    var sliceBrush = slice.highlight ? slice.highlight.brush : slice.brush;
    if(slice.isWholeCircle) {
      if(0 == slice.innerRadiusX && 0 == slice.innerRadiusY) {
        this.renderer.drawEllipse(center.x, center.y, radiusX, radiusY, sliceBrush, sliceGroup)
      }else {
        var pathSegments = new gviz.graphics.PathSegments;
        pathSegments.move(center.x, center.y - radiusY);
        pathSegments.addArc(center.x, center.y, radiusX, radiusY, 0, 180, !0);
        pathSegments.addArc(center.x, center.y, radiusX, radiusY, 180, 360, !0);
        pathSegments.move(center.x, center.y - slice.innerRadiusY);
        pathSegments.addArc(center.x, center.y, slice.innerRadiusX, slice.innerRadiusY, 360, 180, !1);
        pathSegments.addArc(center.x, center.y, slice.innerRadiusX, slice.innerRadiusY, 180, 0, !1);
        pathSegments.close();
        this.renderer.drawPath(pathSegments, sliceBrush, sliceGroup)
      }
    }else {
      var slicePath = new gviz.graphics.PathSegments;
      slicePath.move(offset.x + slice.innerFromPixel.x, offset.y + slice.innerFromPixel.y);
      slicePath.addLine(offset.x + slice.fromPixel.x, offset.y + slice.fromPixel.y);
      slicePath.addArc(offset.x + center.x, offset.y + center.y, radiusX, radiusY, slice.fromDegrees, slice.toDegrees, !0);
      slicePath.addLine(offset.x + slice.innerToPixel.x, offset.y + slice.innerToPixel.y);
      slicePath.addArc(offset.x + center.x, offset.y + center.y, slice.innerRadiusX, slice.innerRadiusY, slice.toDegrees, slice.fromDegrees, !1);
      this.renderer.drawPath(slicePath, sliceBrush, sliceGroup)
    }
    slice.ring && this.drawDonut_(slice.ring, sliceGroup);
    var glow = slice.glow;
    if(glow) {
      if(glow.side3D) {
        var sideGlowPath = new gviz.graphics.PathSegments;
        sideGlowPath.move(glow.side3D.fromPixel.x, glow.side3D.fromPixel.y);
        sideGlowPath.addLine(glow.side3D.fromPixel.x, glow.side3D.fromPixel.y + pieHeight);
        sideGlowPath.addArc(glow.side3D.tip.x, glow.side3D.tip.y + pieHeight, glow.side3D.radiusX, glow.side3D.radiusY, glow.side3D.fromDegrees, glow.side3D.toDegrees, !0);
        sideGlowPath.addLine(glow.side3D.toPixel.x, glow.side3D.toPixel.y);
        sideGlowPath.addArc(glow.side3D.tip.x, glow.side3D.tip.y, glow.side3D.radiusX, glow.side3D.radiusY, glow.side3D.toDegrees, glow.side3D.fromDegrees, !1);
        this.renderer.drawPath(sideGlowPath, glow.side3D.brush, sliceGroup)
      }
      if(glow.drawInnerFrom || glow.drawInnerTo) {
        var innerGlowPath = new gviz.graphics.PathSegments;
        innerGlowPath.move(glow.innerClose.x, glow.innerClose.y);
        innerGlowPath.addLine(glow.innerFar.x, glow.innerFar.y);
        innerGlowPath.addLine(glow.innerFar.x, glow.innerFar.y + pieHeight);
        innerGlowPath.addLine(glow.innerClose.x, glow.innerClose.y + pieHeight);
        innerGlowPath.addLine(glow.innerClose.x, glow.innerClose.y);
        this.renderer.drawPath(innerGlowPath, glow.innerBrush, sliceGroup)
      }
      this.drawDonut_(glow, sliceGroup)
    }
    slice.isTextVisible && this.renderer.drawText(slice.text, slice.textBoxTopLeft.x + offset.x, slice.textBoxTopLeft.y + offset.y, slice.textBoxSize.width, gviz.graphics.TextAlign.START, gviz.graphics.TextAlign.START, slice.textStyle, sliceGroup);
    var sliceID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.SLICE, slice.index]), sliceElement = sliceGroup.getElement();
    goog.asserts.assert(this.drawingGroup_);
    this.drawElement(this.drawingGroup_, sliceID, sliceElement);
    if(slice.tooltip) {
      var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, slice.index]);
      this.openTooltip(slice.tooltip, tooltipID)
    }
  }
};
gviz.canviz.PieChartBuilder.prototype.drawDonut_ = function(donut, drawingGroup) {
  if(donut.isWholeCircle) {
    this.renderer.drawEllipse(donut.tip.x, donut.tip.y, donut.radiusX, donut.radiusY, donut.brush, drawingGroup)
  }else {
    var path = new gviz.graphics.PathSegments;
    path.move(donut.fromPixel.x, donut.fromPixel.y);
    path.addArc(donut.tip.x, donut.tip.y, donut.radiusX, donut.radiusY, donut.fromDegrees, donut.toDegrees, !0);
    this.renderer.drawPath(path, donut.brush, drawingGroup)
  }
};
gviz.canviz.PieChartBuilder.prototype.drawLabeledLegend_ = function(labeledLegendDefinition) {
  var drawTextBlockFunc = goog.bind(this.drawTextBlock, this), registerElementFunc = goog.bind(this.registerElement, this);
  goog.asserts.assert(this.labeledLegendDrawingGroup_);
  gviz.canviz.legend.labeledLegendBuilder.build(this.renderer, drawTextBlockFunc, labeledLegendDefinition, this.labeledLegendDrawingGroup_, registerElementFunc)
};
gviz.canviz.PieChartBuilder.prototype.refreshChartContent = function(baseLayer, refreshLayer) {
  if(!gviz.object.unsafeEquals(refreshLayer.labeledLegend, this.drawnRefreshLayer.labeledLegend)) {
    this.renderer.removeChildren(this.labeledLegendDrawingGroup_);
    var layeredLegendDefinition = new gviz.util.LayeredObject(2);
    layeredLegendDefinition.setLayer(0, baseLayer.labeledLegend || {});
    layeredLegendDefinition.setLayer(1, refreshLayer.labeledLegend || {});
    var labeledLegendDefinition = layeredLegendDefinition.compact();
    goog.asserts.assert(labeledLegendDefinition);
    this.drawLabeledLegend_(labeledLegendDefinition)
  }
  this.revertChartContentChanges_(baseLayer, this.drawnRefreshLayer);
  this.applyChartContentChanges_(baseLayer, refreshLayer)
};
gviz.canviz.PieChartBuilder.prototype.revertChartContentChanges_ = function(baseLayer, refreshLayer) {
  for(var serieIndex in refreshLayer.series) {
    if(refreshLayer.series[serieIndex].tooltip) {
      var tooltipID = gviz.canviz.idutils.generateId([gviz.canviz.idutils.Token.TOOLTIP, Number(serieIndex)]);
      this.closeTooltip(tooltipID)
    }
    var layersCount = baseLayer.pie.layers.length, seriesCount = baseLayer.series.length, layerIndex = serieIndex < seriesCount / layersCount ? 0 : 1, layer = baseLayer.pie.layers[layerIndex], radiusX = layer.radiusX, radiusY = layer.radiusY, slice = baseLayer.series[serieIndex];
    this.drawSlice_(slice, radiusX, radiusY)
  }
};
gviz.canviz.PieChartBuilder.prototype.applyChartContentChanges_ = function(baseLayer, refreshLayer) {
  for(var serieIndex in refreshLayer.series) {
    var slice = baseLayer.series[serieIndex], layeredSlice = new gviz.util.LayeredObject(2);
    layeredSlice.setLayer(0, slice);
    layeredSlice.setLayer(1, refreshLayer.series[serieIndex]);
    var layersCount = baseLayer.pie.layers.length, seriesCount = baseLayer.series.length, layerIndex = serieIndex < seriesCount / layersCount ? 0 : 1, layer = baseLayer.pie.layers[layerIndex], radiusX = layer.radiusX, radiusY = layer.radiusY;
    this.drawSlice_(layeredSlice.compact(), radiusX, radiusY)
  }
};
// Input 350
gviz.canviz.PieChartEventHandler = function(interactionEventTarget, renderer, overlayArea) {
  gviz.canviz.ChartEventHandler.call(this, interactionEventTarget, renderer, overlayArea, gviz.canviz.Options.ChartType.PIE)
};
goog.inherits(gviz.canviz.PieChartEventHandler, gviz.canviz.ChartEventHandler);
gviz.canviz.PieChartEventHandler.prototype.detectTargetElement = function(event) {
  var eventTarget = event.target;
  return this.renderer.getLogicalName(eventTarget)
};
gviz.canviz.PieChartEventHandler.prototype.dispatchInteractionEventForContent = function(interactionEventOperationType, targetElementID) {
  var targetElementTokens = targetElementID.split(gviz.canviz.idutils.TOKEN_SEPARATOR), targetElementType = targetElementTokens[0];
  switch(targetElementType) {
    case gviz.canviz.idutils.Token.SLICE:
      var sliceIndex = Number(targetElementTokens[1]);
      if(0 > sliceIndex) {
        break
      }
      var interactionEventType = gviz.canviz.interactionEvents.generateEventType(gviz.canviz.interactionEvents.TargetType.SERIE, interactionEventOperationType), interactionEventData = {serieIndex:sliceIndex, datumIndex:null};
      this.dispatchEvent(interactionEventType, interactionEventData)
  }
};
// Input 351
gviz.canviz.PieChartInteractivityDefiner = function(chartOptions, chartDimensions, chartTextStyle, interactivityModel, focusTarget, numberOfSlices, opt_actionsMenuDefiner) {
  gviz.canviz.ChartInteractivityDefiner.call(this, chartOptions, chartDimensions, chartTextStyle, interactivityModel, focusTarget, opt_actionsMenuDefiner);
  var enableInteractivity = chartOptions.inferBooleanValue("enableInteractivity", !0);
  this.enableInteractivityPerSlice_ = gviz.canviz.util.rangeMap(numberOfSlices, function(sliceIndex) {
    return chartOptions.inferBooleanValue("slices." + sliceIndex + ".enableInteractivity", enableInteractivity)
  })
};
goog.inherits(gviz.canviz.PieChartInteractivityDefiner, gviz.canviz.ChartInteractivityDefiner);
gviz.canviz.PieChartInteractivityDefiner.prototype.extendInteractivityLayer = function(chartDefinition, chartState, interactivityLayer) {
  goog.asserts.assert(chartDefinition.interactivityModel == gviz.canviz.Options.InteractivityModel.DEFAULT);
  this.defaultInteractivityModel(chartDefinition, chartState, interactivityLayer)
};
gviz.canviz.PieChartInteractivityDefiner.prototype.equalChartStates = function(chartState1, chartState2) {
  return chartState1.equals(chartState2, !0)
};
gviz.canviz.PieChartInteractivityDefiner.prototype.isSliceInteractive_ = function(sliceIndex) {
  return this.enableInteractivityPerSlice_[sliceIndex]
};
gviz.canviz.PieChartInteractivityDefiner.prototype.createInteractiveSlice_ = function(interactivityLayer, sliceIndex) {
  interactivityLayer.series = interactivityLayer.series || {};
  var series = interactivityLayer.series;
  series[sliceIndex] = series[sliceIndex] || {};
  return series[sliceIndex]
};
gviz.canviz.PieChartInteractivityDefiner.prototype.defaultInteractivityModel = function(chartDefinition, chartState, interactivityLayer) {
  var interactionState = {chartDefinition:chartDefinition, actionsMenuEntries:this.actionsMenuDefiner.getEntries(), interactivityLayer:interactivityLayer, actionsMenuState:chartState.actionsMenu}, focusedActionId = chartState.actionsMenu.focused.entryID;
  null != focusedActionId && (chartState.actionsMenu.focused.action = this.actionsMenuDefiner.getAction(focusedActionId).action);
  for(var tooltipTrigger = this.tooltipDefiner.getTrigger(), selectionTriggersTooltip = gviz.canviz.chartdefinitionutil.isTooltipTriggeredBySelection(tooltipTrigger), focusTriggersTooltip = gviz.canviz.chartdefinitionutil.isTooltipTriggeredByFocus(tooltipTrigger, chartState.selected), showActionsMenu = this.actionsMenuDefiner && 0 < interactionState.actionsMenuEntries.length, selectedRows = chartState.selected.getRowIndexes(), showAggregateTooltip = 1 < selectedRows.length && showActionsMenu, i$$0 = 
  0;i$$0 < selectedRows.length;++i$$0) {
    var selectedSliceIndex = selectedRows[i$$0], seriesCount$$0 = chartDefinition.series.length, layersCount = chartDefinition.pie.layers.length, seriesInEachLayer$$0 = seriesCount$$0 / layersCount, selectedSliceIndex = selectedSliceIndex + (layersCount - 1) * seriesInEachLayer$$0;
    this.isSliceInteractive_(selectedSliceIndex) && (this.ringSlice_(chartDefinition, selectedSliceIndex, interactivityLayer), selectionTriggersTooltip && !showAggregateTooltip && this.addTooltipToSlice_(interactionState, selectedSliceIndex))
  }
  selectionTriggersTooltip && showAggregateTooltip && this.addAggregateTooltipToSlices_(interactionState, selectedRows, selectedRows[selectedRows.length - 1]);
  var getSliceAndItsTwin = goog.bind(function(sliceIndex) {
    if(chartDefinition.isDiff) {
      var seriesCount = chartDefinition.series.length, seriesInEachLayer = seriesCount / chartDefinition.pie.layers.length, twin = (sliceIndex + seriesInEachLayer) % seriesCount;
      return[sliceIndex, twin]
    }
    return[sliceIndex]
  }, this), handleFocus = goog.bind(function(serieIndex, mustShowTooltip) {
    if(goog.isDefAndNotNull(serieIndex)) {
      for(var focusedSliceIndices = getSliceAndItsTwin(serieIndex), i = 0;i < focusedSliceIndices.length;++i) {
        var focusedSlice = focusedSliceIndices[i];
        goog.isDefAndNotNull(focusedSlice) && this.isSliceInteractive_(focusedSlice) && (chartDefinition.isDiff ? this.highlightSlice_(chartDefinition, focusedSlice, interactivityLayer) : this.glowSlice_(chartDefinition, focusedSlice, interactivityLayer), gviz.canviz.PieChartInteractivityDefiner.glowLabeledLegend_(chartDefinition, focusedSlice, interactivityLayer))
      }
      mustShowTooltip & focusTriggersTooltip && this.addTooltipToSlice_(interactionState, serieIndex)
    }
  }, this), overlayBox = chartState.overlayBox;
  overlayBox && (interactivityLayer.overlayBox = overlayBox);
  handleFocus(chartState.focused.serie, !0);
  handleFocus(chartState.legend.focused.entry, !1)
};
gviz.canviz.PieChartInteractivityDefiner.GLOW_OPACITY_LEVEL = 0.3;
gviz.canviz.PieChartInteractivityDefiner.GLOW_WIDTH = 6.5;
gviz.canviz.PieChartInteractivityDefiner.RING_WIDTH = 2;
gviz.canviz.PieChartInteractivityDefiner.RING_DISTANCE = 2.5;
gviz.canviz.PieChartInteractivityDefiner.HIGHLIGHT_WIDTH = 2;
gviz.canviz.PieChartInteractivityDefiner.prototype.glowSlice_ = function(chartDefinition, sliceIndex, interactivityLayer) {
  var pie = chartDefinition.pie, slice = chartDefinition.series[sliceIndex];
  if(goog.isDefAndNotNull(slice.offset)) {
    var interactiveSlice = this.createInteractiveSlice_(interactivityLayer, sliceIndex);
    interactiveSlice.glow = {};
    var glow$$0 = interactiveSlice.glow, GLOW_OPACITY_LEVEL = gviz.canviz.PieChartInteractivityDefiner.GLOW_OPACITY_LEVEL;
    glow$$0.brush = new gviz.graphics.Brush({stroke:slice.brush.getFill(), strokeWidth:gviz.canviz.PieChartInteractivityDefiner.GLOW_WIDTH, strokeOpacity:GLOW_OPACITY_LEVEL});
    glow$$0.tip = new goog.math.Coordinate(pie.center.x + slice.offset.x, pie.center.y + slice.offset.y);
    glow$$0.fromDegrees = slice.fromDegrees;
    glow$$0.toDegrees = slice.toDegrees;
    glow$$0.isWholeCircle = slice.isWholeCircle;
    var radiusX, radiusY, ring = interactiveSlice.ring;
    if(ring) {
      radiusX = ring.radiusX + ring.brush.getStrokeWidth() / 2, radiusY = ring.radiusY + ring.brush.getStrokeWidth() / 2
    }else {
      var halfSliceStrokeWidth = slice.brush.getStrokeWidth() / 2;
      radiusX = pie.radiusX + halfSliceStrokeWidth;
      radiusY = pie.radiusY + halfSliceStrokeWidth
    }
    var halfGlowStrokeWidth = glow$$0.brush.getStrokeWidth() / 2;
    glow$$0.radiusX = radiusX + halfGlowStrokeWidth;
    glow$$0.radiusY = radiusY + halfGlowStrokeWidth;
    var glowFromRadians = goog.math.toRadians(glow$$0.fromDegrees - 90), glowToRadians = goog.math.toRadians(glow$$0.toDegrees - 90);
    glow$$0.fromPixel = goog.math.Coordinate.sum(glow$$0.tip, (0,gviz.canviz.vectorutils.vectorOnEllipse)(glowFromRadians, glow$$0.radiusX, glow$$0.radiusY));
    glow$$0.toPixel = goog.math.Coordinate.sum(glow$$0.tip, (0,gviz.canviz.vectorutils.vectorOnEllipse)(glowToRadians, glow$$0.radiusX, glow$$0.radiusY));
    var side3D = slice.side3D;
    side3D && (glow$$0.side3D = glow$$0.side3D || {}, glow$$0.side3D.brush = gviz.graphics.Brush.createFillBrush(side3D.brush.getFill(), GLOW_OPACITY_LEVEL), glow$$0.side3D.tip = glow$$0.tip.clone(), glow$$0.side3D.fromDegrees = side3D.fromDegrees, glow$$0.side3D.toDegrees = side3D.toDegrees, glow$$0.side3D.radiusX = glow$$0.radiusX + halfGlowStrokeWidth, glow$$0.side3D.radiusY = glow$$0.radiusY + halfGlowStrokeWidth, glowFromRadians = goog.math.toRadians(glow$$0.side3D.fromDegrees - 90), glowToRadians = 
    goog.math.toRadians(glow$$0.side3D.toDegrees - 90), glow$$0.side3D.fromPixel = goog.math.Coordinate.sum(glow$$0.side3D.tip, (0,gviz.canviz.vectorutils.vectorOnEllipse)(glowFromRadians, glow$$0.side3D.radiusX, glow$$0.side3D.radiusY)), glow$$0.side3D.toPixel = goog.math.Coordinate.sum(glow$$0.side3D.tip, (0,gviz.canviz.vectorutils.vectorOnEllipse)(glowToRadians, glow$$0.side3D.radiusX, glow$$0.side3D.radiusY)));
    glow$$0.drawInnerFrom = slice.drawInnerFrom;
    glow$$0.drawInnerTo = slice.drawInnerTo;
    if(glow$$0.drawInnerFrom || glow$$0.drawInnerTo) {
      glow$$0.innerBrush = gviz.graphics.Brush.createFillBrush(slice.innerBrush.getFill(), GLOW_OPACITY_LEVEL);
      glow$$0.radians = glow$$0.drawInnerFrom ? glowFromRadians : glowToRadians;
      var calcInnerCoordinate = function(glow, direction) {
        return goog.math.Coordinate.sum(glow.tip, (0,gviz.canviz.vectorutils.vectorOnEllipse)(glow.radians, glow.radiusX + direction * glow.brush.getStrokeWidth() / 2, glow.radiusY + direction * glow.brush.getStrokeWidth() / 2))
      };
      glow$$0.innerClose = calcInnerCoordinate(glow$$0, -1);
      glow$$0.innerFar = calcInnerCoordinate(glow$$0, 1)
    }
  }
};
gviz.canviz.PieChartInteractivityDefiner.prototype.ringSlice_ = function(chartDefinition, sliceIndex, interactivityLayer) {
  var pie = chartDefinition.pie;
  if(!(0 < pie.pieHeight)) {
    var slice = chartDefinition.series[sliceIndex];
    if(goog.isDefAndNotNull(slice.offset)) {
      var interactiveSlice = this.createInteractiveSlice_(interactivityLayer, sliceIndex);
      interactiveSlice.ring = {};
      var ring = interactiveSlice.ring;
      ring.brush = gviz.graphics.Brush.createStrokeBrush(slice.brush.getFill(), gviz.canviz.PieChartInteractivityDefiner.RING_WIDTH);
      ring.tip = new goog.math.Coordinate(pie.center.x + slice.offset.x, pie.center.y + slice.offset.y);
      ring.fromDegrees = slice.fromDegrees;
      ring.toDegrees = slice.toDegrees;
      ring.isWholeCircle = slice.isWholeCircle;
      var ringOffset = slice.brush.getStrokeWidth() / 2 + gviz.canviz.PieChartInteractivityDefiner.RING_DISTANCE + ring.brush.getStrokeWidth() / 2;
      ring.radiusX = pie.radiusX + ringOffset;
      ring.radiusY = pie.radiusY + ringOffset;
      var ringFromRadians = goog.math.toRadians(ring.fromDegrees - 90), ringToRadians = goog.math.toRadians(ring.toDegrees - 90);
      ring.fromPixel = goog.math.Coordinate.sum(ring.tip, (0,gviz.canviz.vectorutils.vectorOnEllipse)(ringFromRadians, ring.radiusX, ring.radiusY));
      ring.toPixel = goog.math.Coordinate.sum(ring.tip, (0,gviz.canviz.vectorutils.vectorOnEllipse)(ringToRadians, ring.radiusX, ring.radiusY))
    }
  }
};
gviz.canviz.PieChartInteractivityDefiner.prototype.highlightSlice_ = function(chartDefinition, sliceIndex, interactivityLayer) {
  var slice = chartDefinition.series[sliceIndex];
  if(!goog.isDefAndNotNull(slice.offset)) {
    return null
  }
  var brush = slice.brush.clone(), fillColor = slice.brush.getFill();
  brush.setStroke(gviz.util.blendHexColors(fillColor, "#000000", 0.7));
  brush.setFillOpacity(slice.brush.getFillOpacity() + 0.1);
  var interactiveSlice = this.createInteractiveSlice_(interactivityLayer, sliceIndex);
  interactiveSlice.highlight = {brush:brush}
};
gviz.canviz.PieChartInteractivityDefiner.prototype.addTooltipToSlice_ = function(interactionState, sliceIndex) {
  var interactiveSlice = this.createInteractiveSlice_(interactionState.interactivityLayer, sliceIndex), tooltipDefinition = this.tooltipDefiner.createTooltip(interactionState, sliceIndex, null, null);
  goog.asserts.assert(tooltipDefinition);
  interactiveSlice.tooltip = tooltipDefinition;
  interactionState.actionsMenuState && (goog.asserts.assert(this.actionsMenuDefiner), this.actionsMenuDefiner.extendInteractivityLayer(tooltipDefinition, interactionState.actionsMenuState, interactiveSlice.tooltip))
};
gviz.canviz.PieChartInteractivityDefiner.prototype.addAggregateTooltipToSlices_ = function(interactionState, sliceIndices, positionSlice) {
  var interactiveSlice = this.createInteractiveSlice_(interactionState.interactivityLayer, positionSlice), tooltipDefinition = this.tooltipDefiner.createAggregateSeriesTooltip(interactionState, sliceIndices, positionSlice);
  goog.asserts.assert(tooltipDefinition);
  interactiveSlice.tooltip = tooltipDefinition;
  interactionState.actionsMenuState && (goog.asserts.assert(this.actionsMenuDefiner), this.actionsMenuDefiner.extendInteractivityLayer(tooltipDefinition, interactionState.actionsMenuState, interactiveSlice.tooltip))
};
gviz.canviz.PieChartInteractivityDefiner.glowLabeledLegend_ = function(chartDefinition, entryIndex, interactivityLayer) {
  chartDefinition.labeledLegend && (interactivityLayer.labeledLegend = gviz.canviz.legend.labeledLegendDefiner.generateInteractivityLayer(chartDefinition.labeledLegend, entryIndex))
};
// Input 352
gviz.canviz.Chart = function(container, eventSource) {
  this.options_ = this.chartDefinition_ = null;
  this.container_ = container;
  this.interactivityDefiner_ = this.builder_ = null;
  this.actionsQueue_ = [];
  this.animation_ = this.drawingFrame_ = this.drawnChartState_ = this.chartState_ = null;
  this.interactionEventTarget_ = new goog.events.EventTarget;
  this.eventHandler_ = null;
  this.chartEventDispatcher_ = new gviz.canviz.ChartEventDispatcher(eventSource);
  this.chartEventHandler_ = null
};
goog.inherits(gviz.canviz.Chart, goog.Disposable);
gviz.canviz.Chart.prototype.disposeInternal = function() {
  this.clearChart();
  goog.dispose(this.interactionEventTarget_);
  gviz.canviz.Chart.superClass_.disposeInternal.call(this)
};
gviz.canviz.Chart.prototype.getDrawingFrame = function() {
  return this.drawingFrame_
};
gviz.canviz.Chart.prototype.getChartDefinition = function() {
  return this.chartDefinition_
};
gviz.canviz.Chart.prototype.draw = function(asyncWrapper, dataTable, options, opt_state) {
  this.clearInteractionEvents_();
  gviz.util.VisCommon.addCssToDom("/core/tooltip.css");
  gviz.canviz.Chart.validateOptions_(options);
  var themes = options.theme || [];
  goog.isArray(themes) || (themes = [themes]);
  for(var optionsLayers = [options], i = 0;i < themes.length;++i) {
    var theme;
    if(goog.isString(themes[i])) {
      theme = gviz.canviz.Theme.getTheme(themes[i])
    }else {
      if(goog.isObject(themes[i])) {
        theme = themes[i]
      }else {
        throw Error("Theme should be a theme name or an options object.");
      }
    }
    optionsLayers.push(theme)
  }
  optionsLayers.push(gviz.canviz.Options.DEFAULTS);
  this.options_ = new gviz.Options(optionsLayers);
  this.width_ = gviz.util.VisCommon.getWidth(this.container_, this.options_);
  this.height_ = gviz.util.VisCommon.getHeight(this.container_, this.options_);
  var dimensions = new goog.math.Size(this.width_, this.height_), forceIFrame = this.options_.inferBooleanValue("forceIFrame");
  if(!this.drawingFrame_ || this.drawingFrame_.isDisposed()) {
    try {
      this.drawingFrame_ = new gviz.graphics.DrawingFrame(this.container_, dimensions, asyncWrapper, forceIFrame)
    }catch(e) {
      throw Error(gviz.canviz.Messages.MSG_NOT_SUPPORTED);
    }
  }else {
    this.drawingFrame_.update(dimensions, asyncWrapper)
  }
  this.chartState_ = new gviz.canviz.ChartState(opt_state);
  this.dataTable_ = dataTable;
  this.drawingFrame_.waitUntilReady(goog.bind(this.completeTheDraw_, this), asyncWrapper)
};
gviz.canviz.Chart.prototype.completeTheDraw_ = function() {
  var renderer = this.drawingFrame_.getRenderer();
  goog.asserts.assert(renderer);
  var overlayArea = this.drawingFrame_.getOverlayArea();
  goog.asserts.assert(overlayArea);
  var oldChartDef;
  this.animation_ ? (oldChartDef = this.animation_.prevFrameChartDef, this.stopAnimation_()) : oldChartDef = this.chartDefinition_;
  var options = this.options_, newChartDef = (new gviz.canviz.ChartDefiner(this.dataTable_, options, goog.bind(renderer.getTextSize, renderer), this.width_, this.height_)).getChartDefinition(), aiPublisher = new gviz.ai.Publisher(options, this.chartState_, goog.bind(this.getChartLayoutInterface, this), newChartDef);
  goog.dispose(this.eventHandler_);
  this.eventHandler_ = new gviz.canviz.EventHandler(newChartDef, this.chartState_, this.interactionEventTarget_, this.chartEventDispatcher_, goog.bind(this.refresh_, this, !0), aiPublisher);
  var chartDimensions = new goog.math.Size(this.width_, this.height_), chartTextStyle = {fontName:newChartDef.defaultFontName, fontSize:newChartDef.defaultFontSize}, interactivityModel = newChartDef.interactivityModel, focusTarget = newChartDef.focusTarget, numberOfSeries = newChartDef.series.length, oldActionsMenuDefiner = this.interactivityDefiner_ ? this.interactivityDefiner_.getActionsMenuDefiner() : void 0;
  this.interactivityDefiner_ = newChartDef.chartType == gviz.canviz.Options.ChartType.PIE ? new gviz.canviz.PieChartInteractivityDefiner(options, chartDimensions, chartTextStyle, interactivityModel, focusTarget, numberOfSeries, oldActionsMenuDefiner) : new gviz.canviz.AxisChartInteractivityDefiner(options, chartDimensions, chartTextStyle, interactivityModel, focusTarget, numberOfSeries, oldActionsMenuDefiner);
  goog.array.forEach(this.actionsQueue_, goog.bind(function(action) {
    goog.isString(action) ? this.removeAction(action) : this.setAction(action)
  }, this));
  this.actionsQueue_ = [];
  this.builder_ = newChartDef.chartType == gviz.canviz.Options.ChartType.PIE ? new gviz.canviz.PieChartBuilder(overlayArea, renderer) : new gviz.canviz.AxisChartBuilder(overlayArea, renderer);
  var chartDefsFitAnimation = function() {
    return oldChartDef.chartType == newChartDef.chartType && oldChartDef.width == newChartDef.width && oldChartDef.height == newChartDef.height && oldChartDef.chartArea.top == newChartDef.chartArea.top && oldChartDef.chartArea.bottom == newChartDef.chartArea.bottom && oldChartDef.chartArea.left == newChartDef.chartArea.left && oldChartDef.chartArea.right == newChartDef.chartArea.right
  }, animationProps = gviz.animation.getProperties(options, 0, gviz.animation.EasingType.LINEAR);
  if(animationProps && oldChartDef && chartDefsFitAnimation()) {
    this.chartDefinition_ = null;
    var now = goog.now();
    this.stopAnimation_();
    this.animation_ = {oldChartDef:oldChartDef, newChartDef:newChartDef, interpolator:new gviz.canviz.ChartDefinitionInterpolator(oldChartDef, newChartDef), prevFrameChartDef:oldChartDef, startTime:now, endTime:now + animationProps.duration, prevFrameTime:0, timer:new goog.Timer(10), easingFunction:animationProps.easing, done:!1};
    this.handleAnimation_();
    goog.events.listen(this.animation_.timer, goog.Timer.TICK, goog.bind(this.handleAnimation_, this));
    this.animation_.timer.start();
    this.chartDefinition_ = newChartDef
  }else {
    this.chartDefinition_ = newChartDef, this.drawStateInducedChartDefinition_(), this.listenToChartEvents_()
  }
  this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.READY);
  this.eventHandler_.handleReady()
};
gviz.canviz.Chart.validateOptions_ = function(options) {
  if(options.isStacked && options.vAxis && options.vAxis.baseline) {
    throw Error("Cannot set a non-zero base-line for a stacked chart");
  }
};
gviz.canviz.Chart.prototype.clearInteractionEvents_ = function() {
  this.eventHandler_ && !this.eventHandler_.isDisposed() && this.eventHandler_.cancelPendingEvents();
  goog.dispose(this.eventHandler_);
  goog.dispose(this.chartEventHandler_);
  goog.events.removeAll(this.interactionEventTarget_)
};
gviz.canviz.Chart.prototype.clearChart = function() {
  this.stopAnimation_();
  this.clearInteractionEvents_();
  goog.dispose(this.drawingFrame_);
  goog.events.removeAll(this)
};
gviz.canviz.Chart.prototype.validateSelection_ = function(selected) {
  var selection = new gviz.util.Selection;
  selection.setSelection(selected);
  for(var selectedCells = selection.getCells(), foundSelectedAnnotation = !1, i = 0;i < selectedCells.length;i++) {
    var selectedCell = selectedCells[i], columnIndex = selectedCell.column, rowIndex = selectedCell.row, columnInfo = this.chartDefinition_.dataTableColumnRoleInfo[columnIndex];
    if(!columnInfo) {
      return!1
    }
    var serieIndex = columnInfo.serieIndex, datum, category;
    if(goog.isDefAndNotNull(serieIndex)) {
      var serie = this.chartDefinition_.series[serieIndex];
      datum = serie.points[rowIndex]
    }else {
      category = this.chartDefinition_.categories[rowIndex]
    }
    if(!datum && !category) {
      return!1
    }
    if(columnInfo.role == gviz.canviz.ColumnRole.ANNOTATION) {
      if(foundSelectedAnnotation) {
        return!1
      }
      var foundSelectedAnnotation = !0, annotation = (datum || category).annotation;
      if(!annotation) {
        return!1
      }
    }
  }
  return!0
};
gviz.canviz.Chart.prototype.setAction = function(action) {
  goog.isDefAndNotNull(this.interactivityDefiner_) ? this.interactivityDefiner_.setAction(action) : this.actionsQueue_.push(action)
};
gviz.canviz.Chart.prototype.getAction = function(action) {
  return this.interactivityDefiner_ ? this.interactivityDefiner_.getAction(action) : void 0
};
gviz.canviz.Chart.prototype.removeAction = function(action) {
  null != this.interactivityDefiner_ ? this.interactivityDefiner_.removeAction(action) : this.actionsQueue_.push(action)
};
gviz.canviz.Chart.prototype.setSelection = function(selected) {
  if(this.validateSelection_(selected)) {
    var selectedAnnotation = null;
    if(this.chartDefinition_.chartType != gviz.canviz.Options.ChartType.PIE) {
      var selection = new gviz.util.Selection;
      selection.setSelection(selected);
      for(var selectedCells = selection.getCells(), i = 0;i < selectedCells.length;i++) {
        var selectedCell = selectedCells[i], selectedColumn = selectedCell.column, selectedColumnInfo = this.chartDefinition_.dataTableColumnRoleInfo[selectedColumn];
        if(selectedColumnInfo.role == gviz.canviz.ColumnRole.ANNOTATION) {
          var serieIndex = selectedColumnInfo.serieIndex, selectedRow = selectedCell.row, selectedAnnotation = {serieIndex:serieIndex, datumOrCategoryIndex:selectedRow};
          break
        }
      }
    }
    this.refresh_(!0);
    this.chartState_.selected.setSelection(selected);
    selectedAnnotation && (this.chartState_.annotations.expanded = selectedAnnotation);
    this.refresh_(!1)
  }
};
gviz.canviz.Chart.prototype.getSelection = function() {
  return this.drawnChartState_ ? this.drawnChartState_.selected.getSelection() : []
};
gviz.canviz.Chart.prototype.refresh_ = function(dispatchEvents) {
  goog.asserts.assert(this.chartDefinition_);
  goog.asserts.assert(this.chartState_);
  goog.asserts.assert(this.drawnChartState_);
  var previousChartState = this.drawnChartState_;
  if(!this.interactivityDefiner_.equalChartStates(this.chartState_, this.drawnChartState_)) {
    var nextFrameOptions = this.chartState_.nextFrameOptions, interactivityLayer;
    if(nextFrameOptions) {
      this.options_.mergeLayer(nextFrameOptions);
      var renderer = this.drawingFrame_.getRenderer(), newChartDef = (new gviz.canviz.ChartDefiner(this.dataTable_, this.options_, goog.bind(renderer.getTextSize, renderer), this.width_, this.height_)).getChartDefinition();
      this.eventHandler_.setChartDefinition(newChartDef);
      this.chartEventHandler_.updateChartDefinition && this.chartEventHandler_.updateChartDefinition(newChartDef);
      interactivityLayer = this.interactivityDefiner_.generateInteractivityLayer(newChartDef, this.chartState_);
      this.chartDefinition_ = newChartDef;
      this.builder_.redrawChart(this.chartDefinition_, interactivityLayer);
      this.chartState_.nextFrameOptions = null
    }else {
      interactivityLayer = this.interactivityDefiner_.generateInteractivityLayer(this.chartDefinition_, this.chartState_), this.builder_.refreshChart(this.chartDefinition_, interactivityLayer)
    }
    this.drawnChartState_ = this.chartState_.clone()
  }
  dispatchEvents && this.chartEventDispatcher_.dispatchByStateChange(previousChartState, this.drawnChartState_, this.chartDefinition_.chartType, this.chartDefinition_.series)
};
gviz.canviz.Chart.prototype.drawStateInducedChartDefinition_ = function() {
  goog.asserts.assert(this.chartDefinition_);
  goog.asserts.assert(this.chartState_);
  var interactivityLayer = this.interactivityDefiner_.generateInteractivityLayer(this.chartDefinition_, this.chartState_);
  this.builder_.drawChart(this.chartDefinition_, interactivityLayer);
  this.drawnChartState_ = this.chartState_.clone()
};
gviz.canviz.Chart.prototype.listenToChartEvents_ = function() {
  var renderer = this.drawingFrame_.getRenderer();
  goog.asserts.assert(renderer);
  var overlayArea = this.drawingFrame_.getOverlayArea();
  goog.asserts.assert(overlayArea);
  goog.dispose(this.chartEventHandler_);
  this.chartEventHandler_ = this.chartDefinition_.chartType == gviz.canviz.Options.ChartType.PIE ? new gviz.canviz.PieChartEventHandler(this.interactionEventTarget_, renderer, overlayArea) : new gviz.canviz.AxisChartEventHandler(this.interactionEventTarget_, renderer, overlayArea, this.chartDefinition_);
  this.chartEventHandler_.listenToAllRendererEvents();
  this.chartEventHandler_.listenToAllOverlayAreaEvents();
  this.chartEventHandler_.listenToAllPageEvents()
};
gviz.canviz.Chart.prototype.handleAnimation_ = function() {
  var animation = this.animation_;
  this.chartDefinition_ = null;
  if(animation.done) {
    this.stopAnimation_(), this.chartDefinition_ = animation.newChartDef, this.drawStateInducedChartDefinition_(), this.listenToChartEvents_(), this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.ANIMATION_FINISH)
  }else {
    var now = goog.now(), nowInterval = now - animation.startTime, totalInterval = animation.endTime - animation.startTime, progress = nowInterval / totalInterval;
    if(1 > progress) {
      var maxFramesPerSec = 30;
      if(now - animation.prevFrameTime < 1E3 / maxFramesPerSec) {
        return
      }
    }else {
      progress = 1, animation.done = !0
    }
    var interpolatedChartDef = animation.interpolator.interpolate(animation.easingFunction(progress));
    animation.prevFrameChartDef = interpolatedChartDef;
    animation.prevFrameTime = now;
    this.builder_.drawChart(interpolatedChartDef, {});
    this.chartEventDispatcher_.dispatchEvent(gviz.ChartEventType.ANIMATION_FRAME_FINISH)
  }
  this.chartDefinition_ = animation.newChartDef
};
gviz.canviz.Chart.prototype.stopAnimation_ = function() {
  this.animation_ && (goog.dispose(this.animation_.timer), this.animation_ = null)
};
gviz.canviz.Chart.prototype.getChartAreaBoundingBox = function() {
  var chartArea = this.chartDefinition_.chartArea;
  return{left:chartArea.left, top:chartArea.top, width:chartArea.width, height:chartArea.height}
};
gviz.canviz.Chart.prototype.getBoundingBox = function(elementId) {
  if(!goog.isDefAndNotNull(this.builder_)) {
    return null
  }
  var box = this.builder_.getBoundingBox(elementId);
  return box ? {left:box.left, top:box.top, width:box.right - box.left, height:box.bottom - box.top} : null
};
gviz.canviz.Chart.prototype.getChartLayoutInterface = function() {
  var chartDef = this.chartDefinition_;
  return{getChartAreaBoundingBox:goog.bind(this.getChartAreaBoundingBox, this), getBoundingBox:goog.bind(this.getBoundingBox, this), getXLocation:goog.bind(gviz.canviz.chartdefinitionutil.getXLocation, null, chartDef), getYLocation:goog.bind(gviz.canviz.chartdefinitionutil.getYLocation, null, chartDef), getHAxisValue:goog.bind(gviz.canviz.chartdefinitionutil.getHAxisValue, null, chartDef), getVAxisValue:goog.bind(gviz.canviz.chartdefinitionutil.getVAxisValue, null, chartDef)}
};
// Input 353
google.visualization.CoreChart = function(container) {
  google.visualization.AbstractVisualization.call(this, container);
  this.id_ = google.visualization.CoreChart.idCounter_++;
  this.chartType_ = gviz.canviz.Options.ChartType.NONE;
  this.defaultSerieType_ = gviz.canviz.Options.SerieType.NONE;
  this.orientation_ = gviz.canviz.Options.Orientation.HORIZONTAL;
  this.theme_ = null;
  this.isAggregated_ = !1;
  this.chart_ = null
};
goog.inherits(google.visualization.CoreChart, google.visualization.AbstractVisualization);
google.visualization.CoreChart.prototype.disposeInternal = function() {
  this.clearInternal();
  google.visualization.CoreChart.superClass_.disposeInternal.call(this)
};
google.visualization.CoreChart.idCounter_ = 0;
google.visualization.CoreChart.prototype.selection_ = null;
google.visualization.CoreChart.prototype.initChart_ = function() {
  this.chart_ || (goog.asserts.assert(this.container), this.chart_ = new gviz.canviz.Chart(this.container, this))
};
google.visualization.CoreChart.prototype.setChartType = function(chartType, opt_defaultSerieType, opt_orientation, opt_theme) {
  this.chartType_ = chartType;
  goog.isDefAndNotNull(opt_defaultSerieType) && (this.defaultSerieType_ = opt_defaultSerieType);
  goog.isDefAndNotNull(opt_orientation) && (this.orientation_ = opt_orientation);
  goog.isDefAndNotNull(opt_theme) && (this.theme_ = opt_theme)
};
google.visualization.CoreChart.prototype.drawInternal = function(asyncWrapper, dataTable, opt_options, opt_state) {
  var options = opt_options || {}, options = gviz.json.deserialize(gviz.json.serialize(options));
  this.initChart_();
  this.updateChartType_(options);
  this.updateDefaultSerieType_(options);
  options.orientation = options.orientation || this.orientation_;
  options.theme = options.theme || this.theme_;
  this.chartType_ != gviz.canviz.Options.ChartType.NONE && google.visualization.CoreChart.convertBrowserchartOptions_(options);
  google.visualization.CoreChart.convertDeprecatedOptions_(options);
  google.visualization.errors.removeAll(this.container);
  if(!dataTable) {
    throw Error("Data table is not defined");
  }
  var isDiffData = goog.array.some(goog.array.range(dataTable.getNumberOfColumns()), function(i) {
    return dataTable.getColumnRole(i) == gviz.canviz.ColumnRole.DIFF_OLD_DATA
  });
  if(isDiffData) {
    if(options.aggregate) {
      throw Error("Aggregate must be done when creating diff data");
    }
    options.isDiff = !0
  }
  var firstColIsLabels = "number" != dataTable.getColumnType(0);
  this.firstValueCol_ = firstColIsLabels ? 1 : 0;
  this.numberOfRows_ = dataTable.getNumberOfRows();
  var data = dataTable;
  this.chartType_ == gviz.canviz.Options.ChartType.PIE && (data = this.aggregateIfRequired_(dataTable, options.aggregate));
  this.chart_.draw(asyncWrapper, data, options, opt_state)
};
google.visualization.CoreChart.prototype.aggregateIfRequired_ = function(dataTable, opt_forceAggregate) {
  var data = dataTable, firstColIsLabels = "number" != dataTable.getColumnType(0);
  firstColIsLabels && (1 == dataTable.getNumberOfColumns() ? (data = google.visualization.data.group(dataTable, [0], [{column:0, aggregation:google.visualization.data.count, type:"number"}]), this.isAggregated_ = !0) : opt_forceAggregate && (data = google.visualization.data.group(dataTable, [0], [{column:1, aggregation:google.visualization.data.sum, type:"number"}]), this.isAggregated_ = !0));
  return data
};
google.visualization.CoreChart.prototype.computeDiffInternal = function(oldDataTable, newDataTable, opt_forceAggregate) {
  goog.asserts.assert(oldDataTable.getColumnType(0) == newDataTable.getColumnType(0));
  goog.asserts.assert(oldDataTable.getNumberOfRows() == newDataTable.getNumberOfRows());
  goog.asserts.assert(oldDataTable.getNumberOfColumns() == newDataTable.getNumberOfColumns());
  var oldData = oldDataTable, newData = newDataTable;
  this.chartType_ == gviz.canviz.Options.ChartType.PIE && (oldData = this.aggregateIfRequired_(oldDataTable, opt_forceAggregate), newData = this.aggregateIfRequired_(newDataTable, opt_forceAggregate));
  var diffDataTable = new google.visualization.DataTable, rowsCount = newData.getNumberOfRows(), colsCount = newData.getNumberOfColumns(), firstColIsLabels = "number" != oldData.getColumnType(0);
  firstColIsLabels && diffDataTable.addColumn(oldData.getColumnType(0), oldData.getColumnLabel(0));
  for(var firstValueCol = firstColIsLabels ? 1 : 0, colIndex = firstValueCol;colIndex < colsCount;++colIndex) {
    diffDataTable.addColumn({type:oldData.getColumnType(colIndex), label:oldData.getColumnLabel(colIndex), role:gviz.canviz.ColumnRole.DIFF_OLD_DATA}), diffDataTable.addColumn({type:newData.getColumnType(colIndex), label:newData.getColumnLabel(colIndex), role:gviz.canviz.ColumnRole.DATA})
  }
  diffDataTable.addRows(rowsCount);
  for(var rowIndex = 0;rowIndex < rowsCount;++rowIndex) {
    var label = null;
    firstColIsLabels && (label = newData.getValue(rowIndex, 0), diffDataTable.setCell(rowIndex, 0, label));
    for(var rowLength = firstValueCol, colIndex = firstValueCol;colIndex < colsCount;++colIndex) {
      var oldValue = oldData.getValue(rowIndex, colIndex);
      diffDataTable.setCell(rowIndex, rowLength, oldValue);
      var rowLength = rowLength + 1, newValue = newData.getValue(rowIndex, colIndex);
      diffDataTable.setCell(rowIndex, rowLength, newValue);
      rowLength += 1
    }
  }
  return diffDataTable
};
google.visualization.CoreChart.prototype.getSelection = function() {
  return this.isAggregated_ ? null : this.chart_.getSelection()
};
google.visualization.CoreChart.prototype.setSelection = function(selection) {
  this.chart_.setSelection(selection)
};
google.visualization.CoreChart.prototype.setAction = function(action) {
  this.initChart_();
  this.chart_.setAction(action)
};
google.visualization.CoreChart.prototype.getAction = function(action) {
  return this.chart_ ? this.chart_.getAction(action) : void 0
};
google.visualization.CoreChart.prototype.removeAction = function(action) {
  this.initChart_();
  this.chart_.removeAction(action)
};
google.visualization.CoreChart.OldChartType = {LINE:"line", AREA:"area", COLUMNS:"columns", BARS:"bars", SCATTER:"scatter", PIE:"pie"};
google.visualization.CoreChart.prototype.updateChartType_ = function(options) {
  switch(options.type) {
    case google.visualization.CoreChart.OldChartType.LINE:
      this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.LINE, gviz.canviz.Options.Orientation.HORIZONTAL);
      options.type = null;
      break;
    case google.visualization.CoreChart.OldChartType.AREA:
      this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.AREA, gviz.canviz.Options.Orientation.HORIZONTAL);
      options.type = null;
      break;
    case google.visualization.CoreChart.OldChartType.COLUMNS:
      this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.BARS, gviz.canviz.Options.Orientation.HORIZONTAL);
      options.type = null;
      break;
    case google.visualization.CoreChart.OldChartType.BARS:
      this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.BARS, gviz.canviz.Options.Orientation.VERTICAL);
      options.type = null;
      break;
    case google.visualization.CoreChart.OldChartType.SCATTER:
      this.setChartType(gviz.canviz.Options.ChartType.SCATTER);
      options.type = null;
      break;
    case google.visualization.CoreChart.OldChartType.PIE:
      this.setChartType(gviz.canviz.Options.ChartType.PIE), options.type = null
  }
  var chartTypeFromClass = this.chartType_;
  chartTypeFromClass == gviz.canviz.Options.ChartType.NONE && (chartTypeFromClass = null);
  var chartTypeFromOptions = options.type || gviz.canviz.Options.ChartType.NONE;
  chartTypeFromOptions == gviz.canviz.Options.ChartType.NONE && (chartTypeFromOptions = null);
  if(!chartTypeFromClass && !chartTypeFromOptions) {
    throw Error("Unspecified chart type.");
  }
  if(chartTypeFromClass && chartTypeFromOptions && chartTypeFromClass != chartTypeFromOptions) {
    throw Error("Incompatible chart types.");
  }
  options.type = chartTypeFromClass || chartTypeFromOptions
};
google.visualization.CoreChart.prototype.updateDefaultSerieType_ = function(options) {
  if(options.type == gviz.canviz.Options.ChartType.FUNCTION) {
    var defaultSerieTypeFromClass = this.defaultSerieType_;
    defaultSerieTypeFromClass == gviz.canviz.Options.SerieType.NONE && (defaultSerieTypeFromClass = null);
    var defaultSerieTypeFromOptions = options.seriesType || gviz.canviz.Options.SerieType.NONE;
    defaultSerieTypeFromOptions == gviz.canviz.Options.SerieType.NONE && (defaultSerieTypeFromOptions = null);
    if(defaultSerieTypeFromClass && defaultSerieTypeFromOptions && defaultSerieTypeFromClass != defaultSerieTypeFromOptions) {
      throw Error("Incompatible default series types.");
    }
    options.seriesType = defaultSerieTypeFromClass || defaultSerieTypeFromOptions
  }
};
google.visualization.CoreChart.convertBrowserchartOptions_ = function(options) {
  options.hAxis = options.hAxis || {};
  options.vAxis = options.vAxis || {};
  var hAxis = options.hAxis, vAxis = options.vAxis, targetAxis = null;
  switch(options.type) {
    case gviz.canviz.Options.ChartType.SCATTER:
      targetAxis = vAxis;
      break;
    case gviz.canviz.Options.ChartType.FUNCTION:
      options.targetAxis = options.targetAxis || {}, targetAxis = options.targetAxis
  }
  targetAxis && (google.visualization.CoreChart.convertOption_(options, "min", targetAxis, "minValue"), google.visualization.CoreChart.convertOption_(options, "max", targetAxis, "maxValue"), google.visualization.CoreChart.convertOption_(options, "logScale", targetAxis, "logScale"));
  hAxis && (google.visualization.CoreChart.convertOption_(options, "logScaleX", hAxis, "logScale"), google.visualization.CoreChart.convertOption_(options, "titleX", hAxis, "title"));
  vAxis && google.visualization.CoreChart.convertOption_(options, "titleY", vAxis, "title");
  options.smoothLine && !goog.isDef(options.curveType) && (options.curveType = "function");
  google.visualization.CoreChart.convertOption_(options, "lineSize", options, "lineWidth");
  google.visualization.CoreChart.convertOption_(options, "reverseAxis", options, "reverseCategories");
  options.chartArea = options.chartArea || {};
  var chartArea = options.chartArea;
  google.visualization.CoreChart.convertOption_(options, "axisBackgroundColor", chartArea, "backgroundColor")
};
google.visualization.CoreChart.convertDeprecatedOptions_ = function(options) {
  google.visualization.CoreChart.convertTextStyleOptions_(options, "titleColor", "titleFontSize", "titleTextStyle");
  google.visualization.CoreChart.convertTextStyleOptions_(options, "legendTextColor", "legendFontSize", "legendTextStyle");
  gviz.Options.convertToBoolean(options.reverseCategories) && (goog.isDefAndNotNull(options.hAxis) || (options.hAxis = {}), options.hAxis.direction = -1, delete options.reverseCategories);
  google.visualization.CoreChart.convertDeprecatedAxisOptions_(options.hAxis);
  for(var i in options.hAxes) {
    google.visualization.CoreChart.convertDeprecatedAxisOptions_(options.hAxes[i])
  }
  google.visualization.CoreChart.convertDeprecatedAxisOptions_(options.vAxis);
  for(i in options.vAxes) {
    google.visualization.CoreChart.convertDeprecatedAxisOptions_(options.vAxes[i])
  }
  google.visualization.CoreChart.convertDeprecatedTooltipOptions_(options);
  google.visualization.CoreChart.convertDeprecatedLegendOptions_(options);
  google.visualization.CoreChart.convertDeprecatedAnimationOptions_(options)
};
google.visualization.CoreChart.convertDeprecatedAxisOptions_ = function(axisOptions) {
  goog.isDefAndNotNull(axisOptions) && (google.visualization.CoreChart.convertTextStyleOptions_(axisOptions, "textColor", "textFontSize", "textStyle"), google.visualization.CoreChart.convertTextStyleOptions_(axisOptions, "titleColor", "titleFontSize", "titleTextStyle"), google.visualization.CoreChart.convertDeprecatedGridlineOptions_(axisOptions))
};
google.visualization.CoreChart.convertDeprecatedTooltipOptions_ = function(options) {
  var tooltipOptions = options.tooltip;
  goog.isDefAndNotNull(tooltipOptions) || (tooltipOptions = {}, options.tooltip = tooltipOptions);
  google.visualization.CoreChart.convertTextStyleOptions_(options, "tooltipTextColor", "tooltipFontSize", "tooltipTextStyle");
  google.visualization.CoreChart.convertOption_(options, "tooltipTextStyle", tooltipOptions, "textStyle");
  google.visualization.CoreChart.convertOption_(options, "tooltipText", tooltipOptions, "text");
  google.visualization.CoreChart.convertOption_(options, "tooltipTrigger", tooltipOptions, "trigger");
  "hover" == tooltipOptions.trigger && (tooltipOptions.trigger = "focus")
};
google.visualization.CoreChart.convertDeprecatedLegendOptions_ = function(options) {
  var legendOptions = options.legend;
  if(!goog.isDefAndNotNull(legendOptions)) {
    legendOptions = {}, options.legend = legendOptions
  }else {
    if("string" == typeof legendOptions) {
      var position = legendOptions, legendOptions = {};
      options.legend = legendOptions;
      legendOptions.position = position
    }
  }
  google.visualization.CoreChart.convertOption_(options, "legendTextStyle", legendOptions, "textStyle")
};
google.visualization.CoreChart.convertDeprecatedAnimationOptions_ = function(options) {
  var animationOptions = options.animation;
  if(!goog.isDefAndNotNull(animationOptions)) {
    animationOptions = {}, options.animation = animationOptions
  }else {
    if("number" == typeof animationOptions) {
      var duration = 1E3 * animationOptions, animationOptions = {};
      options.animation = animationOptions;
      animationOptions.duration = duration
    }
  }
  google.visualization.CoreChart.convertOption_(options, "animationEasing", animationOptions, "easing")
};
google.visualization.CoreChart.convertDeprecatedGridlineOptions_ = function(axisOptions) {
  axisOptions.gridlines = axisOptions.gridlines || {};
  var gridlineOptions = axisOptions.gridlines, numberOfSections = axisOptions.numberOfSections;
  !goog.isDef(gridlineOptions.count) && goog.isDef(numberOfSections) && "number" == typeof numberOfSections && (gridlineOptions.count = numberOfSections + 1);
  var gridlineColor = axisOptions.gridlineColor;
  !goog.isDef(gridlineOptions.color) && goog.isDef(gridlineColor) && (gridlineOptions.color = gridlineColor)
};
google.visualization.CoreChart.convertTextStyleOptions_ = function(options, oldColorOption, oldFontSizeOption, newTextStyleOption) {
  options[newTextStyleOption] = options[newTextStyleOption] || {};
  var textStyle = options[newTextStyleOption];
  google.visualization.CoreChart.convertOption_(options, oldColorOption, textStyle, "color");
  google.visualization.CoreChart.convertOption_(options, oldFontSizeOption, textStyle, "fontSize")
};
google.visualization.CoreChart.convertOption_ = function(options, oldOption, targetOptions, newOption) {
  goog.isDef(options[oldOption]) && !goog.isDef(targetOptions[newOption]) && (targetOptions[newOption] = options[oldOption])
};
google.visualization.CoreChart.prototype.clearInternal = function() {
  this.chart_ && this.chart_.clearChart()
};
google.visualization.CoreChart.prototype.dump = function() {
  var renderer = this.chart_.getDrawingFrame().getRenderer();
  return renderer.getInternalSvg ? renderer.getInternalSvg() : ""
};
google.visualization.CoreChart.prototype.getDrawingFrame = function() {
  return this.chart_.getDrawingFrame()
};
google.visualization.CoreChart.prototype.getChartDefinition = function() {
  return this.chart_.getChartDefinition()
};
google.visualization.CoreChart.prototype.getChartLayoutInterface = function() {
  var chartLayoutInterface = this.chart_.getChartLayoutInterface();
  return{getChartAreaBoundingBox:chartLayoutInterface.getChartAreaBoundingBox, getBoundingBox:chartLayoutInterface.getBoundingBox, getXLocation:chartLayoutInterface.getXLocation, getYLocation:chartLayoutInterface.getYLocation, getHAxisValue:chartLayoutInterface.getHAxisValue, getVAxisValue:chartLayoutInterface.getVAxisValue}
};
// Input 354
google.visualization.AreaChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.AREA, gviz.canviz.Options.Orientation.HORIZONTAL)
};
goog.inherits(google.visualization.AreaChart, google.visualization.CoreChart);
google.visualization.SteppedAreaChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.STEPPED_AREA, gviz.canviz.Options.Orientation.HORIZONTAL)
};
goog.inherits(google.visualization.SteppedAreaChart, google.visualization.CoreChart);
google.visualization.SparklineChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.NONE, gviz.canviz.Options.Orientation.HORIZONTAL, "sparkline")
};
goog.inherits(google.visualization.SparklineChart, google.visualization.CoreChart);
google.visualization.LineChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.LINE, gviz.canviz.Options.Orientation.HORIZONTAL)
};
goog.inherits(google.visualization.LineChart, google.visualization.CoreChart);
google.visualization.ScatterChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.SCATTER)
};
goog.inherits(google.visualization.ScatterChart, google.visualization.CoreChart);
google.visualization.ScatterChart.prototype.computeDiff = function(oldDataTable, newDataTable) {
  return this.computeDiffInternal(oldDataTable, newDataTable)
};
goog.exportSymbol("google.visualization.ScatterChart.prototype.computeDiff", google.visualization.ScatterChart.prototype.computeDiff);
google.visualization.BubbleChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.BUBBLE)
};
goog.inherits(google.visualization.BubbleChart, google.visualization.CoreChart);
google.visualization.BarChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.BARS, gviz.canviz.Options.Orientation.VERTICAL)
};
goog.inherits(google.visualization.BarChart, google.visualization.CoreChart);
google.visualization.BarChart.prototype.computeDiff = function(oldDataTable, newDataTable) {
  return this.computeDiffInternal(oldDataTable, newDataTable)
};
goog.exportSymbol("google.visualization.BarChart.prototype.computeDiff", google.visualization.BarChart.prototype.computeDiff);
google.visualization.CandlestickChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.CANDLESTICKS, gviz.canviz.Options.Orientation.HORIZONTAL)
};
goog.inherits(google.visualization.CandlestickChart, google.visualization.CoreChart);
google.visualization.ColumnChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.BARS, gviz.canviz.Options.Orientation.HORIZONTAL)
};
goog.inherits(google.visualization.ColumnChart, google.visualization.CoreChart);
google.visualization.ColumnChart.prototype.computeDiff = function(oldDataTable, newDataTable) {
  return this.computeDiffInternal(oldDataTable, newDataTable)
};
goog.exportSymbol("google.visualization.ColumnChart.prototype.computeDiff", google.visualization.ColumnChart.prototype.computeDiff);
google.visualization.ComboChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.FUNCTION, gviz.canviz.Options.SerieType.NONE, gviz.canviz.Options.Orientation.HORIZONTAL)
};
goog.inherits(google.visualization.ComboChart, google.visualization.CoreChart);
google.visualization.PieChart = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.PIE)
};
goog.inherits(google.visualization.PieChart, google.visualization.CoreChart);
google.visualization.PieChart.prototype.computeDiff = function(oldDataTable, newDataTable, opt_forceAggregate) {
  var diffData = this.computeDiffInternal(oldDataTable, newDataTable, opt_forceAggregate);
  return diffData
};
goog.exportSymbol("google.visualization.PieChart.prototype.computeDiff", google.visualization.PieChart.prototype.computeDiff);
google.visualization.Histogram = function(container) {
  google.visualization.CoreChart.call(this, container);
  this.setChartType(gviz.canviz.Options.ChartType.HISTOGRAM, gviz.canviz.Options.SerieType.BARS, gviz.canviz.Options.Orientation.HORIZONTAL)
};
goog.inherits(google.visualization.Histogram, google.visualization.CoreChart);
// Input 355
google.visualization.RangeSelector = function(container) {
  goog.events.EventTarget.call(this);
  this.idToElementMapping_ = {};
  this.chart_ = null;
  this.chartDrawContext_ = {alive:!1};
  this.eventFiringScheduler_ = this.refreshScheduler_ = this.eventHandler_ = this.renderer_ = this.axisDefinition_ = this.chartDefinition_ = this.valueNumberConverter_ = this.dataTable_ = null;
  this.container_ = container;
  this.rangeChangeEventFiringRate_ = google.visualization.RangeSelector.DEFAULT_RANGE_CHANGE_EVENT_FIRING_RATE_;
  this.minRangeSizeValue_ = google.visualization.RangeSelector.DEFAULT_MIN_RANGE_SIZE_VALUE_;
  this.minRangeSizePixel_ = google.visualization.RangeSelector.DEFAULT_MIN_RANGE_SIZE_PIXEL_;
  this.zoomAroundSelection_ = google.visualization.RangeSelector.DEFAULT_ZOOM_AROUND_SELECTION_;
  this.snapToData_ = google.visualization.RangeSelector.DEFAULT_SNAP_TO_DATA_;
  this.centerSelectionAroundData_ = google.visualization.RangeSelector.DEFAULT_CENTER_SELECTION_AROUND_DATA_;
  this.maxDomainDataValue_ = this.minDomainDataValue_ = this.fullScreenBrush_ = this.sideScreenBrush_ = null;
  this.isVertical_ = !1;
  this.chartOptions_ = null;
  this.state_ = {range:null, draggedPixel:null, inDrag:null};
  this.axisRange_ = {pixel:{min:0, max:0}, value:{min:0, max:0}};
  this.axisPixels_ = null;
  this.containerIsSelectorsAncestor_ = !1;
  this.autoPanningTimer_ = null
};
goog.inherits(google.visualization.RangeSelector, goog.events.EventTarget);
google.visualization.RangeSelector.DragElement_ = {MIN:"min", MAX:"max", BOTH:"both"};
google.visualization.RangeSelector.ElementIds_ = {HANDLE_MIN:"rangeSelectorMinHandle", HANDLE_MAX:"rangeSelectorMaxHandle", SCREEN_MIN:"rangeSelectorMinScreen", SCREEN_MAX:"rangeSelectorMaxScreen"};
google.visualization.RangeSelector.ChartType = {LINE_CHART:"LineChart", AREA_CHART:"AreaChart", COMBO_CHART:"ComboChart", SCATTER_CHART:"ScatterChart"};
google.visualization.RangeSelector.DEFAULT_RANGE_CHANGE_EVENT_FIRING_RATE_ = 50;
google.visualization.RangeSelector.DEFAULT_MIN_RANGE_SIZE_VALUE_ = 0;
google.visualization.RangeSelector.DEFAULT_MIN_RANGE_SIZE_PIXEL_ = 1;
google.visualization.RangeSelector.DEFAULT_FIXED_RANGE_SIZE_ = !1;
google.visualization.RangeSelector.DEFAULT_ZOOM_AROUND_SELECTION_ = !1;
google.visualization.RangeSelector.DEFAULT_SNAP_TO_DATA_ = !1;
google.visualization.RangeSelector.DEFAULT_CENTER_SELECTION_AROUND_DATA_ = !1;
google.visualization.RangeSelector.DEFAULT_SIDE_SCREEN_COLOR_ = {fill:"#ccc", fillOpacity:0.5};
google.visualization.RangeSelector.DefaultChartOptions_ = {HORIZONTAL:{chartArea:{top:"0", height:"100%"}, enableInteractivity:!1, legend:{position:"none"}, hAxis:{textPosition:"in"}, vAxis:{textPosition:"none", gridlines:{color:"none"}}}, VERTICAL:{chartArea:{left:"0", width:"100%"}, enableInteractivity:!1, legend:{position:"none"}, vAxis:{textPosition:"in"}, hAxis:{textPosition:"none", gridlines:{color:"none"}}}};
google.visualization.RangeSelector.HandleDefinition_ = {brush:new gviz.graphics.Brush({stroke:"#000", fill:"#fff"}), thumbSize:new goog.math.Size(10, 16), thumbCornerOffset:3};
google.visualization.RangeSelector.prototype.draw = function(dataTable, userOptions, opt_state) {
  this.clearChart();
  this.dataTable_ = dataTable;
  this.valueNumberConverter_ = gviz.canviz.valuenumberconverter.getByType(dataTable.getColumnType(0));
  this.idToElementMapping_ = {};
  this.createSchedulers_();
  var options = new gviz.Options([userOptions || {}]);
  this.parseOptions_(options);
  this.chartOptions_ = this.getChartOptions_(options);
  var state = opt_state || {};
  google.visualization.events.addListener(this.chart_, gviz.ChartEventType.READY, goog.bind(this.onChartReady_, this, state));
  this.zoomAroundSelection_ && this.initDomainViewWindow_(state);
  this.chart_.draw(dataTable, this.chartOptions_)
};
google.visualization.RangeSelector.prototype.initDomainViewWindow_ = function(state) {
  this.minDomainDataValue_ = this.dataTable_.getValue(0, 0);
  this.maxDomainDataValue_ = this.dataTable_.getValue(this.dataTable_.getNumberOfRows() - 1, 0);
  var domainViewWindow = {};
  domainViewWindow.min = this.minDomainDataValue_;
  domainViewWindow.max = this.maxDomainDataValue_;
  state.range && this.adjustZoomAroundSelection_(domainViewWindow, state.range);
  this.chartOptions_.domainAxis = this.chartOptions_.domainAxis || {};
  var domainAxis = this.chartOptions_.domainAxis;
  domainAxis.viewWindow = domainViewWindow
};
google.visualization.RangeSelector.prototype.createSchedulers_ = function() {
  goog.isDefAndNotNull(this.refreshScheduler_) || (this.refreshScheduler_ = new gviz.canviz.Scheduler(goog.bind(this.updateUIAccordingToState_, this)));
  goog.isDefAndNotNull(this.eventFiringScheduler_) || (this.eventFiringScheduler_ = new gviz.canviz.Scheduler(goog.bind(this.triggerRangeChange_, this, !0)))
};
google.visualization.RangeSelector.prototype.parseOptions_ = function(options) {
  this.rangeChangeEventFiringRate_ = options.inferNonNegativeNumberValue("rangeChangeEventFiringRate", google.visualization.RangeSelector.DEFAULT_RANGE_CHANGE_EVENT_FIRING_RATE_);
  this.minRangeSizeValue_ = options.inferNonNegativeNumberValue("minRangeSize", google.visualization.RangeSelector.DEFAULT_MIN_RANGE_SIZE_VALUE_);
  this.fixedRangeSize_ = options.inferBooleanValue("fixedRangeSize", google.visualization.RangeSelector.DEFAULT_FIXED_RANGE_SIZE_);
  this.zoomAroundSelection_ = options.inferBooleanValue("zoomAroundSelection", google.visualization.RangeSelector.DEFAULT_ZOOM_AROUND_SELECTION_);
  this.snapToData_ = options.inferBooleanValue("snapToData", google.visualization.RangeSelector.DEFAULT_SNAP_TO_DATA_);
  this.centerSelectionAroundData_ = options.inferBooleanValue("centerSelectionAroundData", google.visualization.RangeSelector.DEFAULT_CENTER_SELECTION_AROUND_DATA_);
  this.sideScreenBrush_ = options.inferBrushValue("sideScreenColor", new gviz.graphics.Brush(google.visualization.RangeSelector.DEFAULT_SIDE_SCREEN_COLOR_));
  this.fullScreenBrush_ = gviz.graphics.Brush.TRANSPARENT_BRUSH.clone();
  this.clearChart();
  this.chart_ = this.getChartByType_(options);
  this.isVertical_ = this.isOrientationVertical_(options)
};
google.visualization.RangeSelector.prototype.isOrientationVertical_ = function(options) {
  var orientation = options.inferEnumValue("orientation", gviz.canviz.Options.Orientation, gviz.canviz.Options.Orientation.HORIZONTAL);
  return orientation == gviz.canviz.Options.Orientation.VERTICAL
};
google.visualization.RangeSelector.prototype.getChartByType_ = function(options) {
  var chartType = options.inferEnumValue("chartType", google.visualization.RangeSelector.ChartType, google.visualization.RangeSelector.ChartType.COMBO_CHART), chart = null;
  switch(chartType) {
    case google.visualization.RangeSelector.ChartType.AREA_CHART:
      chart = new google.visualization.AreaChart(this.container_);
      break;
    case google.visualization.RangeSelector.ChartType.COMBO_CHART:
      chart = new google.visualization.ComboChart(this.container_);
      break;
    case google.visualization.RangeSelector.ChartType.SCATTER_CHART:
      chart = new google.visualization.ScatterChart(this.container_);
      break;
    case google.visualization.RangeSelector.ChartType.LINE_CHART:
      chart = new google.visualization.LineChart(this.container_);
      break;
    default:
      chart = new google.visualization.ComboChart(this.container_)
  }
  return chart
};
google.visualization.RangeSelector.prototype.getChartOptions_ = function(options) {
  var chartOptions = gviz.object.unsafeClone(options.inferObjectValue("chartOptions"));
  chartOptions.theme = this.isVertical_ ? google.visualization.RangeSelector.DefaultChartOptions_.VERTICAL : google.visualization.RangeSelector.DefaultChartOptions_.HORIZONTAL;
  return chartOptions
};
google.visualization.RangeSelector.prototype.dataValuesToPixels_ = function(dataTable, columnIndex, valueToPixelFn) {
  var columnValues = gviz.canviz.util.rangeMap(dataTable.getNumberOfRows(), function(rowIndex) {
    return dataTable.getValue(rowIndex, columnIndex)
  }), columnValues = goog.array.filter(columnValues, goog.isDefAndNotNull);
  return goog.array.map(columnValues, valueToPixelFn)
};
google.visualization.RangeSelector.prototype.getAxisPixels_ = function(dataTable) {
  var axisDefinition = this.axisDefinition_, pixels = this.dataValuesToPixels_(dataTable, 0, axisDefinition.position.fromValue);
  return this.isVertical_ ? 1 == axisDefinition.dataDirection ? pixels.reverse() : pixels : 1 == axisDefinition.dataDirection ? pixels : pixels.reverse()
};
google.visualization.RangeSelector.prototype.setMinRangePixel_ = function() {
  var minRangeValue = this.minRangeSizeValue_, defaultMinRangePixel = google.visualization.RangeSelector.DEFAULT_MIN_RANGE_SIZE_PIXEL_;
  if(0 >= minRangeValue) {
    this.minRangeSizePixel_ = defaultMinRangePixel
  }else {
    var optionMinRangePixel = 0, pointPixel = this.axisRange_.pixel.min, pointValue = this.axisDefinition_.position.toValue(pointPixel), sumValue = null;
    goog.isDateLike(pointValue) ? (sumValue = new Date, sumValue.setTime(pointValue.getTime() + minRangeValue)) : sumValue = pointValue + minRangeValue;
    var optionMinRangePixel = Math.ceil(Math.abs(this.axisDefinition_.position.fromValue(sumValue) - pointPixel)), minRangePixel = Math.max(optionMinRangePixel, defaultMinRangePixel);
    this.minRangeSizePixel_ = minRangePixel < this.axisRange_.pixel.max - this.axisRange_.pixel.min ? minRangePixel : defaultMinRangePixel
  }
};
google.visualization.RangeSelector.prototype.onChartReady_ = function(state) {
  google.visualization.events.removeAllListeners(this.chart_);
  this.chartDrawContext_ = {alive:!0};
  this.initializeGivenChartIsReady_(state);
  goog.dispose(this.renderer_);
  this.renderer_ = this.chart_.getDrawingFrame().getRenderer(1);
  goog.asserts.assert(this.renderer_);
  goog.dispose(this.eventHandler_);
  this.eventHandler_ = new goog.events.EventHandler;
  this.draw_()
};
google.visualization.RangeSelector.prototype.onChartReready_ = function(state) {
  google.visualization.events.removeAllListeners(this.chart_);
  this.initializeGivenChartIsReady_(state);
  this.updateUI_(google.visualization.RangeSelector.DragElement_.BOTH)
};
google.visualization.RangeSelector.prototype.initializeGivenChartIsReady_ = function(state) {
  this.chartDefinition_ = this.chart_.getChartDefinition();
  this.axisDefinition_ = this.getRangeAxisDefinition_();
  goog.asserts.assert(this.axisDefinition_.position);
  goog.asserts.assert(this.axisDefinition_.type == gviz.canviz.Options.AxisType.VALUE);
  this.axisRange_.pixel = this.getAxisPixelRange_();
  this.axisRange_.value = this.getAxisValueBound_();
  this.setMinRangePixel_();
  if(this.snapToData_ || this.centerSelectionAroundData_) {
    this.axisPixels_ = this.getAxisPixels_(this.dataTable_)
  }
  if(state) {
    var rangeValues = state.range, startValue = goog.isObject(rangeValues) ? rangeValues.start : null, endValue = goog.isObject(rangeValues) ? rangeValues.end : null;
    this.state_.range = this.getValidPixelRange_(startValue, endValue)
  }
};
google.visualization.RangeSelector.prototype.getRangeAxisDefinition_ = function() {
  return this.isVertical_ ? this.chartDefinition_.vAxes[0] : this.chartDefinition_.hAxes[0]
};
google.visualization.RangeSelector.prototype.getAxisPixelRange_ = function() {
  return{min:Math.min(this.axisDefinition_.startPos, this.axisDefinition_.endPos), max:Math.max(this.axisDefinition_.startPos, this.axisDefinition_.endPos)}
};
google.visualization.RangeSelector.prototype.getAxisValueBound_ = function() {
  var axisStartValue = this.axisDefinition_.position.toValue(this.axisDefinition_.startPos), axisEndValue = this.axisDefinition_.position.toValue(this.axisDefinition_.endPos);
  return{min:Math.min(axisStartValue, axisEndValue), max:Math.max(axisStartValue, axisEndValue)}
};
google.visualization.RangeSelector.prototype.draw_ = function() {
  var renderer = this.renderer_, chartDef = this.chartDefinition_, mainDrawingGroup = renderer.createCanvas(chartDef.width, chartDef.height), rangeSelectorDrawingGroup = renderer.createGroup(!1);
  renderer.appendChild(mainDrawingGroup, rangeSelectorDrawingGroup);
  var handleDef = google.visualization.RangeSelector.HandleDefinition_, ids = google.visualization.RangeSelector.ElementIds_, chartArea = chartDef.chartArea;
  goog.asserts.assert(this.fullScreenBrush_);
  goog.asserts.assert(this.sideScreenBrush_);
  renderer.drawRect(0, 0, chartDef.width, chartDef.height, this.fullScreenBrush_, rangeSelectorDrawingGroup);
  var fullScreen = renderer.drawRect(chartArea.left, chartArea.top, chartArea.width, chartArea.height, this.fullScreenBrush_, rangeSelectorDrawingGroup), minRect = this.getMinScreenRect_(), minScreen = renderer.drawRect(minRect.left, minRect.top, minRect.width, minRect.height, this.sideScreenBrush_, rangeSelectorDrawingGroup);
  this.idToElementMapping_[ids.SCREEN_MIN] = minScreen;
  var maxRect = this.getMaxScreenRect_(), maxScreen = renderer.drawRect(maxRect.left, maxRect.top, maxRect.width, maxRect.height, this.sideScreenBrush_, rangeSelectorDrawingGroup);
  this.idToElementMapping_[ids.SCREEN_MAX] = maxScreen;
  var minHandle = this.drawHandle_(this.state_.range.minPixel, chartArea, handleDef.thumbSize, handleDef.thumbCornerOffset, renderer, handleDef.brush, rangeSelectorDrawingGroup);
  this.idToElementMapping_[ids.HANDLE_MIN] = minHandle;
  var maxHandle = this.drawHandle_(this.state_.range.maxPixel, chartArea, handleDef.thumbSize, handleDef.thumbCornerOffset, renderer, handleDef.brush, rangeSelectorDrawingGroup);
  this.idToElementMapping_[ids.HANDLE_MAX] = maxHandle;
  var document = goog.dom.getOwnerDocument(this.container_);
  this.eventHandler_.listen(document.body, goog.events.EventType.MOUSEMOVE, goog.bind(this.handleDocumentMouseMove_, this, this.chartDrawContext_));
  this.eventHandler_.listen(document.body, goog.events.EventType.MOUSEUP, goog.bind(this.handleMouseUp_, this, this.chartDrawContext_));
  var rangeSelectorElement = rangeSelectorDrawingGroup.getElement();
  this.eventHandler_.listen(rangeSelectorElement, goog.events.EventType.MOUSEMOVE, goog.bind(this.handleSelectorMouseMove_, this, this.chartDrawContext_));
  this.eventHandler_.listen(rangeSelectorElement, goog.events.EventType.MOUSEOUT, goog.bind(this.handleMouseHover_, this, this.chartDrawContext_, {type:"screen", isOver:!1}));
  (this.containerIsSelectorsAncestor_ = goog.dom.getAncestor(rangeSelectorElement, function(e) {
    return e == document.body
  })) || this.eventHandler_.listen(rangeSelectorElement, goog.events.EventType.MOUSEUP, goog.bind(this.handleMouseUp_, this, this.chartDrawContext_));
  this.fixedRangeSize_ || (this.addEventsForHandle_(minHandle, "min", google.visualization.RangeSelector.DragElement_.MIN), this.addEventsForHandle_(maxHandle, "max", google.visualization.RangeSelector.DragElement_.MAX));
  this.eventHandler_.listen(fullScreen, goog.events.EventType.MOUSEDOWN, goog.bind(this.handleMouseDown_, this, this.chartDrawContext_, {inDrag:google.visualization.RangeSelector.DragElement_.BOTH}));
  this.eventHandler_.listen(fullScreen, goog.events.EventType.MOUSEOVER, goog.bind(this.handleMouseHover_, this, this.chartDrawContext_, {type:"screen", isOver:!0}));
  this.eventHandler_.listen(fullScreen, goog.events.EventType.MOUSEOUT, goog.bind(this.handleMouseHover_, this, this.chartDrawContext_, {type:"screen", isOver:!1}));
  google.visualization.events.trigger(this, gviz.ChartEventType.READY, null)
};
google.visualization.RangeSelector.prototype.addEventsForHandle_ = function(handle, type, dragState) {
  this.eventHandler_.listen(handle, goog.events.EventType.MOUSEDOWN, goog.bind(this.handleMouseDown_, this, this.chartDrawContext_, {inDrag:dragState}));
  this.eventHandler_.listen(handle, goog.events.EventType.MOUSEOVER, goog.bind(this.handleMouseHover_, this, this.chartDrawContext_, {type:type, isOver:!0}));
  this.eventHandler_.listen(handle, goog.events.EventType.MOUSEOUT, goog.bind(this.handleMouseHover_, this, this.chartDrawContext_, {type:type, isOver:!1}))
};
google.visualization.RangeSelector.prototype.drawHandle_ = function(handlePixel, chartArea, thumbSize, thumbCornerOffset, renderer, brush, parentDrawingGroup) {
  var drawingGroup = renderer.createGroup(!1);
  renderer.appendChild(parentDrawingGroup, drawingGroup);
  var halfThumbWidth = 0.5 * thumbSize.width, offsetLeft = this.isVertical_ ? chartArea.left : this.adjustToHalfPixel_(handlePixel - halfThumbWidth), offsetTop = this.isVertical_ ? this.adjustToHalfPixel_(handlePixel - halfThumbWidth) : chartArea.top;
  renderer.setOffset(drawingGroup.getElement(), offsetLeft, offsetTop);
  this.isVertical_ ? (this.drawHandleLine_(0, Math.round(halfThumbWidth), chartArea.height, chartArea.width, renderer, brush, drawingGroup), this.fixedRangeSize_ || this.drawHandleThumb_(0.5 * (chartArea.width - thumbSize.height), 0, thumbSize.height, thumbSize.width, thumbCornerOffset, renderer, brush, drawingGroup)) : (this.drawHandleLine_(Math.round(halfThumbWidth), 0, chartArea.height, chartArea.width, renderer, brush, drawingGroup), this.fixedRangeSize_ || this.drawHandleThumb_(0, 0.5 * (chartArea.height - 
  thumbSize.height), thumbSize.width, thumbSize.height, thumbCornerOffset, renderer, brush, drawingGroup));
  return drawingGroup.getElement()
};
google.visualization.RangeSelector.prototype.drawHandleLine_ = function(left, top, height, width, renderer, brush, drawingGroup) {
  var barPath;
  barPath = this.isVertical_ ? [{x:left, y:top}, {x:left + width, y:top}] : [{x:left, y:top}, {x:left, y:top + height}];
  var pathSegments = gviz.graphics.PathSegments.fromVertices(barPath);
  renderer.drawPath(pathSegments, brush, drawingGroup)
};
google.visualization.RangeSelector.prototype.drawHandleThumb_ = function(left, top, thumbWidth, thumbHeight, thumbCornerOffset, renderer, brush, drawingGroup) {
  var right = left + thumbWidth, bottom = top + thumbHeight, outlinePath = [{x:left + thumbCornerOffset, y:top}, {x:right - thumbCornerOffset, y:top}, {x:right, y:top + thumbCornerOffset}, {x:right, y:bottom - thumbCornerOffset}, {x:right - thumbCornerOffset, y:bottom}, {x:left + thumbCornerOffset, y:bottom}, {x:left, y:bottom - thumbCornerOffset}, {x:left, y:top + thumbCornerOffset}], pathSegments = gviz.graphics.PathSegments.fromVertices(outlinePath, !1);
  renderer.drawPath(pathSegments, brush, drawingGroup);
  var strokeOffset = thumbCornerOffset + 1, path1, path2;
  this.isVertical_ ? (path1 = gviz.graphics.PathSegments.fromVertices([{x:left + strokeOffset, y:top + strokeOffset}, {x:right - strokeOffset, y:top + strokeOffset}]), path2 = gviz.graphics.PathSegments.fromVertices([{x:left + strokeOffset, y:bottom - strokeOffset}, {x:right - strokeOffset, y:bottom - strokeOffset}])) : (path1 = gviz.graphics.PathSegments.fromVertices([{x:left + strokeOffset, y:top + strokeOffset}, {x:left + strokeOffset, y:bottom - strokeOffset}]), path2 = gviz.graphics.PathSegments.fromVertices([{x:right - 
  strokeOffset, y:top + strokeOffset}, {x:right - strokeOffset, y:bottom - strokeOffset}]));
  renderer.drawPath(path1, brush, drawingGroup);
  renderer.drawPath(path2, brush, drawingGroup)
};
google.visualization.RangeSelector.prototype.getMinScreenRect_ = function() {
  var chartArea = this.chartDefinition_.chartArea, min = this.state_.range.minPixel;
  return this.isVertical_ ? new goog.math.Rect(chartArea.left, chartArea.top, chartArea.width, min - chartArea.top) : new goog.math.Rect(chartArea.left, chartArea.top, min - chartArea.left, chartArea.height)
};
google.visualization.RangeSelector.prototype.getMaxScreenRect_ = function() {
  var chartArea = this.chartDefinition_.chartArea, max = this.state_.range.maxPixel;
  return this.isVertical_ ? new goog.math.Rect(chartArea.left, max, chartArea.width, chartArea.bottom - max) : new goog.math.Rect(max, chartArea.top, chartArea.right - max, chartArea.height)
};
google.visualization.RangeSelector.prototype.getValidPixelRange_ = function(startValue, endValue) {
  var minPixel = this.axisRange_.pixel.min, maxPixel = this.axisRange_.pixel.max, startIsMin = 1 == this.axisDefinition_.dataDirection && !this.isVertical_;
  if(goog.isDefAndNotNull(startValue)) {
    var startPixel = this.axisDefinition_.position.fromValue(startValue);
    startIsMin ? minPixel = Math.max(startPixel, minPixel) : maxPixel = Math.min(startPixel, maxPixel)
  }
  if(goog.isDefAndNotNull(endValue)) {
    var endPixel = this.axisDefinition_.position.fromValue(endValue);
    startIsMin ? maxPixel = Math.min(endPixel, maxPixel) : minPixel = Math.max(endPixel, minPixel)
  }
  return{minPixel:minPixel, maxPixel:maxPixel}
};
google.visualization.RangeSelector.prototype.getRange = function() {
  var range = this.state_.range;
  goog.asserts.assert(goog.isDefAndNotNull(range));
  var minValue = this.axisDefinition_.position.toValue(range.minPixel), maxValue = this.axisDefinition_.position.toValue(range.maxPixel), startIsMin = 1 == this.axisDefinition_.dataDirection && !this.isVertical_;
  return{start:startIsMin ? minValue : maxValue, end:startIsMin ? maxValue : minValue}
};
google.visualization.RangeSelector.prototype.setRange = function(startValue, endValue) {
  if(!this.chartDrawContext_.alive) {
    return!1
  }
  var range = this.state_.range;
  goog.asserts.assert(goog.isDefAndNotNull(range));
  if(!goog.isDefAndNotNull(range.minPixel) || !goog.isDefAndNotNull(range.maxPixel)) {
    return!1
  }
  var validPixelRange = this.getValidPixelRange_(startValue, endValue), rangeChanged = this.setRangeByPixel_(validPixelRange.minPixel, validPixelRange.maxPixel, google.visualization.RangeSelector.DragElement_.BOTH);
  this.state_.inDrag = null;
  return rangeChanged
};
google.visualization.RangeSelector.prototype.setRangeByPixel_ = function(minPixel, maxPixel, dragElement) {
  goog.asserts.assert(minPixel <= maxPixel);
  var range = this.state_.range;
  if(range.minPixel == minPixel && range.maxPixel == maxPixel) {
    return!1
  }
  this.state_.range = {minPixel:minPixel, maxPixel:maxPixel};
  this.updateUI_(dragElement);
  return!0
};
google.visualization.RangeSelector.prototype.updateUI_ = function(dragElement) {
  var handleDefinition = google.visualization.RangeSelector.HandleDefinition_, thumbWidth = this.isVertical_ ? handleDefinition.thumbSize.height : handleDefinition.thumbSize.width, thumbHeight = this.isVertical_ ? handleDefinition.thumbSize.width : handleDefinition.thumbSize.height, ids = google.visualization.RangeSelector.ElementIds_;
  if(dragElement != google.visualization.RangeSelector.DragElement_.MAX) {
    var minRect = this.getMinScreenRect_(), minScreenElement = this.idToElementMapping_[ids.SCREEN_MIN], minHandleElement = this.idToElementMapping_[ids.HANDLE_MIN];
    if(this.isVertical_) {
      var top = this.adjustToHalfPixel_(minRect.top + minRect.height - 0.5 * thumbHeight);
      this.renderer_.setOffset(minHandleElement, 0, top);
      this.renderer_.setTopPosition(minScreenElement, minRect.top);
      this.renderer_.setHeight(minScreenElement, minRect.height)
    }else {
      var left = this.adjustToHalfPixel_(minRect.left + minRect.width - 0.5 * thumbWidth);
      this.renderer_.setOffset(minHandleElement, left, 0);
      this.renderer_.setLeftPosition(minScreenElement, minRect.left);
      this.renderer_.setWidth(minScreenElement, minRect.width)
    }
  }
  if(dragElement != google.visualization.RangeSelector.DragElement_.MIN) {
    var maxRect = this.getMaxScreenRect_(), maxScreenElement = this.idToElementMapping_[ids.SCREEN_MAX], maxHandleElement = this.idToElementMapping_[ids.HANDLE_MAX];
    this.isVertical_ ? (top = this.adjustToHalfPixel_(maxRect.top - 0.5 * thumbHeight), this.renderer_.setOffset(maxHandleElement, 0, top), this.renderer_.setTopPosition(maxScreenElement, maxRect.top), this.renderer_.setHeight(maxScreenElement, maxRect.height)) : (left = this.adjustToHalfPixel_(maxRect.left - 0.5 * thumbWidth), this.renderer_.setOffset(maxHandleElement, left, 0), this.renderer_.setLeftPosition(maxScreenElement, maxRect.left), this.renderer_.setWidth(maxScreenElement, maxRect.width))
  }
};
google.visualization.RangeSelector.prototype.updateUIAccordingToState_ = function() {
  this.updateUI_(this.state_.inDrag)
};
google.visualization.RangeSelector.prototype.calcAutoPanningRatio_ = function() {
  var marginRatio = 0.1, axisLength = this.axisRange_.pixel.max - this.axisRange_.pixel.min, dataDirection = this.axisDefinition_.dataDirection, minHandleRatio = (this.state_.range.minPixel - this.axisRange_.pixel.min) / axisLength;
  if(minHandleRatio < marginRatio) {
    return{direction:-1 * dataDirection, ratio:minHandleRatio / marginRatio}
  }
  var maxHandleRatio = (this.axisRange_.pixel.max - this.state_.range.maxPixel) / axisLength;
  return maxHandleRatio < marginRatio ? {direction:1 * dataDirection, ratio:maxHandleRatio / marginRatio} : null
};
google.visualization.RangeSelector.prototype.startStopAutoPanning_ = function() {
  if(this.zoomAroundSelection_) {
    var doAutoPanning = !1;
    if(this.state_.inDrag == google.visualization.RangeSelector.DragElement_.BOTH) {
      var autoPanningRatio = this.calcAutoPanningRatio_();
      autoPanningRatio && (doAutoPanning = !0)
    }
    doAutoPanning && !this.autoPanningTimer_ ? (this.autoPanningTimer_ = new goog.Timer(this.rangeChangeEventFiringRate_), this.eventHandler_.listen(this.autoPanningTimer_, goog.Timer.TICK, goog.bind(this.handleAutoPanning_, this)), this.autoPanningTimer_.start()) : !doAutoPanning && this.autoPanningTimer_ && (goog.dispose(this.autoPanningTimer_), this.autoPanningTimer_ = null)
  }
};
google.visualization.RangeSelector.prototype.handleAutoPanning_ = function() {
  if(this.autoPanningTimer_) {
    var minTimeForFullScroll = 1E3, maxTimeForFullScroll = 6E4, autoPanningRatio = this.calcAutoPanningRatio_();
    goog.asserts.assert(autoPanningRatio);
    var timeForFullScroll = goog.math.lerp(minTimeForFullScroll, maxTimeForFullScroll, autoPanningRatio.ratio), moveRatio = this.rangeChangeEventFiringRate_ / timeForFullScroll, minDomainDataNumber = this.valueNumberConverter_.toNumber(this.minDomainDataValue_), maxDomainDataNumber = this.valueNumberConverter_.toNumber(this.maxDomainDataValue_), domainMoveNumber = (maxDomainDataNumber - minDomainDataNumber) * moveRatio, domainAxis = this.chartOptions_.domainAxis, domainViewWindow = domainAxis.viewWindow, 
    domainViewWindowMinValue = domainViewWindow.min, domainViewWindowMaxValue = domainViewWindow.max, domainViewWindowMinNumber = this.valueNumberConverter_.toNumber(domainViewWindowMinValue), domainViewWindowMaxNumber = this.valueNumberConverter_.toNumber(domainViewWindowMaxValue), newDomainViewWindowMinNumber, newDomainViewWindowMaxNumber;
    if(0 > autoPanningRatio.direction) {
      newDomainViewWindowMinNumber = Math.max(domainViewWindowMinNumber - domainMoveNumber, minDomainDataNumber);
      var actualDomainMoveNumber = domainViewWindowMinNumber - newDomainViewWindowMinNumber;
      newDomainViewWindowMaxNumber = domainViewWindowMaxNumber - actualDomainMoveNumber
    }else {
      goog.asserts.assert(0 < autoPanningRatio.direction), newDomainViewWindowMaxNumber = Math.min(domainViewWindowMaxNumber + domainMoveNumber, maxDomainDataNumber), actualDomainMoveNumber = newDomainViewWindowMaxNumber - domainViewWindowMaxNumber, newDomainViewWindowMinNumber = domainViewWindowMinNumber + actualDomainMoveNumber
    }
    var newDomainViewWindowMinValue = this.valueNumberConverter_.fromNumber(newDomainViewWindowMinNumber), newDomainViewWindowMaxValue = this.valueNumberConverter_.fromNumber(newDomainViewWindowMaxNumber);
    domainViewWindow.min = newDomainViewWindowMinValue;
    domainViewWindow.max = newDomainViewWindowMaxValue;
    google.visualization.events.addListener(this.chart_, gviz.ChartEventType.READY, goog.bind(this.onChartReready_, this, null));
    this.chart_.draw(this.dataTable_, this.chartOptions_);
    this.triggerRangeChange_(!0)
  }
};
google.visualization.RangeSelector.prototype.handleSelectorMouseMove_ = function(chartDrawContext, domEvent) {
  chartDrawContext.alive && goog.isDefAndNotNull(this.state_.inDrag) && (this.containerIsSelectorsAncestor_ || this.handleDrag_(domEvent), domEvent.target.style.cursor = "move")
};
google.visualization.RangeSelector.prototype.handleDocumentMouseMove_ = function(chartDrawContext, domEvent) {
  chartDrawContext.alive && goog.isDefAndNotNull(this.state_.inDrag) && this.handleDrag_(domEvent)
};
google.visualization.RangeSelector.prototype.handleDrag_ = function(domEvent) {
  var state = this.state_;
  state.range && goog.isDefAndNotNull(state.range.minPixel) && goog.isDefAndNotNull(state.range.maxPixel) || (state.range = {minPixel:this.axisRange_.pixel.min, maxPixel:this.axisRange_.pixel.max});
  var currentMousePos = goog.style.getClientPosition(domEvent), dragToPixel = this.isVertical_ ? currentMousePos.y : currentMousePos.x, deltaDragged = this.getValidDrag_(dragToPixel - state.draggedPixel);
  state.draggedPixel += deltaDragged;
  state.inDrag != google.visualization.RangeSelector.DragElement_.MAX && (state.range.minPixel += deltaDragged);
  state.inDrag != google.visualization.RangeSelector.DragElement_.MIN && (state.range.maxPixel += deltaDragged);
  this.startStopAutoPanning_();
  this.refreshScheduler_.updateCountdown(this.rangeChangeEventFiringRate_);
  this.eventFiringScheduler_.updateCountdown(this.rangeChangeEventFiringRate_)
};
google.visualization.RangeSelector.prototype.getValidDrag_ = function(deltaDragged) {
  var handle = this.state_.range, axis = this.axisRange_.pixel, validMinDrag, validMaxDrag, inDrag = this.state_.inDrag;
  switch(inDrag) {
    case google.visualization.RangeSelector.DragElement_.BOTH:
      validMinDrag = axis.min - handle.minPixel;
      validMaxDrag = axis.max - handle.maxPixel;
      break;
    case google.visualization.RangeSelector.DragElement_.MIN:
      validMinDrag = axis.min - handle.minPixel;
      validMaxDrag = handle.maxPixel - this.minRangeSizePixel_ - handle.minPixel;
      break;
    case google.visualization.RangeSelector.DragElement_.MAX:
      validMinDrag = handle.minPixel + this.minRangeSizePixel_ - handle.maxPixel;
      validMaxDrag = axis.max - handle.maxPixel;
      break;
    default:
      goog.asserts.fail('Invalid drag state "' + inDrag + '"')
  }
  return goog.math.clamp(deltaDragged, validMinDrag, validMaxDrag)
};
google.visualization.RangeSelector.prototype.handleMouseDown_ = function(chartDrawContext, eventData, domEvent) {
  if(chartDrawContext.alive && domEvent.isMouseActionButton()) {
    var currentMousePos = goog.style.getClientPosition(domEvent), state = this.state_;
    state.draggedPixel = this.isVertical_ ? currentMousePos.y : currentMousePos.x;
    state.inDrag = eventData.inDrag;
    this.startStopAutoPanning_();
    domEvent.preventDefault()
  }
};
google.visualization.RangeSelector.prototype.handleMouseUp_ = function(chartDrawContext) {
  if(chartDrawContext.alive) {
    var state = this.state_;
    if(!goog.isNull(state.inDrag)) {
      goog.asserts.assert(goog.isDefAndNotNull(state.range));
      if(this.snapToData_) {
        var axisPixels = this.axisPixels_, rangeMinPixel = state.range.minPixel, rangeMaxPixel = state.range.maxPixel, snappedMinPixel = gviz.util.findClosestValue(axisPixels, rangeMinPixel), snappedMaxPixel = gviz.util.findClosestValue(axisPixels, rangeMaxPixel);
        this.setRangeByPixel_(snappedMinPixel, snappedMaxPixel, state.inDrag)
      }else {
        if(this.centerSelectionAroundData_) {
          var range = new goog.math.Range(state.range.minPixel, state.range.maxPixel), rangeSize = range.end - range.start, axisRange = this.axisRange_.pixel, axisRangeSize = axisRange.max - axisRange.min;
          goog.asserts.assert(axisRangeSize > rangeSize || gviz.util.roughlyEquals(axisRangeSize, rangeSize, 1E-5));
          var axisPixels = this.axisPixels_, centeredRange = this.centerRangeAroundPoints_(range, axisPixels);
          centeredRange.start = Math.max(centeredRange.start, axisRange.min);
          centeredRange.end = centeredRange.start + rangeSize;
          centeredRange.end = Math.min(centeredRange.end, axisRange.max);
          centeredRange.start = centeredRange.end - rangeSize;
          this.setRangeByPixel_(centeredRange.start, centeredRange.end, state.inDrag)
        }else {
          if(this.zoomAroundSelection_ && state.inDrag != google.visualization.RangeSelector.DragElement_.BOTH) {
            var domainAxis = this.chartOptions_.domainAxis, domainViewWindow = domainAxis.viewWindow, valueRange = this.getRange();
            this.adjustZoomAroundSelection_(domainViewWindow, valueRange);
            var valueState = {range:valueRange};
            google.visualization.events.addListener(this.chart_, gviz.ChartEventType.READY, goog.bind(this.onChartReready_, this, valueState));
            this.chart_.draw(this.dataTable_, this.chartOptions_)
          }
        }
      }
      this.triggerRangeChange_(!1);
      state.inDrag = null;
      this.startStopAutoPanning_()
    }
  }
};
google.visualization.RangeSelector.prototype.centerRangeAroundPoints_ = function(range, points) {
  var isInsideRange = goog.bind(goog.math.Range.containsPoint, null, range), minPointInsideRange = goog.array.find(points, isInsideRange), maxPointInsideRange = goog.array.findRight(points, isInsideRange);
  if(goog.isNull(minPointInsideRange) || goog.isNull(maxPointInsideRange)) {
    var pointNearestMin = gviz.util.findClosestValue(points, range.start), pointNearestMax = gviz.util.findClosestValue(points, range.end), distFromMin = Math.abs(range.start - pointNearestMin), distFromMax = Math.abs(range.end - pointNearestMax), nearestPoint = distFromMin <= distFromMax ? pointNearestMin : pointNearestMax, maxPointInsideRange = minPointInsideRange = nearestPoint
  }
  var rangeSize = range.end - range.start, centeredRangeStart = goog.math.average(minPointInsideRange, maxPointInsideRange) - rangeSize / 2, centeredRangeEnd = centeredRangeStart + rangeSize, centeredRangeSize = centeredRangeEnd - centeredRangeStart;
  goog.asserts.assert(gviz.util.roughlyEquals(centeredRangeSize, rangeSize, 1E-5));
  return new goog.math.Range(centeredRangeStart, centeredRangeEnd)
};
google.visualization.RangeSelector.prototype.adjustZoomAroundSelection_ = function(domainViewWindow, selectedRangeValues) {
  var domainViewWindowMinValue = domainViewWindow.min, domainViewWindowMaxValue = domainViewWindow.max, domainViewWindowMinNumber = this.valueNumberConverter_.toNumber(domainViewWindowMinValue), domainViewWindowMaxNumber = this.valueNumberConverter_.toNumber(domainViewWindowMaxValue), domainViewWindowWidthNumber = domainViewWindowMaxNumber - domainViewWindowMinNumber, selectedMinValue = selectedRangeValues.start, selectedMaxValue = selectedRangeValues.end;
  if(goog.isDefAndNotNull(selectedMinValue) && goog.isDefAndNotNull(selectedMaxValue)) {
    var selectedMinNumber = this.valueNumberConverter_.toNumber(selectedMinValue), selectedMaxNumber = this.valueNumberConverter_.toNumber(selectedMaxValue), selectedWidthNumber = selectedMaxNumber - selectedMinNumber, minThreshold = 0.1 * domainViewWindowWidthNumber, maxThreshold = 0.6 * domainViewWindowWidthNumber;
    if(!(selectedWidthNumber >= minThreshold && selectedWidthNumber <= maxThreshold)) {
      var newSelectedWidthNumber;
      newSelectedWidthNumber = selectedWidthNumber < minThreshold ? 0.9 * maxThreshold : 1.1 * minThreshold;
      var selectedMiddleNumber = (selectedMinNumber + selectedMaxNumber) / 2, ratio = newSelectedWidthNumber / selectedWidthNumber, newDomainViewWindowWidthNumber = domainViewWindowWidthNumber / ratio, newDomainViewWindowNumber = new goog.math.Range(selectedMiddleNumber - newDomainViewWindowWidthNumber / 2, selectedMiddleNumber + newDomainViewWindowWidthNumber / 2);
      if(selectedWidthNumber < minThreshold) {
        this.positionRangeWithinBoundaries_(newDomainViewWindowNumber, new goog.math.Range(domainViewWindowMinNumber, domainViewWindowMaxNumber))
      }else {
        var minDomainDataNumber = this.valueNumberConverter_.toNumber(this.minDomainDataValue_), maxDomainDataNumber = this.valueNumberConverter_.toNumber(this.maxDomainDataValue_);
        this.positionRangeWithinBoundaries_(newDomainViewWindowNumber, new goog.math.Range(minDomainDataNumber, maxDomainDataNumber))
      }
      var newDomainViewWindowMinValue = this.valueNumberConverter_.fromNumber(newDomainViewWindowNumber.start), newDomainViewWindowMaxValue = this.valueNumberConverter_.fromNumber(newDomainViewWindowNumber.end);
      domainViewWindow.min = newDomainViewWindowMinValue;
      domainViewWindow.max = newDomainViewWindowMaxValue
    }
  }
};
google.visualization.RangeSelector.prototype.positionRangeWithinBoundaries_ = function(range, boundaries) {
  range.start < boundaries.start && (range.end += boundaries.start - range.start, range.start = boundaries.start);
  range.end > boundaries.end && (range.start -= range.end - boundaries.end, range.end = boundaries.end);
  range.start < boundaries.start && (range.start = boundaries.start)
};
google.visualization.RangeSelector.prototype.adjustToHalfPixel_ = function(pixel) {
  return Math.floor(pixel) + 0.5
};
google.visualization.RangeSelector.prototype.handleMouseHover_ = function(chartDrawContext, eventData, domEvent) {
  chartDrawContext.alive && !this.state_.inDrag && (domEvent.target.style.cursor = eventData.isOver ? "screen" == eventData.type ? "move" : this.isVertical_ ? "row-resize" : "col-resize" : "default")
};
google.visualization.RangeSelector.prototype.triggerRangeChange_ = function(inProgress) {
  var inDrag = this.state_.inDrag, range = this.getRange();
  if(goog.isDefAndNotNull(inDrag) && goog.isDefAndNotNull(range)) {
    var dragElement = google.visualization.RangeSelector.DragElement_, direction = this.axisDefinition_.dataDirection, startElement = 1 == direction ? dragElement.MIN : dragElement.MAX, endElement = 1 == direction ? dragElement.MAX : dragElement.MIN, startChanged = inDrag == startElement || inDrag == dragElement.BOTH, endChanged = inDrag == endElement || inDrag == dragElement.BOTH, eventDetails = {start:range.start, end:range.end, startChanged:startChanged, endChanged:endChanged, inProgress:inProgress};
    google.visualization.events.trigger(this, gviz.ChartEventType.RANGE_CHANGE, eventDetails)
  }
};
google.visualization.RangeSelector.prototype.stopScheduler_ = function(scheduler) {
  goog.dispose(scheduler)
};
google.visualization.RangeSelector.prototype.clearChart = function() {
  this.chart_ && (google.visualization.events.removeAllListeners(this.chart_), this.stopScheduler_(this.refreshScheduler_), this.refreshScheduler_ = null, this.stopScheduler_(this.eventFiringScheduler_), this.eventFiringScheduler_ = null, this.chartDrawContext_.alive = !1, goog.dispose(this.renderer_), this.renderer_ = null, goog.dispose(this.eventHandler_), this.eventHandler_ = null, this.chart_.clearChart(), this.chart_ = null, goog.events.removeAll(this))
};
// Input 356
gviz.fw.interactivity.TooltipHandler = function(featureTypes) {
  gviz.fw.interactivity.BaseHandler.call(this, featureTypes, [gviz.fw.interactionEvents.OperationType.HOVER_IN, gviz.fw.interactionEvents.OperationType.HOVER_OUT])
};
goog.inherits(gviz.fw.interactivity.TooltipHandler, gviz.fw.interactivity.BaseHandler);
gviz.fw.interactivity.TooltipHandler.prototype.changeState = function(featureId, operationType, state) {
  if(operationType == gviz.fw.interactionEvents.OperationType.HOVER_IN) {
    if(!featureId.equals(state.tooltipFeature)) {
      return state.tooltipFeature = featureId, !0
    }
  }else {
    if(null != state.tooltipFeature) {
      return state.tooltipFeature = null, !0
    }
  }
  return!1
};
gviz.fw.interactivity.TooltipHandler.prototype.calcEffects = function(state) {
  return goog.isDefAndNotNull(state.tooltipFeature) ? [new gviz.fw.TargetedEffect(gviz.fw.EffectType.TOOLTIP, state.focusedFeature)] : []
};
// Input 357
goog.events.InputHandler = function(element) {
  goog.events.EventTarget.call(this);
  this.element_ = element;
  var emulateInputEvents = goog.userAgent.IE || goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("531") && "TEXTAREA" == element.tagName;
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.eventHandler_.listen(this.element_, emulateInputEvents ? ["keydown", "paste", "cut", "drop", "input"] : "input", this)
};
goog.inherits(goog.events.InputHandler, goog.events.EventTarget);
goog.events.InputHandler.EventType = {INPUT:"input"};
goog.events.InputHandler.prototype.timer_ = null;
goog.events.InputHandler.prototype.handleEvent = function(e) {
  if("input" == e.type) {
    this.cancelTimerIfSet_(), goog.userAgent.OPERA && this.element_ != goog.dom.getOwnerDocument(this.element_).activeElement || this.dispatchEvent(this.createInputEvent_(e))
  }else {
    if("keydown" != e.type || goog.events.KeyCodes.isTextModifyingKeyEvent(e)) {
      var valueBeforeKey = "keydown" == e.type ? this.element_.value : null;
      goog.userAgent.IE && e.keyCode == goog.events.KeyCodes.WIN_IME && (valueBeforeKey = null);
      var inputEvent = this.createInputEvent_(e);
      this.cancelTimerIfSet_();
      this.timer_ = goog.Timer.callOnce(function() {
        this.timer_ = null;
        this.element_.value != valueBeforeKey && this.dispatchEvent(inputEvent)
      }, 0, this)
    }
  }
};
goog.events.InputHandler.prototype.cancelTimerIfSet_ = function() {
  null != this.timer_ && (goog.Timer.clear(this.timer_), this.timer_ = null)
};
goog.events.InputHandler.prototype.createInputEvent_ = function(be) {
  var e = new goog.events.BrowserEvent(be.getBrowserEvent());
  e.type = goog.events.InputHandler.EventType.INPUT;
  return e
};
goog.events.InputHandler.prototype.disposeInternal = function() {
  goog.events.InputHandler.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.cancelTimerIfSet_();
  delete this.element_
};
// Input 358
goog.ui.CustomButton = function(content, opt_renderer, opt_domHelper) {
  goog.ui.Button.call(this, content, opt_renderer || goog.ui.CustomButtonRenderer.getInstance(), opt_domHelper)
};
goog.inherits(goog.ui.CustomButton, goog.ui.Button);
goog.ui.registry.setDecoratorByClassName(goog.ui.CustomButtonRenderer.CSS_CLASS, function() {
  return new goog.ui.CustomButton(null)
});
// Input 359
goog.dom.classlist = {};
goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST = !1;
goog.dom.classlist.NATIVE_DOM_TOKEN_LIST_ = goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || !!goog.global.DOMTokenList;
goog.dom.classlist.get = goog.dom.classlist.NATIVE_DOM_TOKEN_LIST_ ? function(element) {
  return element.classList
} : function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classlist.set = function(element, className) {
  element.className = className
};
goog.dom.classlist.contains = goog.dom.classlist.NATIVE_DOM_TOKEN_LIST_ ? function(element, className) {
  goog.asserts.assert(!!element.classList);
  return element.classList.contains(className)
} : function(element, className) {
  return goog.array.contains(goog.dom.classlist.get(element), className)
};
goog.dom.classlist.add = goog.dom.classlist.NATIVE_DOM_TOKEN_LIST_ ? function(element, className) {
  element.classList.add(className)
} : function(element, className) {
  goog.dom.classlist.contains(element, className) || (element.className += 0 < element.className.length ? " " + className : className)
};
goog.dom.classlist.addAll = goog.dom.classlist.NATIVE_DOM_TOKEN_LIST_ ? function(element, classesToAdd) {
  goog.array.forEach(classesToAdd, function(className) {
    goog.dom.classlist.add(element, className)
  })
} : function(element, classesToAdd) {
  var classMap = {};
  goog.array.forEach(goog.dom.classlist.get(element), function(className) {
    classMap[className] = !0
  });
  goog.array.forEach(classesToAdd, function(className) {
    classMap[className] = !0
  });
  element.className = "";
  for(var className$$0 in classMap) {
    element.className += 0 < element.className.length ? " " + className$$0 : className$$0
  }
};
goog.dom.classlist.remove = goog.dom.classlist.NATIVE_DOM_TOKEN_LIST_ ? function(element, className) {
  element.classList.remove(className)
} : function(element, className) {
  goog.dom.classlist.contains(element, className) && (element.className = goog.array.filter(goog.dom.classlist.get(element), function(c) {
    return c != className
  }).join(" "))
};
goog.dom.classlist.removeAll = goog.dom.classlist.NATIVE_DOM_TOKEN_LIST_ ? function(element, classesToRemove) {
  goog.array.forEach(classesToRemove, function(className) {
    goog.dom.classlist.remove(element, className)
  })
} : function(element, classesToRemove) {
  element.className = goog.array.filter(goog.dom.classlist.get(element), function(className) {
    return!goog.array.contains(classesToRemove, className)
  }).join(" ")
};
goog.dom.classlist.enable = function(element, className, enabled) {
  enabled ? goog.dom.classlist.add(element, className) : goog.dom.classlist.remove(element, className)
};
goog.dom.classlist.swap = function(element, fromClass, toClass) {
  return goog.dom.classlist.contains(element, fromClass) ? (goog.dom.classlist.remove(element, fromClass), goog.dom.classlist.add(element, toClass), !0) : !1
};
goog.dom.classlist.toggle = function(element, className) {
  var add = !goog.dom.classlist.contains(element, className);
  goog.dom.classlist.enable(element, className, add);
  return add
};
goog.dom.classlist.addRemove = function(element, classToRemove, classToAdd) {
  goog.dom.classlist.remove(element, classToRemove);
  goog.dom.classlist.add(element, classToAdd)
};
// Input 360
goog.ui.LabelInput = function(opt_label, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.label_ = opt_label || ""
};
goog.inherits(goog.ui.LabelInput, goog.ui.Component);
goog.ui.LabelInput.prototype.ffKeyRestoreValue_ = null;
goog.ui.LabelInput.prototype.labelRestoreDelayMs = 10;
goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_ = "placeholder" in document.createElement("input");
goog.ui.LabelInput.prototype.hasFocus_ = !1;
goog.ui.LabelInput.prototype.createDom = function() {
  this.setElementInternal(this.getDomHelper().createDom("input", {type:"text"}))
};
goog.ui.LabelInput.prototype.decorateInternal = function(element) {
  goog.ui.LabelInput.superClass_.decorateInternal.call(this, element);
  this.label_ || (this.label_ = element.getAttribute("label") || "");
  if(goog.dom.getActiveElement(goog.dom.getOwnerDocument(element)) == element) {
    this.hasFocus_ = !0;
    var el = this.getElement();
    goog.asserts.assert(el);
    goog.dom.classlist.remove(el, this.LABEL_CLASS_NAME)
  }
  if(goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.getElement().placeholder = this.label_
  }else {
    var labelInputElement = this.getElement();
    goog.asserts.assert(labelInputElement, "The label input element cannot be null.");
    goog.a11y.aria.setState(labelInputElement, goog.a11y.aria.State.LABEL, this.label_)
  }
};
goog.ui.LabelInput.prototype.enterDocument = function() {
  goog.ui.LabelInput.superClass_.enterDocument.call(this);
  this.attachEvents_();
  this.check_();
  this.getElement().labelInput_ = this
};
goog.ui.LabelInput.prototype.exitDocument = function() {
  goog.ui.LabelInput.superClass_.exitDocument.call(this);
  this.detachEvents_();
  this.getElement().labelInput_ = null
};
goog.ui.LabelInput.prototype.attachEvents_ = function() {
  var eh = new goog.events.EventHandler(this);
  eh.listen(this.getElement(), goog.events.EventType.FOCUS, this.handleFocus_);
  eh.listen(this.getElement(), goog.events.EventType.BLUR, this.handleBlur_);
  if(goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.eventHandler_ = eh
  }else {
    goog.userAgent.GECKO && eh.listen(this.getElement(), [goog.events.EventType.KEYPRESS, goog.events.EventType.KEYDOWN, goog.events.EventType.KEYUP], this.handleEscapeKeys_);
    var d = goog.dom.getOwnerDocument(this.getElement()), w = goog.dom.getWindow(d);
    eh.listen(w, goog.events.EventType.LOAD, this.handleWindowLoad_);
    this.eventHandler_ = eh;
    this.attachEventsToForm_()
  }
};
goog.ui.LabelInput.prototype.attachEventsToForm_ = function() {
  !this.formAttached_ && this.eventHandler_ && this.getElement().form && (this.eventHandler_.listen(this.getElement().form, goog.events.EventType.SUBMIT, this.handleFormSubmit_), this.formAttached_ = !0)
};
goog.ui.LabelInput.prototype.detachEvents_ = function() {
  this.eventHandler_ && (this.eventHandler_.dispose(), this.eventHandler_ = null)
};
goog.ui.LabelInput.prototype.disposeInternal = function() {
  goog.ui.LabelInput.superClass_.disposeInternal.call(this);
  this.detachEvents_()
};
goog.ui.LabelInput.prototype.LABEL_CLASS_NAME = "label-input-label";
goog.ui.LabelInput.prototype.handleFocus_ = function() {
  this.hasFocus_ = !0;
  var el = this.getElement();
  goog.asserts.assert(el);
  goog.dom.classlist.remove(el, this.LABEL_CLASS_NAME);
  if(!goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_ && !this.hasChanged() && !this.inFocusAndSelect_) {
    var me = this, clearValue = function() {
      me.getElement() && (me.getElement().value = "")
    };
    goog.userAgent.IE ? goog.Timer.callOnce(clearValue, 10) : clearValue()
  }
};
goog.ui.LabelInput.prototype.handleBlur_ = function() {
  goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_ || (this.eventHandler_.unlisten(this.getElement(), goog.events.EventType.CLICK, this.handleFocus_), this.ffKeyRestoreValue_ = null);
  this.hasFocus_ = !1;
  this.check_()
};
goog.ui.LabelInput.prototype.handleEscapeKeys_ = function(e) {
  27 == e.keyCode && (e.type == goog.events.EventType.KEYDOWN ? this.ffKeyRestoreValue_ = this.getElement().value : e.type == goog.events.EventType.KEYPRESS ? this.getElement().value = this.ffKeyRestoreValue_ : e.type == goog.events.EventType.KEYUP && (this.ffKeyRestoreValue_ = null), e.preventDefault())
};
goog.ui.LabelInput.prototype.handleFormSubmit_ = function() {
  this.hasChanged() || (this.getElement().value = "", goog.Timer.callOnce(this.handleAfterSubmit_, 10, this))
};
goog.ui.LabelInput.prototype.handleAfterSubmit_ = function() {
  this.hasChanged() || (this.getElement().value = this.label_)
};
goog.ui.LabelInput.prototype.handleWindowLoad_ = function() {
  this.check_()
};
goog.ui.LabelInput.prototype.hasFocus = function() {
  return this.hasFocus_
};
goog.ui.LabelInput.prototype.hasChanged = function() {
  return!!this.getElement() && "" != this.getElement().value && this.getElement().value != this.label_
};
goog.ui.LabelInput.prototype.clear = function() {
  this.getElement().value = "";
  null != this.ffKeyRestoreValue_ && (this.ffKeyRestoreValue_ = "")
};
goog.ui.LabelInput.prototype.reset = function() {
  this.hasChanged() && (this.clear(), this.check_())
};
goog.ui.LabelInput.prototype.setValue = function(s) {
  null != this.ffKeyRestoreValue_ && (this.ffKeyRestoreValue_ = s);
  this.getElement().value = s;
  this.check_()
};
goog.ui.LabelInput.prototype.getValue = function() {
  return null != this.ffKeyRestoreValue_ ? this.ffKeyRestoreValue_ : this.hasChanged() ? this.getElement().value : ""
};
goog.ui.LabelInput.prototype.setLabel = function(label) {
  if(goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.label_ = label, this.getElement() && (this.getElement().placeholder = this.label_)
  }else {
    this.getElement() && !this.hasChanged() && (this.getElement().value = "");
    this.label_ = label;
    this.restoreLabel_();
    var labelInputElement = this.getElement();
    labelInputElement && goog.a11y.aria.setState(labelInputElement, goog.a11y.aria.State.LABEL, this.label_)
  }
};
goog.ui.LabelInput.prototype.getLabel = function() {
  return this.label_
};
goog.ui.LabelInput.prototype.check_ = function() {
  var labelInputElement = this.getElement();
  goog.asserts.assert(labelInputElement, "The label input element cannot be null.");
  goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_ ? this.getElement().placeholder != this.label_ && (this.getElement().placeholder = this.label_) : (this.attachEventsToForm_(), goog.a11y.aria.setState(labelInputElement, goog.a11y.aria.State.LABEL, this.label_));
  if(this.hasChanged()) {
    el = this.getElement(), goog.asserts.assert(el), goog.dom.classlist.remove(el, this.LABEL_CLASS_NAME)
  }else {
    if(!this.inFocusAndSelect_ && !this.hasFocus_) {
      var el = this.getElement();
      goog.asserts.assert(el);
      goog.dom.classlist.add(el, this.LABEL_CLASS_NAME)
    }
    goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_ || goog.Timer.callOnce(this.restoreLabel_, this.labelRestoreDelayMs, this)
  }
};
goog.ui.LabelInput.prototype.setEnabled = function(enabled) {
  this.getElement().disabled = !enabled;
  var el = this.getElement();
  goog.asserts.assert(el);
  goog.dom.classlist.enable(el, this.LABEL_CLASS_NAME + "-disabled", !enabled)
};
goog.ui.LabelInput.prototype.isEnabled = function() {
  return!this.getElement().disabled
};
goog.ui.LabelInput.prototype.restoreLabel_ = function() {
  !this.getElement() || this.hasChanged() || this.hasFocus_ || (this.getElement().value = this.label_)
};
// Input 361
goog.net.Jsonp = function(uri, opt_callbackParamName) {
  this.uri_ = new goog.Uri(uri);
  this.callbackParamName_ = opt_callbackParamName ? opt_callbackParamName : "callback";
  this.timeout_ = 5E3
};
goog.net.Jsonp.CALLBACKS = "_callbacks_";
goog.net.Jsonp.scriptCounter_ = 0;
goog.net.Jsonp.prototype.setRequestTimeout = function(timeout) {
  this.timeout_ = timeout
};
goog.net.Jsonp.prototype.send = function(opt_payload, opt_replyCallback, opt_errorCallback, opt_callbackParamValue) {
  var payload = opt_payload || null, id = opt_callbackParamValue || "_" + (goog.net.Jsonp.scriptCounter_++).toString(36) + goog.now().toString(36);
  goog.global[goog.net.Jsonp.CALLBACKS] || (goog.global[goog.net.Jsonp.CALLBACKS] = {});
  var uri = this.uri_.clone();
  payload && goog.net.Jsonp.addPayloadToUri_(payload, uri);
  if(opt_replyCallback) {
    var reply = goog.net.Jsonp.newReplyHandler_(id, opt_replyCallback);
    goog.global[goog.net.Jsonp.CALLBACKS][id] = reply;
    uri.setParameterValues(this.callbackParamName_, goog.net.Jsonp.CALLBACKS + "." + id)
  }
  var deferred = goog.net.jsloader.load(uri.toString(), {timeout:this.timeout_, cleanupWhenDone:!0}), error = goog.net.Jsonp.newErrorHandler_(id, payload, opt_errorCallback);
  deferred.addErrback(error);
  return{id_:id, deferred_:deferred}
};
goog.net.Jsonp.prototype.cancel = function(request) {
  request && (request.deferred_ && request.deferred_.cancel(), request.id_ && goog.net.Jsonp.cleanup_(request.id_, !1))
};
goog.net.Jsonp.newErrorHandler_ = function(id, payload, opt_errorCallback) {
  return function() {
    goog.net.Jsonp.cleanup_(id, !1);
    opt_errorCallback && opt_errorCallback(payload)
  }
};
goog.net.Jsonp.newReplyHandler_ = function(id, replyCallback) {
  return function(var_args) {
    goog.net.Jsonp.cleanup_(id, !0);
    replyCallback.apply(void 0, arguments)
  }
};
goog.net.Jsonp.cleanup_ = function(id, deleteReplyHandler) {
  goog.global[goog.net.Jsonp.CALLBACKS][id] && (deleteReplyHandler ? delete goog.global[goog.net.Jsonp.CALLBACKS][id] : goog.global[goog.net.Jsonp.CALLBACKS][id] = goog.nullFunction)
};
goog.net.Jsonp.addPayloadToUri_ = function(payload, uri) {
  for(var name in payload) {
    payload.hasOwnProperty && !payload.hasOwnProperty(name) || uri.setParameterValues(name, payload[name])
  }
  return uri
};


// Input 0
// Input 1
gviz.table = {};
gviz.table.TableRow = function(dataRowIndex, UIRowIndex, pageRowIndex, displayNumber) {
  this.dataRowIndex_ = dataRowIndex;
  this.UIRowIndex_ = UIRowIndex;
  this.pageRowIndex_ = pageRowIndex;
  this.displayNumber_ = displayNumber
};
gviz.table.TableRow.prototype.isSelected_ = !1;
gviz.table.TableRow.prototype.setSelected = function(selected) {
  this.isSelected_ = selected
};
gviz.table.TableRow.prototype.setEven = function() {
};
gviz.table.TableRow.prototype.isSelected = function() {
  return this.isSelected_
};
gviz.table.TableRow.prototype.getDataRowIndex = function() {
  return this.dataRowIndex_
};
gviz.table.TableRow.prototype.getUIRowIndex = function() {
  return this.UIRowIndex_
};
gviz.table.TableRow.prototype.getPageRowIndex = function() {
  return this.pageRowIndex_
};
gviz.table.TableRow.prototype.getDisplayNumber = function() {
  return this.displayNumber_
};
// Input 2
gviz.table.PageManager = function(dataView, options) {
  this.dataView_ = dataView;
  var dataViewNumberOfRows = dataView.getNumberOfRows(), pageSize = dataViewNumberOfRows;
  options.page && "disable" != options.page && (pageSize = options.pageSize || 10);
  this.pageSize_ = pageSize;
  this.numberOfPages_ = 0 < dataViewNumberOfRows ? Math.ceil(dataViewNumberOfRows / this.pageSize_) : 1;
  this.firstRowDisplayNumber_ = goog.isDefAndNotNull(options.firstRowNumber) ? options.firstRowNumber : 1;
  this.enableLocalSort_ = !options.sort || "enable" == options.sort
};
gviz.table.PageManager.prototype.dataView_ = null;
gviz.table.PageManager.prototype.currentPageIndex_ = 0;
gviz.table.PageManager.prototype.sortedIndexes_ = null;
gviz.table.PageManager.prototype.sortColumnIndex_ = -1;
gviz.table.PageManager.prototype.isSortDescending_ = !1;
gviz.table.PageManager.prototype.pageRowIndexByDataRowIndex_ = null;
gviz.table.PageManager.prototype.setPageIndex = function(pageIndex) {
  return 0 <= pageIndex && pageIndex < this.numberOfPages_ ? (this.currentPageIndex_ = pageIndex, !0) : !1
};
gviz.table.PageManager.prototype.calculateTableRowsInCurrentPage = function() {
  for(var range = this.calculatePageRangeInUIRowIndexes_(), page = [], pageIndexToDataIndex = {}, ind = range.start;ind <= range.end;ind++) {
    var tableRow = this.getTableRowByUIRowIndex_(ind);
    pageIndexToDataIndex[tableRow.getDataRowIndex()] = tableRow.getPageRowIndex();
    page.push(tableRow)
  }
  this.pageRowIndexByDataRowIndex_ = pageIndexToDataIndex;
  return page
};
gviz.table.PageManager.prototype.getCurrentPageIndex = function() {
  return this.currentPageIndex_
};
gviz.table.PageManager.prototype.getTableRowsInRangeByUIRows = function(uiStartRowIndex, uiEndRowIndex) {
  for(var rows = [], ind = uiStartRowIndex;ind <= uiEndRowIndex;ind++) {
    var tableRow = this.getTableRowByUIRowIndex_(ind);
    rows.push(tableRow)
  }
  return rows
};
gviz.table.PageManager.prototype.setSort = function(sortColumnIndex, isDescending) {
  this.sortColumnIndex_ = sortColumnIndex;
  this.isSortDescending_ = isDescending;
  this.calculateSortedIndexes_()
};
gviz.table.PageManager.prototype.getSortInfo = function() {
  var info = {column:this.getSortColumnIndex(), ascending:this.getSortOrder(), sortedIndexes:this.getSortedIndexes()};
  return info
};
gviz.table.PageManager.prototype.getSortedIndexes = function() {
  return this.sortedIndexes_
};
gviz.table.PageManager.prototype.getSortColumnIndex = function() {
  return this.sortColumnIndex_
};
gviz.table.PageManager.prototype.getSortOrder = function() {
  return!this.isSortDescending_
};
gviz.table.PageManager.prototype.getFirstTableRowInPage = function() {
  return this.getTableRowByUIRowIndex_(this.calculatePageRangeInUIRowIndexes_().start)
};
gviz.table.PageManager.prototype.getPageRowIndexByDataRowIndex = function(dataRowIndex) {
  this.pageRowIndexByDataRowIndex_ || this.calculateTableRowsInCurrentPage();
  var pageIndex = this.pageRowIndexByDataRowIndex_[dataRowIndex];
  return null != pageIndex ? pageIndex : -1
};
gviz.table.PageManager.prototype.calculatePageRangeInUIRowIndexes_ = function() {
  var first = this.pageSize_ * this.currentPageIndex_, last = first + this.pageSize_ - 1, last = Math.min(this.dataView_.getNumberOfRows() - 1, last);
  return new goog.math.Range(first, last)
};
gviz.table.PageManager.prototype.getTableRowByUIRowIndex_ = function(uiRowIndex) {
  var sortedIndexes = this.sortedIndexes_, firstRowDisplayNumber = this.firstRowDisplayNumber_, firstUIRowIndex = this.calculatePageRangeInUIRowIndexes_().start, rowDisplayNumber = uiRowIndex + firstRowDisplayNumber, pageRowIndex = uiRowIndex - firstUIRowIndex, dataRowIndex = sortedIndexes ? sortedIndexes[uiRowIndex] : uiRowIndex;
  return new gviz.table.TableRow(dataRowIndex, uiRowIndex, pageRowIndex, rowDisplayNumber)
};
gviz.table.PageManager.prototype.calculateSortedIndexes_ = function() {
  if(this.enableLocalSort_ && -1 != this.sortColumnIndex_) {
    var sortedIndexes = this.dataView_.getSortedRows([{column:this.sortColumnIndex_, desc:this.isSortDescending_}]), viewRows = this.dataView_.getViewRows(), sortedViewRows = goog.array.map(sortedIndexes, function(i) {
      return viewRows[i]
    }, this);
    this.dataView_.setRows(sortedViewRows);
    this.sortedIndexes_ = this.sortedIndexes_ ? goog.array.map(sortedIndexes, function(i) {
      return this.sortedIndexes_[i]
    }, this) : sortedIndexes
  }else {
    this.sortedIndexes_ = null
  }
};
gviz.table.PageManager.prototype.getNumberOfPages = function() {
  return this.numberOfPages_
};
// Input 3
google.visualization.Table = function(container) {
  google.visualization.AbstractVisualization.call(this, container);
  this.dom_ = goog.dom.getDomHelper();
  this.selectedRows_ = new gviz.util.Selection
};
goog.inherits(google.visualization.Table, google.visualization.AbstractVisualization);
google.visualization.Table.WAIT_FOR_CSS_MAX_ITERATIONS_ = 30;
google.visualization.Table.CSS_WAIT_INTERVAL_ = 100;
google.visualization.Table.CSSPREFIX_ = "google-visualization-table-";
google.visualization.Table.CSS_DEFAULT_ = {TABLE:google.visualization.Table.CSSPREFIX_ + "table", TR_HEAD:google.visualization.Table.CSSPREFIX_ + "tr-head", TR_EVEN:google.visualization.Table.CSSPREFIX_ + "tr-even", TR_ODD:google.visualization.Table.CSSPREFIX_ + "tr-odd", TR_SELECTED:google.visualization.Table.CSSPREFIX_ + "tr-sel", TR_MOUSEOVER:google.visualization.Table.CSSPREFIX_ + "tr-over", TH:google.visualization.Table.CSSPREFIX_ + "th gradient", TH_WEBKIT:google.visualization.Table.CSSPREFIX_ + 
"th-webkit gradient", TD:google.visualization.Table.CSSPREFIX_ + "td", TD_NUMBER:google.visualization.Table.CSSPREFIX_ + "td-number", TD_CENTER:google.visualization.Table.CSSPREFIX_ + "td-center", TD_BOOLEAN:google.visualization.Table.CSSPREFIX_ + "td-bool", TD_FREEZE_RIGHTMOST:google.visualization.Table.CSSPREFIX_ + "td-freeze-rightmost", SEQ:google.visualization.Table.CSSPREFIX_ + "seq", SORT:google.visualization.Table.CSSPREFIX_ + "sorthdr", SORTIND:google.visualization.Table.CSSPREFIX_ + "sortind", 
PAGE_DIV:google.visualization.Table.CSSPREFIX_ + "div-page", PAGE_NUMBERS:google.visualization.Table.CSSPREFIX_ + "page-numbers", PAGE_NUMBER:"page-number gradient"};
google.visualization.Table.CLASSNAME_TO_OPTION_NAME_ = {TR_HEAD:"headerRow", TR_EVEN:"tableRow", TR_ODD:"oddTableRow", TR_SELECTED:"selectedTableRow", TR_MOUSEOVER:"hoverTableRow", TH:"headerCell", TD:"tableCell", SEQ:"rowNumberCell"};
google.visualization.Table.PANE_TYPE_ = {HEADER:"h", FROZEN_TABLE:"ft", FROZEN_HEADER:"fh"};
google.visualization.Table.NON_STRICT_ = "-nonstrict";
google.visualization.Table.TRANSPARENT_STYLE_ = {"background-image":"none", backgroundColor:"transparent", borderColor:"transparent"};
google.visualization.Table.TRANSPARENT_STYLE_IE6_ = {"background-image":"none", backgroundColor:"transparent"};
google.visualization.Table.HIDDEN_STYLE_ = {visibility:"hidden"};
google.visualization.Table.RIGHT_BORDER_STYLE_ = {borderRight:"2px solid gray"};
google.visualization.Table.DEFAULT_SCROLLBAR_WIDTH_ = 16;
google.visualization.Table.LEFT_ARROW_IMG_ = gviz.util.VisCommon.getModulePath() + "/table/arrow_left.gif";
google.visualization.Table.RIGHT_ARROW_IMG_ = gviz.util.VisCommon.getModulePath() + "/table/arrow_right.gif";
google.visualization.Table.prototype.firstTimeRendered_ = !0;
google.visualization.Table.prototype.checkCssLoadedDiv_ = null;
google.visualization.Table.prototype.cssClassNames_ = null;
google.visualization.Table.prototype.lastSelectedTableRow_ = null;
google.visualization.Table.prototype.dataTable_ = null;
google.visualization.Table.prototype.dataView_ = null;
google.visualization.Table.prototype.options_ = null;
google.visualization.Table.prototype.pageManager_ = null;
google.visualization.Table.prototype.page_ = null;
google.visualization.Table.prototype.htmlTable_ = null;
google.visualization.Table.prototype.htmlFrozenColumnsTable_ = null;
google.visualization.Table.prototype.numFrozenColumns_ = -1;
google.visualization.Table.prototype.hasRows_ = !1;
google.visualization.Table.prototype.scrollpane_ = null;
google.visualization.Table.prototype.prevButton_ = null;
google.visualization.Table.prototype.nextButton_ = null;
google.visualization.Table.prototype.scrollLeftStartPosition_ = 0;
google.visualization.Table.prototype.eventHandler_ = null;
google.visualization.Table.prototype.drawInternal = function(asyncWrapper, dataTable, opt_options) {
  var container = this.container, options = opt_options || {};
  if(!container) {
    throw Error("Container is not defined");
  }
  if(!dataTable) {
    throw Error("Data table is not defined");
  }
  this.dataTable_ = dataTable;
  this.dataView_ = new google.visualization.DataView(this.dataTable_);
  this.options_ = options;
  this.hasRows_ = 0 < this.dataView_.getNumberOfRows();
  this.pageManager_ = new gviz.table.PageManager(this.dataView_, this.options_);
  if(this.hasRows_) {
    options.startPage && this.pageManager_.setPageIndex(options.startPage);
    if("disable" != options.sort && null != options.sortColumn) {
      var sortAscending = options.sortAscending, sortAscending = goog.isDefAndNotNull(sortAscending) ? sortAscending : !0;
      this.pageManager_.setSort(options.sortColumn, !sortAscending)
    }
    this.lastSelectedTableRow_ = this.pageManager_.getFirstTableRowInPage()
  }
  this.scrollLeftStartPosition_ = options.scrollLeftStartPosition || 0;
  var numFrozenColumns = google.visualization.Table.getRealValueWithDefault(options.frozenColumns, -1);
  0 != numFrozenColumns || options.showRowNumber || (numFrozenColumns = -1);
  numFrozenColumns >= this.dataView_.getNumberOfColumns() && (numFrozenColumns = -1);
  -1 > numFrozenColumns && (numFrozenColumns = -1);
  this.numFrozenColumns_ = numFrozenColumns;
  this.cssClassNames_ = goog.object.clone(google.visualization.Table.CSS_DEFAULT_);
  -1 == numFrozenColumns && this.setCustomClassNames_();
  var isCssLoaded = !0;
  this.firstTimeRendered_ && (isCssLoaded = this.checkCssLoaded_(), this.firstTimeRendered_ = !1);
  this.redraw_();
  isCssLoaded ? (goog.dom.removeNode(this.checkCssLoadedDiv_), this.triggerReadyEvent_()) : this.waitForCss_(0)
};
google.visualization.Table.prototype.triggerReadyEvent_ = function() {
  google.visualization.events.trigger(this, "ready", null)
};
google.visualization.Table.prototype.getSortInfo = function() {
  return this.pageManager_ ? this.pageManager_.getSortInfo() : null
};
google.visualization.Table.prototype.redraw_ = function() {
  var dataView = this.dataView_, options = this.options_, container = this.container, panes = [], dom = this.dom_, pane, cssClassNames = this.cssClassNames_;
  this.page_ = null;
  this.clear_();
  this.eventHandler_ = new goog.events.EventHandler;
  var containerStyleWidth = container.style.width, containerStyleHeight = container.style.height, width = containerStyleWidth || options.width || 0, height = containerStyleHeight || options.height || 0, width = google.visualization.Table.addUnitsIfRequired_(width), height = google.visualization.Table.addUnitsIfRequired_(height), colTypes = google.visualization.Table.getColumnTypes_(dataView), tdClassNames = google.visualization.Table.getTDCssClassNames_(dataView, cssClassNames), headerRow = this.createHeaderRow_(!0), 
  table = this.htmlTable_ = this.createTable_(headerRow, options, tdClassNames, colTypes), scrollpane = this.scrollpane_ = dom.createDom("div", {style:"position: relative;"}, table);
  width && goog.style.setStyle(scrollpane, {overflow:"auto", width:width});
  var contentElement = dom.createDom("div", {style:"position: relative;"}, scrollpane);
  height && (goog.style.setStyle(scrollpane, {overflow:"auto", height:height}), pane = this.createPane_({matchLeft:!0}), panes.push({pane:pane, type:google.visualization.Table.PANE_TYPE_.HEADER}));
  var numFrozenColumns = this.numFrozenColumns_, createFrozenColumnsTable = width && 0 < dataView.getNumberOfColumns() && 0 < dataView.getNumberOfRows() && -1 < numFrozenColumns;
  createFrozenColumnsTable && (pane = this.createPane_({matchTop:!0, frozenColumns:numFrozenColumns}), this.htmlFrozenColumnsTable_ = pane.firstChild, panes.push({pane:pane, type:google.visualization.Table.PANE_TYPE_.FROZEN_TABLE}), height && (pane = this.createPane_({frozenColumns:numFrozenColumns, headerFreezeOnly:!0}), panes.push({pane:pane, type:google.visualization.Table.PANE_TYPE_.FROZEN_HEADER})));
  contentElement.style.visibility = "hidden";
  dom.appendChild(container, contentElement);
  var hasPages = this.hasRows_ && 1 < this.pageManager_.getNumberOfPages(), pagingButtonsConfiguration = options.pagingButtonsConfiguration, pagingButtonsRequired = goog.isDefAndNotNull(pagingButtonsConfiguration) && "auto" != pagingButtonsConfiguration || hasPages;
  if(pagingButtonsRequired && options.page && "disable" != options.page) {
    var offsetHeight = contentElement.offsetHeight;
    this.createPagingControls_(contentElement);
    height && (height = offsetHeight - (contentElement.offsetHeight - offsetHeight), goog.style.setStyle(scrollpane, "height", height + "px"))
  }
  !options.rtlTable || pagingButtonsRequired || width || height || (this.htmlTable_.style.direction = "rtl");
  var frozenWidth = 0;
  if(createFrozenColumnsTable) {
    var frozenCells = numFrozenColumns + (options.showRowNumber ? 1 : 0), nodes = headerRow.childNodes, frozenWidth = 2 + goog.style.getPosition(nodes[frozenCells]).x
  }
  var isVerticalScroll = scrollpane.clientHeight < scrollpane.scrollHeight, isHorizontalScroll = scrollpane.clientWidth < scrollpane.scrollWidth;
  if(height && !width) {
    var tableWidth = this.htmlTable_.clientWidth;
    if(isVerticalScroll) {
      var scrollBarWidth = google.visualization.Table.getScrollbarWidth_() || google.visualization.Table.DEFAULT_SCROLLBAR_WIDTH_;
      goog.style.setStyle(scrollpane, {width:tableWidth + scrollBarWidth + "px"})
    }else {
      goog.style.setStyle(scrollpane, {width:tableWidth + "px"})
    }
  }
  var strechTableWidth = 0;
  0 < scrollpane.clientWidth - table.clientWidth && (strechTableWidth = scrollpane.clientWidth, goog.style.setStyle(table, "width", strechTableWidth + "px"));
  for(var p = 0;p < panes.length;p++) {
    var currPane = panes[p].pane, type = panes[p].type;
    if(strechTableWidth) {
      var currTable = currPane.firstChild;
      goog.style.setStyle(currTable, "width", scrollpane.clientWidth + "px")
    }
    switch(type) {
      case google.visualization.Table.PANE_TYPE_.HEADER:
        isVerticalScroll && (goog.style.setStyle(currPane, {height:headerRow.clientHeight + "px", width:scrollpane.clientWidth + "px"}), dom.appendChild(contentElement, currPane));
        break;
      case google.visualization.Table.PANE_TYPE_.FROZEN_TABLE:
        isHorizontalScroll && (goog.style.setStyle(currPane, {height:scrollpane.clientHeight + "px", width:frozenWidth + "px"}), dom.appendChild(contentElement, currPane));
        break;
      case google.visualization.Table.PANE_TYPE_.FROZEN_HEADER:
        isVerticalScroll && isHorizontalScroll && (goog.style.setStyle(currPane, {height:headerRow.clientHeight + "px", width:frozenWidth + "px"}), dom.appendChild(contentElement, currPane))
    }
  }
  scrollpane.scrollTop = 0;
  scrollpane.scrollLeft = this.scrollLeftStartPosition_;
  contentElement.style.visibility = ""
};
google.visualization.Table.prototype.createPane_ = function(paneOptions) {
  var dom = this.dom_, options = this.options_, cssClassNames = this.cssClassNames_, scrollpane = this.scrollpane_, dataView = this.dataView_, colTypes = google.visualization.Table.getColumnTypes_(dataView), tdClassNames = google.visualization.Table.getTDCssClassNames_(dataView, cssClassNames), numFrozenColumns = paneOptions.frozenColumns, showFunction = google.visualization.Table.showNothing_, headerRow = this.createHeaderRow_(!0);
  if(0 <= numFrozenColumns) {
    var startIndex = numFrozenColumns + (options.showRowNumber ? 1 : 0);
    goog.style.setStyle(headerRow.childNodes[startIndex - 1], google.visualization.Table.RIGHT_BORDER_STYLE_);
    google.visualization.Table.setElementTransparent_(headerRow);
    for(var nodes = headerRow.childNodes, c = startIndex;c < nodes.length;c++) {
      google.visualization.Table.setElementHidden_(nodes[c])
    }
    google.visualization.Table.getRealValueWithDefault(paneOptions.headerFreezeOnly, !1) || (showFunction = google.visualization.Table.showFrozenColumns_(numFrozenColumns))
  }
  var fixedHeaderTable = this.createTable_(headerRow, options, tdClassNames, colTypes, showFunction);
  goog.style.setStyle(fixedHeaderTable, {backgroundColor:"transparent"});
  var pane = dom.createDom("div", {style:"position: absolute; top: 0; left: 0; overflow: hidden;"}, fixedHeaderTable);
  paneOptions.matchLeft && this.eventHandler_.listen(scrollpane, goog.events.EventType.SCROLL, goog.partial(google.visualization.Table.matchScrollLeft_, scrollpane, pane));
  paneOptions.matchTop && this.eventHandler_.listen(scrollpane, goog.events.EventType.SCROLL, goog.partial(google.visualization.Table.matchScrollTop_, scrollpane, pane));
  return pane
};
google.visualization.Table.prototype.createTable_ = function(headerRow, options, tdClass, colTypes, opt_setAdditionalStyle) {
  var setAdditionalStyle = opt_setAdditionalStyle || goog.nullFunction, dataView = this.dataView_, dataTable = this.dataTable_, dom = this.dom_, cssClassNames = this.cssClassNames_, table = dom.createDom("table", {"class":cssClassNames.TABLE, cellspacing:"0"}), tbody = dom.createDom("tbody");
  dom.appendChild(table, tbody);
  dom.appendChild(tbody, headerRow);
  var td, className;
  null == this.page_ && (this.page_ = this.hasRows_ ? this.pageManager_.calculateTableRowsInCurrentPage() : []);
  for(var page = this.page_, evenRow = !0, alternatingRowStyle = options.alternatingRowStyle, alternatingRowStyle = goog.isDefAndNotNull(alternatingRowStyle) ? alternatingRowStyle : !0, i = 0;i < page.length;i++) {
    var tableRow = page[i], dataRowIndex = tableRow.getDataRowIndex(), rowColor = dataTable.getRowProperty(dataRowIndex, "rowColor");
    className = rowColor ? "" : alternatingRowStyle ? evenRow ? cssClassNames.TR_EVEN : cssClassNames.TR_ODD : cssClassNames.TR_EVEN;
    tableRow.setEven(evenRow);
    var evenRow = !evenRow, tr = dom.createDom("tr", {"class":className});
    this.selectedRows_.containsRow(dataRowIndex) && (tr.className = cssClassNames.TR_SELECTED, tableRow.setSelected(!0));
    rowColor && (tr.style.backgroundColor = rowColor);
    this.eventHandler_.listen(tr, goog.events.EventType.MOUSEDOWN, goog.bind(this.handleRowMouseDown_, this, tableRow));
    this.eventHandler_.listen(tr, goog.events.EventType.MOUSEOVER, goog.bind(this.handleRowMouseOver_, this, tableRow));
    this.eventHandler_.listen(tr, goog.events.EventType.MOUSEOUT, goog.bind(this.handleRowMouseOut_, this, tableRow));
    dom.appendChild(tbody, tr);
    if(options.showRowNumber) {
      var rnClassName = cssClassNames.TD + " " + cssClassNames.SEQ;
      td = dom.createDom("td", {"class":rnClassName});
      dom.appendChild(tr, td);
      dom.appendChild(td, dom.createTextNode(String(tableRow.getDisplayNumber())));
      setAdditionalStyle(td, i, -1)
    }
    for(var c = 0, numColumns = dataView.getNumberOfColumns();c < numColumns;) {
      var r = tableRow.getDataRowIndex(), tdOptions = {}, classNames = tdClass[c], customClasses = dataTable.getProperty(r, c, "className");
      customClasses && (classNames = customClasses);
      tdOptions["class"] = classNames;
      var colSpan = dataTable.getProperty(r, c, "__td-colSpan");
      (colSpan = colSpan && Math.min(colSpan, numColumns - c)) && 1 < colSpan ? tdOptions.colSpan = colSpan : colSpan = 1;
      td = dom.createDom("td", tdOptions);
      dom.appendChild(tr, td);
      var v = dataTable.getValue(r, c), fv = dataTable.getFormattedValue(r, c);
      null == v ? fv = goog.string.isEmptySafe(fv) ? "\u00a0" : fv : "boolean" == colTypes[c] && (fv = v ? "\u2714" : "\u2717");
      if(options.allowHtml) {
        td.innerHTML = fv;
        var styles = dataTable.getProperty(r, c, "style");
        styles && (td.style.cssText = styles)
      }else {
        dom.appendChild(td, dom.createTextNode(fv))
      }
      setAdditionalStyle(td, i, c);
      c += colSpan
    }
    setAdditionalStyle(tr, i)
  }
  return table
};
google.visualization.Table.prototype.createHeaderRow_ = function(addClickHandler) {
  var dataView = this.dataView_, options = this.options_ || {}, dom = this.dom_, cssClassNames = this.cssClassNames_, numColumns = dataView.getNumberOfColumns(), enableSortIndicators = "disable" != options.sort && 0 < dataView.getNumberOfRows(), tr = dom.createDom("tr", {"class":cssClassNames.TR_HEAD}), td, useWebKitHack = goog.userAgent.WEBKIT && options.height && cssClassNames.TH == google.visualization.Table.CSS_DEFAULT_.TH;
  if(options.showRowNumber && 0 < dataView.getNumberOfColumns()) {
    var headerClassName = cssClassNames.TH;
    useWebKitHack && (headerClassName = cssClassNames.TH_WEBKIT);
    td = dom.createDom("td", {"class":headerClassName});
    dom.appendChild(tr, td);
    td.innerHTML = "&nbsp;"
  }
  for(var c = 0;c < numColumns;c++) {
    var className = cssClassNames.TH;
    useWebKitHack && (className = cssClassNames.TH_WEBKIT);
    enableSortIndicators && (className += " " + cssClassNames.SORT);
    td = dom.createDom("td", {"class":className});
    dom.appendChild(tr, td);
    var label = dataView.getColumnLabel(c);
    options.allowHtml ? td.innerHTML = label : dom.appendChild(td, dom.createTextNode(label));
    if(enableSortIndicators) {
      var orderSymbol;
      orderSymbol = this.pageManager_.getSortColumnIndex() == c ? this.pageManager_.getSortOrder() ? "\u25b2" : "\u25bc" : "\u2003";
      dom.appendChild(td, dom.createDom("span", {"class":cssClassNames.SORTIND}, orderSymbol));
      addClickHandler && this.eventHandler_.listen(td, goog.events.EventType.CLICK, goog.bind(this.handleHeaderClick_, this, c), !0)
    }
  }
  return tr
};
google.visualization.Table.prototype.createPagingControls_ = function(contentElement) {
  var options = this.options_, dom = this.dom_, cssClassNames = this.cssClassNames_, pagingSymbols = goog.isDefAndNotNull(options.pagingSymbols) ? options.pagingSymbols : {}, prevSymbol = pagingSymbols.prev, nextSymbol = pagingSymbols.next, allowHtml = !!options.allowHtml, prevSymbol = prevSymbol ? allowHtml ? dom.htmlToDocumentFragment(prevSymbol) : prevSymbol : dom.createDom("img", {src:google.visualization.Table.LEFT_ARROW_IMG_, alt:"previous", style:"height: 8px; width: 8px"}), nextSymbol = nextSymbol ? 
  allowHtml ? dom.htmlToDocumentFragment(nextSymbol) : nextSymbol : dom.createDom("img", {src:google.visualization.Table.RIGHT_ARROW_IMG_, alt:"next", style:"height: 8px; width: 8px"});
  goog.dispose(this.prevButton_);
  goog.dispose(this.nextButton_);
  var prev = this.prevButton_ = new goog.ui.CustomButton(prevSymbol), next = this.nextButton_ = new goog.ui.CustomButton(nextSymbol);
  prev.setCollapsed(goog.ui.ButtonSide.END);
  next.setCollapsed(goog.ui.ButtonSide.START);
  this.eventHandler_.listen(prev, goog.ui.Component.EventType.ACTION, goog.bind(this.handlePaging_, this, !1));
  this.eventHandler_.listen(next, goog.ui.Component.EventType.ACTION, goog.bind(this.handlePaging_, this, !0));
  this.configurePagingButtons_();
  var pagingElement = dom.createDom("div", cssClassNames.PAGE_DIV);
  dom.appendChild(contentElement, pagingElement);
  prev.render(pagingElement);
  next.render(pagingElement);
  var pnDom = dom.createDom("div", {"class":cssClassNames.PAGE_NUMBERS});
  dom.appendChild(pagingElement, pnDom);
  var makePageNumLink = goog.bind(function(n, opt_additionalClassName) {
    var className = cssClassNames.PAGE_NUMBER;
    opt_additionalClassName && (className += " " + opt_additionalClassName);
    var numLink = dom.createDom("a", {href:"javascript:void(0)", "class":className});
    numLink.innerHTML = String(n + 1);
    this.eventHandler_.listen(numLink, goog.events.EventType.CLICK, goog.bind(this.handleGotoPage_, this, n));
    dom.appendChild(pnDom, numLink)
  }, this), pageCnt = this.pageManager_.getNumberOfPages(), currentPage = this.pageManager_.getCurrentPageIndex();
  goog.array.forEach(this.makePageRangeLinks_(0, currentPage - 1), function(p) {
    makePageNumLink(p)
  });
  makePageNumLink(currentPage, "current");
  goog.array.forEach(this.makePageRangeLinks_(currentPage + 1, pageCnt - 1), function(p) {
    makePageNumLink(p)
  })
};
google.visualization.Table.prototype.makePageRangeLinks_ = function(n1, n2) {
  var pages = [];
  if(n1 + 10 > n2) {
    for(var n = n1;n <= n2;n++) {
      pages.push(n)
    }
  }else {
    var left = n1;
    pages.push(left);
    var right = n2;
    pages.push(right);
    for(var pow10 = 10;left < right;) {
      left = pow10 * Math.ceil((left + 2) / pow10) - 1, left < right && pages.push(left), right = pow10 * Math.floor(right / pow10) - 1, left < right && pages.push(right), pow10 *= 10
    }
    goog.array.sort(pages)
  }
  return pages
};
google.visualization.Table.prototype.setCustomClassNames_ = function() {
  var customCssNames = this.cssClassNames_, optionsClassNames = this.options_.cssClassNames;
  if(optionsClassNames) {
    optionsClassNames[google.visualization.Table.CLASSNAME_TO_OPTION_NAME_.TH] && (customCssNames.TR_HEAD += google.visualization.Table.NON_STRICT_);
    if(optionsClassNames[google.visualization.Table.CLASSNAME_TO_OPTION_NAME_.TD] || optionsClassNames[google.visualization.Table.CLASSNAME_TO_OPTION_NAME_.SEQ]) {
      customCssNames.TR_EVEN += google.visualization.Table.NON_STRICT_, customCssNames.TR_ODD += google.visualization.Table.NON_STRICT_, customCssNames.TR_SELECTED += google.visualization.Table.NON_STRICT_, customCssNames.TR_MOUSEOVER += google.visualization.Table.NON_STRICT_
    }
    for(var name in google.visualization.Table.CLASSNAME_TO_OPTION_NAME_) {
      var optionName = google.visualization.Table.CLASSNAME_TO_OPTION_NAME_[name], optionClassName = optionsClassNames[optionName];
      optionClassName && (customCssNames[name] = optionClassName)
    }
  }
};
google.visualization.Table.prototype.handlePaging_ = function(isNext) {
  var pageCnt = this.pageManager_.getNumberOfPages(), currentPage = this.pageManager_.getCurrentPageIndex(), nextPage = isNext ? Math.min(pageCnt, currentPage + 1) : Math.max(0, currentPage - 1);
  this.handleGotoPage_(nextPage)
};
google.visualization.Table.prototype.handleGotoPage_ = function(pageNum) {
  var pagingEnabled = "enable" == this.options_.page;
  pagingEnabled && (this.pageManager_.setPageIndex(pageNum), this.storeScrollPosition_(), this.redraw_());
  this.configurePagingButtons_();
  google.visualization.events.trigger(this, "page", {page:pageNum})
};
google.visualization.Table.prototype.configurePagingButtons_ = function() {
  var pagingButtonsConfiguration = this.options_.pagingButtonsConfiguration || "auto", currentPage = this.pageManager_.getCurrentPageIndex(), next = this.nextButton_, prev = this.prevButton_;
  next.setEnabled(!0);
  prev.setEnabled(!0);
  switch(pagingButtonsConfiguration) {
    case "prev":
      next.setEnabled(!1);
      break;
    case "next":
      prev.setEnabled(!1);
      break;
    case "both":
      break;
    default:
      0 == currentPage && prev.setEnabled(!1), currentPage == this.pageManager_.getNumberOfPages() - 1 && next.setEnabled(!1)
  }
};
google.visualization.Table.matchScrollLeft_ = function(source, target) {
  target.scrollLeft = source.scrollLeft
};
google.visualization.Table.matchScrollTop_ = function(source, target) {
  target.scrollTop = source.scrollTop
};
google.visualization.Table.prototype.checkCssLoaded_ = function() {
  var checkDiv = this.checkCssLoadedDiv_;
  if(!checkDiv) {
    var container = this.container, checkDiv = goog.dom.createDom("div", {style:"position: absolute; top: -5000px;", "class":"google-visualization-table-sortind"}, goog.dom.createTextNode("\u00a0"));
    goog.dom.appendChild(container, checkDiv);
    this.checkCssLoadedDiv_ = checkDiv
  }
  var paddingLeft = goog.style.getPaddingBox(checkDiv).left;
  return"6" == paddingLeft
};
google.visualization.Table.prototype.waitForCss_ = function(counter) {
  counter < google.visualization.Table.WAIT_FOR_CSS_MAX_ITERATIONS_ ? this.checkCssLoaded_() ? this.draw(this.dataView_, this.options_) : (counter++, setTimeout(goog.bind(this.waitForCss_, this, counter), google.visualization.Table.CSS_WAIT_INTERVAL_)) : (goog.dom.removeNode(this.checkCssLoadedDiv_), this.triggerReadyEvent_())
};
google.visualization.Table.prototype.getSelection = function() {
  return this.selectedRows_.getSelection()
};
google.visualization.Table.prototype.setSelection = function(selection) {
  if(this.dataTable_) {
    var changes = this.selectedRows_.setSelection(selection), page = this.page_;
    this.lastSelectedTableRow_ = this.pageManager_.getFirstTableRowInPage();
    for(var htmlTableRows = this.getHtmlTableRows_(), htmlfrozenTableRows = this.getHtmlfrozenColumnsTableRows_(), tr, trFreeze, cssClassNames = this.cssClassNames_, removedRowIndexes = changes.getRemoved().getRowIndexes(), i = 0;i < removedRowIndexes.length;i++) {
      var dataRowInd = removedRowIndexes[i], pageRowInd = this.pageManager_.getPageRowIndexByDataRowIndex(dataRowInd);
      if(-1 != pageRowInd) {
        var tableRow = page[pageRowInd];
        tableRow.setSelected(!1);
        (tr = htmlTableRows[pageRowInd + 1]) && goog.dom.classes.remove(tr, cssClassNames.TR_SELECTED);
        (trFreeze = htmlfrozenTableRows && htmlfrozenTableRows[pageRowInd + 1]) && goog.dom.classes.remove(trFreeze, cssClassNames.TR_SELECTED)
      }
    }
    for(var addedRowIndexes = changes.getAdded().getRowIndexes(), i = 0;i < addedRowIndexes.length;i++) {
      dataRowInd = addedRowIndexes[i], pageRowInd = this.pageManager_.getPageRowIndexByDataRowIndex(dataRowInd), -1 != pageRowInd && (tableRow = page[pageRowInd], tableRow.setSelected(!0), (tr = htmlTableRows[pageRowInd + 1]) && goog.dom.classes.add(tr, cssClassNames.TR_SELECTED), (trFreeze = htmlfrozenTableRows && htmlfrozenTableRows[pageRowInd + 1]) && goog.dom.classes.add(trFreeze, cssClassNames.TR_SELECTED))
    }
  }
};
google.visualization.Table.prototype.handleRowMouseDown_ = function(tableRow, e) {
  var selectedRows, lastSelectedTableRow = this.lastSelectedTableRow_, currDataRowIndex = tableRow.getDataRowIndex(), platformModifierKeyState = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  if(e.shiftKey) {
    e.preventDefault();
    var start = Math.min(tableRow.getUIRowIndex(), lastSelectedTableRow.getUIRowIndex()), end = Math.max(tableRow.getUIRowIndex(), lastSelectedTableRow.getUIRowIndex());
    selectedRows = platformModifierKeyState ? this.selectedRows_.getSelection() : [];
    for(var rows = this.pageManager_.getTableRowsInRangeByUIRows(start, end), i = 0;i < rows.length;i++) {
      selectedRows.push({row:rows[i].getDataRowIndex()})
    }
  }else {
    if(platformModifierKeyState) {
      if(e.preventDefault(), selectedRows = this.selectedRows_.getSelection(), this.selectedRows_.containsRow(currDataRowIndex)) {
        var newSelectionForRemove = new gviz.util.Selection;
        newSelectionForRemove.setSelection(selectedRows);
        newSelectionForRemove.removeRow(currDataRowIndex);
        selectedRows = newSelectionForRemove.getSelection()
      }else {
        selectedRows.push({row:currDataRowIndex})
      }
    }else {
      selectedRows = this.selectedRows_.containsRow(currDataRowIndex) ? null : [{row:currDataRowIndex}]
    }
  }
  this.setSelection(selectedRows);
  this.lastSelectedTableRow_ = e.shiftKey ? lastSelectedTableRow : tableRow;
  google.visualization.events.trigger(this, "select", {})
};
google.visualization.Table.prototype.handleRowMouseOver_ = function(tableRow) {
  var tableRows = this.getHtmlTableRows_(), cssClassNames = this.cssClassNames_, pageRowIndex = tableRow.getPageRowIndex(), tr = tableRows[pageRowIndex + 1];
  tr && goog.dom.classes.add(tr, cssClassNames.TR_MOUSEOVER);
  var frozenTableRows = this.getHtmlfrozenColumnsTableRows_();
  (tr = frozenTableRows && frozenTableRows[pageRowIndex + 1]) && goog.dom.classes.add(tr, cssClassNames.TR_MOUSEOVER)
};
google.visualization.Table.prototype.handleRowMouseOut_ = function(tableRow) {
  var tableRows = this.getHtmlTableRows_(), pageRowIndex = tableRow.getPageRowIndex(), cssClassNames = this.cssClassNames_, tr = tableRows[pageRowIndex + 1];
  tr && goog.dom.classes.remove(tr, cssClassNames.TR_MOUSEOVER);
  var frozenTableRows = this.getHtmlfrozenColumnsTableRows_();
  (tr = frozenTableRows && frozenTableRows[pageRowIndex + 1]) && goog.dom.classes.remove(tr, cssClassNames.TR_MOUSEOVER)
};
google.visualization.Table.prototype.getHtmlTableRows_ = function() {
  return this.htmlTable_.firstChild.childNodes
};
google.visualization.Table.prototype.getHtmlfrozenColumnsTableRows_ = function() {
  return this.htmlFrozenColumnsTable_ ? this.htmlFrozenColumnsTable_.firstChild.childNodes : null
};
google.visualization.Table.prototype.handleHeaderClick_ = function(colInd) {
  var pageManager = this.pageManager_, sortAscending = pageManager.getSortOrder(), sortColumnIndex = pageManager.getSortColumnIndex(), sortAscending = sortColumnIndex == colInd ? !sortAscending : !0;
  "event" != this.options_.sort ? (pageManager.setSort(colInd, !sortAscending), this.pageManager_.setPageIndex(0), this.lastSelectedTableRow_ = this.pageManager_.getFirstTableRowInPage(), this.storeScrollPosition_(), this.redraw_(), google.visualization.events.trigger(this, "sort", this.pageManager_.getSortInfo())) : google.visualization.events.trigger(this, "sort", {column:colInd, ascending:sortAscending, sortedIndexes:null})
};
google.visualization.Table.prototype.storeScrollPosition_ = function() {
  var scrollpane = this.scrollpane_;
  scrollpane && (this.scrollLeftStartPosition_ = scrollpane.scrollLeft)
};
google.visualization.Table.prototype.clear_ = function() {
  goog.dispose(this.eventHandler_);
  this.eventHandler_ = null;
  this.dom_.removeChildren(this.container);
  goog.dispose(this.prevButton_);
  this.prevButton_ = null;
  goog.dispose(this.nextButton_);
  this.nextButton_ = null
};
google.visualization.Table.prototype.clearChart = function() {
  this.clear_();
  this.selectedRows_.clear();
  this.pageManager_ = null
};
google.visualization.Table.addUnitsIfRequired_ = function(dimension) {
  if(goog.string.isEmptySafe(dimension)) {
    return dimension
  }
  var res = dimension;
  goog.string.isNumeric(dimension) && "0" !== String(dimension) && (res += "px");
  return res
};
google.visualization.Table.getTDCssClassNames_ = function(dataView, cssClassNames) {
  for(var tdClassNames = [], c = 0;c < dataView.getNumberOfColumns();c++) {
    var cellClassName = cssClassNames.TD, type = dataView.getColumnType(c);
    switch(type) {
      case "boolean":
        cellClassName += " " + cssClassNames.TD_BOOLEAN;
        break;
      case "number":
        cellClassName += " " + cssClassNames.TD_NUMBER;
        break;
      case "date":
      ;
      case "datetime":
      ;
      case "timeofday":
        cellClassName += " " + cssClassNames.TD_CENTER
    }
    tdClassNames.push(cellClassName)
  }
  return tdClassNames
};
google.visualization.Table.getRealValueWithDefault = function(val, defaultValue) {
  return goog.isDefAndNotNull(val) ? val : defaultValue
};
google.visualization.Table.getColumnTypes_ = function(dataView) {
  for(var colTypes = [], c = 0;c < dataView.getNumberOfColumns();c++) {
    colTypes.push(dataView.getColumnType(c))
  }
  return colTypes
};
google.visualization.Table.showNothing_ = function(element) {
  google.visualization.Table.setElementHidden_(element)
};
google.visualization.Table.showFrozenColumns_ = function(numColumns) {
  return function(element, row, opt_col) {
    "TR" == element.tagName ? google.visualization.Table.setElementTransparent_(element) : opt_col == numColumns - 1 ? goog.style.setStyle(element, google.visualization.Table.RIGHT_BORDER_STYLE_) : opt_col >= numColumns && google.visualization.Table.setElementHidden_(element)
  }
};
google.visualization.Table.showTransparentTable_ = function(element) {
  google.visualization.Table.setElementTransparent_(element)
};
google.visualization.Table.setElementHidden_ = function(element) {
  goog.style.setStyle(element, google.visualization.Table.HIDDEN_STYLE_);
  google.visualization.Table.setElementTransparent_(element)
};
google.visualization.Table.setElementTransparent_ = function(element) {
  goog.userAgent.IE && 7 > goog.userAgent.VERSION ? goog.style.setStyle(element, google.visualization.Table.TRANSPARENT_STYLE_IE6_) : goog.style.setStyle(element, google.visualization.Table.TRANSPARENT_STYLE_);
  "TD" == element.tagName && (goog.style.setStyle(element, "color", "transparent"), goog.style.setOpacity(element, 0))
};
google.visualization.Table.getScrollbarWidth_ = function() {
  var dom = goog.dom.getDomHelper(), div = dom.createDom("div", {style:"position: absolute; top: -5000px; width: 100px; overflow: scroll;"}, dom.createDom("div", {style:"width: 200px;"}));
  dom.appendChild(goog.global.document.body, div);
  var width = div.offsetWidth - div.clientWidth;
  dom.removeNode(div);
  return width
};
// Input 4
google.visualization.TableQueryWrapper = function(dataSourceUrl, container, errorContainer, options) {
  this.dataSourceUrl_ = dataSourceUrl;
  this.table_ = new google.visualization.Table(container);
  this.errorContainer_ = errorContainer;
  google.visualization.events.addListener(this.table_, "page", goog.bind(this.handlePage_, this));
  google.visualization.events.addListener(this.table_, "sort", goog.bind(this.handleSort_, this));
  var tableOptions = goog.isDef(options) ? goog.object.clone(options) : {};
  this.tableOptions_ = tableOptions;
  this.enablePaging_ = "enable" == options.page;
  tableOptions.showRowNumber = !0;
  tableOptions.pagingButtonsConfiguration = options.pagingButtonsConfiguration || "both";
  tableOptions.sort = null == options.sort || "enable" == options.sort ? "event" : "disable";
  if(this.enablePaging_) {
    tableOptions.page = "event";
    var pageSize = options.pageSize || 0;
    this.pageSize_ = 0 >= pageSize ? google.visualization.TableQueryWrapper.DEFAULT_PAGE_SIZE_ : pageSize;
    tableOptions.pageSize = this.pageSize_;
    this.currentPageIndex_ = 0;
    this.setNewPageRequestParameters_(0)
  }
};
google.visualization.TableQueryWrapper.prototype.queryWrapper_ = null;
google.visualization.TableQueryWrapper.prototype.query_ = null;
google.visualization.TableQueryWrapper.prototype.currentDataTable_ = null;
google.visualization.TableQueryWrapper.prototype.sortQueryClause_ = "";
google.visualization.TableQueryWrapper.prototype.pageQueryClause_ = "";
google.visualization.TableQueryWrapper.prototype.pageSize_ = -1;
google.visualization.TableQueryWrapper.prototype.currentPageIndex_ = -1;
google.visualization.TableQueryWrapper.prototype.refreshInterval_ = 0;
google.visualization.TableQueryWrapper.DEFAULT_PAGE_SIZE_ = 10;
google.visualization.TableQueryWrapper.prototype.customSendAndDraw_ = null;
google.visualization.TableQueryWrapper.prototype.customResponseHandler_ = null;
google.visualization.TableQueryWrapper.prototype.customPostResponseHandler_ = null;
google.visualization.TableQueryWrapper.prototype.sendAndDraw = function() {
  this.customSendAndDraw_ && this.customSendAndDraw_();
  var queryClause = this.createQuery_();
  this.query_ = new google.visualization.Query(this.dataSourceUrl_);
  this.query_.setQuery(queryClause);
  this.setRefreshInterval(this.refreshInterval_);
  this.abort();
  this.table_.setSelection([]);
  this.queryWrapper_ = new google.visualization.QueryWrapper(this.query_, this.table_, this.tableOptions_, this.errorContainer_);
  this.queryWrapper_.setCustomResponseHandler(goog.bind(this.responseHandler, this));
  this.queryWrapper_.setCustomPostResponseHandler(this.customPostResponseHandler_);
  this.queryWrapper_.sendAndDraw()
};
google.visualization.TableQueryWrapper.prototype.abort = function() {
  this.queryWrapper_ && this.queryWrapper_.abort()
};
google.visualization.TableQueryWrapper.prototype.handleSort_ = function(properties) {
  var colInd = properties.column, isAscending = properties.ascending;
  this.tableOptions_.sortColumn = colInd;
  this.tableOptions_.sortAscending = isAscending;
  var dataTable = this.currentDataTable_;
  this.sortQueryClause_ = "order by `" + dataTable.getColumnId(colInd) + (isAscending ? "`" : "` desc");
  this.enablePaging_ ? this.handlePage_({page:0}) : this.sendAndDraw()
};
google.visualization.TableQueryWrapper.prototype.createQuery_ = function() {
  var uri = goog.Uri.parse(this.dataSourceUrl_), tq = uri.getParameterValue("tq") || "";
  return tq += " " + this.sortQueryClause_ + " " + this.pageQueryClause_
};
google.visualization.TableQueryWrapper.prototype.setRefreshInterval = function(interval) {
  this.refreshInterval_ = Math.max(0, interval);
  this.query_ && this.query_.setRefreshInterval(this.refreshInterval_)
};
google.visualization.TableQueryWrapper.prototype.handlePage_ = function(properties) {
  var localTableNewPage = properties.page, currentPage = this.currentPageIndex_, newPage = 0;
  switch(localTableNewPage) {
    case 0:
      newPage = 0;
      break;
    case 1:
      newPage = currentPage + 1;
      break;
    case -1:
      newPage = currentPage - 1
  }
  this.setNewPageRequestParameters_(newPage);
  this.sendAndDraw()
};
google.visualization.TableQueryWrapper.prototype.setNewPageRequestParameters_ = function(newPage) {
  var currentPageIndex = this.currentPageIndex_, pageSize = this.pageSize_;
  if(!(0 > newPage || newPage > currentPageIndex + 1 || newPage == currentPageIndex + 1 && this.getNumberOfRowsInDataTable_() <= pageSize)) {
    this.currentPageIndex_ = newPage;
    var newStartRow = this.currentPageIndex_ * pageSize;
    this.pageQueryClause_ = "limit " + (pageSize + 1) + " offset " + newStartRow;
    this.tableOptions_.firstRowNumber = newStartRow + 1
  }
};
google.visualization.TableQueryWrapper.prototype.responseHandler = function(response) {
  this.customResponseHandler_ && this.customResponseHandler_(response);
  this.currentDataTable_ = response.isError() ? null : response.getDataTable()
};
google.visualization.TableQueryWrapper.prototype.setCustomResponseHandler = function(handler) {
  if(null != handler) {
    if("function" != typeof handler) {
      throw Error("Custom response handler must be a function.");
    }
    this.customResponseHandler_ = handler
  }
};
google.visualization.TableQueryWrapper.prototype.setCustomPostResponseHandler = function(handler) {
  if(null != handler) {
    if("function" != typeof handler) {
      throw Error("Custom post-response handler must be a function.");
    }
    this.customPostResponseHandler_ = handler
  }
};
google.visualization.TableQueryWrapper.prototype.setCustomSendAndDraw = function(customSendAndDraw) {
  if(null != customSendAndDraw) {
    if("function" != typeof customSendAndDraw) {
      throw Error("Custom sendAndDraw must be a function.");
    }
    this.customSendAndDraw_ = customSendAndDraw
  }
};
google.visualization.TableQueryWrapper.prototype.getNumberOfRowsInDataTable_ = function() {
  var res = -1;
  this.currentDataTable_ && (res = this.currentDataTable_.getNumberOfRows());
  return res
};
// Input 5
goog.exportSymbol("google.visualization.Table", google.visualization.Table);
goog.exportProperty(google.visualization.Table.prototype, "draw", google.visualization.Table.prototype.draw);
goog.exportProperty(google.visualization.Table.prototype, "getSelection", google.visualization.Table.prototype.getSelection);
goog.exportProperty(google.visualization.Table.prototype, "setSelection", google.visualization.Table.prototype.setSelection);
goog.exportProperty(google.visualization.Table.prototype, "getSortInfo", google.visualization.Table.prototype.getSortInfo);
goog.exportProperty(google.visualization.Table.prototype, "clearChart", google.visualization.Table.prototype.clearChart);
goog.exportSymbol("google.visualization.TableQueryWrapper", google.visualization.TableQueryWrapper);
goog.exportProperty(google.visualization.TableQueryWrapper.prototype, "sendAndDrawTable", google.visualization.TableQueryWrapper.prototype.sendAndDraw);
goog.exportProperty(google.visualization.TableQueryWrapper.prototype, "abort", google.visualization.TableQueryWrapper.prototype.abort);
goog.exportProperty(google.visualization.TableQueryWrapper.prototype, "setCustomSendAndDraw", google.visualization.TableQueryWrapper.prototype.setCustomSendAndDraw);
goog.exportProperty(google.visualization.TableQueryWrapper.prototype, "setCustomPostResponseHandler", google.visualization.TableQueryWrapper.prototype.setCustomPostResponseHandler);
goog.exportProperty(google.visualization.TableQueryWrapper.prototype, "setCustomResponseHandler", google.visualization.TableQueryWrapper.prototype.setCustomResponseHandler);
goog.exportProperty(google.visualization.TableQueryWrapper.prototype, "setRefreshInterval", google.visualization.TableQueryWrapper.prototype.setRefreshInterval);
goog.exportProperty(google.visualization.TableQueryWrapper.prototype, "abort", google.visualization.TableQueryWrapper.prototype.abort);

google.loader.loaded({"module":"visualization","version":"0.0","components":["ui","default","table","format"]});
google.loader.eval.visualization = function() {eval(arguments[0]);};if (google.loader.eval.scripts && google.loader.eval.scripts['visualization']) {(function() {var scripts = google.loader.eval.scripts['visualization'];for (var i = 0; i < scripts.length; i++) {google.loader.eval.visualization(scripts[i]);}})();google.loader.eval.scripts['visualization'] = null;}})();